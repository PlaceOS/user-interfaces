{"version":3,"file":"main.js","mappings":"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E,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI3K,EAAU8J,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAK9J,EAAU6J,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","AppRoutingModule","_createClass","_classCallCheck","this","t","i0","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","_Office$auth","get_token","tkn","_Office2","_Office2$context","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_ref$email","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","_this$_service$form$g2","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r4","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form$controls","_this$form$controls$d","_this$form2","_this$form2$controls","_this$form2$controls$","_this$form3","_this$form3$controls","_this$form3$controls$","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r2","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_this$_state$form$get","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","_this$form4$controls","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","ɵɵsanitizeUrl","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","_r9","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r3","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","_r1","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_26_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_27_ng_container_6_Template","_r14","_event_form","_sheet_ref","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","formatRecurrence","_objectSpread","recurrence","start","levelWithID","find","address","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_section_27_Template","MeetingFlowConfirmComponent_button_29_Template","pattern","all_day","spaces_1","date_fns_1","_toggleType","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","desks","_ref14","include_checked_out","parking","_ref16","lockers","system_id","mod","execute","Booking","valueOf","locker_name","locker_id","extension_data","bookings","_ref18","_ref19","p","l","_ref20","_ref21","filters","_filters$shown_types","_filters$shown_types2","parse","interval","document","visibilityState","stopPolling","clearInterval","setAsDeleted","push","clear","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_r1","AssetListFieldComponent_div_1_img_2_Template","AssetListFieldComponent_div_1_ng_template_3_Template","addAssetGroups","ɵɵi18nStart","ɵɵi18nEnd","removeAssetGroup","toggleFavourite","amount","favorites","EMPTY_FAVS","AssetListFieldComponent","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","changes","new_value","asset","updated_list","setValue","AssetSelectModalComponent","slice","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","toggleFav","countChange","active","activeChange","fav","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","AssetFiltersComponent","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","category","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_items","reduce","selected_ids","state","count","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_14_Template","isSelected","bookings_fn_1","asset_group_pipe_1","_options","_search","search","asset_list","queryAssets","replace","asset_bookings","available_groups","_ref3$","ignore","queryGroupAvailability","zone_id","startOfMinute","endOfMinute","addMinutes","localeCompare","_ref5","_$assets","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","category_id","brand","generateAssetForm","assetsToGroups","groups","asset_type_id","_i","_groups","groupsToAssets","api_1","booking_class_1","BASE_ENDPOINT","queryAssetCategories","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_removeAssetRequests","requests","request","removeBooking","_updateAssetRequestsForResource","_ref9","new_assets","old_assets","ical_uid","location_name","location_id","filtered","event_id","_ref11","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","products","_loop2","removeAssetRequests","updateAssetRequestsForResource","_x2","_x3","_x4","_x5","booking_details_modal_component_1","async_handler_class_1","day","BookingCardComponent_h4_0_span_1_Template","show_day","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","ɵɵpureFunction1","is_done","status","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","queryParamMap","params","_this2$booking","has","_this$booking2","_this$booking3","_this$booking4","is_today","format","_this$booking5","_this$booking6","_this$booking7","_this$booking8","dur","formatDuration","hours","Math","floor","minutes","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","auto_checkin","_c2","_r16","_booking","hide_map","ts","booking_start","booking_end","_this$booking9","_this$booking10","_toggleCheckedIn","checkinBooking","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","viewLocation","BookingDetailsModalComponent_interactive_map_41_Template","BookingDetailsModalComponent_button_47_Template","BookingDetailsModalComponent_button_48_Template","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_URLS","_confirmPost","_payments","_view","_resource_use","generateBookingForm","loadResourceList","Array","unique","restrictions","showMetadata","available_resources","merge","timer","getRawValue","restriction","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","some","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_a$zone$id","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$user","_value$user2","_value$user2$id","_value","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","approved","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","group_name","_asset$zone4","_asset$zone5","t1","_getNearbyResources","t2","t3","idx","organisation","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","_ref13","current","_context5","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","IGNORE_EXT_KEYS","_data$extension_data","_data$extension_data2","_data$title","_data$extension_data3","_data$all_day","roundToNearestMinutes","nearestTo","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","rejected","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","checked_out_at","linked_event","removeEmptyFields","addHours","checked_out","getTime","isAfter","isBefore","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","booker","emitEvent","disable","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","showBooking","response_type","approveBooking","rejectBooking","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","components_module_1","form_fields_module_1","_r11","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_data","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r2","_r6","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_div_16_Template","DeskFiltersDisplayComponent_div_18_Template","tmp_5_0","bld_r9","DeskFiltersComponent_div_10_mat_option_5_Template","_c16","lvl_r14","DeskFiltersComponent_div_12_mat_option_5_Template","feat_r18","_r20","ctx_r17","_c21","DeskFiltersComponent_section_40_div_3_Template","_r22","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","addDays","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_29_Template","DeskFiltersComponent_section_40_Template","DeskFiltersComponent_div_42_Template","end_date","tmp_8_0","tmp_15_0","tmp_17_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","fill","DEFAULT_COLOURS","_this$level","_this2$level","new_zoom","max","min","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_r8","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r29","ctx_r28","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r35","ctx_r34","onDone","ctx_r36","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","randomString","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","locker","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","available","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","_lockers","lockers_banks$","locker_bank_id","locker_bank","LockersService","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_14_0","tmp_16_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r18","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","lockers$","bank_list","level_id","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_c12","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","zone_ids","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_6_0","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","level_list","lvl","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_11_0","tmp_13_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","hidden","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","c","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_interfaces_1","type_r8","CateringConfigModalComponent_div_10_div_16_mat_option_3_Template","i_r6","index","set_r2","rules","rule_r5","rule_types","show_rules","i_r3","rulesets","CateringConfigModalComponent_div_10_div_16_Template","CateringConfigModalComponent","require_notes","RULE_TYPES","config","random","saveNotes","CateringConfigModalComponent_button_3_Template","saveNotesSetting","new_id","CateringConfigModalComponent_div_10_Template","saveChanges","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","tags","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","item_r15","removeTag","ɵɵattribute","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","ctx_r24","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","categories","tag","markAsDirty","input","existing_tag","indexOf","randomInt","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","quantity","has_options","option_list","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","optionList","CateringListFieldComponent_div_1_img_2_Template","CateringListFieldComponent_div_1_ng_template_3_Template","CateringListFieldComponent_div_1_span_8_Template","addItems","CateringListFieldComponent","NewCateringOrderModalComponent","_item$option_list","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","currency","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","CateringOrderItemComponent","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","CateringOrdersService","CateringOrderListComponent_li_18_Template","CateringOrderListComponent_div_20_Template","CateringOrderListComponent_mat_progress_bar_22_Template","catering_order_class_1","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","item_count","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","_r25","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","_r37","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","currency_code","_this$order$event","_this$order$event$spa","_this$order$event$spa2","CateringOrder","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","_this$item","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","item_r2","toggleCategory","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","_toggleCategory","_toggleTag","toggleTag","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_mat_checkbox_8_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","custom_id","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","charge_codes","disabled_rooms","available_menu","_ref7$","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_data$event","_this$event","charge_code","notes","deliver_at","catering_vars_1","CateringOrderComponent_div_0_button_15_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r10","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","orders","_ref2$","ext","checkOrder","updated_order","saveEvent","space_utilities_1","space_r4","toggleRoom","CateringRoomsStateModalComponent_main_7_tr_13_Template","rooms","CateringRoomsStateModalComponent","_toggleRoom","_enableSelected","disabled_list","saveSettings","enableSelected","_disableSelected","disableSelected","CateringRoomsStateModalComponent_main_7_Template","CateringRoomsStateModalComponent_ng_template_13_Template","catering_item_modal_component_1","catering_option_modal_component_1","catering_config_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","_this8","_context8","_yield$this$settings$","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","_context10","old_settings","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","helpers_1","RULE_REQUESTS","is_available","_event$space","rule","matches","condition","subHours","setHours","stringToMinutes","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","json","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","start1","end1","start2","end2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","_disable_logging","notify","message","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","notifyWarn","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_system_id","_events","Subject","_event_history","_logging_bindings","_bindTo","_patchConsoleMethods","_types","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","module","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","time","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","_setDarkMode","application","_applyUserSettings","_setFontSize","DEFAULT_SETTINGS","override_settings","override","_savePendingChanges","important","getElementById","head","innerText","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","_Intl$DateTimeFormat","_Intl$DateTimeFormat$","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","offset","isdst","utc","TIMEZONES","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","applySetting","dark_mode","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","nativeElement","authority","ElementRef","Renderer2","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","debug_console_component_1","scrolling_1","user_controls_component_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","NgIf","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","DebugConsoleComponent","NgForOf","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","UserControlsComponent","MatTooltip","UserAvatarComponent","TranslatePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_template_2_ng_container_0_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r20","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","dataSource","Observable","viewQuery","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","show","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","previousValue","currentValue","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","diff","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","RedirectComponent","setRegion","RegionSelectComponent","regions","region_list","region","active_region","RegionSelectComponent_mat_radio_button_12_Template","SafePipe","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","bld_r6","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_mat_error_31_Template","desc_error","SupportTicketModalComponent","_submit","stmp_system","updateValueAndValidity","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","parts","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","help_tooltip","openWfhModal","language_tooltip","building_select","accessibility_tooltip","logout","WFHSettingsModalComponent","_viewChangelog","fetch","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_21_Template","UserControlsComponent_div_22_Template","UserControlsComponent_div_33_Template","newSupportTicket","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element$native","_this$_element2","_this$_element2$nativ","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_30_div_1_Template","EventCardComponent_a_1_div_30_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_22_Template","EventCardComponent_a_1_div_30_Template","EventCardComponent","_this2$event","getLocationString","_ngOnChanges","ngOnChanges","_getLocationString","_this$event2","_this$event3","_this$event4","zone_list","_this$event5","_this$event6","_this$event7","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_15_button_1_Template","EventDetailsModalComponent_div_15_button_2_Template","can_check_in","allow_edit","opt_r21","EventDetailsModalComponent_ng_container_69_div_5_div_6_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","EventDetailsModalComponent_div_72_div_3_Template","item_r24","EventDetailsModalComponent_ng_container_73_div_5_Template","_c25","show_attendees","act_r31","_r33","EMPTY_ACTIONS","_this$event$system","_this$event2$ext","_this$event3$linked_b","hide_edit","has_assets","linked_bookings","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_15_Template","EventDetailsModalComponent_ng_container_35_Template","EventDetailsModalComponent_div_37_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_interactive_map_71_Template","EventDetailsModalComponent_div_72_Template","EventDetailsModalComponent_ng_container_73_Template","EventDetailsModalComponent_div_77_Template","EventDetailsModalComponent_button_80_Template","EventDetailsModalComponent_button_87_Template","EventDetailsModalComponent_button_88_Template","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_2","asset_utilities_1","events_fn_2","_newForm","_assets","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","filterSpacesFromRules","booking_rules","periodInFreeTimeSlot","future_available_spaces","_this$_form$getRawVal2","availability_method","has_calendar","querySpaceAvailability","differenceInDays","_ref17","_this$_form$get","_this$_form$get2","catering_notes","clearValidators","_event$extension_data","master","showEvent","_pattern","resetForm","_event$extension_data2","_event$extension_data3","_event$extension_data4","catering_charge_code","_form_data$assets","form_data","EventLinkModalComponent","_this4$event","_form$get","_form$get2","_spaces$","_this4$event2","_this4$event2$resourc","_this4$event3","_this4$event3$system","_this4$event4","_value$organiser","_value$organiser2","_ref22","_event$extension_data5","_form$getRawValue","is_owner","breakdown","overflow","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","recurring","checkSelectedSpacesAreAvailable","calendar","old_system","host_override","_ref23","removeEvent","_makeBooking2","_updateVisitorList","toJSON","_checkSelectedSpacesAreAvailable","exclude","exclude_range","_x10","is_external","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","event_start","event_end","_data$recurrence$days","private","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","attachments","eventStatus","_this$recurrence","_this$system","parseRecurrence","calendar_fn_1","EVENTS_ENDPOINT","createEvent","updateEvent","method","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","isSpaceAvailable","system_ids","_s$resource","attendee_list_component_1","event_card_component_1","MatMenu","MatMenuItem","MatMenuTrigger","i9","i10","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","addToDate","rulesForSpace","rulemap","_step4","_iterator4","_rulemap$zone","_step5","_iterator5","ruleset","checkRulesMatch","conditions","_host$groups","is_before","is_after","min_length","max_length","_rulesForSpace","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event2$resourc","_this$_event3","_this$_event3$system","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","_event$extension_data10","_event$extension_data11","_event$extension_data12","_event$extension_data13","_event$extension_data14","visitor_type","needs_space","needs_parking","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r0","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","_desk_bookings","Desk","_bind","processBindingChange","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","is_restricted","processDesks","enable_booking","actives","current_state","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","book_fn","_desk$groups","_this5$_options$getVa","_this5$_options$getVa2","_user","_yield$_this5$_setBoo","_setBookingTime","custom","setActions","_setBookingTime2","until","SetDatetimeModalComponent","ExploreStateService","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","_status","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","pair_r2","ExploreMapViewComponent_div_16_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","map_styles","positions","map_positions","map_actions","map_labels","_options$disable","toggleZones","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_this$_org$levelWithI","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","locations","pos","priority","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","i11","updateZoom","updateCenter","ExploreMapViewComponent_div_16_Template","tmp_7_0","show_legend","existing_event","week_events","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_el$nativeEleme","_this$_input_el","_this$_input_el$nativ","_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","contacts","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","handleBookingsChange","handleStatusChange","updateActions","updateHoverElements","openEventLinkModal","bookSpace","_positions","_styles","_actions","_labels","_message","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","coordinates","properties","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","CounterComponent","step","ctrl_key","shift_key","render_fn","FieldDateAdapter","_core_2$NativeDateAda","displayFormat","NativeDateAdapter","FIELD_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DateFieldComponent","_super2","_from","_to","old_date","new_date","getHours","getMinutes","formatISO","DateAdapter","useClass","MAT_DATE_FORMATS","ɵɵreference","option_r2","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","user_search_field_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","cloud_uploads_1","blobUtil","url_r7","copyLink","viewImage","removeImage","progress","retryUpload","ImageListFieldComponent_div_9_mat_progress_spinner_1_Template","ImageListFieldComponent_div_9_app_icon_2_Template","ImageListFieldComponent_div_9_div_3_Template","view_space","item_r25","uploadFile","observer","arrayBuffer","upload_details","formatted_size","humanReadableByteCount","upload","blob","arrayBufferToBlob","upload_list","uploadFiles","file_name","takeWhile","access_url","complete","readAsArrayBuffer","ImageListFieldComponent","_uploadImages","_clipboard","upload_ids","_upload_list","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploadImages","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_8_Template","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_button_11_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_mat_chip_row_16_Template","addImage","addChipItem","removeChipItem","ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","recurrence_modal_component_1","formatted_value","RecurrenceFieldComponent","getDate","instance_of_month","getDay","RecurrenceModalComponent","old_value","day_of_week","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","RichTextInputComponent","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","_container_el","modules","toolbar","readOnly","theme","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","SpaceListFieldComponent","NewSpaceSelectModalComponent","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","visit_expected","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","query_params","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","event_status","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","generateMockSpace","systems_bindings_mock_1","createSystem","_request$query_params","common_mock_1","PREDEF_USERS","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lat","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateMockDeskMetadata","generateParkingSpaces","PARKING_SPACES","assignee","assigned_name","map_regions","DESK_FEATURES","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","connected","input_list","output_list","env_sources","available_outputs","source","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","number","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","visible","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","building_id","_roles","roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","buildingSettings","_this$building","bld_id","_organisation","loadRegionData","_this2$building","_updateSettingOverrides","_this$region","loadBuildingData","_this$building2","_this$building3","_this$_organisation","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","queryZones","_auth$config","org_zone","_loadRegions","_this$_organisation2","Region","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this5$building3","geolocation","getCurrentPosition","_this5$building","_position$coords","coords","latitude","longitude","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this5$building2","tz_start","_this$building4","_this$region2","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","CurrencyPipe","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","SpaceSelectItemComponent_div_0_div_6_Template","SpaceSelectItemComponent_div_0_button_7_Template","by_request","SpaceSelectItemComponent","SpaceSelectItemComponent_div_0_Template","SpaceSelectItemComponent_ng_template_1_Template","bld_r10","SpaceSelectModalComponent_mat_form_field_9_mat_option_2_Template","type_r14","SpaceSelectModalComponent_mat_form_field_10_mat_option_2_Template","space_types","_r23","space_r19","spaceSelected","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_a_space_select_item_1_Template","space_map","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_Template","SpaceSelectModalComponent_ng_container_12_ng_container_1_Template","space_r27","SpaceSelectModalComponent_div_13_ng_container_1_a_space_select_item_1_Template","SpaceSelectModalComponent_div_13_ng_container_1_Template","show_selected","SpaceSelectModalComponent","SpaceSelectModalComponent_mat_form_field_9_Template","SpaceSelectModalComponent_mat_form_field_10_Template","SpaceSelectModalComponent_ng_container_12_Template","SpaceSelectModalComponent_div_13_Template","SpaceSelectModalComponent_footer_14_Template","SpaceSelectModalComponent_ng_template_15_Template","SpaceSelectModalComponent_ng_template_17_Template","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","feat_r5","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_div_22_Template","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","lvl_r11","feat_r13","feature_display","SpaceFiltersComponent_section_48_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_48_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_section_48_Template","SpaceFiltersComponent_div_50_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","fields","validateURL","installed_ui_devices","public","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","today","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","scrollTop","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_29_Template","FindAvailabilityModalComponent_user_availability_list_35_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","sys_admin","support","_User","preferred_beverage","accepted_terms_conditions","_User2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","MatCheckbox","i12","i_r7","available_weekdays","changed","day_r6","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-rooms-state-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/support-ticket-modal.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-item.component.ts","./libs/spaces/src/lib/space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-gray-300 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-white text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"12 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-gray-300\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-white p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div\n            >{{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}</div\n        >\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--primary);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-gray-300 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-gray-100\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--secondary);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host) this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div\n    class=\"flex flex-1 flex-col z-0 m-0 bg-gray-50 dark:bg-neutral-600 h-full overflow-y-auto\"\n>\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 dark:border-neutral-500 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-gray-300 dark:border-neutral-500 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-gray-300 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-gray-300 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            [src]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-gray-300 border-gray-300 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-white border-t border-gray-300 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-white border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-white h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-gray-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    *ngIf=\"space?.images?.length > 0\"\n                    src=\" space.images \"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-white h-full border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-white border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AsyncHandler, notifyError, openConfirmModal } from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: 'shortTime') +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: 'h:mm a (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-gray-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.value as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Booking, queryBookings } from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(\n                catchError((_) => {\n                    console.error(_);\n                    return of([]);\n                })\n            )\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(\n                catchError((_) => {\n                    console.error(_);\n                    return of([]);\n                })\n            )\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            switchMap((bld) => {\n                const system_id = this._org.binding('lockers');\n                console.log('Lockers:', bld, system_id);\n                if (!system_id) return of([]);\n                const mod = getModule(system_id, 'LockerLocations');\n                return mod.execute('lockers_allocated_to_me').catch((_) => []);\n            }),\n            map((_) =>\n                _.map(\n                    (i) =>\n                        new Booking({\n                            date: startOfDay(Date.now()).valueOf(),\n                            duration: 24 * 60 - 1,\n                            title: 'Locker Booking',\n                            description: i.locker_name,\n                            booking_type: 'locker',\n                            all_day: true,\n                            asset_id: i.locker_id,\n                            asset_name: i.locker_name,\n                            zones: [i.building, i.level],\n                            extension_data: {\n                                map_id: i.locker_id,\n                            },\n                        })\n                )\n            ),\n            catchError((e) => {\n                console.error(e);\n                return of([]);\n            }),\n            tap((data) => {\n                console.log('Your Lockers:', data);\n                this.timeout('end_loading', () => this._loading.next(false));\n            }),\n            shareReplay(1)\n        );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) =>\n            [...e, ...v, ...d, ...p, ...l].sort((a, b) => a.date - b.date)\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval(\n            'poll',\n            () => {\n                document.visibilityState === 'visible'\n                    ? this._poll.next(Date.now())\n                    : '';\n            },\n            delay\n        );\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetGroup } from 'libs/assets/src/lib/asset.class';\nimport { AssetStateService } from './asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"asset.images?.length; else placeholder\"\n                        [src]=\"asset.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/asset-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            (asset.id | assetgroup | async)?.name ||\n                                'AssetGroup'\n                        }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssetGroups(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAssetGroup(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addAssetGroups()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public date = Date.now();\n    @Input() public duration = 30;\n    public items: AssetGroup[] = [];\n    public disabled = false;\n\n    private _onChange: (_: AssetGroup[]) => void;\n    private _onTouch: (_: AssetGroup[]) => void;\n    public selected: AssetGroup[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date || changes.duration) {\n            this._state.setOptions({\n                date: this.date,\n                duration: this.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetGroup[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetGroup[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetGroup[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetGroup[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAssetGroup(asset: AssetGroup) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssetGroups(asset?: AssetGroup) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((items?: AssetGroup[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            items = items.map((item) => ({ ...item }));\n            for (const item of items) {\n                item.assets = item.assets.slice(0, item.amount);\n            }\n            this.setValue(items);\n        });\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\nimport { flatten } from '@placeos/common';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.amount) this.item.amount = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.amount) this.item.amount = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersComponent {\n    \n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-auto py-2 bg-black/5 dark:bg-white/10 dark:border-neutral-500\"\n        >\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 flex items-center justify-center overflow-hidden border border-black/10\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.amount || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [src]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-blue-400]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.amount = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.amount;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset, AssetGroup } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <asset-filters class=\"h-full hidden sm:block\"></asset-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500 dark:bg-neutral-700\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-white  dark:bg-neutral-700 z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: AssetGroup[]\n    ) {}\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) item.amount = count;\n        item.assets = this.displayed.assets;\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryAssets, queryGroupAvailability } from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zone_id: bld.id || zone || '',\n                    zones: zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this.available_groups,\n    ]).pipe(\n        map(([search, assets]) => {\n            const s = search.toLowerCase();\n            return assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s))\n            );\n        }),\n        shareReplay(1)\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    amount?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten } from '@placeos/common';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nexport function assetsToGroups(assets: Asset[]) {\n    const groups: AssetGroup[] = [];\n    for (const asset of assets) {\n        const group = groups.find((_) => _.id === (asset as any).asset_type_id);\n        if (group) {\n            group.assets.push(asset);\n        } else {\n            groups.push({\n                id: (asset as any).asset_type_id,\n                name: (asset as any).name,\n                assets: [asset],\n            } as AssetGroup);\n        }\n    }\n    for (const group of groups) {\n        group.amount = group.assets.length;\n    }\n    return groups;\n}\n\nexport function groupsToAssets(groups: AssetGroup[]) {\n    return flatten(\n        groups.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 1000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find((booking) => booking.asset_id === asset.id)\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id)\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid }: Partial<CalendarEvent>,\n    {\n        date,\n        duration,\n        host,\n        location_name,\n        location_id,\n        zones,\n    }: {\n        date: number;\n        duration: number;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n    },\n    new_assets: AssetGroup[],\n    old_assets: Asset[]\n) {\n    const assets: Asset[] = flatten(\n        new_assets.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: id,\n        ical_uid,\n    }).toPromise();\n    const filtered = bookings.filter(\n        (item) =>\n            item.extension_data.parent_id === id &&\n            !assets.find((_) => _.id === item.asset_id)\n    );\n    await Promise.all(\n        filtered.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        assets\n            .filter(({ id }) => !old_assets?.find((_) => _.id === id))\n            .map((item) =>\n                createBooking(\n                    new Booking({\n                        type: 'asset-request',\n                        booking_type: 'asset-request',\n                        date,\n                        duration,\n                        description: location_name,\n                        user_email: host,\n                        asset_id: item.id,\n                        asset_name: (item as any).name,\n                        title: (item as any).name,\n                        extension_data: { parent_id: id, location_id },\n                        zones: zones || [],\n                    }),\n                    { ical_uid, event_id: id }\n                ).toPromise()\n            )\n    );\n    return assets;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ booking?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"!auto_checkin\"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <!-- <button mat-menu-item mat-dialog-close class=\"flex items-center space-x-2 text-base\" (click)=\"edit.emit()\">\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button> -->\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(\n            this.booking.id,\n            !this.booking.checked_in\n        ).toPromise();\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id: this._booking.extension_data.map_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_URLS = [\n    'book/desks',\n    'book/parking',\n    'book/new-desks',\n    'book/new-parking',\n];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\nexport interface AssetRestriction {\n    start: number;\n    end: number;\n    assets: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = this.options.pipe(\n        debounceTime(300),\n        distinctUntilKeyChanged('type'),\n        switchMap(({ type }) => {\n            if (!this._org.building) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) =>\n            queryBookings({\n                period_start: getUnixTime(this.form.getRawValue().date),\n                period_end: getUnixTime(\n                    addMinutes(\n                        this.form.getRawValue().date,\n                        this.form.getRawValue().duration || 24 * 60\n                    )\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) => {\n                    const start = this.form.getRawValue().date;\n                    const end = addMinutes(\n                        start,\n                        this.form.getRawValue().duration\n                    ).valueOf();\n                    const restriction = restrictions.find(\n                        (_) =>\n                            (start >= _.start && start < _.end) ||\n                            (end <= _.end && end > _.start)\n                    );\n                    this._resource_use = {};\n                    bookings.forEach(\n                        (_) => (this._resource_use[_.asset_id] = _.user_name)\n                    );\n                    return resources.filter(\n                        (asset) =>\n                            (!restriction ||\n                                !restriction.assets.includes(asset.id)) &&\n                            (!asset.groups?.length ||\n                                asset.groups.some((grp) =>\n                                    currentUser().groups.includes(grp)\n                                )) &&\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    );\n                })\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => this.storeForm())\n        );\n        this._booking.next(booking);\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !BOOKING_URLS.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify(this.form.getRawValue() || {})\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                value,\n                this._options.getValue().type\n            );\n        }\n        if (value.duration >= 12 * 60 || value.all_day) {\n            this.form.patchValue({\n                date: set(value.date, { hours: 11, minutes: 59 }).valueOf(),\n                duration: 12 * 60,\n            });\n            value = this.form.getRawValue();\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        this._loading.next('Saving booking');\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !!this._settings.get('app.bookings.no_approval'),\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.value;\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        for (let i = 0; i < group_members.length; i++) {\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            await this.postForm(true);\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { asset_id, date, duration, user_email, all_day }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        duration = all_day ? 12 * 60 : duration || 60;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined'\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { capitalizeFirstLetter, removeEmptyFields } from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    system_id: string, \n    resource_calendar: string, \n    event_id: string, \n    host_email: string\n};\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative' | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day ?? this.duration >= 12 * 60;\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n    });\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) form.controls.duration.disable();\n        else form.controls.duration.enable();\n    });\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    ical_uid?: string;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * List bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(data: Partial<Booking>,  q?: { event_id?: string, ical_uid?: string }) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (data: Partial<Booking>, q?: { event_id?: string, ical_uid?: string }) =>\n    data.id ? updateBooking(data.id, data) : createBooking(data, q);\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [src]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((desks) =>\n            unique(\n                desks.map((desk) => desk.zone as any as BuildingLevel),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                formControlName=\"date\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: 'shortTime' }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.booking.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: user,\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [src]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [src]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.level_list.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l;\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [src]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date, starts_at).valueOf(),\n                    duration:\n                        duration || differenceInMinutes(ends_at, starts_at),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center max-w-lg px-4 pt-2 pb-4\">\n            <mat-checkbox\n                class=\"m-2\"\n                [ngModel]=\"require_notes\"\n                (ngModelChange)=\"saveNotesSetting($event)\"\n            >\n                Require notes for orders\n            </mat-checkbox>\n            <br />\n            <button\n                matRipple\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets; let i = index\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"rulesets.splice(i, 1)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center px-2 h-20 space-x-2\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button\n                            icon\n                            matRipple\n                            class=\"mb-6\"\n                            (click)=\"set.rules.splice(i, 1)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button btn matRipple class=\"mx-auto w-32\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: ` <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [src]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium flex items-center\">\n                        {{ item.name || 'Item' }}\n                        <span\n                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                            *ngIf=\"item.option_list?.length\"\n                            [matTooltip]=\"optionList(item)\"\n                        >\n                            {{ item.option_list?.length || '0' }} option(s)\n                        </span>\n                    </div>\n                    <div>{{ item.quantity }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-catering-item\"\n                            class=\"clear\"\n                            (click)=\"addItems(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-catering-item\"\n                            class=\"clear\"\n                            (click)=\"removeItem(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addItems()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Item</span>\n            </div>\n        </button>`,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        zone_id?: string;\n    } = {};\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n    public selected: CateringItem[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeItem(item: CateringItem) {\n        const updated_list = this.items.filter((_) => _.id !== item.id);\n        this.setValue(updated_list);\n    }\n\n    public addItems(item?: CateringItem) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [this.items, this.options],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            if (!items) return;\n            this.setValue(items);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-white rounded bg-primary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-gray-100 dark:bg-neutral-700 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-gray-300 dark:border-neutral-500 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-gray-400 dark:bg-neutral-600\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-gray-400 dark:border-neutral-500 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-gray-300 dark:border-neutral-500 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"active = !active\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-gray-300 dark:border-neutral-500 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-black/10 w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-yellow-300 text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public item: CateringItem;\n\n    public active = false;\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-gray-300 bg-white dark:bg-neutral-800 dark:border-neutral-500\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-gray-300 dark:border-neutral-500\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p>No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--primary);\n                border-bottom: 2px solid var(--primary);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-gray-200 dark:bg-neutral-500 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [`\n        :host {\n            min-width: 16rem;\n        }\n    `],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-black]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden border border-gray-100 dark:border-neutral-600 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [src]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-white rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-gray-100\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-green-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-400 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-yellow-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-black/20\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-white dark:bg-neutral-700\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: [CateringItem[], any]\n    ) {\n        this._order.setFilters(this._data[1]);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            Date.now();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ANIMATION_SHOW_CONTRACT_EXPAND, AsyncHandler } from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2 dark:bg-neutral-700\"\n            [class.bg-gray-100]=\"!show_items\"\n            [class.bg-gray-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-gray-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-gray-400 dark:bg-neutral-800 p-2 text-2xl text-black dark:text-white opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: 'shortTime' }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    constructor(private _orders: CateringOrdersService) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list.filter((order) => checkOrder(order, this._filters.getValue()))\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        const updated_order = new CateringOrder({ ...order, status });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event).toPromise();\n        this._poll.next(Date.now());\n        return booking;\n    }\n}\n","import { Component } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set Catering Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead\n                        class=\"border-b border-gray-200 dark:border-neutral-500\"\n                    >\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-black/10 dark:hover:bg-white/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-right\">\n                                <span\n                                    class=\"px-2 py-1 rounded-2xl\"\n                                    [class.bg-green-600]=\"\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                    [class.bg-red-600]=\"\n                                        (availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                >\n                                    {{\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-gray-200 dark:border-neutral-500\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringRoomsStateModalComponent {\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly availability = this._catering.availability;\n\n    constructor(\n        private _catering: CateringStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n\n    public async disableSelected() {\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = unique(disabled_list.concat(this.selected));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        return updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus =\n    | 'accepted'\n    | 'preparing'\n    | 'ready'\n    | 'delivered'\n    | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringConfigModalComponent } from './catering-config-modal.component';\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { CateringRoomsStateModalComponent } from './catering-rooms-state-modal.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringConfigModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringRoomsStateModalComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-config-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-black/10 px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-gray-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { stringToMinutes } from 'libs/events/src/lib/helpers';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { CateringRuleset } from './catering.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\n\nconst RULE_REQUESTS: Record<string, Observable<CateringRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as CateringRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as CateringRuleset[]\n            ),\n            catchError((e) => of([] as CateringRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(\n    cache: SwUpdate,\n    interval: number = 5 * 60 * 1000\n) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && await cache.checkForUpdate()) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!await cache.activateUpdate()) return;\n        notifyInfo('Newer version of the application is available', 'Refresh', () =>\n            location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(`${event.body}`);\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push(['DTSTART', `${new Date(event.date).toISOString()}`]);\n    chunks.push([\n        'DTEND',\n        `${addMinutes(event.date, event.duration ?? 60).toISOString()}`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: event.body,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'outlook'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: event.body,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/deeplink/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        this._setDarkMode();\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._setDarkMode();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this._setDarkMode();\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _setDarkMode() {\n        // const os_dark = false; // window?.matchMedia ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches : false;\n        // if (this.get('dark_mode') ?? os_dark) {\n        //     document.body.classList.add('dark');\n        // } else {\n        //     document.body.classList.remove('dark');\n        // }\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"d7ecb0b\",\n    \"hash\": \"d7ecb0b\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"d7ecb0b\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1689051483376\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 overflow-hidden dark:bg-neutral-700 dark:text-white\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"applySetting('dark_mode', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div\n                    class=\"px-8 py-4 bg-gray-200 dark:bg-neutral-600 text-center\"\n                    i18n\n                >\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-gray-700 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return !!this._settings.get('dark_mode');\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard  {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow p-2 relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    SupportTicketModalComponent,\n    LanguageSelectComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table [dataSource]=\"data_source\" matSort>\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row\"\n                        [title]=\"row[column]\"\n                    >\n                        <ng-container\n                            *ngIf=\"!template[column]; else cell_outlet\"\n                            >{{ row[column]\n                            }}<span\n                                *ngIf=\"\n                                    row[column] == null || row[column] === ''\n                                \"\n                                class=\"opacity-30\"\n                            >\n                                N/A\n                            </span></ng-container\n                        >\n                        <ng-template #cell_outlet>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    template[column];\n                                    context: {\n                                        data: row[column],\n                                        row: row,\n                                        key: column\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-white dark:bg-neutral-700 top-0 z-10 border-b border-gray-300 dark:border-neutral-400\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-black/5 dark:hover:bg-white/5 border-b border-gray-200 dark:border-neutral-500\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n\n    @Output() public row_clicked = new EventEmitter<T>();\n\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-green-600/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-blue-600/50`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-gray-600/50`,\n    error: `bg-red-600/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-black/80 text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-white/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-white/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-black/90 p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-white/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full text-white p-4 space-x-4\"\n            [class.bg-blue-600]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-pending]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white dark:bg-neutral-600\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (token()) {\n                    this.loading = false;\n                    this.clearInterval('has_token');\n                }\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white divide-y divide-gray-300 dark:divide-neutral-500\"\n            (click)=\"close()\"\n        >\n            <div\n                class=\"flex items-center space-x-2 p-2 border-b dark:border-neutral-500\"\n            >\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 dark:text-white py-2 w-full\"\n                >\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [src]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-white]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-gray-400 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from \"@angular/core\";\nimport { CustomTooltipData } from \"./custom-tooltip.component\";\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div class=\"bg-white dark:bg-neutral-600 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\">\n            <pre class=\"font-mono text-sm bg-black/10 p-2\">{{ formatted_json }}</pre>\n        </div>\n    `\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-gray-200 dark:border-neutral-500 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-white rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">{{ item.name }}</h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-white rounded-3xl shadow border border-gray-200\"\n                >\n                    {{ level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-gray-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 0;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow p-2 relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = (i) => {\n        this._org.region = i;\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n\n                        >Issue Description<span>*</span></label\n                    >\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-gray-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description } = this.form.value;\n            await mod.execute('send_mail', [\n                this.support_email,\n                `Support Ticket from Workplace Application`,\n                `${name}\\n\\n${location}\\n\\n${description}`,\n                null,\n                [],\n                [],\n                [],\n                [],\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden border-2 border-white\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-white text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img class=\"h-full w-full\" [src]=\"user.photo | safe: 'resource'\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--secondary);\n                overflow: hidden;\n                border: 2px solid white;\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService, VERSION } from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-white dark:bg-neutral-700 dark:text-white shadow mt-1 flex flex-col relative divide-y divide-gray-300 dark:divide-neutral-500\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div customTooltip [content]=\"building_select\" class=\"relative\">\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2 dark:text-white\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <button\n                    btn\n                    matRipple\n                    i18n\n                    class=\"inverse mb-4\"\n                    (click)=\"logout()\"\n                >\n                    Sign Out\n                </button>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-hidden flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <div\n                class=\"flex items-center border-b border-gray-200 dark:border-neutral-500 p-2\"\n            >\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ event?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"event.state === 'done'\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"event.state === 'done'\"\n                        >\n                            <app-icon>\n                                {{\n                                    event.state === 'done'\n                                        ? 'not_interested'\n                                        : event?.status === 'approved'\n                                        ? 'done'\n                                        : event?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-white flex items-center justify-center text-white\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"event.system?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"event.state === 'done'\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"\n                                    event.state === 'done'\n                                \"\n                            >\n                                <app-icon>\n                                    {{\n                                        event.state === 'done'\n                                            ? 'not_interested'\n                                            : event?.status === 'approved'\n                                            ? 'done'\n                                            : event?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-green-600]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-gray-300 sm:border-none dark:border-neutral-500 flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                            i18n\n                        >\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                catering-item\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.ext('catering')[0].items\n                                \"\n                            >\n                                <div\n                                    count\n                                    class=\"flex items-center justify-center h-6 w-6 rounded-full bg-gray-200 text-sm font-medium\"\n                                >\n                                    {{ item.quantity }}\n                                </div>\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">{{ item.name }}</div>\n                                    <div\n                                        class=\"text-xs opacity-40\"\n                                        *ngFor=\"let opt of item.options\"\n                                    >\n                                        {{ opt.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 pt-2 text-lg font-medium dark:border-neutral-500\"\n                            i18n\n                        >\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                asset\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">\n                                        {{ item.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-black/30 text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, getUnixTime, isBefore, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Validators } from '@angular/forms';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { filterSpacesFromRules } from './helpers';\nimport {\n    assetsToGroups,\n    groupsToAssets,\n} from 'libs/assets/src/lib/asset.utilities';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\n\nconst BOOKING_URLS = [\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm();\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings]) => {\n            this._loading.next('Updating available spaces...');\n            let { date, duration, all_day } = this._form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            list = filterSpacesFromRules(\n                list,\n                { date, duration, space: null, host: currentUser() },\n                this._org.building.booking_rules\n            );\n            return (list || [])\n                .filter((_, idx) =>\n                    periodInFreeTimeSlot(\n                        date,\n                        date + duration * MINUTES,\n                        bookings[idx] || []\n                    )\n                )\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                if (all_day) {\n                    date = startOfDay(date).valueOf();\n                    duration = 24 * 60 - 1;\n                }\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this.event?.id || undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterSpacesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                space: null,\n                                host: currentUser(),\n                            },\n                            this._org.building.booking_rules\n                        );\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff <\n                (this._settings.get('app.events.cache_duration_in_days') || 14)\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, catering, assets }) => {\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n        let count = 0;\n        this.interval(\n            'catering',\n            () => {\n                const catering = this._form.value.catering;\n                if (count === catering?.length) return;\n                count = catering?.length;\n                if (\n                    catering?.length &&\n                    (this._settings.get('app.events.catering_notes_required') ||\n                        this._settings.value('require_catering_notes'))\n                ) {\n                    this._form\n                        .get('catering_notes')\n                        ?.setValidators([Validators.required]);\n                    this._form\n                        .get('catering_notes')\n                        .patchValue(this._form.value.catering_notes);\n                } else {\n                    this._form.get('catering_notes')?.clearValidators();\n                    this._form.get('catering_notes').setErrors(null);\n                }\n                this._form.updateValueAndValidity();\n            },\n            500\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(event: CalendarEvent = new CalendarEvent()) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(\n                event.recurring_event_id\n            ).toPromise();\n            (this._event.getValue() as any).recurrence = {\n                ...master.recurrence,\n                _pattern: master.recurrence.pattern,\n            };\n        }\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event,\n            ...event.extension_data,\n            date:\n                !event.id && isBefore(event.date || 0, Date.now())\n                    ? Date.now()\n                    : event.date,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering: event.extension_data.catering[0]?.items || [],\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: assetsToGroups(event.extension_data.assets || []),\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!this._form) this.newForm();\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({\n            ...form_data,\n            assets:\n                (form_data.assets?.length && form_data.assets[0].type_id\n                    ? assetsToGroups(form_data.assets)\n                    : form_data.assets) || [],\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(event.date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.all_day\n                ? startOfDay(value.date).valueOf()\n                : value.date;\n            if (catering.length && !('items' in catering[0])) {\n                const items = catering.map((_) => ({\n                    ..._,\n                    options: _.options.map((o) => ({ ...o, active: false })),\n                }));\n                catering = [\n                    new CateringOrder({\n                        deliver_at: d,\n                        items,\n                        notes: value.catering_notes,\n                        charge_code: value.catering_charge_code,\n                    }),\n                ];\n            } else {\n                catering.notes = value.catering_notes;\n                catering.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup || setup;\n                (value as any).breakdown = value.breakdown || breakdown;\n            }\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees,\n                    date: d,\n                    catering,\n                    assets: groupsToAssets(assets),\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                    },\n                    assets,\n                    event.extension_data.assets\n                ).catch(async (e) => {\n                    if (!this.form.value.id) {\n                        await removeEvent(result.id).toPromise();\n                    }\n                    throw e;\n                });\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event.toJSON(), query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + (duration * 60 * 1000 || 30 * 1000)),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        const availability_method = this.has_calendar\n            ? querySpaceAvailability\n            : queryResourceAvailability;\n        let availability: boolean[] = await availability_method(\n            spaces.map((_) => _.id),\n            date,\n            duration,\n            ignore\n        ).toPromise();\n        if (!availability.every((_) => _))\n            throw `${\n                spaces.length > 1\n                    ? 'The selected space'\n                    : 'Some of the selected spaces'\n            } are not available at the selected time`;\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import { Identity, removeEmptyFields, unique } from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport interface LinkedBooking {\n    id: string;\n    asset_id: string;\n    asset_name: string;\n    user_id: string;\n    user_name: string;\n    description: string;\n    booking_type: string;\n}\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public readonly update_master: boolean;\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration ||\n              differenceInMinutes(data.event_end * 1000, this.date) ||\n              30;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n        }\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(new Date(this.date), new Date());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const end = getUnixTime(addMinutes(this.date, this.duration));\n        const date = this.all_day ? set(this.date, { hours: 12 }) : this.date;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            delete obj.extension_data.setup;\n            delete obj.extension_data.breakdown;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, this.date) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { queryCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        method === 'patch' ? data : new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id\n        ? updateEvent(\n              data.update_master ? data.recurring_event_id || data.id : data.id,\n              { ...data, id: data.recurring_event_id || data.id },\n              q\n          )\n        : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryCalendarAvailability({\n        system_ids: id_list.join(),\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((spaces) =>\n            id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            )\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    BookingRuleDetails,\n    BookingRules,\n    BookingRuleset,\n    BookingRulesmap,\n    RecurrenceDetails,\n    TimeBlock,\n    TimePeriod,\n} from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 30\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterSpacesFromRules(\n    spaces: Space[],\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n) {\n    return spaces.filter(\n        (_) => !rulesForSpace({ ...details, space: _ }, rulemap)?.hidden\n    );\n}\n\nexport function rulesForSpace(\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n): BookingRules {\n    const { space } = details;\n    for (const zone of space.zones) {\n        if (rulemap[zone]?.length) {\n            for (const ruleset of rulemap[zone]) {\n                if (ruleset && checkRulesMatch(details, ruleset))\n                    return { ...DEFAULT_RULES, ...ruleset.rules };\n            }\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (\n        conditions.min_length &&\n        stringToMinutes(conditions.min_length) <= duration\n    )\n        matches += 1;\n    if (\n        conditions.max_length &&\n        stringToMinutes(conditions.max_length) >= duration\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-gray-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving setup and breakdown durations...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.ext('setup') || 0),\n        breakdown: new FormControl(this._event.ext('breakdown') || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        await saveEvent(\n            new CalendarEvent({ ...this._event, ...this.form.value }),\n            query\n        )\n            .toPromise()\n            .catch((_) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                console.log(_);\n                notifyError(`Error updating setup and breakdown. ${_.error}`);\n                throw _;\n            });\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n} from 'date-fns';\nimport { currentUser, timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(event: CalendarEvent = new CalendarEvent()) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup: new FormControl(event.extension_data?.setup || 0),\n        breakdown: new FormControl(event.extension_data?.breakdown || 0),\n        assets: new FormControl(\n            assetsToGroups(event.extension_data?.assets || [])\n        ),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    form.get('date').valueChanges.subscribe(() =>\n        form.get('duration').updateValueAndValidity()\n    );\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) form.controls.duration.disable();\n        else form.controls.duration.enable();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { currentUser, notifySuccess, SettingsService } from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label i18n>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm();\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Succefully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative\"\n            [class.hidden]=\"status === 'free'\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    addMinutes,\n    endOfDay,\n    getUnixTime,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AssetRestriction,\n    BookingFormService,\n} from 'libs/bookings/src/lib/booking-form.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._options,\n        this._poll,\n    ]).pipe(\n        filter(([lvl]) => !!lvl),\n        debounceTime(600),\n        switchMap(([lvl, { date }]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(date || Date.now())),\n                period_end: getUnixTime(addMinutes(date || Date.now(), 60)),\n                type: 'desk',\n                zones: lvl.id,\n            }).pipe(catchError(() => of([] as Booking[])))\n        ),\n        tap((l) => {\n            this._users = {};\n            this._departments = {};\n            l.forEach((b) => {\n                const departments =\n                    this._settings.get('app.department_map') || {};\n                this._users[b.asset_id] = b.user_name;\n                this._departments[b.asset_id] =\n                    departments[b.extension_data.department] || '';\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this._poll.pipe(\n            switchMap(() => {\n                return showMetadata(\n                    this._org.building.id,\n                    `desk_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                map((i) =>\n                    (i.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            this._statuses = {};\n            this.unsubWith('lvl');\n            if (!lvl) return;\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.restrictions,\n        this._options,\n    ]).pipe(\n        // debounceTime(50),\n        map(([desks, in_use, presence, checked_in, signs, restrictions]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                const has_signs = signs.some((i) => id === i);\n                const is_checked_in = checked_in.some((i) => id === i);\n                const restriction_list = restrictions.filter((_) =>\n                    _.assets.includes(id)\n                );\n                const is_restricted = restriction_list.find(\n                    ({ start, end }) => Date.now() >= start && Date.now() < end\n                );\n                this._statuses[id] =\n                    bookable && !is_restricted\n                        ? !is_used && !has_presence && !is_checked_in\n                            ? has_signs\n                                ? 'signs-of-life'\n                                : 'free'\n                            : !has_presence && !is_checked_in\n                            ? 'pending'\n                            : 'busy'\n                        : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('restrictions', this.restrictions.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public startPolling(delay: number = 10 * 1000) {\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) => {\n                const actives = _.filter(\n                    (e) =>\n                        !(\n                            e.rejected ||\n                            e.deleted ||\n                            e.extension_data.current_state === 'ended' ||\n                            e.is_done\n                        )\n                );\n                this._in_use.next(actives.map((i) => i.asset_id));\n                this._checked_in.next(\n                    actives.filter((e) => e.checked_in).map((i) => i.asset_id)\n                );\n            })\n        );\n        this._poll.next(Date.now());\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n        if (options.date) this._poll.next(Date.now());\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        // this._in_use.next(desks.map((v) => v.map_id || v.asset_id));\n        this._presence.next(\n            desks\n                .filter((v) => v.at_location)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        this._signs_of_life.next(\n            desks\n                .filter((v) => v.signs_of_life)\n                .map((v) => v.map_id || v.asset_id)\n        );\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id] = desk.staff_name;\n            this._departments[desk.map_id] = departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost();\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            console.log('Banks:', banks, lockers, status);\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreSpacesService,\n        ExploreDesksService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('desks', this._desks.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        console.error(_);\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nexport interface ExploreParkingOptions {\n    date: number;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ExploreParkingOptions>({\n        date: startOfDay(Date.now()).valueOf(),\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(addDays(endOfDay(_.date), 6)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([events, spaces, level]) =>\n            spaces.filter(\n                (_) =>\n                    _.zone_id === level?.id &&\n                    !events.find((e) => e.asset_id === _.id)\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ExploreParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (can_book) {\n                labels.push({\n                    zoom_level: 2,\n                    location: `${space.map_id}`,\n                    content: `${space.name}\\nFree`,\n                });\n            }\n        }\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-white m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map((u) => ({\n                            id: u.email,\n                            type: (u as any).type || 'contact',\n                            name: u.name,\n                            description: u.email,\n                        }))\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                        })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            *ngIf=\"space.images[0]\"\n                            [src]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { rulesForSpace } from 'libs/events/src/lib/helpers';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space, force: boolean = false) {\n        const { hidden } =\n            rulesForSpace(\n                { date: Date.now(), duration: 60, space, host: currentUser() },\n                this._org.building.booking_rules\n            ) || {};\n        if (hidden)\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-4\">\n                    <label>Resource:</label>\n                    <p class=\"p-4\">\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </p>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        }\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-gray-300 hover:border-black w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injectable,\n    Input,\n    OnInit,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    DateAdapter,\n    MatDateFormats,\n    MAT_DATE_FORMATS,\n    NativeDateAdapter,\n} from '@angular/material/core';\nimport {\n    addYears,\n    endOfDay,\n    format,\n    formatISO,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { HashMap } from 'libs/common/src/lib/types';\n\n@Injectable()\nclass FieldDateAdapter extends NativeDateAdapter {\n    format(date: Date, displayFormat: HashMap | string): string {\n        if (displayFormat === 'input') {\n            return format(date, 'MMMM d, yyyy');\n        }\n        return format(date, 'MMM yyyy');\n    }\n}\nconst FIELD_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'input',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <mat-form-field appearance=\"outline\" (click)=\"picker.open()\">\n            <input\n                matInput\n                [ngModel]=\"date\"\n                [disabled]=\"disabled\"\n                [min]=\"from\"\n                [max]=\"until\"\n                (ngModelChange)=\"setValue($event)\"\n                [matDatepicker]=\"picker\"\n            />\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error><ng-content></ng-content></mat-error>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        { provide: DateAdapter, useClass: FieldDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: FIELD_DATE_FORMATS },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = new Date().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: string;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this._from) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this._to) || addYears(endOfDay(new Date()), 1);\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return format(new Date(this.date), 'DD MMM YYYY');\n    }\n\n    public ngOnInit() {\n        this.date = new Date().toISOString();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = formatISO(new_date || new Date());\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = formatISO(value || new Date());\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        {{\n                            option.date\n                                ? (option.date\n                                      | date\n                                          : (option.id >= 24 * 60\n                                                ? 'mediumDate'\n                                                : 'h : mm a')) + ' ('\n                                : ''\n                        }}{{ option.name }}{{ option.date ? ')' : '' }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    humanReadableByteCount,\n    Upload,\n    uploadFiles,\n} from '@placeos/cloud-uploads';\nimport { AsyncHandler, notifyInfo, randomInt, unique } from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map, takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(file: File): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload: null,\n            };\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            upload_details.upload = upload;\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe(\n                    (state) => {\n                        if (upload.access_url)\n                            upload_details.link = upload.access_url;\n                        upload_details.progress = state.progress;\n                        observer.next(upload_details);\n                        if (state.status === 'error')\n                            observer.error({\n                                ...upload_details,\n                                error: state.error,\n                            });\n                        if (state.status === 'complete') observer.complete();\n                    },\n                    (e) => (upload_details.error = e)\n                );\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-gray-200 dark:border-neutral-500 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [style.background-image]=\"'url(' + url + ')'\"\n            >\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-black/50 text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border bg-black/10 dark:bg-white/5 border-gray-200 dark:border-neutral-500 flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-black hover:bg-opacity-50 text-white flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeItem(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(private _clipboard: Clipboard) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file).subscribe(update_fn, update_fn, () => {\n                this._updateUploadHistory();\n            });\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if ((value || '').trim()) {\n        item_list.push(value);\n        control.setValue(item_list);\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA, SPACE];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addYears, format } from 'date-fns';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 1).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 1).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 3).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? 's' : '' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-gray-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [src]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces: Space[] = [];\n    public disabled = false;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        const ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: Space[]) => {\n            if (!spaces) spaces = ref.componentInstance.selected;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Space[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity, timeFormatString } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [value]=\"time\"\n                [disabled]=\"disabled\"\n                (valueChange)=\"setValue($event)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{ option.date | date: 'h : mm a' }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-gray-50 hover:bg-gray-100 cursor-pointer p-2 rounded border border-gray-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100 relative z-50\"\n                [class.!bg-red-600]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-gray-300 flex flex-col items-center justify-center rounded hover:bg-black/5 cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100\"\n                        [class.!bg-red-600]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-yellow-300]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.booking.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) && (event.type === _.query_params.type || event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        const removed = MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) => generateMockSpace({ ...d, features: randomSpaceFeatures(), images: ['https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg'] }));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data: predictableRandomInt(99999) % 3 === 0 ? {\n        vaccination_proof: { url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg' },\n        id_data: { url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg' } \n    } : {}\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata: generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date,\n        date,\n        subSeconds(start, mod.pending_before),\n        addSeconds(start, mod.pending_period)\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","\nimport { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\n","import { BookingRulesmap } from 'libs/events/src/lib/event.interfaces';\n\nimport { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: BookingRulesmap;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules ||\n            disc_info.booking_rules ||\n            settings.booking_rules ||\n            {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string, name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        this.loadRegionData(item).then(() => {\n            if (\n                this.building?.parent_id !== item.id &&\n                this.buildingsForRegion(item).length\n            ) {\n                this.building = this.buildingsForRegion(item)[0];\n            } else this._updateSettingOverrides();\n        });\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter((lvl) => lvl.parent_id === bld?.id);\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        localStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = localStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        } else {\n            const timezone = this.timezone;\n            for (const bld of this.buildings) {\n                if (bld.timezone === timezone) {\n                    this.building = bld;\n                    break;\n                }\n            }\n            if (this.building) return;\n            const tz_start = timezone.split('/')[0];\n            for (const bld of this.buildings) {\n                if (bld.timezone.startsWith(tz_start)) {\n                    this.building = bld;\n                    break;\n                }\n            }\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","\nexport class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-gray-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-black flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-gray-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Space } from './space.class';\n\n@Component({\n    selector: 'a-space-select-item',\n    template: `\n        <div\n            space\n            class=\"w-full flex items-center p-2 space-x-2 border-b border-gray-100\"\n            *ngIf=\"space\"\n        >\n            <div class=\"flex-1 w-1/2\">\n                <div class=\"text-base truncate\">{{ space.name }}</div>\n                <div class=\"text-xs\">\n                    {{ space.level?.display_name || space.level?.name }}\n                </div>\n            </div>\n            <div class=\"flex items-center\" *ngIf=\"space.capacity !== -1\">\n                <app-icon>account_circle</app-icon>\n                <div>{{ space.capacity }}</div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"multiple; else single_button\"\n                (click)=\"action.emit()\"\n            >\n                <app-icon>{{\n                    type === 'available' ? 'add' : 'close'\n                }}</app-icon>\n            </button>\n        </div>\n        <ng-template #single_button>\n            <button\n                btn\n                matRipple\n                class=\"w-32\"\n                [class.request]=\"space.by_request\"\n            >\n                {{ space.by_request ? 'Request' : 'Book' }}\n            </button>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SpaceSelectItemComponent {\n    /** Space to display the details */\n    @Input() public space: Space;\n    /** Selected state for the space */\n    @Input() public type: 'available' | 'selected';\n    /** Whether user is allowed to select multiple spaces */\n    @Input() public multiple: boolean;\n    /** Emitter for selection actions */\n    @Output() public action = new EventEmitter();\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    DialogEvent,\n    HashMap,\n    Identity,\n    SettingsService,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport { filterSpacesFromRules } from 'libs/events/src/lib/helpers';\nimport { querySpaceCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { Space } from './space.class';\n\nexport interface SpaceSelectModalData {\n    /** List of currently selected spaces */\n    readonly spaces: Space[];\n    /** Selected date to check space availability */\n    readonly date: number;\n    /** Duration of the availability that is desired */\n    readonly duration: number;\n    all_day?: boolean;\n    visitor_type?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    template: `\n        <header>\n            <app-icon class=\"text-3xl\">place</app-icon>\n            <div class=\"text-xl font-semibold flex-1\">\n                Select space{{ multiple ? 's' : '' }}\n            </div>\n            <button icon mat-dialog-close>\n                <app-icon class=\"text-3xl\">close</app-icon>\n            </button>\n        </header>\n        <main>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"buildings && buildings.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [ngModel]=\"building.getValue()\"\n                    (ngModelChange)=\"building.next($event)\"\n                    placeholder=\"Select building\"\n                >\n                    <mat-option *ngFor=\"let bld of buildings\" [value]=\"bld\">\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"space_types && space_types.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [(ngModel)]=\"type\"\n                    placeholder=\"Any space type\"\n                >\n                    <mat-option\n                        *ngFor=\"let type of space_types\"\n                        [value]=\"type.id\"\n                    >\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"body\" style=\"width: 32rem\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container\n                        *ngIf=\"\n                            (filtered_spaces | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <ng-container\n                            *ngFor=\"let space of filtered_spaces | async\"\n                        >\n                            <a-space-select-item\n                                *ngIf=\"!space_map[space.id]\"\n                                [space]=\"space\"\n                                [multiple]=\"multiple\"\n                                type=\"available\"\n                                (click)=\"spaceSelected(space)\"\n                            ></a-space-select-item>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n                <div\n                    class=\"space-list\"\n                    *ngIf=\"multiple\"\n                    [class.show]=\"show_selected\"\n                >\n                    <ng-container\n                        *ngIf=\"spaces && spaces.length; else empty_state\"\n                    >\n                        <a-space-select-item\n                            *ngFor=\"let space of spaces\"\n                            [space]=\"space\"\n                            [multiple]=\"multiple\"\n                            type=\"selected\"\n                        ></a-space-select-item>\n                    </ng-container>\n                </div>\n            </div>\n            <footer *ngIf=\"multiple\">\n                <button btn matRipple (click)=\"save()\">\n                    Save selected spaces({{ spaces.length || '0' }})\n                </button>\n            </footer>\n            <ng-template #empty_state>\n                <div empty class=\"p-16 flex flex-col items-center space-y-2\">\n                    <app-icon class=\"text-3xl\">close</app-icon>\n                    <p>No spaces</p>\n                </div>\n            </ng-template>\n            <ng-template #load_state>\n                <div load class=\"p-16 flex flex-col items-center space-y-2\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                    <p>Finding available spaces...</p>\n                </div>\n            </ng-template>\n        </main>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5em;\n                width: 100%;\n                padding: 0 0.25em;\n            }\n\n            .body {\n                min-width: 20rem;\n                max-width: calc(100vw - 2rem);\n                max-height: 65vh;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectModalComponent extends AsyncHandler {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected spaces */\n    public spaces: Space[] = [...(this._data.spaces || [])];\n    /** Building to filter available spaces */\n    public building = new BehaviorSubject<Building>(null);\n    /** Whether to show selected spaces */\n    public show_selected: boolean;\n    /** List of available space types */\n    public space_types: Identity[] = [];\n    /** ID of the space type to filter available spaces on */\n    public type: string;\n    /** Whether the available spaces are being loaded */\n    public loading: boolean;\n\n    public readonly available_spaces = combineLatest([this.building]).pipe(\n        switchMap(([bld]) => {\n            this.loading = true;\n            return querySpaceCalendarAvailability({\n                zone_ids: bld?.id,\n                period_start: getUnixTime(this._data.date),\n                period_end: getUnixTime(\n                    addMinutes(this._data.date, this._data.duration)\n                ),\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_spaces = this.available_spaces.pipe(\n        map((list) =>\n            filterSpacesFromRules(\n                list,\n                { ...this._data, host: currentUser() } as any,\n                this._org.building.booking_rules\n            )\n        ),\n        tap(() => (this.loading = false))\n    );\n\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._settings.get('app.events.multiple_spaces');\n    }\n\n    /** Mapping of spaces to whether they are selected */\n    public get space_map(): HashMap<boolean> {\n        const spaces = {};\n        this.spaces.forEach((space) => (spaces[space.id] = true));\n        return spaces;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.building.next(this._org.building || this.buildings[0]);\n        this.subscription(\n            'spaces',\n            this.filtered_spaces.subscribe((_) => _)\n        );\n    }\n\n    public spaceSelected(space: Space) {\n        if (this.multiple) {\n            if (!this.space_map[space.id]) {\n                this.spaces.push(space);\n            }\n        } else {\n            this.spaces = [space];\n            this.save();\n        }\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.spaces });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        i18n\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceSelectItemComponent } from './space-select-item.component';\nimport { SpaceSelectModalComponent } from './space-select-modal.component';\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    SpaceSelectModalComponent,\n    SpaceSelectItemComponent,\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space-select-item.component';\nexport * from './space-select-modal.component';\nexport * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-gray-300 dark:border-neutral-500 relative overflow-hidden divide-x divide-y divide-gray-300 dark:divide-neutral-500 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-gray-300\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-gray-300 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-gray-300\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-blue-500 bg-blue-500/30 z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500 hover:h-4 hover:w-4 active:bg-primary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[user.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-primary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: #eee !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                color: rgba(0, 0, 0, 0.3);\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n\n    public readonly availability = this.users.pipe(\n        debounceTime(300),\n        switchMap((users) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-gray-300 dark:border-neutral-500 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-primary text-white p-2 overflow-hidden border border-white rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs\">Unavailable</div>\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.extension_data?.status || data.status || 'pending';\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-gray-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-gray-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-gray-300 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-gray-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-white flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}