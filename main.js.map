{"version":3,"file":"main.js","mappings":"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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","_AppRoutingModule","AppRoutingModule","_createClass","_classCallCheck","this","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","_AppComponent","AppComponent","_common_1$AsyncHandle","_settings","_org","_cache","_snackbar","_this","_callSuper","title","_inherits","key","value","_ngOnInit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","get_token","tkn","_Office2","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","i0","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","HttpLoaderFactory","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","http","TranslateHttpLoader","_AppModule","AppModule","bootstrap","SpacePipe","provideHttpClient","withInterceptorsFromDi","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","_NotFoundComponent","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","_SharedComponentModule","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_DeskBookingComponent","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r3","ctx_r1","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ɵɵpureFunction0","_c0","date","duration","_r1","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","tmp_4_0","allow_all_day","can_book_lockers","allow_assets","_DeskBookingFormComponent","DeskBookingFormComponent","_this$_service$form$g","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","_DeskBookingSuccessComponent","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_MeetingBookingComponent","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r4","display_name","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","building","buildings","_r5","findAvailableTime","hide_block","attendees","_r6","catering","ɵɵpureFunction3","_c1","resources","level","has_catering","details","MeetingBookingFormComponent_div_0_div_12_Template","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","MeetingBookingFormComponent_div_0_section_60_Template","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","_MeetingBookingFormComponent","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","_MeetingBookingSuccessComponent","system","button_toggle_1","bottom_sheet_1","ROUTES","_BookModule","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_BookingConfirmedComponent","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","_FeaturesFilterService","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","ɵɵtwoWayListener","feature_r6","$implicit","ɵɵtwoWayBindingSet","ɵɵtwoWayProperty","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","applyFilters","tmp_2_0","tmp_3_0","minDate","_FilterSpaceComponent","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","_FindSpaceItemComponent","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r4","handleBookEvent","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","map_r6","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r7","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_5_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","empty_state_r8","_r9","openRoomDetails","_FindSpaceComponent","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form2","_this$form3","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","load_state_r10","room_tile_component_1","_MapService","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_locateSpaces","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","downloadTemplate","findSpace","min_date","_RoomBookingComponent","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_RoomConfirmService","_space_pipe","_this$_state$form","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_RoomConfirmComponent","_bottomSheetRef","show_submit_button","_this$form4","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","ctx_r0","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r2","RoomDetailsComponent_section_21_div_3_Template","back","_r4","_RoomDetailsComponent","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","_RoomTileComponent","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r1","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","ctx_r2","isEvent","booking_card_r2","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","empty_state_r4","_UpcomingBookingsComponent","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","load_state_r5","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r3","ɵɵi18n","MeetingFlowConfirmComponent_section_30_mat_chip_9_Template","ɵɵi18nExp","event","s_r4","MeetingFlowConfirmComponent_section_31_ng_container_6_Template","_MeetingFlowConfirmComponent","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","_item$option_list","option_list","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_1","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_30_Template","MeetingFlowConfirmComponent_section_31_Template","MeetingFlowConfirmComponent_button_33_Template","pattern","is_multiday","all_day","date_end","spaces_1","date_fns_1","_ScheduleStateService","_lockers","_parking","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","_$linked_bookings","isSameDay","toLowerCase","a","linked_bookings","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","raw_events","_ref10","events","_$extension_data","extension_data","shared_event","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","include_deleted","group_events","_$extension_data2","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","lkr","locker_id","level_id","Booking","valueOf","locker_name","bookings","_ref23","_ref24","filtered_events","ev","_ev$linked_bookings$","bkn","meeting_id","_ref25","_ref26","filters","_$extension_data3","_filters$shown_types","_$extension_data4","_filters$shown_types2","_filters$shown_types3","_ignore_cancel","_checkCancel","interval","startWith","_ref27","_ref29","_ref30","_auto_release$resourc","is_home","is_within_hours","auto_release","time_before","_iterator","_step","check_block","_iterator2","_step2","booking","diff","time","close_after","wording","in_hours","time_after","Math","min","_createForOfIteratorHelper","n","done","startOfMinute","addMinutes","checked_in","rejected","closeAll","differenceInMinutes","differenceInMilliseconds","getTime","format","confirm_text","cancel_text","close_delay","push","checkinBooking","f","finish","t1","_x2","triggerPoll","parse","stopPolling","clearInterval","setAsDeleted","_toggleType","clear","_x3","LockersService","ParkingService","tslib_1","__exportStar","updateAssetGroupList","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","assetgroup_list","_loop","assetgroup","_AssetGroupPipe","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_request_class_1","err_tooltip","request_r2","item_r5","removeRequestItem","toggleFavourite","quantity","favorites","AssetListFieldComponent_div_1_div_8_Template","duplicateRequest","editRequest","removeRequest","show_request","AssetListFieldComponent_div_1_div_22_Template","deliver_at","deliver_at_time","rejected_ids","conflict","items","EMPTY_FAVS","_AssetListFieldComponent","AssetListFieldComponent","asset_requests","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","request","changes","AssetRequest","new_value","state","order","order_list","requested","_step4","_iterator4","AssetSelectModalComponent","max","exact_time","deliver_time","offset","deliver_offset","offset_day","deliver_day_offset","orders","_item$assets","item_ids","Array","fill","randomInt","_step3","new_order","_changed","_items$find","__","getHours","getMinutes","_iterator3","_ret","_loop2","reduce","t","c","_c$items$find","item_count","setValue","updated_list","randomString","asset","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","deliverAtTime","_request$event","_request$event2","_time","hours","floor","minutes","addDays","_data$asset_ids","_data$extension_data","_this$event","_data$extension_data2","_data$extension_data3","_data$extension_data4","event_id","asset_ids","amount","_status","status","request_id","_booking","notes","ref_id","blob","category_id","toggleFav","countChange","active","activeChange","fav","available","_AssetDetailsComponent","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","empty_state_r3","_AssetFiltersDisplayComponent","AssetFiltersDisplayComponent","day_r4","offset_dayChange","AssetFiltersComponent_div_7_ng_container_3_mat_option_5_Template","day_options","at_time","at_timeChange","AssetFiltersComponent_div_7_ng_container_3_Template","offsetChange","exact_tooltip","start_of_date","step_interval","min_offset","max_offset","use_24hr","item_r6","toggleCategory","category","_AssetFiltersComponent","AssetFiltersComponent","search","_min_offset","_max_offset","search_value","categories","category_list","setSearch","getOptions","_updateDayOptions","_this$_state$getOptio","day","count","AssetFiltersComponent_h3_6_Template","AssetFiltersComponent_div_7_Template","AssetFiltersComponent_h3_8_Template","AssetFiltersComponent_mat_checkbox_10_Template","asset_r2","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","placeholder_r4","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","empty_state_r5","_AssetListComponent","AssetListComponent","_asset_state","selected_items","onSelect","_requested_items","counts","filtered_assets","_$assets","_this$selected_items","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","load_state_r6","displayed","_AssetSelectModalComponent","_data","_this$_data$exact_tim","selected_ids","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_15_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_AssetStateService","_options","_search","_category","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","endOfMinute","localeCompare","queryAssetCategories","zone_id","_ref9","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","brand","generateAssetForm","RULE_REQUESTS","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","addAssetCategory","updateAssetCategory","saveAssetCategory","showAssetCategory","BASE_ENDPOINT","deleteAssetCategory","del","queryAssetGroups","queryAssetGroupsExtended","addAssetGroup","updateAssetGroup","saveAssetGroup","product","deleteAssetGroup","addAsset","updateAsset","saveAsset","asset_type_id","showAsset","deleteAsset","addAssetsInBulk","updateAssetsInBulk","saveAssetsInBulk","every","deleteAssetsInBulk","body","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","queryAvailableAssets","_booking$asset_ids","removeAssetRequests","_removeAssetRequests","differenceBetweenAssetRequests","validateAssetRequestsForResource","_validateAssetRequestsForResource","api_1","booking_class_1","q","toQueryString","post","cleanObject","put","groups_cache","has","forkJoin","setTimeout","delete","products","_booking$asset_ids2","requests","_$asset_ids","removeBooking","new_assets","old_assets","changed","match","ical_uid","from_booking","location_name","location_id","reset_state","force_create","booking_list","has_state","unchanged","changed_requests","changed_assets","filtered","used_ids","_step3$value","processed_requests","booking_id","_ref11","approved","unique","_ref15","_ref17","req","_ref20","_available_groups$fin","idx","_assets$find","_request$items","asset_data","user_email","createBooking","r","_AssetsModule","booking_details_modal_component_1","async_handler_class_1","group_event_details_modal_component_1","BookingCardComponent_h4_0_span_1_Template","show_day","_r2","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_17_Template","ɵɵpureFunction1","period","desk_icon_r3","raw_description","for_current_user","is_reserved_parking_space","_BookingCardComponent","BookingCardComponent","_async_handler_class_","_route","edit","remove","assigned_space","_this$booking","_this$booking2","_this$booking3","_this$booking4","_this$booking5","is_done","queryParamMap","params","_this2$booking","_this$booking7","removeHtmlTags","_this$booking8","_this$booking9","_this$booking10","is_today","_this$booking11","_this$booking12","_this$booking13","_this$booking14","is_all_day","dur","formatDuration","html","DOMParser","parseFromString","textContent","_ref$componentInstanc","_ref$componentInstanc2","_ref$componentInstanc3","GroupEventDetailsModalComponent","BookingDetailsModalComponent","concierge","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","desk_settings_modal_component_1","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","loading_state_r4","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","menu_r5","item_r8","request_r7","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","_r10","setDeskHeight","_r11","_r12","_BookingDetailsModalComponent","hide_map","has_assets","_this$booking6","region","regions","ts","booking_start","booking_end","_this$booking15","_this$booking17","_this$booking18","_this$booking19","_toggleCheckedIn","promise","checkinBookingInstance","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","DeskSettingsModalComponent","_templateObject6","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","BookingDetailsModalComponent_button_47_Template","booking_status","can_edit","is_checked_in","desk_height_enabled","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_BookingFormService","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","booking_rules","building_rules","mapping","available_resources","merge","timer","_this$_org$region","_this$_org$building","restrictions","_this$form$getRawValu","bookedResourceList","organisation","booked_ids","_asset$zone","_asset$zone2","_asset$groups","_options$features","_asset$zone3","_asset$zone4","is_restricted","rulesForResource","hidden","groups","grp","bookable","grouped_availability","_options$members","_a$zone","_b$zone","members","pop","_$zone","_asset$zone5","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","booking_data","force","BookingLinkModalComponent","_confirmPost","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_resources$","_this3$_org$region","_resources$2","_resources$3","_this3$_org$region2","_value$user2","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","_value$user","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","update_master","saveBooking","user_name","toJSON","phone","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","unavailable","group_name","_this$_org$region2","_asset$zone6","_asset$zone7","_this$_org$region3","_unavailable$map","_getNearbyResources","t2","t3","call","user_id","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","active_bookings","allowed_bookings","current","_context5","use_region","map_metadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","listChildMetadata","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x4","_x5","_x6","PaymentsService","calendar_links_1","_BookingLinkModalComponent","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","RecurrenceDays","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","WeekOfMonth","First","Second","Third","Fourth","Fifth","Last","SecondLast","ThirdLast","FourthLast","FifthLast","_data$title","_valid_asset_cache","_valid_cache_expiry","roundToNearestMinutes","nearestTo","abs","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","permission","toUpperCase","guests","tags","induction","checked_in_at","process_state","recurrence_type","recurrence_days","recurrence_nth_of_month","recurrence_interval","recurrence_end","removeEmptyFields","_this$extension_data","addHours","add","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","_booking$extension_da5","validators_1","endInFuture","company","featured","other_asset_type","attendance_type","plate_number","self_registered","_form$get","_form$get2","disable","emitEvent","_resource$zone","_resource$zone2","roundingMethod","_findNearbyFeature","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","svg_viewer_1","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","BOOKINGS_ENDPOINT","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","encodeURIComponent","updateBooking","updateBookingInductionStatus","updateBookingInstance","removeBookingInstance","approveBooking","approveBookingInstance","rejectBooking","rejectBookingInstance","setBookingState","utm_source","queryBookingGuests","user_class_1","GuestUser","checkinBookingGuest","guest_id","bookingAddGuest","guest","bookingRemoveGuest","json","message","checkinBookingAttendee","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","_createBookingsForEvent","patch","response_type","_item$items","components_module_1","form_fields_module_1","events_module_1","spaces_module_1","users_module_1","_SharedBookingsModule","SharedSpacesModule","SharedUsersModule","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","_DeskConfirmModalComponent","DeskConfirmModalComponent","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r3","ctx_r3","setFeature","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","ɵɵi18nStart","ɵɵi18nEnd","removeResource","placeholder_r6","_DeskListFieldComponent","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","_DeskQuestionsModalComponent","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","fail_state_r3","feat_r3","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","_DeskDetailsComponent","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","emptyState_r4","desk_filters_component_1","show_fav","_DeskFiltersDisplayComponent","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_6_0","reg_r4","setRegion","DeskFiltersComponent_mat_form_field_13_mat_option_2_Template","bld_r6","DeskFiltersComponent_mat_form_field_15_mat_option_5_Template","lvl_r8","DeskFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","_r7","DeskFiltersComponent_mat_form_field_17_mat_option_3_Template","tmp_1_0","feat_r11","DeskFiltersComponent_section_36_div_3_Template","_DeskFiltersComponent","_bsheet_ref","can_close","active_buildings","region_list","active_region","levelsForRegion","lvl","setLevel","l","reg","allow_time_changes","hide_levels","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_mat_form_field_13_Template","DeskFiltersComponent_mat_form_field_15_Template","DeskFiltersComponent_mat_form_field_17_Template","DeskFiltersComponent_div_24_Template","DeskFiltersComponent_div_25_Template","DeskFiltersComponent_section_36_Template","DeskFiltersComponent_div_38_Template","end_date","tmp_15_0","tmp_17_0","desk_r2","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","_DeskListComponent","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r3","DeskMapComponent_mat_form_field_1_mat_option_2_div_2_Template","zone_ids","DeskMapComponent_mat_form_field_1_mat_option_2_Template","_DeskMapComponent","DeskMapComponent","is_displayed","center","coordinates","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","DEFAULT_COLOURS","_this$level","_bld$location$split$m","parseFloat","_bld$location$split$m2","latitude","longitude","new_zoom","DeskMapComponent_mat_form_field_1_Template","tmp_0_0","_DeskSelectModalComponent","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","map_view_r6","preset","setPreset","edit_presets","updatePreset","formatLabel","toFixed","_DeskSettingsModalComponent","sitting_height","standing_height","last_height","parseInt","localStorage","new_height","_setDeskHeight","sys_id","module","DeskSettingsModalComponent_div_0_Template","DeskSettingsModalComponent_ng_template_1_Template","desk_height_tooltip_r4","desk_confirm_modal_component_1","_DesksService","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r5","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","setVisitor","item_r10","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_19_mat_option_9_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_19_mat_option_20_Template","name_auto_r11","filtered_visitors","email_auto_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_18_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_19_Template","multiple","multi_state_r13","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","load_state_r14","ɵɵelementContainer","last_count","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r15","onDone","_InviteVisitorFormComponent","InviteVisitorFormComponent","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","send_state_r16","locker_r2","clicked","ɵɵstyleProp","size","_LockerGridComponent","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","_LockerListFieldComponent","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r2","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","_LockerBankListComponent","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","_LockerFiltersDisplayComponent","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_mat_form_field_13_mat_option_2_Template","LockerFiltersComponent_mat_form_field_15_mat_option_5_Template","LockerFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","LockerFiltersComponent_mat_form_field_17_mat_option_3_Template","LockerFiltersComponent_section_36_div_3_Template","_LockerFiltersComponent","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_mat_form_field_13_Template","LockerFiltersComponent_mat_form_field_15_Template","LockerFiltersComponent_mat_form_field_17_Template","LockerFiltersComponent_div_24_Template","LockerFiltersComponent_div_25_Template","LockerFiltersComponent_section_36_Template","LockerFiltersComponent_div_38_Template","tmp_13_0","explore_locker_bank_info_component_1","lvl_r1","_LockerMapComponent","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","_this2$level","LockerMapComponent_mat_option_7_Template","setZoom","resetMap","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","map_view_r4","_r8","_LockerSelectModalComponent","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","bank_view_r9","_LockersService","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_ParkingSpaceDetailsComponent","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","_ParkingSpaceFiltersDisplayComponent","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","_removeFeature","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_7_0","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","lvl_r6","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r8","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r10","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r11","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","region_levels","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","feat_r14","_r13","toggleFeature","ParkingSpaceFiltersComponent_section_30_div_3_Template","_ParkingSpaceFiltersComponent","_form","active_levels","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_div_21_Template","ParkingSpaceFiltersComponent_section_30_Template","ParkingSpaceFiltersComponent_div_32_Template","tmp_8_0","tmp_10_0","space_r2","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","_ParkingSpaceListComponent","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","_ParkingSpaceLocationPinComponent","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","_ParkingSpaceSelectMapComponent","ParkingSpaceSelectMapComponent","_maps_people","_seletedSpace","setCustomZone","MapsPeopleService","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","_ParkingSpaceSelectModalComponent","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","_ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent","disable_date","ParkingSpaceListFieldComponent_div_1_Template","_ParkingService","level_list","blds","buildingsForRegion","bld_ids","_blds$find","_lvls$","_$assigned_to","_email","assigned_to","user_details","_$email","_email2","deny_parking_access","deny","booked_space","space_class_1","Calendar","primary","summary","Space","availability","starts_at","ends_at","queryCalendars","CALENDAR_ENDPOINT","calendar_class_1","queryCalendarAvailability","querySpaceCalendarAvailability","org","calendarsToSpaces","queryUserFreeBusy","querySpaceFreeBusy","cal","catering_item_class_1","handleFileEvent","_CateringImportMenuModalComponent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","load_state_r3","keycodes_1","invalid","touched","auto_r3","removeTag","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","chipList_r7","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","tmp_9_0","hasTag","renderPercent","saveChanges","dirty","option_r9","_CateringItemModalComponent","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","tag","markAsDirty","input","existing_tag","index","indexOf","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","has_options","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","catering_order_class_1","order_r4","duplicateOrder","editOrder","removeOrder","optionList","removeOrderItem","CateringListFieldComponent_div_1_div_19_span_3_Template","CateringListFieldComponent_div_1_div_19_button_9_Template","currency_code","CateringListFieldComponent_div_1_div_8_Template","CateringListFieldComponent_div_1_button_12_Template","CateringListFieldComponent_div_1_button_13_Template","CateringListFieldComponent_div_1_button_14_Template","show_order","CateringListFieldComponent_div_1_div_19_Template","_CateringListFieldComponent","CateringListFieldComponent","currency","CateringOrder","custom_id","NewCateringOrderModalComponent","option","opt","cateringitem","CateringListFieldComponent_div_1_Template","row_r2","row","setEnabled","isEnabled","data_r4","symbol","row_r6","addOption","editItem","show_children","menu_r7","row_r10","editOption","removeOption","CateringMenuComponent_ng_template_7_div_0_button_7_Template","CateringMenuComponent_ng_template_7_div_0_button_8_Template","CateringMenuComponent_ng_template_7_div_0_Template","_CateringMenuComponent","CateringMenuComponent","_catering","_orders","menu","deleteOption","addItem","deleteItem","is_editable","updateItem","CateringStateService","CateringOrdersService","CateringMenuComponent_ng_template_1_Template","CateringMenuComponent_ng_template_3_Template","CateringMenuComponent_ng_template_5_Template","CateringMenuComponent_ng_template_7_Template","ɵɵpureFunction5","_c5","active_template_r12","_c2","_c3","price_template_r13","_c4","actions_template_r14","child_template_r15","auto_r2","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r4","_CateringItemOptionModalComponent","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","_CateringOrderItemComponent","CateringOrderItemComponent","_this$item","order_id","item_key","CateringOrderItemComponent_ng_container_0_Template","catering_vars_1","data_r1","CateringOrderListComponent_ng_template_8_span_2_Template","CateringOrderListComponent_ng_template_10_span_3_Template","data_r5","status_r7","row_r8","updateStatus","colour","CateringOrderListComponent_ng_template_12_button_8_Template","tmp_11_0","data_r9","menu_r10","statuses","row_r12","CateringOrderListComponent_ng_template_14_ng_template_4_Template","notes_template_r13","row_r15","item_r14","CateringOrderListComponent_ng_template_16_ul_0_li_1_Template","CateringOrderListComponent_ng_template_16_ul_0_Template","_CateringOrderListComponent","CateringOrderListComponent","CATERING_STATUSES","CateringOrderListComponent_ng_template_4_Template","CateringOrderListComponent_ng_template_6_Template","CateringOrderListComponent_ng_template_8_Template","CateringOrderListComponent_ng_template_10_Template","CateringOrderListComponent_ng_template_12_Template","CateringOrderListComponent_ng_template_14_Template","CateringOrderListComponent_ng_template_16_Template","ɵɵpureFunction8","_c8","state_template_r16","time_template_r17","location_template_r18","host_template_r19","_c6","status_template_r20","_c7","actions_template_r21","child_template_r22","utilities_1","item_r2","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r5","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","order_details_r6","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","order_actions_r9","optionsFor","item_r11","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","CateringOrderModalComponent_ng_template_4_div_4_Template","_CateringOrderModalComponent","CateringOrderModalComponent","_this$order$event","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","load_state_r12","tag_r3","opt_r6","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r5","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r8","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","multi_options_r9","CateringItemDetailsComponent_ng_container_0_p_14_Template","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","_CateringItemDetailsComponent","CateringItemDetailsComponent","group_list","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","empty_state_r10","CateringItemFiltersComponent_div_7_ng_container_3_mat_option_5_Template","CateringItemFiltersComponent_div_7_ng_container_3_Template","ICONS","coffee","drinks","snacks","meals","_CateringItemFiltersComponent","CateringItemFiltersComponent","icons","setFilters","getFilters","_toggleCategory","_toggleTag","toggleTag","_this$_state$getFilte","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_div_7_Template","CateringItemFiltersComponent_h3_8_Template","CateringItemFiltersComponent_mat_checkbox_10_Template","_CateringItemListItemComponent","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","placeholder_r3","selectItem","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","empty_state_r6","_CateringItemListComponent","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","load_state_r7","_CateringOrderStateService","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_NewCateringOrderModalComponent","_order","NewCateringOrderModalComponent_button_14_Template","opt_r4","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r2","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","multi_options_r7","_CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_order$event","_order$event2","_data$event","charge_code","events_fn_1","_CateringOrdersService","_ref2$","valid_catering","checkOrder","_updateStatus","_event$resources$","updated_order","updateEventMetadata","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_CateringStateService","_updated","_menu","_currency","getCateringForZone","_manageCateringOrder","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","_new_item$options","_SharedCateringModule","i_r2","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","_ChargeCodeListModalComponent","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","str","IGNORE_VALUES","hasNewVersion","_new_version","cache","_timer","setInterval","activateUpdate","_activateUpdate","clearCacheCheck","checkForUpdate","notifyInfo","_AsyncHandler","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","addToDate","filterResourcesFromRules","ruleset_list","_rulesForResource","checkRulesMatch","DAY","WEEK","MONTH","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","_details$resource$zon","_details$resource$zon2","ruleset","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","is_period","max_length","resource_ids","locations","_event$duration","_event$organiser","_event$host","chunks","formatCalFileText","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","formatAllDay","formatUTC","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","timezone_helpers_1","utc_date","localToTimezone","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","mapspeople_service_1","PLACEOS_APP_ACCESS","_FeatureAvailableGuard","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","requestScreenWakeLock","_requestScreenWakeLock","_wake_lock","release","navigator","wakeLock","visibilityState","charAt","slice","_app_name","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","_openConfirmModal","csv","objPattern","RegExp","arrMatches","arrData","exec","_arrMatches$","headers","_row$i","loadTextFileFromInputEvent","reject","jsonToCsv","seperator","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","predictableRandomInt","ceil","rand","timeFormatString","is24HourTime","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","calculateDistance","lat1","lon1","lat2","lon2","dLat","degreesToRadians","dLon","sin","cos","atan2","hexToRgb","interpolateColors","rgbToHex","shiftColorTowards","hex1","hex2","fraction","resultRgb","extractTextFromHTML","html_string","temp_element","innerHTML","innerText","shuffleArray","j","random","shuffleArrayWithFirstItem","first_index","firstItem","unshift","confirm_modal_component_1","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","sfc32","xmur3","h","imul","seed","localeString","querySelector","getAttribute","language","degrees","PI","hex","rgb1","rgb2","round","componentToHex","_GoogleAnalyticsService","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","_HotkeysService","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","_this$keydown_states$","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","_KeepAliveService","KeepAliveService","_system_id","_delay","_bindTo","GoogleMaps","Mapbox","_MapsPeopleService","_map_service","_map_token","_ready","_injected","_custom_zone","available$","_injectMapsApiKeys","map_keys","mapsindoors","use_service","_this$map_keys","google","mapbox","script","rel","head","snackbar","_disable_logging","notify","on_action","_msg","_msg2","warn","snackbar_ref","onAction","_setupPlace","protocol","port","domain","hostname","use_domain","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","generateQRCode","_qr$toImage","qr","vanillaqr_min_1","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","DEVICE_ID","_RemoteLoggingService","RemoteLoggingService","_disable_handling","_events","Subject","_event_history","_metadata","_logging_bindings","_patchConsoleMethods","_types","_i","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","device_id","subtype","timestamp","raw","startsWith","roomConfigs","output","mergeRoomConfig","settings_1","user_state_1","_SettingsService","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_init","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","queryShortURLs","ENDPOINT","showShortURL","getShortUrlQRCode","_getShortUrlQRCode","createShortURL","updateShortURL","saveShortURL","patchShortURL","deleteShortURL","QR_STORE","response","cookie","apiKey","fetch","URL","createObjectURL","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","offset_diff","date_fns_tz_1","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","getTimezoneOffsetInMinutes","getTimezoneDifferenceInHours","src_tz","dest_tz","tzOffsetPart","timeZoneName","formatToParts","part","offsetMatch","_Intl","abbr","isdst","utc","TIMEZONES","uploads_1","upload_permissions_modal_component_1","_UploadsService","UploadsService","_upload_list","upload_list","in_progress_list","progress","UploadPermissionsModalComponent","uploadFile","is_public","permissions","pub","resolved","update_fn","_updateUploadHistory","done_list","upload","Observable","observer","blobUtil","arrayBufferToBlob","cloud_uploads_1","uploadFiles","file_name","public","upload_details","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","_UserIdleTimeService","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","reloadUserData","showUser","_current_user","StaffUser","EMPTY_USER","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","p","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","Image","toDataURL","distance","suffix","semverString","version","_VorlonService","load","_load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","_AccessibilityTooltipComponent","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","_ActionIconComponent","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r8","rule_r7","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r9","set_r4","rule_types","show_rules","i_r5","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","_AttachedResourceConfigModalComponent","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","_AuthenticatedImageDirective","AuthenticatedImageDirective","_image_el","source","_loadImage","_loadImage2","authority","nativeElement","ok","ElementRef","_AuthorisedAdminGuard","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_AuthorisedUserGuard","_access","_this$_access","space_utilities_1","space_r5","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","_AvailableRoomsStateModalComponent","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","_BindingDirective","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r2","_BuildingSelectComponent","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","_BuildingPipe","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","_ChangelogModalComponent","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","empty_state_r2","hint","message_r5","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_12_Template","function","toggleChat","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","resizeInput","sendMessage","messages","ChatComponent_div_0_div_4_Template","show","_ChatComponent","ChatComponent","_chat","list_function_schemas","call_function","task_complete","chat_hint","_this$user","scrollToBottom","_input_el","scrollHeight","connected","startChat","_this4$_container_el","_container_el","scrollTop","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_ChatService","_chat_messages","_progress_message","_chat_system","_chat_id","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","task_id","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","map_renderer_component_1","maps_indoors_component_1","desk_height_presets_component_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","_ComponentsModule","useValue","UserAvatarComponent","NgIf","InteractiveMapComponent","MatRipple","MatTooltip","IconComponent","MapRendererComponent","MapsIndoorsComponent","AsyncPipe","MatDialogClose","MatProgressSpinner","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","DatePipe","SanitizePipe","UserControlsComponent","DeskHeightPresetsComponent","TranslatePipe","onConfirm","_ConfirmModalComponent","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r3","display_column","column_r2","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r5","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction7","idx_r7","data_source","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","cell_outlet_r8","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","index_outlet_r9","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r11","row_clicked","empty","_CustomTableComponent","CustomTableComponent","pagination","page_size","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","__ngFactoryType__","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_CustomTooltipData","_CustomTooltipComponent","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_superPropGet","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","_DateFromPipe","DateFromPipe","direction","json_display_component_1","obj_r3","json_tooltip","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_Template","log_r4","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_Template","filtered_logs","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_Template","DebugConsoleComponent_div_0_span_16_Template","logs","onStart","onEnd","COLOR_MAP","network","dom","URL_STARTS","_DebugConsoleComponent","_logs","_hotkey","JsonDisplayComponent","setSystem","DebugConsoleComponent_div_0_Template","DebugConsoleComponent_button_1_Template","DebugConsoleComponent_ng_template_2_Template","onClose","_DeskHeightPresetsComponent","not_set","desk_sitting_height","desk_standing_height","saveSetting","DeskHeightPresetsComponent_div_5_Template","DeskHeightPresetsComponent_button_23_Template","_DurationPipe","DurationPipe","shorten","_FixedPipe","FixedPipe","_GlobalBannerComponent","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","_GlobalLoadingComponent","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","_HelpTooltipComponent","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","_IconComponent","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r1","ImageCarouselComponent_div_1_img_1_Template","ImageCarouselComponent_div_5_button_1_Template","_ImageCarouselComponent","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","_ImageViewerComponent","ImageViewerComponent","geolocation_error_message","getRoute","search_result_items","properties","roomId","floorName","IndoorMapsComponent_ng_container_11_li_8_Template","ɵɵpipeBind3","_IndoorMapsComponent","IndoorMapsComponent","_api_service","default_zoom","live_data_status","selected_destination","actions_hashmap","user_latitude","user_longitude","route_error_message","_setLocationToBuilding","floor_mapping","_get_location","custom_coordinates","get_location","_getUserLocation","_initMapView","_ngOnChanges","_mapsindoors","searchParams","renderSpaceStatus","mapActions","locate","searchElement","services","LocationsService","getLocations","mapFloorsToIndex","ngOnChanges","_this$maps_service","maps_service","addListener","found_action","is_ready","view_options","lat","lng","maxZoom","map_service","view_instance","mapView","GoogleMapsView","accessToken","map_token","MapboxView","MapsIndoors","map_instance","getMap","initDirections","handleLocationChange","provider","directions","GoogleMapsProvider","MapboxProvider","directions_service","DirectionsService","directions_renderer","DirectionsRenderer","mapsIndoors","_mapFloorsToIndex","_this$maps_service2","_building$buildingInf","_this$maps_service3","input_string","pairs","floor_index","getBuilding","buildingInfo","fields","floorMapping","pair","lvl_map","getFloor","_this$maps_service4","_this$maps_service5","floorSelectorElement","FloorSelector","ControlPosition","RIGHT_TOP","addControl","onAdd","onRemove","found_building","_e$buildingInfo","_mapsindoors2","_getUserLocation2","geolocation","watchPosition","_updateGeolocation","_handleGeolocationError","getCurrentPosition","_userWithinRadius","coords","setCenter","enableHighAccuracy","d_lat","d_long","radius","lat_str","long_str","_this$_org$building2","_this$_org$building3","_this$_org$building4","_this$_org$building5","_this$_org$building$l","_this$_org$building$l2","long","updated_location","_updated_location$coo","_getRoute","_this$maps_service6","_this$directions_rend","destination","routeParameters","highlight","anchor","setFloor","_e$message","TypeError","origin_error","setRoute","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this$actions","accumulator","currentValue","_this$maps_service7","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_div_1_Template","IndoorMapsComponent_div_2_Template","onSearch","IndoorMapsComponent_ng_container_11_Template","zoomChange","mapInfo","labels","onLevelChange","InjectionToken","_InteractiveMapComponent","_mapspeople","_explore","centerChange","use_mapsindoors$","InteractiveMapComponent_ng_container_0_Template","InteractiveMapComponent_ng_template_2_Template","InteractiveMapComponent_div_4_Template","mapsindoors_template_r5","_JsonDisplayComponent","_updateFormatting","formatted_json","lang_r2","setLocale","flag","_LanguageSelectComponent","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","_LevelPipe","LevelPipe","ALLOWED_NUMBERS","ALLOWED_DECIMALS","ALLOWED_LETTERS","ALLOWED_ALPHANUMERIC","_LimitInputDirective","LimitInputDirective","_el","restriction","custom_list","ctrlKey","metaKey","hostBindings","onKeyDown","logo","toPassword","login","username_r3","_LoginComponent","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","loading_state_r5","_MapCanvasComponent","MapCanvasComponent","ratio","svg_ratio","ratio$","zoom$","svg_ratio$","_handleMapChange","polygons$","_handleStateChange","_handleMapChange2","old_ratio","canvas_element","polygon_list","poly","_drawPolygon","polygon","points","beginPath","moveTo","lineTo","closePath","strokeStyle","stroke","draw_points","arc","draw_labels","acc","textAlign","textBaseline","font","fillText","_MapLocateModalComponent","_this$item$level","track_id","MapLocateModalComponent_div_6_Template","_MapPinComponent","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","_MapPolygonComponent","MapPolygonComponent","_cdr","padding","svg_scale","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","last_seen","updateRadius","ɵɵresolveWindow","MapRadiusComponent_ng_container_0_div_2_Template","_MapRadiusComponent","MapRadiusComponent","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MapRendererComponent_ng_container_2_mat_spinner_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r3","injectors","i_r4","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_3_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_4_Template","MapRendererComponent_div_3_ng_container_1_div_1_ng_container_5_Template","MapRendererComponent_div_3_ng_container_1_div_1_Template","MapRendererComponent_div_3_ng_container_1_Template","_MapRendererComponent","_on_changes","_extra_data","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_createView","_this$src","_this$_outlet_el","_this$_outlet_el3","simp_url","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","MapRendererComponent_ng_container_2_Template","MapRendererComponent_div_3_Template","MapRendererComponent_ng_template_4_Template","toggleDirections","MapsIndoorsComponent_button_2_mat_spinner_5_Template","viewing_directions","loading_directions","DEFAULT_ZOOM","RESOURCE_MAP","_MapsIndoorsComponent","zoneChange","show_directions","ignore_zoom","_floor_list","_added_floor_selector","hasOwnProperty","_initialiseServices","_this$_services","_this$_services2","is_initialised","_centerOnZone","_focusOnLocation","_updateMapStyling","_services","_addFloorSelector","_split","_split2","_container","maps_indoors","_handleBuildingChange","_handleLevelChange","_handleZoomChange","_handleUserClick","dispatchEvent","Event","_toggleDirections","_item$properties","d_lng","clearDirections","_last_position","setDirectionsFromLocation","_setDirectionsFromLocation","from","travelMode","externalId","floors","_setFloorFromZone","defaultFloor","_last_building","_handleLevelChange2","new_level","_event$properties","_event$properties2","_this$metadata","ignore_actions","_search2","_updateMapStyling2","_this$metadata2","id_simple","_$properties","_$properties2","_setResource","extrusionHeight","extrusionVisible","_focusOnLocation2","_item$properties2","_item$properties3","_this9","_$properties3","_this10","_bld$location$split","_bld$location$split2","MapsIndoorsComponent_button_2_Template","padLength","_MediaDurationPipe","MediaDurationPipe","period_length","show_ms","seconds","milliseconds","_MisconfiguredComponent","MisconfiguredComponent","_PopoutMenuComponent","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","_PrintableComponent","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","_RedirectComponent","RedirectComponent","_RegionSelectComponent","RegionSelectComponent","RegionSelectComponent_mat_radio_button_12_Template","_SafePipe","SafePipe","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","_SanitizePipe","sanitize","selectAll","checked","data_view$","column_r4","setSort","SimpleTableComponent_button_2_app_icon_3_Template","selectable","sortable","active_columns","i_r7","active_row","column_r9","SimpleTableComponent_ng_container_3_div_2_div_3_span_2_Template","SimpleTableComponent_ng_container_3_div_2_ng_container_4_ng_container_1_Template","SimpleTableComponent_ng_container_3_div_2_div_3_Template","SimpleTableComponent_ng_container_3_div_2_ng_container_4_Template","j_r12","columnType","SimpleTableComponent_ng_container_3_div_3_ng_container_1_Template","child_template","ɵɵpureFunction4","SimpleTableComponent_ng_container_3_div_1_Template","SimpleTableComponent_ng_container_3_div_2_Template","SimpleTableComponent_ng_container_3_div_3_Template","empty_message","setPage","total_pages","total_count","_SimpleTableComponent","SimpleTableComponent","rowClicked","_data$","_filter$","_sort$","_JSON$stringify","a_value","b_value","column","_selectAll","SimpleTableComponent_div_1_Template","SimpleTableComponent_button_2_Template","SimpleTableComponent_ng_container_3_Template","SimpleTableComponent_div_6_Template","SimpleTableComponent_div_8_Template","column_template","link_r1","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","error_msg_r3","links","_StatusOverlayComponent","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","load_state_r4","_StatusPillComponent","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","_ThumbnailPipe","ThumbnailPipe","_thumbnail_cache","createVideoThumbnail","GENERATING","video","crossOrigin","videoWidth","videoHeight","currentTime","drawImage","thumbnail","_UnauthorisedComponent","_UploadPermissionsModalComponent","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","image_state_r2","_UserAvatarComponent","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","work_location_tooltip_component_1","region_select","building_select","help_tooltip","work_location_tooltip","desk_height_tooltip_r3","language_tooltip","newSupportTicket","reloadPage","_UserControlsComponent","accessibility_tooltip","WorkLocationTooltipComponent","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_9_Template","UserControlsComponent_div_10_Template","UserControlsComponent_div_11_Template","UserControlsComponent_div_22_Template","UserControlsComponent_ng_template_23_Template","UserControlsComponent_div_25_Template","UserControlsComponent_button_26_Template","UserControlsComponent_button_31_Template","disable_building_select","desk_height","has_new_version","focusInput","key_r3","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r4","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","_VirtualKeyboardComponent","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element2","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","loc_r3","ctx_r4","setLocation","WorkLocationTooltipComponent_div_10_div_1_button_12_Template","WorkLocationTooltipComponent_div_10_div_1_div_17_Template","timeFrom","block_r6","location_icon","WorkLocationTooltipComponent_div_10_div_1_Template","active_preference","blocks","_WorkLocationTooltipComponent","overrides","pref","day_of_week","getDay","work_preferences","work_overrides","location_name_time","_setLocation","new_overrides","key_date","_defineProperty","updateUser","editSettings","WorkLocationTooltipComponent_div_10_Template","WorkLocationTooltipComponent_ng_template_11_Template","ZONE_LIST","EMPTY_ZONE","PlaceZone","_ZonePipe","ZonePipe","showZone","AttendeeListComponent_ng_container_7_div_1_div_5_Template","AttendeeListComponent_ng_container_7_div_1_Template","show_host","_AttendeeListComponent","AttendeeListComponent","hide_close","custom_title","AttendeeListComponent_button_2_Template","AttendeeListComponent_div_5_Template","AttendeeListComponent_ng_container_7_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","EventCardComponent_a_1_div_26_div_1_Template","EventCardComponent_a_1_div_26_div_3_Template","EventCardComponent_a_1_div_18_Template","EventCardComponent_a_1_div_26_Template","_EventCardComponent","EventCardComponent","_this$event2","_this$event3","_this$event4","_this2$event","getLocationString","_this$event5","_getLocationString","_this$event6","_this$event7","_this$event8","zone_list","_this$event9","_this$event10","_this$event11","_this$event12","_this3$event$extensio","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","menu_r4","EventDetailsModalComponent_div_11_button_1_Template","EventDetailsModalComponent_div_11_button_2_Template","can_check_in","allow_edit","item_r7","EventDetailsModalComponent_ng_container_65_div_5_div_13_span_4_Template","order_r6","EventDetailsModalComponent_ng_container_65_div_5_div_13_Template","EventDetailsModalComponent_ng_container_65_div_5_Template","EventDetailsModalComponent_div_68_div_3_Template","request_r9","EventDetailsModalComponent_ng_container_69_div_5_div_13_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","show_attendees","no_edit_message","act_r15","_r14","EMPTY_ACTIONS","_EventDetailsModalComponent","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","_this$event$extension","_this$event$extension2","getEventMetadata","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_11_Template","EventDetailsModalComponent_ng_container_31_Template","EventDetailsModalComponent_div_33_Template","EventDetailsModalComponent_ng_container_65_Template","EventDetailsModalComponent_ng_container_67_Template","EventDetailsModalComponent_div_68_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_button_76_Template","EventDetailsModalComponent_button_83_Template","EventDetailsModalComponent_button_84_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","BOOKING_URLS","_EventFormService","generateEventForm","_zone_ids","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","_this$last_success","periodInFreeTimeSlot","future_available_spaces","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","differenceInDays","previous","_this$_event$getValue","_newForm","_event$linked_booking","master","showEvent","_pattern","resetForm","_event$linked_booking2","_event$extension_data","catering_charge_code","_this$_event$getValue2","form_data","_event$linked_booking3","EventLinkModalComponent","ignore_space_check","ignore_owner","_this7$event","_form$get3","_spaces$","_this7$event2","_this7$event3","_this7$event4","_value$organiser","_value$organiser2","_event$extension_data2","_value","changed_times","changed_spaces","is_owner","breakdown","overflow","processed_assets","creating_assets","on_error","_spaces$2","_spaces$3","_spaces$4","_this7$_org$region","_this7$_org$building","_spaces$5","recurring","checkSelectedSpacesAreAvailable","is_external","calendar","catering_notes","setup_time","breakdown_time","old_system","visit_expected","host_override","removeEvent","_makeBooking2","_updateVisitorList","saveEvent","_checkSelectedSpacesAreAvailable","_EventLinkModalComponent","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","event_start","event_end","host_email","private","_data$recurrence$days","associated_id","online_meeting_url","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","range_start","range_end","occurrences","days_of_week","is_system_event","attachments","eventStatus","simple_event","linked_assets","view_access","_this$recurrence","_this$system","parseRecurrence","all_day_date","_arr","queryAllEvents","EVENTS_ENDPOINT","createEvent","updateEvent","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","addEventGuest","removeEventGuest","isSpaceAvailable","system_ids","ignore_period","calendar_fn_1","short_list","_s$resource","method","attendee_list_component_1","event_card_component_1","group_event_card_component_1","_SharedEventsModule","i9","MatMenu","MatMenuItem","MatMenuTrigger","i10","i11","CurrencyPipe","i12","SlicePipe","i13","i14","GroupEventCardComponent","GroupEventCardComponent_button_0_img_2_Template","GroupEventCardComponent_button_0_p_13_Template","GroupEventCardComponent_button_0_div_17_Template","GroupEventCardComponent_button_0_div_18_Template","GroupEventCardComponent_button_0_div_19_Template","is_onsite","has_space","GroupEventCardComponent_ng_template_1_img_2_Template","GroupEventCardComponent_ng_template_1_p_27_Template","GroupEventCardComponent_ng_template_1_div_31_Template","GroupEventCardComponent_ng_template_1_div_32_Template","GroupEventCardComponent_ng_template_1_div_33_Template","_GroupEventCardComponent","space_pipe","group_event_calendar","GroupEventCardComponent_button_0_Template","GroupEventCardComponent_ng_template_1_Template","featured_card_r4","is_interested","is_going","GroupEventDetailsModalComponent_div_99_interactive_map_3_Template","GroupEventDetailsModalComponent_div_99_div_5_Template","GroupEventDetailsModalComponent_div_99_div_6_Template","GroupEventDetailsModalComponent_div_99_span_8_Template","GroupEventDetailsModalComponent_div_99_span_9_Template","GroupEventDetailsModalComponent_div_99_a_10_Template","showing_map","is_online","_GroupEventDetailsModalComponent","remove_blocks","_remove_blocks","block","last","lastIndexOf","_i2","_remove_blocks2","_this$event$attendees","guest_details","_this$guest_details","_this$event$attendees2","_toggleInterest","_this$event$system","_this$event$system2","toggleInterest","_toggleAttendance","_this$event$system4","_this$event$system3","toggleAttendance","GroupEventDetailsModalComponent_img_2_Template","GroupEventDetailsModalComponent_div_3_Template","GroupEventDetailsModalComponent_ng_container_12_Template","GroupEventDetailsModalComponent_div_83_Template","GroupEventDetailsModalComponent_div_84_Template","GroupEventDetailsModalComponent_div_85_Template","GroupEventDetailsModalComponent_span_97_Template","GroupEventDetailsModalComponent_div_99_Template","GroupEventDetailsModalComponent_div_100_Template","concierge_menu_r5","menu_r6","attendance","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","getFreeTimeSlots","blk","getNextFreeTimeSlot","min_size","slots","addSeconds","bkn_start","bkn_end","isSameMinute","save","_SetupBreakdownModalComponent","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event3","_this$_event4","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","_event$extension_data3","_event$extension_data4","_event$extension_data5","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","_event$extension_data10","_event$extension_data11","_event$extension_data12","_event$extension_data13","_event$extension_data14","visitor_type","needs_space","needs_parking","setCateringTime","_form$value$catering","_form$value$recurrenc","_form$value$recurrenc2","_form$get4","clearValidators","updateValueAndValidity","validateCateringField","setMockBookingStartDatetime","BOOKING_DATE","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","_booking$resources","organizer","setMinutes","catering_control","control","_catering_control$val","catering_field","isFuture","is_future","_control$parent","qr_code_1","_ExploreBookQrComponent","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","_ExploreBookingModalComponent","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","_ExploreDeskInfoComponent","tries","_this$_element$native","parentElement","left","ExploreDeskInfoComponent_ng_template_1_Template","desk_tooltip_r2","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","_ExploreDesksService","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","can_book","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_ExploreDeviceInfoComponent","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","_loadUser","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","device_tooltip_r4","_ExploreIconComponent","ExploreIconComponent","text_color","explore_locker_bank_modal_component_1","in_use_count","_ExploreLockerBankInfoComponent","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","desk_tooltip_r3","_ExploreLockerBankModalComponent","_ExploreLockersService","ExploreLockersService","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r5","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","_ExploreMapControlComponent","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r3","ExploreMapViewComponent_div_8_div_3_Template","_ExploreMapViewComponent","ExploreMapViewComponent","_s","_desks","_zones","_maps","map_styles","positions","map_positions","map_actions","map_labels","_toggleZones","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","_ExploreParkingInfoComponent","ExploreParkingInfoComponent","ExploreParkingInfoComponent_div_8_Template","is_concierge","explore_parking_info_component_1","_ExploreParkingService","on_book","user_events","active_spaces","_plate_numbers","assigned","_updateParkingSpaces","_updateParkingSpaces2","_space$groups","_this3$_options$getVa","_this3$_options$getVa2","_space$zone3","_space$zone4","_space$zone","_space$zone2","_yield$_this3$_setBoo","active_level","option_r3","ExploreSearchComponent_ng_container_12_mat_option_1_Template","ExploreSearchComponent_ng_container_12_mat_option_3_Template","results","_ExploreSearchComponent","ExploreSearchComponent","search_str","right_size","search_results","setFilter","checkButtonPosition","_this$_input_el","_this$_input_el2","window_width","innerWidth","button_rect","_button_el","ExploreSearchService","closeSearch","showSearch","cancelClear","ExploreSearchComponent_mat_spinner_8_Template","ExploreSearchComponent_ng_container_12_Template","auto_r6","origin_r5","staff_fn_1","organisation_1","TYPES","typeIndex","is_role","_ExploreSearchService","_emergency_contacts","_filter","emergency_contacts","_role_assigned_contacts","contacts","_user_search","search_fn","_space_search","querySystems","_maps_people_search","_$properties4","_$properties5","_$properties6","_$properties7","_poi_metadata","_poi_list","can_search","_points_of_interest","poi_list","roled_contacts","mapspeople_items","points_of_interest","roles","role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent_ng_template_3_div_1_Template","ExploreSensorInfoComponent_ng_template_3_div_2_Template","ExploreSensorInfoComponent_ng_template_3_div_3_Template","shown_id","_ExploreSensorInfoComponent","ExploreSensorInfoComponent","ExploreSensorInfoComponent_ng_template_3_Template","stats_r2","feature_r3","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","_ExploreSpaceInfoComponent","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","space_tooltip_r4","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","explore_icon_component_1","free","pending","reserved","busy","unknown","_ExploreSpacesService","_panning","handleBookingsChange","handleStatusChange","handlePresenceChange","updateActions","_updateHoverElements","_bookSpace","openEventLinkModal","bookSpace","_updateIcons","_updateStatus2","_step5","_iterator5","_arr2","_ExploreStateService","_positions","_styles","_actions","_labels","_message","_options$disable_feat","_options$disable2","disable_features","_options$disable3","_options$disable_acti","disable_actions","_options$disable4","_options$disable_labe","disable_labels","_options$disable6","style_mappings","_options$disable5","_options$disable_styl","disable_styles","old_options","feature_map","actions_map","labels_map","exclude","styles_map","explore_sensor_info_component_1","map_canvas_component_1","getCenterPoint","_ExploreZonesService","_area_list","_count_key","_location","_label_location","_capacity","_draw","_points","_polygons$","bind_areas","bind_zone","parseData","zone_metadata","_zone$details","areas","area","hide_label","label_location","draw_polygon","area_count_key","geometry","area_id","filled","temperature","people_count","people_count_sum","queue_size","setLabels","polygons","_ExploreZoomControlComponent","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","_SharedExploreModule","OverlayModule","MatFormField","MatError","MatInput","NgControlStatusGroup","FormGroupDirective","FormControlName","DurationFieldComponent","UserSearchFieldComponent","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","_SetDatetimeModalComponent","SetDatetimeModalComponent_main_6_Template","_ActionFieldComponent","ActionFieldComponent","show_tooltip","performAction","zone_r1","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r3","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r4","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r7","time_r8","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","_BookingRulesFormComponent","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","render_fn","_CounterComponent","CounterComponent","step","focused","ctrl_key","shift_key","CounterComponent_span_5_Template","day_r1","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","_DateCalendarComponent","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","short","week_start","_DateFieldComponent","DateFieldComponent","from_date","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","_tooltip","_this$_tooltip2","DateFieldComponent_Conditional_2_Template","DateFieldComponent_Conditional_3_Template","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","calendar_picker_r3","ɵɵconditional","has_error","weekday_r1","selectDate","setHoveredDate","DateRangeCalendarComponent_button_14_div_1_Template","DateRangeCalendarComponent_button_14_div_2_Template","DateRangeCalendarComponent_button_14_div_3_Template","DateRangeCalendarComponent_button_14_div_4_Template","DateRangeCalendarComponent_button_14_div_8_Template","is_start","is_end","is_selected","end_after_start","_DateRangeCalendarComponent","DateRangeCalendarComponent","startChange","endChange","hovered_date","weekdays","month_days","_setWeekdays","_setMonthDays","previousMonth","nextMonth","DateRangeCalendarComponent_div_13_Template","DateRangeCalendarComponent_button_14_Template","setStartDate","setEndDate","start_date","_DateRangeFieldComponent","DateRangeFieldComponent","contentQueries","dirIndex","DateRangeFieldComponent_ng_template_14_Template","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","_DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","duration_field_component_1","user_list_field_component_1","user_search_field_component_1","item_list_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","booking_rules_form_component_1","place_user_pipe_1","date_range_field_component_1","date_range_calendar_component_1","_FormFieldsModule","UserListFieldComponent","MatSuffix","MatOption","MatAutocomplete","MatAutocompleteTrigger","MatAutocompleteOrigin","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","PlaceUserPipe","MatPrefix","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ImageListFieldComponent","ɵNgNoValidate","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","FormGroupName","i17","MatCheckbox","ItemListFieldComponent","user_r1","_HostSelectFieldComponent","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","image_viewer_component_1","url_r3","copyLink","viewImage","removeImage","retryUpload","ImageListFieldComponent_div_10_mat_progress_spinner_1_Template","ImageListFieldComponent_div_10_app_icon_2_Template","ImageListFieldComponent_div_10_div_3_Template","view_space","_ImageListFieldComponent","_clipboard","_uploads","upload_ids","uploads","ids","_list_el","addImageUrl","copy","chipInput","inputElement","resume","_uploadImages","uploadFileWithPermissions","_file_input","uploadImages","_updateUploadHistory2","Clipboard","ngAfterViewInit","ImageListFieldComponent_div_9_Template","ImageListFieldComponent_div_10_Template","ImageListFieldComponent_button_12_Template","ImageListFieldComponent_button_13_Template","ImageListFieldComponent_mat_chip_row_17_Template","addImage","chipList_r11","addChipItem","removeChipItem","item_r3","_ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","chipList_r5","USER_LIST","_PlaceUserPipe","formatted_value","_RecurrenceFieldComponent","RecurrenceFieldComponent","instance_of_month","old_value","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","_RecurrenceModalComponent","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","quill_1","_RichTextInputComponent","readonly","images_allowed","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_this$_editor_el","_this$_container_el","_editor_el","toolbarOptions","header","align","default","bounds","modules","toolbar","container","handlers","image","_embedImage","_embedAttachment","readOnly","on","off","getSelection","file_input","onchange","insertEmbed","insertText","setSelection","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","_SpaceListFieldComponent","multiday","NewSpaceSelectModalComponent","_this2$_dialog_ref","i18n_5","SpaceListFieldComponent_div_15_Template","bld_r1","type_r2","SupportTicketModalComponent_main_6_div_26_mat_option_5_Template","support_request_types","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_div_26_Template","SupportTicketModalComponent_main_6_mat_error_32_Template","SupportTicketModalComponent_main_6_div_33_Template","desc_error","allow_images","_SupportTicketModalComponent","issue_type","_submit","_this$support_request","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","extra_info_fn","_TimeFieldComponent","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","_UploadFileFieldComponent","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","_UploadListFieldComponent","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","removeUser","UserListFieldComponent_mat_chip_row_6_app_icon_4_Template","addUserFromEmail","search$","user_r7","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","ACCEPTED_FILE_TYPES","DENIED_FILE_TYPES","_UserListFieldComponent","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","auto_r10","chipList_r9","search_valid_email","blurInput","stopPropagation","empty_fn","_UserSearchFieldComponent","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_5_Template","UserSearchFieldComponent_mat_option_8_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","auto_r7","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","nextEventTime","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","MOCK_GUESTS","asset_count","tracking","bookings_data_1","MOCK_BOOKINGS","_$route_params","_$route_params2","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","randomStatus","rnd","PEOPLE","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subMinutes","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","MOCK_ZONES","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","createAreaManagementModule","MockAreaManagementModule","overview","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","updateLocations","ts_md5_1","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","registerSystem","System","control_1","createSystemModule","createBookingsModule","ContactTracing","contact_tracing_1","createContactTracingModule","AreaManagement","desks_1","LocationServices","Camera","camera_1","createCameraModule","Display","display_1","createDisplayModule","Microphone","microphone_1","createMicrophoneModule","Capture","capture_1","createCaptureModule","MeetingPush","meeting_1","createMeetingPushModule","VidConf","video_conference_1","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","locker_locations_1","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","generateMockBuilding","BLD_COUNT","generateMockLevel","nested","level2","LVL_COUNT","level_name","IGNORE_KEYS","_data$bookable","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","yaml","_OrganisationService","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","_region_settings","_building_settings","_updateSettingOverrides","_this$building","_this$buildings$","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","bld_list","Region","orgs","_this$_buildings$getV","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","querySettings","encryption_level","EncryptionLevel","None","settings_string","_loadLevels","_level_list","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_this5$region","_step6","_iterator6","_this6$building","_this6$region","buildingSettings","regionSettings","generateMockOrganisation","ORG_COUNT","building_utilities_1","default_module","card_type","item_r4","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","_CardInputFieldComponent","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","success_state_r3","transaction_id","_PaymentModalComponent","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","_PaymentsModule","STRIPE_MODULE","_PaymentsService","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","_NewSpaceSelectModalComponent","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","_SpaceDetailsComponent","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","feat_r4","_SpaceFiltersDisplayComponent","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","SpaceFiltersComponent_mat_form_field_13_mat_option_2_Template","SpaceFiltersComponent_mat_form_field_15_mat_option_5_Template","SpaceFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","SpaceFiltersComponent_mat_form_field_17_mat_option_3_Template","SpaceFiltersComponent_div_28_div_6_Template","SpaceFiltersComponent_div_28_div_7_Template","feature_display","SpaceFiltersComponent_section_31_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_31_ng_container_3_Template","_SpaceFiltersComponent","using_mapspeople","viewing_map","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_form_field_15_Template","SpaceFiltersComponent_mat_form_field_17_Template","SpaceFiltersComponent_div_26_Template","SpaceFiltersComponent_div_27_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_section_29_Template","SpaceFiltersComponent_section_31_Template","SpaceFiltersComponent_div_34_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","space_placeholder_r4","tmp_12_0","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","_SpaceListComponent","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","_SpaceLocationPinComponent","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_div_2_Template","SpaceSelectMapComponent_mat_form_field_1_mat_option_2_Template","_SpaceSelectMapComponent","SpaceSelectMapComponent","free_spaces","_split$map","_split$map2","SpaceSelectMapComponent_mat_form_field_1_Template","support_url","configurations","updateSpaceList","SPACE_LIST","ATTEMPT_COUNT","EMPTY_SPACE","_SpacePipe","_this$_org2","is_email","_this$_org","_this$_org3","showSystem","querySystemsWithEmails","in","generateSystemsFormFields","validateURL","installed_ui_devices","SPACE_LIST_REQUESTS","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","ctrl","isValidUrl","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","_SharedSpacesModule","SPACE_PIPE","_SpacesService","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","hour_r2","user_r5","offset_y","_FindAvailabilityModalComponent","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","_UserAvailabilityComponent","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","_NewUserModalComponent","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","_UserFormComponent","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","location_time","datetime","_this$work_overrides$","date_string","_pref$blocks","_this$work_preference","work_preference","in_hours_time","_UserPipe","UserPipe","generateMockUser","external","USER_COUNT","delegates","delegate_count","USER_EMAILS","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","_SharedUsersModule","day_r2","weekdays_enabled","initialiseDay","type_r7","block_r5","day_r6","setStartTime","setEndTime","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_ng_container_1_div_6_mat_option_5_Template","i_r8","addBlock","removeBlock","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_ng_container_1_div_6_Template","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_ng_container_1_Template","WFHSettingsModalComponent_main_4_ng_container_7_ng_container_1_Template","WFHSettingsModalComponent_main_4_mat_checkbox_4_Template","WFHSettingsModalComponent_main_4_ng_container_7_Template","WFHSettingsModalComponent_main_4_ng_template_8_Template","has_working_days","empty_state_r9","_WFHSettingsModalComponent","available_weekdays","_this$options$find","cleanupBlocks","fromTime","_saveChanges","new_settings","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_main_4_Template","WFHSettingsModalComponent_footer_5_Template","WFHSettingsModalComponent_ng_template_6_Template","load_state_r11"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-request.class.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk-settings-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/bookings/src/lib/parking.service.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/fixed-device-helpers.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/keep-alive.service.ts","./libs/common/src/lib/mapspeople.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/shorten.fn.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.service.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/desk-height-presets.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/image-viewer.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/limit-input.directive.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-canvas.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/map-renderer.component.ts","./libs/components/src/lib/maps-indoors.component.ts","./libs/components/src/lib/media-duration.pipe.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/simple-table.component.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/thumbnail.pipe.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/components/src/lib/work-location-tooltip.component.ts","./libs/components/src/lib/zone.pipe.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/group-event-card.component.ts","./libs/events/src/lib/group-event-details-modal.component.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-icon.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking-info.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/date-range-calendar.component.ts","./libs/form-fields/src/lib/date-range-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/place-user.pipe.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport { invalidateToken, isMock, setToken, token } from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({ declarations: [\n        AppComponent,\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    bootstrap: [AppComponent], imports: [BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        })], providers: [SpacePipe, provideHttpClient(withInterceptorsFromDi())] })\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id,\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <interactive-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </interactive-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <interactive-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </interactive-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            is_multiday\n                                ? (event.date | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date\n                                        | date: ', ' + time_format)) +\n                                  ' - ' +\n                                  (event.date_end | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date_end\n                                        | date: ', ' + time_format))\n                                : event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get is_multiday() {\n        return this.event.duration > 24 * 60;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    ParkingService,\n    checkinBooking,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    flatten,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    addMinutes,\n    differenceInMilliseconds,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, interval, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: [\n            'event',\n            'desk',\n            'parking',\n            'visitor',\n            'locker',\n            'group-event',\n        ],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true)),\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings',\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource,\n                                            ),\n                                            system: space,\n                                        }),\n                                ),\n                            ),\n                            catchError((_) => of([])),\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind(),\n                            );\n                        }\n                        return obs;\n                    }),\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1),\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase(),\n                        )) &&\n                    !_.linked_bookings?.find(\n                        (b) => b.booking_type === 'group-event',\n                    ),\n            );\n        }),\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([])),\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1),\n    );\n    /** List of calendar events for the selected date */\n    public readonly raw_events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = this.raw_events.pipe(\n        map((_) => _.filter((_) => !_.extension_data?.shared_event)),\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[]))),\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([]))),\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n                include_deleted: 'recurring',\n            }).pipe(catchError((_) => of([]))),\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n    /** List of calendar events for the selected date */\n    public readonly group_events = this.raw_events.pipe(\n        map((_) => _.filter((_) => _.extension_data?.shared_event)),\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (lkr) => lkr.id === i.locker_id,\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            // map_id: i.locker_id || locker.map_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1),\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n        this.group_events,\n    ]).pipe(\n        map(\n            ([\n                events,\n                visitors,\n                desks,\n                parking,\n                lockers,\n                group_events,\n            ]: any) => {\n                const filtered_events = events.filter(\n                    (ev) =>\n                        !desks.find(\n                            (bkn) => `${ev.meeting_id}` === `${bkn.id}`,\n                        ) &&\n                        ev.linked_bookings[0]?.booking_type !== 'group-event',\n                );\n                return [\n                    ...filtered_events,\n                    ...visitors,\n                    ...desks,\n                    ...parking,\n                    ...lockers,\n                    ...group_events,\n                ].sort((a, b) => a.date - b.date);\n            },\n        ),\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter((_) => {\n                if (\n                    this._deleted.includes(\n                        _.instance ? `${_.id}|${_.instance}` : _.id,\n                    )\n                )\n                    return false;\n                if (\n                    _.extension_data?.shared_event &&\n                    !filters?.shown_types?.includes('group-event')\n                ) {\n                    return false;\n                }\n                if (\n                    _ instanceof CalendarEvent &&\n                    !_.extension_data?.shared_event &&\n                    !filters?.shown_types?.includes('event')\n                ) {\n                    return false;\n                } else if (_ instanceof CalendarEvent) return true;\n                return filters?.shown_types?.includes((_ as any).booking_type);\n            }),\n        ),\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    private _ignore_cancel: string[] = [];\n    private _checkCancel = combineLatest([\n        current_user,\n        interval(60 * 1000).pipe(startWith(0)),\n    ]).pipe(\n        filter(([u]) => !!u),\n        map(async ([user]) => {\n            const is_home = user.location !== 'wfo';\n            const is_within_hours = user.in_hours;\n            const auto_release = this._settings.get('app.auto_release');\n            if (\n                auto_release &&\n                is_home &&\n                is_within_hours &&\n                (auto_release.time_after || auto_release.time_before) &&\n                auto_release.resources?.length\n            ) {\n                const time_before = Math.min(60, auto_release.time_before || 0);\n                for (const type of auto_release.resources) {\n                    const bookings = await queryBookings({\n                        period_start: getUnixTime(startOfMinute(Date.now())),\n                        period_end: getUnixTime(\n                            addMinutes(\n                                Date.now(),\n                                (auto_release.time_after || 5) + time_before,\n                            ),\n                        ),\n                        type,\n                    }).toPromise();\n                    const check_block =\n                        (auto_release.time_after || 0) + time_before;\n                    for (const booking of bookings) {\n                        if (\n                            this._ignore_cancel.includes(booking.id) ||\n                            booking.checked_in ||\n                            booking.rejected\n                        ) {\n                            continue;\n                        }\n                        this._dialog.closeAll();\n                        const diff = differenceInMinutes(\n                            addMinutes(\n                                booking.date,\n                                auto_release.time_after || 0,\n                            ),\n                            Date.now(),\n                        );\n                        if (diff > check_block || diff < 0) continue;\n                        const time = addMinutes(\n                            booking.date,\n                            auto_release.time_after || 0,\n                        );\n                        const close_after = differenceInMilliseconds(\n                            time.getTime() + 60 * 1000,\n                            Date.now(),\n                        );\n                        const wording =\n                            type === 'parking' ? 'reservation' : 'booking';\n                        const result = await openConfirmModal(\n                            {\n                                title: `Keep ${type} ${wording}`,\n                                content: `You have indicated you are not in the office. \n                                Your  ${wording} for \"<i>${\n                                    booking.asset_name || booking.title\n                                }</i>\" at ${format(\n                                    booking.date,\n                                    this._settings.time_format,\n                                )} will be cancelled at ${format(\n                                    time,\n                                    this._settings.time_format,\n                                )}.<br/><br/>\n                                Do you wish to keep this ${wording}?`,\n                                icon: { content: 'event_busy' },\n                                confirm_text: 'Keep',\n                                cancel_text: 'Dismiss',\n                                close_delay: close_after,\n                            },\n                            this._dialog,\n                        );\n                        if (result.reason !== 'done') {\n                            this._ignore_cancel.push(booking.id);\n                            continue;\n                        }\n                        result.loading('Checking in booking...');\n                        await checkinBooking(booking.id, true).toPromise();\n                        result.close();\n                    }\n                }\n            }\n        }),\n    );\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService,\n        private _dialog: MatDialog,\n        private _parking: ParkingService,\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api',\n                ),\n            ),\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll()),\n        );\n        this.subscription('wfh_checks', this._checkCancel.subscribe());\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]',\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(\n            item.instance ? `${item.id}|${item.instance}` : item.id,\n        );\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted),\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetStateService } from './asset-state.service';\nimport { AssetItem, AssetRequest } from './asset-request.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    randomInt,\n    randomString,\n} from '@placeos/common';\nimport { endOfDay, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                request\n                *ngFor=\"let request of asset_requests\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < request.deliver_at\"\n                [class.border-base-300]=\"end_time >= request.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Request for\n                                {{\n                                    request.deliver_at_time | date: 'mediumDate'\n                                }}\n                                at\n                                {{\n                                    request.deliver_at_time | date: time_format\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip(request)\"\n                                *ngIf=\"\n                                    end_time <= request.deliver_at ||\n                                    rejected_ids.includes(request.id) ||\n                                    request.conflict\n                                \"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Request\"\n                        (click)=\"duplicateRequest(request)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Request\"\n                        (click)=\"editRequest(request)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Request\"\n                        class=\"text-error\"\n                        (click)=\"removeRequest(request)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_request[request.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"\n                            show_request[request.id] = !show_request[request.id]\n                        \"\n                    >\n                        <app-icon>\n                            {{\n                                show_request[request.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_request[request.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of request.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Request Item\"\n                            class=\"text-error\"\n                            (click)=\"removeRequestItem(request, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editRequest()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    @Input() public rejected_ids: string[] = [];\n    public asset_requests: AssetRequest[] = [];\n    public disabled = false;\n    public show_request: Record<string, boolean> = {};\n    public err_tooltip(request: AssetRequest) {\n        return this.rejected_ids.includes(request.id) || request.conflict\n            ? 'Some of the items are not available for the selected date and time.'\n            : 'Delivery time is outside of the event time.\\nThis order will be ignored.';\n    }\n\n    private _onChange: (_: AssetRequest[]) => void;\n    private _onTouch: (_: AssetRequest[]) => void;\n    public selected: AssetRequest[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService,\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.asset_requests = (this.asset_requests || []).map(\n                (_) => new AssetRequest({ ..._, event: this.options as any }),\n            );\n            this._state.setOptions({\n                date: this.options.date,\n                duration: this.options.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetRequest[]) {\n        this.asset_requests = new_value;\n        if (this._onChange) this._onChange(this.asset_requests);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetRequest[]) {\n        this.asset_requests = (value || []).map(\n            (_) =>\n                new AssetRequest({\n                    ..._,\n                    event: this.options as any,\n                    state: _.state,\n                }),\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetRequest[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetRequest[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public editRequest(order: AssetRequest = new AssetRequest()) {\n        const order_list = this.asset_requests.filter((_) => _.id !== order.id);\n        const requested: Record<string, number> = {};\n        for (const order of order_list) {\n            for (const item of order.items) {\n                requested[item.id] =\n                    (requested[item.id] || 0) + item?.quantity || 0;\n            }\n        }\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n                requested,\n            },\n        });\n        ref.afterClosed().subscribe((items?: AssetItem[]) => {\n            const orders = this.asset_requests.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            for (const item of items) {\n                if ((item as any).assets?.length) {\n                    const list = [];\n                    item.item_ids = new Array(item.quantity)\n                        .fill(0)\n                        .map((_) => {\n                            let id = '';\n                            let count = 0;\n                            while (\n                                (!id || list.includes(id)) &&\n                                count < (item as any).assets.length\n                            ) {\n                                id = (item as any).assets[\n                                    randomInt((item as any).assets.length)\n                                ].id;\n                            }\n                            list.push(id);\n                            return id;\n                        });\n                }\n            }\n            const time = new Date(this.options.date);\n            const new_order = new AssetRequest({\n                ...order,\n                conflict: false,\n                _changed:\n                    order._changed ||\n                    order.items.find(\n                        (_) =>\n                            items.find((__) => __.id === _.id)?.quantity !==\n                            _.quantity,\n                    ),\n                items: items.map((_) => ({ ..._ })),\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            for (const item of new_order.items) {\n                const total = orders.reduce(\n                    (t, c) =>\n                        (t +=\n                            c.items.find((_) => _.id === item.id)?.quantity ||\n                            0),\n                    0,\n                );\n                if (total + item.quantity > (item as any).assets.length) {\n                    notifyError(\n                        `Not enough assets available to meet request [${item.name}].\n                        Another request for this asset has been made in this meeting.`,\n                        undefined,\n                        undefined,\n                        { duration: 5000 },\n                    );\n                    return;\n                }\n            }\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public removeRequest(request: AssetRequest) {\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== request.id,\n        );\n        this.setValue(updated_list);\n    }\n\n    public duplicateRequest(order: AssetRequest) {\n        const new_order = new AssetRequest({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.asset_requests, new_order]);\n    }\n\n    public removeRequestItem(order: AssetRequest, item: AssetItem) {\n        const new_order = new AssetRequest({\n            ...order,\n            items: order.items.filter((_) => _.id !== item.id),\n        });\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== order.id,\n        );\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public toggleFavourite(asset: AssetItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id),\n            );\n        }\n    }\n}\n","import { randomInt } from '@placeos/common';\n\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport type AssetStatus =\n    | 'in_storage'\n    | 'in_transit'\n    | 'delivered'\n    | 'returned'\n    | 'cancelled';\n\nexport interface AssetItem {\n    id: string; // ID of the group\n    name: string; // Name of the group\n    quantity: number; // Number of items from the group\n    item_ids: string[]; // List of physical item IDs\n}\n\nfunction deliverAtTime(request: AssetRequest) {\n    let date = request.event?.date || (request as any)._time;\n    if (request.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(request.deliver_time),\n            minutes: (request.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (request.deliver_day_offset > 0 || request.event?.all_day) {\n        date = addDays(startOfDay(date), request.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, request.deliver_offset).valueOf();\n}\n\nexport class AssetRequest {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly AssetItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: Booking | null;\n    public readonly deliver_at_time: number;\n    public readonly ref_id: string;\n    public readonly state: string;\n    public conflict = false;\n    public _changed = false;\n    public _booking: Booking | null;\n    /** Current status of the order */\n    private _status: AssetStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: AssetStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: any = {} as any) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.event_id = data.event_id || data.parent_id || '';\n        this.items =\n            data.items ||\n            data.asset_ids?.map((_) => ({ id: _, quantity: 1 })) ||\n            [];\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this._status =\n            data[`${this.event_id}_status`] ||\n            data.status ||\n            (data.extension_data || {})[`${this.event_id}_status`] ||\n            data.extension_data?.status ||\n            'in_storage';\n        this.event = data.event || data || null;\n        const booking = this.event?.linked_bookings?.find(\n            (_) => _.extension_data.request_id === this.id\n        );\n        this._booking = booking || data.booking || null;\n        this._changed = !!data._changed || !booking;\n        this.notes = data.notes || data.description || '';\n        this.deliver_time =\n            data.deliver_time || data.extension_data?.deliver_time || undefined;\n        this.deliver_offset =\n            data.deliver_offset || data.extension_data?.deliver_offset || 0;\n        this.deliver_day_offset =\n            data.deliver_day_offset ||\n            data.extension_data?.deliver_day_offset ||\n            0;\n        this.deliver_at_time = deliverAtTime(this);\n        this.conflict = !!data.conflict;\n        this.ref_id = `${this.deliver_at_time}|${this.items\n            .map((_) => `${_.id}:${_.quantity}`)\n            .join('|')}`;\n    }\n\n    public toJSON() {\n        const blob = { ...this } as any;\n        delete blob.event;\n        delete blob._changed;\n        delete blob._status;\n        delete blob._time;\n        delete blob.deliver_at_time;\n        delete blob.deliver_at;\n        blob.items = blob.items.map((_) => ({\n            id: _.id,\n            category_id: _.category_id,\n            quantity: _.quantity,\n            name: _.name,\n            item_ids: _.item_ids,\n        }));\n        return blob;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>\n                            {{\n                                (item.available != null\n                                    ? item.available\n                                    : item.assets?.length) || 0\n                            }}\n                            Available\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"\n                            (item.available != null\n                                ? item.available\n                                : item.assets?.length) || 1\n                        \"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.quantity) this.item.quantity = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.quantity) this.item.quantity = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    startOfDay,\n} from 'date-fns';\n\n@Component({\n    selector: 'asset-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"search_value | async\"\n                    (ngModelChange)=\"setSearch($event)\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (options | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset - 1\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(category | async) === item.id\"\n                (ngModelChange)=\"toggleCategory(item.id)\"\n            >\n                {{ item.name }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class AssetFiltersComponent extends AsyncHandler {\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly search_value = this._state.search;\n    public readonly category = this._state.category;\n    public readonly categories = this._state.category_list;\n    public readonly options = this._state.options;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getOptions().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.assets.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getOptions().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getOptions().date,\n                this._state.getOptions().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getOptions().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    public readonly setSearch = (s) => this._state.setSearch(s);\n    public readonly toggleCategory = (c) => this._state.toggleCategory(c);\n\n    constructor(\n        private _state: AssetStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.assets.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.options.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getOptions().duration || 60) -\n                        this._settings.get('app.assets.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getOptions();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.quantity || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{\n                                            asset.available ||\n                                                asset.assets?.length ||\n                                                '0'\n                                        }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Input() public requested: Record<string, number> = {};\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    private _requested_items = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n        this._requested_items,\n    ]).pipe(\n        map(([counts, assets, requested]) => {\n            for (const item of assets) {\n                item.quantity = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n                if (requested[item.id] !== undefined) {\n                    (item as any).available = Math.max(\n                        (item.assets?.length || 0) - requested[item.id],\n                        0\n                    );\n                }\n            }\n            return assets.filter(\n                (_: any) =>\n                    (_.available != null && _.available > 0) ||\n                    (_.available == null && _.assets?.length > 0)\n            );\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.quantity;\n            }\n            this.counts.next(counts);\n        }\n        if (changes.requested) {\n            this._requested_items.next(this.requested);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { AssetGroup } from '../asset.class';\nimport { AssetStateService } from '../asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <asset-filters\n                        class=\"h-full hidden sm:block\"\n                        [(at_time)]=\"exact_time\"\n                        [(offset)]=\"offset\"\n                        [(offset_day)]=\"offset_day\"\n                    ></asset-filters>\n                </div>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        [requested]=\"requested\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public requested = this._data.requested;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.quantity, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: AssetStateService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: AssetGroup[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n            requested: Record<string, number>;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._state.setOptions(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.assets.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.assets.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) {\n            item.quantity = count;\n            item.assets = this.displayed.assets;\n        }\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    queryAssetCategories,\n    queryAssets,\n    queryGroupAvailability,\n} from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _category = new BehaviorSubject<string[]>([]);\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly category = this._category.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                    rejected: false,\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly category_list = this._org.active_building.pipe(\n        switchMap((bld) => queryAssetCategories({ zone_id: bld.id })),\n        map((_) => _.sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this._category,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, category, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (!category.length || category.includes(_.category_id)) &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public toggleCategory(value: string) {\n        const categories = this._category.getValue();\n        if (categories.includes(value)) {\n            this._category.next(categories.filter((_) => _ !== value));\n        } else {\n            this._category.next([...categories, value]);\n        }\n    }\n\n    public getOptions() {\n        return this._options.getValue();\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    quantity?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { AssetRequest } from './asset-request.class';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, forkJoin, of } from 'rxjs';\nimport { addMinutes, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten, unique } from '@placeos/common';\nimport { AssetRequest } from './asset-request.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[]),\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>,\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory),\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[]),\n    );\n}\n\nconst groups_cache = new Map<string, AssetGroup[]>();\n\nexport function queryAssetGroupsExtended(query: any = {}) {\n    const q = toQueryString(query);\n    if (groups_cache.has(query.zones)) {\n        return of(groups_cache.get(query.zones));\n    }\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[]),\n        switchMap((list) =>\n            forkJoin(\n                list.map((group) =>\n                    queryAssets({\n                        limit: 200,\n                        ...query,\n                        type_id: group.id,\n                    }).pipe(\n                        map((assets) => ({ ...group, assets }) as AssetGroup),\n                    ),\n                ),\n            ),\n        ),\n        tap((_) => {\n            groups_cache.set(query.zones, _);\n            // Clear cache after 5 minutes\n            setTimeout(() => groups_cache.delete(query.zones), 5 * 60 * 1000);\n        }),\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup),\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[]),\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, '']),\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, '']),\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, ''])),\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, ''])),\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`,\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>,\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, '']),\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder),\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products),\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 2000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id,\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id,\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id,\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id,\n                ),\n            );\n            return product;\n        }),\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[],\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find(\n                        (booking) =>\n                            booking.asset_id === asset.id ||\n                            booking.asset_ids?.includes(asset.id),\n                    ),\n            ),\n        ),\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[],\n) {\n    query.type = 'asset-request';\n    return combineLatest([\n        queryAssetGroupsExtended(query),\n        queryBookings(query),\n    ]).pipe(\n        map(([products, bookings]) => {\n            bookings = bookings.filter(\n                (_) => _.status !== 'declined' && _.status !== 'cancelled',\n            );\n            return products.map((product) => ({\n                ...product,\n                assets: product.assets.filter(\n                    (asset) =>\n                        ignore?.includes(asset.id) ||\n                        !bookings.find(\n                            (booking) =>\n                                !ignore.includes(booking.id) &&\n                                (booking.asset_id === asset.id ||\n                                    booking.asset_ids?.includes(asset.id)),\n                        ),\n                ),\n            }));\n        }),\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id || _.asset_ids?.includes(id))\n            .map((request) => removeBooking(request.id).toPromise()),\n    );\n}\n\nexport function differenceBetweenAssetRequests(\n    new_assets: AssetRequest[],\n    old_assets: AssetRequest[],\n    reset_state: boolean = false,\n): string[] {\n    if ((!new_assets || new_assets?.length <= 0) && old_assets?.length)\n        return [];\n    if (!old_assets) return [];\n    const changed: string[] = [];\n    for (const request of new_assets) {\n        const match = old_assets.find((_) => _.id === request.id);\n        if (!match || match.ref_id !== request.ref_id) {\n            changed.push(request.id);\n        }\n    }\n    return changed;\n}\n\nexport async function validateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        all_day,\n        host,\n        location_name,\n        location_id,\n        zones,\n        reset_state,\n    }: {\n        date: number;\n        duration: number;\n        all_day: boolean;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n        reset_state?: boolean;\n    },\n    new_assets: AssetRequest[] = [],\n    force_create = false,\n): Promise<() => Promise<void>> {\n    const requests = await queryBookings({\n        period_start: getUnixTime(all_day ? startOfDay(date) : date),\n        period_end: getUnixTime(\n            all_day\n                ? endOfDay(addMinutes(date, duration))\n                : addMinutes(date, duration),\n        ),\n        type: 'asset-request',\n        zones: zones.join(','),\n    }).toPromise();\n    const bookings =\n        id && ical_uid\n            ? await queryBookings({\n                  period_start: getUnixTime(startOfDay(date)),\n                  period_end: getUnixTime(endOfDay(date)),\n                  type: 'asset-request',\n                  email: host,\n                  event_id: from_booking ? '' : id,\n                  booking_id: from_booking ? id : '',\n                  ical_uid,\n              }).toPromise()\n            : [];\n    const booking_list: [string, AssetRequest][] = bookings.map((_) => [\n        _.id,\n        new AssetRequest(_.extension_data.request),\n    ]);\n    new_assets?.forEach((_) => (_.conflict = false));\n    let changed = force_create\n        ? new_assets.map((_) => _.id)\n        : differenceBetweenAssetRequests(\n              new_assets,\n              booking_list.map(([_, r]) => r),\n              reset_state,\n          );\n    if (reset_state) {\n        const has_state = bookings.filter((_) => _.approved || _.rejected);\n        changed = unique([\n            ...changed,\n            ...has_state.map((_) => _.extension_data.request_id),\n        ]);\n    }\n    const unchanged = booking_list.filter(\n        ([_, request]) => !changed.includes(request.id),\n    );\n    const changed_requests = booking_list.filter(([_, { id }]) =>\n        changed.includes(id),\n    );\n    const changed_assets = new_assets.filter(({ id }) => changed.includes(id));\n    const filtered = requests.filter(\n        (req) =>\n            !req.rejected &&\n            (!bookings.find((b) => b.id === req.id) ||\n                unchanged.find(([id]) => req.event_id === id)),\n    );\n    let used_ids: string[] = flatten(filtered.map((_) => _.asset_ids));\n    for (const [_, request] of unchanged) {\n        used_ids = [\n            ...used_ids,\n            ...flatten(request.items.map((_) => _.item_ids)),\n        ];\n    }\n    const available_groups = await queryGroupAvailability(\n        {\n            period_start: getUnixTime(all_day ? startOfDay(date) : date),\n            period_end: getUnixTime(\n                all_day\n                    ? endOfDay(addMinutes(date, duration))\n                    : addMinutes(date, duration),\n            ),\n            type: 'asset-request',\n        },\n        bookings.map((_) => _.id),\n    ).toPromise();\n    const processed_requests = changed_assets.map((request) => {\n        // Handle duplicate asset ids\n        let asset_ids = flatten(\n            (request.items as any).map(({ id, item_ids, quantity }) => {\n                const assets = available_groups.find(\n                    (_) => _.id === id,\n                )?.assets;\n                if (!assets) return item_ids;\n                const list = [];\n                return new Array(quantity).fill(0).map((_, idx) => {\n                    const item =\n                        used_ids.includes(item_ids[idx]) ||\n                        list.includes(item_ids[idx]) ||\n                        !item_ids[idx]\n                            ? assets?.find(({ id }) => {\n                                  return (\n                                      !used_ids.includes(id) &&\n                                      !list.includes(id)\n                                  );\n                              })?.id\n                            : item_ids[idx];\n                    if (!item) {\n                        request.conflict = true;\n                        throw 'Unable to find available asset for request';\n                    }\n                    list.push(item);\n                    return item;\n                });\n            }),\n        );\n        // Grab any existing bookings for the asset for the parent event/booking\n        const booking = bookings.find((_) =>\n            _.asset_ids.find((id) =>\n                request.items?.find((i) => i.item_ids.includes(id)),\n            ),\n        );\n        used_ids = [...used_ids, ...asset_ids];\n        const asset_data: Partial<Booking> = {\n            type: 'asset-request',\n            booking_type: 'asset-request',\n            date,\n            duration,\n            all_day,\n            description: location_name,\n            user_email: host,\n            asset_id: asset_ids[0],\n            asset_ids,\n            asset_name: request.items.map((_) => _.name).join(', '),\n            title: request.items.map((_) => _.name).join(', '),\n            approved: !reset_state && booking?.approved && !request._changed,\n            rejected: !reset_state && booking?.rejected && !request._changed,\n            extension_data: {\n                parent_id: id,\n                request_id: request.id,\n                location_id,\n                request: new AssetRequest({ ...request, event: null }),\n            },\n            zones: zones || [],\n        };\n        if (from_booking) (asset_data as any).parent_id = id;\n        return createBooking(new Booking(asset_data), {\n            ical_uid,\n            event_id: from_booking ? '' : id,\n        });\n    });\n    return async () => {\n        await Promise.all(\n            changed_requests.map(([id]) => removeBooking(id).toPromise()),\n        );\n        await Promise.all(processed_requests.map((r) => r.toPromise()));\n    };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n\nexport * from './lib/parking.service';\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { map } from 'rxjs/operators';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ParkingService } from './parking.service';\nimport { GroupEventDetailsModalComponent } from '../../../events/src/lib/group-event-details-modal.component';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4 max-w-[33%]\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate flex-1 w-1/2\">\n                            {{\n                                raw_description ||\n                                    booking?.asset_name ||\n                                    booking?.asset_id\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"\n                        !for_current_user &&\n                        booking?.booking_type !== 'group-event'\n                    \"\n                >\n                    Associate\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"booking?.booking_type === 'group-event'\"\n                >\n                    Event\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"is_reserved_parking_space | async\"\n                >\n                    {{\n                        booking.status !== 'declined' ? 'RESERVED' : 'RELEASED'\n                    }}\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public raw_description = '';\n\n    public readonly is_reserved_parking_space =\n        this._parking.assigned_space.pipe(\n            map(\n                (space) =>\n                    this.booking.booking_type === 'parking' &&\n                    space &&\n                    this.booking.asset_id === space.id,\n            ),\n        );\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _parking: ParkingService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : '',\n            ),\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.booking) {\n            this.raw_description = this.removeHtmlTags(\n                this.booking?.description,\n            );\n        }\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format,\n        )} (${dur})`;\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const view_component: any =\n                this.booking.booking_type === 'group-event'\n                    ? GroupEventDetailsModalComponent\n                    : BookingDetailsModalComponent;\n            const data =\n                this.booking.booking_type === 'group-event'\n                    ? { booking: this.booking, concierge: false }\n                    : this.booking;\n            const ref: any = this._dialog.open(view_component, { data });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit?.subscribe(() => this.edit.emit()),\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove?.subscribe(() =>\n                    this.remove.emit(),\n                ),\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end?.subscribe(() => this.end.emit()),\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking, checkinBookingInstance } from './bookings.fn';\n\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [class.text-success-content]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress') &&\n                                booking.status !== 'declined'\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-12 w-12\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 py-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                        'rejected'\n                                                      ? 'close'\n                                                      : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true,\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_checked_in && desk_height_enabled\"\n                (click)=\"setDeskHeight()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon className=\"material-symbols-rounded\">\n                        height\n                    </app-icon>\n                    <div i18n>Set Desk Height</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public show_request = {};\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location:\n                this.booking?.extension_data?.map_id || this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.valid_assets.length;\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        const building = this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id),\n        );\n        if (this._settings.get('app.use_region')) {\n            const region = this._org.regions.find(\n                (region) =>\n                    (this.booking?.zones || []).includes(region.id) ||\n                    region.id === building?.parent_id,\n            );\n            if (region) return region;\n        }\n        return building;\n    }\n\n    public get can_edit() {\n        return (\n            this.booking.booking_type !== 'visitor' &&\n            this.booking.booking_type !== 'parking'\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`,\n        );\n    }\n\n    public get is_checked_in() {\n        return this.booking.checked_in;\n    }\n\n    public get desk_height_enabled() {\n        return (\n            this.booking?.type === 'desk' &&\n            this._settings.get('app.desks.height_enabled')\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n    ) {\n        console.log('Valid assets:', this.booking?.valid_assets);\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format,\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        const bkn = this.booking;\n        const promise = (\n            bkn.instance\n                ? checkinBookingInstance(\n                      bkn.id,\n                      bkn.instance,\n                      !this.booking.checked_in,\n                  )\n                : checkinBooking(this.booking.id, !this.booking.checked_in)\n        )\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        await promise;\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`,\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id,\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                  ? 'rejected'\n                  : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n\n    public setDeskHeight() {\n        this._dialog.open(DeskSettingsModalComponent, {\n            data: { id: this.booking.asset_ids[0] || this.booking.asset_id },\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { bookedResourceList, queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n    /** Whether to group bookings */\n    disable_date?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}',\n        ),\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1),\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1),\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise(),\n                ),\n            ),\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0,\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`),\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return bookedResourceList({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    (this._settings.get('app.use_region')\n                        ? this._org.region?.id\n                        : this._org.building?.id) ||\n                    this._org.organisation.id,\n            }).pipe(\n                map(\n                    (booked_ids) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration,\n                        ).valueOf();\n                        this._resource_use = {};\n                        for (const id of booked_ids) {\n                            this._resource_use[id] = ' ';\n                        }\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[asset.zone?.id] ||\n                                    restrictions[asset.zone?.parent_id] ||\n                                    restrictions[this._org.building.id] ||\n                                    [],\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp),\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_),\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !booked_ids.includes(asset.id)\n                            );\n                        });\n                        console.log('Resources:', resources, available);\n                        return available;\n                    },\n                    catchError((_) => of([])),\n                ),\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id),\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        }),\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        }),\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, ''],\n            ),\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            }),\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService,\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            }),\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1,\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, ''],\n            ),\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            }),\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {}),\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}',\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, ''],\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}',\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog,\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form,\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                {\n                    ...booking,\n                    ...value,\n                    user_email:\n                        value.user?.email ||\n                        value.user_email ||\n                        currentUser()?.email,\n                },\n                this._options.getValue().type,\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const { event_id, parent_id } = value;\n        delete value.event_id;\n        delete value.parent_id;\n        const resources = value.resources || [];\n        const zones = resources[0]?.zone\n            ? unique([\n                  this._org.organisation.id,\n                  this._org.region?.id,\n                  resources[0]?.zone?.parent_id,\n                  resources[0]?.zone?.id,\n              ])\n            : [this._org.organisation.id, this._org.region?.id];\n        const q: any = event_id\n            ? { ical_uid: value.ical_uid, event_id: event_id }\n            : parent_id\n              ? { booking_id: parent_id }\n              : {};\n        if (booking.instance && !value.update_master) {\n            q.instance = true;\n            q.start_time = booking.booking_start;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name || value.user_name,\n                user_email: value.user?.email || value.user_email,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    assets: value.assets.map((_) => _.toJSON()),\n                    group: value.group,\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n                zones: unique([...zones, ...(value.zones || [])]).filter(\n                    (_) => _,\n                ),\n            }),\n            q,\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: unique([...zones, ...(value.zones || [])]).filter(\n                        (_) => _,\n                    ),\n                },\n                value.assets,\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time',\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result),\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email,\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id,\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length,\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email',\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type,\n                ),\n            ),\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd',\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: (asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          this._org.region?.id,\n                          asset?.zone?.parent_id,\n                          asset?.zone?.id,\n                      ])\n                    : [this._org.organisation.id, this._org.region?.id]\n                ).filter((_) => _),\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`,\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType,\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        if (type === 'group-event') return true;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        let active_bookings = bookings.filter(\n            (_) =>\n                _.status !== 'declined' &&\n                _.status !== 'cancelled' &&\n                !_.rejected,\n        );\n        if (\n            active_bookings.find((_) => _.asset_id === asset_id && id !== _.id)\n        ) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            active_bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.id !== id,\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((locker) => ({\n                          ...locker,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || [],\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id,\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata))),\n                    ),\n                ),\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number,\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id,\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id),\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item),\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item,\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'group-event'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n    guests?: User[];\n}\n\nexport enum RecurrenceDays {\n    SUNDAY = 1 << 6,\n    MONDAY = 1 << 5,\n    TUESDAY = 1 << 4,\n    WEDNESDAY = 1 << 3,\n    THURSDAY = 1 << 2,\n    FRIDAY = 1 << 1,\n    SATURDAY = 1 << 0,\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    date: number;\n    duration: number;\n    date_end: number;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\nexport enum WeekOfMonth {\n    First = 1,\n    Second = 2,\n    Third = 3,\n    Fourth = 4,\n    Fifth = 5,\n    Last = -1,\n    SecondLast = -2,\n    ThirdLast = -3,\n    FourthLast = -4,\n    FifthLast = -5,\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** List of identifier of the physical assets assocated with the booking */\n    public readonly asset_ids: string[];\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** End time of booking in ms */\n    public readonly date_end: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** List of URLs for associated booking images */\n    public readonly images: string[];\n    /** List of user defined tags associated with the booking */\n    public readonly tags: string[];\n\n    public readonly permission: 'PRIVATE' | 'OPEN' | 'PUBLIC';\n    /** Default type */\n    public readonly access: boolean;\n    /** Whether asset has been inducted */\n    public readonly induction?: 'tentative' | 'accepted' | 'declined';\n    /** Status of the booking */\n    public readonly status:\n        | 'declined'\n        | 'cancelled'\n        | 'approved'\n        | 'tentative'\n        | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n    /** Time  */\n    public readonly checked_in_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public readonly process_state: string;\n    /** Unix epoch for the start time of the reccurence instance in seconds */\n    public readonly instance?: number;\n    /** Type of recurrence instance */\n    public readonly recurrence_type: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Bit flags for the recurrence days of the week */\n    public readonly recurrence_days?: number;\n    /** Week of the month to recur on */\n    public readonly recurrence_nth_of_month?: WeekOfMonth;\n    /** How often to recur */\n    public readonly recurrence_interval?: number;\n    /** Unix epoch for the end time of the recurrence in seconds */\n    public readonly recurrence_end?: number;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    _valid_asset_cache = [];\n    _valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._valid_cache_expiry > Date.now() &&\n            this._valid_asset_cache.length\n        ) {\n            return this._valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._valid_asset_cache = (this.extension_data.assets || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id,\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                          ? 'rejected'\n                          : 'pending';\n                }\n                return request;\n            });\n        this._valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._valid_asset_cache;\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_ids = data.asset_ids || [data.asset_id].filter((_) => _);\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.description ||\n            data.asset_id ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                }),\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60),\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000,\n                ),\n            ) ||\n            60;\n        this.date_end =\n            this.booking_end * 1000 || this.date + this.duration * 60 * 1000;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.permission = (data.permission || 'PRIVATE').toUpperCase() as any;\n        this.attendees = data.attendees || data.guests || data.members || [];\n        this.tags = data.tags || data.extension_data?.tags || [];\n        this.images = data.images || [];\n        this.all_day = data.all_day || this.duration >= 24 * 60;\n        this.induction = data.induction || undefined;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(\n                24 * 60 - 1,\n                this.duration - ((this.duration % 24) * 60 === 0 ? 1 : 0),\n            );\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration - 1).valueOf(),\n            ).getTime();\n        }\n        this.checked_out_at = data.checked_out_at;\n        this.checked_in_at = data.checked_in_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.images = data.images || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected || this.deleted\n                  ? 'declined'\n                  : this.approved\n                    ? 'approved'\n                    : 'tentative';\n        this.process_state = data.process_state || 'pending';\n\n        this.recurrence_type = data.recurrence_type || 'none';\n        this.recurrence_days = data.recurrence_days;\n        this.recurrence_nth_of_month = data.recurrence_nth_of_month;\n        this.recurrence_interval = data.recurrence_interval;\n        this.recurrence_end = data.recurrence_end;\n        this.instance = data.instance;\n\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) =>\n                new AssetRequest({ ...i, event: this, date: this.date } as any),\n        );\n        this.extension_data.tags = data.tags || [];\n        if (this.extension_data.request) {\n            this.extension_data.request = new AssetRequest({\n                ...this.extension_data.request,\n                event: this,\n                date: this.date,\n            } as any);\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        data.extension_data.assets = data.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null }),\n        );\n        if (data.extension_data.request) {\n            data.extension_data.request = new AssetRequest({\n                ...data.extension_data.request,\n                event: null,\n            });\n        }\n        if (!data.parent_id) delete data.parent_id;\n        data.zones = data.zones.filter((_) => _);\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.extension_data?.location || this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { current_user, currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false },\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        event_id: new FormControl(booking.event_id || ''),\n        ical_uid: new FormControl(booking.extension_data.ical_uid || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        date_end: new FormControl(booking.date_end),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || '',\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        featured: new FormControl(booking.extension_data?.featured || false),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        user_name: new FormControl(booking.user_name),\n        timezone: new FormControl(booking.timezone || ''),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource,\n        ),\n        location: new FormControl(booking.extension_data.location || ''),\n        attendance_type: new FormControl(\n            booking.extension_data.attendance_type || 'ANY',\n        ),\n        phone: new FormControl(booking.extension_data.phone || ''),\n        permission: new FormControl(booking.permission || 'PRIVATE'),\n        images: new FormControl(booking.images || []),\n        tags: new FormControl(booking.tags || []),\n        plate_number: new FormControl(\n            booking.extension_data.plate_number || '',\n        ),\n        recurrence_type: new FormControl(booking.recurrence_type || 'none'),\n        recurrence_days: new FormControl(booking.recurrence_days),\n        recurrence_nth_of_month: new FormControl(\n            booking.recurrence_nth_of_month,\n        ),\n        recurrence_interval: new FormControl(booking.recurrence_interval),\n        recurrence_end: new FormControl(booking.recurrence_end),\n        notes: new FormControl(booking.extension_data.notes || ''),\n        update_master: new FormControl(false),\n        self_registered: new FormControl(false),\n    });\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.user.valueChanges.subscribe((user) => {\n        if (!user) return;\n        form.patchValue(\n            {\n                user: user,\n                user_id: user?.id,\n                user_email: user?.email,\n                user_name: user?.name,\n            },\n            { emitEvent: false },\n        );\n    });\n    current_user.subscribe((user) => {\n        if (!user) return;\n        form.patchValue(\n            {\n                booked_by: user,\n                booked_by_id: user?.id,\n                booked_by_email: user?.email,\n                name: user?.name,\n            },\n            { emitEvent: false },\n        );\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0]),\n    );\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' },\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false },\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date,\n                    ),\n                },\n                { emitEvent: false },\n            );\n        }\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false },\n            );\n        }\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = [],\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y),\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response (can be set to apply to only recurring bookings) */\n    include_deleted?: 'all' | 'recurring';\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n    /** Whether to also query rejected bookings */\n    rejected?: boolean;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * List resources that are booked within the given parameters\n * @param q Parameters to pass to the API request\n */\nexport function bookedResourceList(\n    q: BookingsQueryParams,\n): Observable<string[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}/booked${query ? '?' + query : ''}`).pipe(\n        map((list) => list as string[]),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams,\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item)),\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string },\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item)),\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch',\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data,\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Update the induction status of an existing booking\n * @param id ID of the booking to update\n * @param status New induction status of the booking\n */\nexport function updateBookingInductionStatus(\n    id: string,\n    status: 'tentative' | 'accepted' | 'declined',\n) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/update_induction?induction=${encodeURIComponent(status)}`,\n        {},\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Update instance of an existing booking series\n * @param id ID of the booking to update\n * @param start_time Unix seconds of the start time of the booking\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBookingInstance(\n    id: string,\n    start_time: number,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch',\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/instance/${start_time}`,\n        data,\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: {\n        booking_id?: string;\n        event_id?: string;\n        ical_uid?: string;\n        instance?: number;\n    },\n) => {\n    const id = data.id;\n    delete (data as any).id;\n    const instance = q?.instance;\n    if (q) delete (q as any).instance;\n    return id\n        ? instance\n            ? updateBookingInstance(id, data.instance, data)\n            : updateBooking(id, data)\n        : createBooking(data, q);\n};\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n */\nexport function removeBooking(id: string, q: any = {}) {\n    if (q.instance) {\n        return removeBookingInstance(id, q.start_time);\n    }\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Remove instance of an existing booking series\n * @param id ID of the booking to update\n * @param start_time Unix seconds of the start time of the booking\n */\nexport function removeBookingInstance(id: string, start_time: number) {\n    return del(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/instance/${start_time}`,\n        {\n            response_type: 'void',\n        },\n    );\n}\n\n/**\n * Set the approval state of the booking to `approved`\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking instance to `approved`\n * @param id ID of the booking to reject\n * @param start_time Start time of the booking instance\n */\nexport function approveBookingInstance(id: string, start_time: number) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to `rejected`\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking instance to `rejected`\n * @param id ID of the booking to reject\n * @param start_time Start time of the booking instance\n */\nexport function rejectBookingInstance(id: string, start_time: number) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        '',\n    ).pipe(map((item) => new Booking(item)));\n}\n\nexport function setBookingState(\n    id: string,\n    state: string,\n    utm_source?: string,\n) {\n    const query = toQueryString({ state, utm_source });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/update_state${\n            query ? '?' + query : ''\n        }`,\n        {},\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * List the guests in a booking\n * @param id ID of the booking to reject\n */\nexport function queryBookingGuests(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/guests`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a guest in a booking\n * @param id ID of the booking to reject\n * @param guest_id ID of the guest to check in\n */\nexport function checkinBookingGuest(\n    id: string,\n    guest_id: string,\n    state: boolean = true,\n) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/guests/${encodeURIComponent(guest_id)}/check_in?state=${state}`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Add a guest to a booking\n * @param id ID of the booking\n * @param guest Guest to add to the booking\n */\nexport function bookingAddGuest(id: string, guest: GuestUser) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/attendee`,\n        guest,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Remove an attendee from a booking\n * @param id ID of the booking\n * @param guest Guest to remove from the booking\n */\nexport function bookingRemoveGuest(id: string, guest: GuestUser) {\n    return del(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/attendee/${encodeURIComponent(guest.email)}`,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        '',\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        }),\n    );\n}\n\n/**\n * Set the checkin state of a booking instance\n * @param id ID of the booking to grab\n * @param start_time Start time of the booking instance\n * @param state New checkin state of the booking instance\n */\nexport function checkinBookingInstance(\n    id: string,\n    start_time: number,\n    state: boolean,\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in/${start_time}?${query}`,\n        '',\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        }),\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean,\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n    ignore_period: [number, number] = [0, 0],\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) =>\n                            b.asset_id === id && (!ignore || ignore !== b.id),\n                    ),\n            ),\n        ),\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0,\n        ),\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource,\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    await Promise.all(\n        event.linked_bookings\n            .filter((_) => _.booking_type === type)\n            .map((_) => removeBooking(_.id).toPromise()),\n    );\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) => {\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    item.items?.find((i) => i.item_ids.includes(id)),\n                ),\n            );\n            return createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    approved: booking?.approved && !item._changed,\n                    rejected: booking?.rejected && !item._changed,\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id },\n            ).toPromise();\n        }),\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedEventsModule } from 'libs/events/src/lib/events.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\nimport { SharedUsersModule } from 'libs/users/src/lib/users.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n    DeskSettingsModalComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n        SharedSpacesModule,\n        SharedEventsModule,\n        SharedUsersModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\nimport { Region } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking'),\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || ''),\n            );\n        }),\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public readonly setRegion = (r) => (this._org.region = r);\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90,\n            ),\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this._state.options.subscribe(({ zone_id }) => {\n                const level = this._org.levelWithID([zone_id]);\n                if (level) this.level = level;\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        },\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) {\n            this.displayed = null;\n            setTimeout(() => this._dialog_ref.close([item]), 50);\n        }\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id),\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService, notifyError, notifySuccess } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'desk-settings-modal',\n    template: `\n        <div\n            class=\"relative p-4 bg-base-100 rounded shadow w-[20rem]\"\n            *ngIf=\"!edit_presets; else desk_height_tooltip\"\n        >\n            <div class=\"text-lg\" i18n>Desk Height</div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Set your desk height for the best experience\n            </div>\n            <div class=\"flex flex-col mt-2 mb-4\">\n                <label>Presets</label>\n                <div class=\"flex items-center space-x-2 pb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript flex-1 w-1/2\"\n                    >\n                        <mat-select\n                            placeholder=\"No selected preset\"\n                            [(ngModel)]=\"preset\"\n                            (ngModelChange)=\"setPreset($event)\"\n                        >\n                            <mat-option value=\"\">None</mat-option>\n                            <mat-option value=\"standing\">Standing</mat-option>\n                            <mat-option value=\"sitting\">Seated</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"edit_presets = true\"\n                        class=\"rounded h-12 w-12 bg-secondary text-secondary-content\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                </div>\n                <label>Current Height</label>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-slider\n                        min=\"60\"\n                        max=\"120\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"height\"\n                            (ngModelChange)=\"updatePreset(height)\"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right\">\n                        {{ height.toFixed(1) }}cm\n                    </div>\n                </div>\n            </div>\n            <button btn matRipple (click)=\"setDeskHeight()\" class=\"w-full\">\n                Apply Settings\n            </button>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 right-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <ng-template #desk_height_tooltip>\n            <desk-height-presets\n                [show_close]=\"true\"\n                (close)=\"edit_presets = false\"\n            ></desk-height-presets>\n        </ng-template>\n    `,\n    styles: [],\n})\nexport class DeskSettingsModalComponent {\n    public readonly desk_id = this._data.id;\n    public edit_presets = false;\n    public preset: string;\n    public height = 71;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { id: string },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<DeskSettingsModalComponent>,\n    ) {}\n\n    public ngOnInit() {\n        const sitting_height = this._settings.get('desk_sitting_height');\n        const standing_height = this._settings.get('desk_standing_height');\n        if (!sitting_height && !standing_height) {\n            this.edit_presets = true;\n        }\n        const last_height = parseInt(\n            localStorage.getItem('PLACEOS.last_desk_height'),\n            10,\n        );\n        this.height = last_height || sitting_height || 71;\n        if (this.height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (this.height === standing_height) {\n            this.preset = 'standing';\n        }\n    }\n\n    public updatePreset(new_height: number) {\n        const sitting_height = this._settings.get('desk_sitting_height') || 71;\n        const standing_height =\n            this._settings.get('desk_standing_height') || 102;\n        if (new_height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (new_height === standing_height) {\n            this.preset = 'standing';\n        } else {\n            this.preset = null;\n        }\n    }\n\n    public setPreset(value: string) {\n        switch (value) {\n            case 'standing':\n                this.height = this._settings.get('desk_standing_height') || 102;\n                break;\n            case 'sitting':\n                this.height = this._settings.get('desk_sitting_height') || 71;\n                break;\n            default:\n                this.height = 70;\n                break;\n        }\n    }\n\n    public async setDeskHeight() {\n        const sys_id = this._org.binding('desks');\n        localStorage.setItem('PLACEOS.last_desk_height', `${this.height}`);\n        if (!sys_id) return this._dialog_ref.close();\n        const module = getModule(sys_id, 'DeskControl');\n        await module\n            .execute('set_desk_height', [this.desk_id, this.height])\n            .catch((_) => {\n                notifyError('Error setting desk height.' + _);\n                throw _;\n            });\n        notifySuccess('Successfully set desk height');\n        this._dialog_ref.close();\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <div\n                        *ngIf=\"can_book_for_others\"\n                        class=\"w-full flex flex-col\"\n                    >\n                        <label for=\"host\">\n                            {{ 'FORM.HOST' | translate }}<span>*</span>\n                        </label>\n                        <a-user-search-field\n                            name=\"host\"\n                            class=\"mb-4\"\n                            formControlName=\"user\"\n                        ></a-user-search-field>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.bookings.can_book_for_others');\n    }\n\n    public get building() {\n        return this._settings.get('app.use_region')\n            ? this._org.region\n            : this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_)),\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_)),\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s),\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`,\n            );\n        }\n        if (!this.form.value.user_email || !this.can_book_for_others) {\n            this.form.patchValue({ user: currentUser() });\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.width]=\"columns * 2.5 + 'rem'\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id),\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id,\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        }),\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService,\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking'),\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || ''),\n            );\n        }),\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90,\n            ),\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <interactive-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></interactive-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"max-w-full overflow-auto flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        },\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id),\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\nimport { addDays, endOfDay } from 'date-fns';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [to]=\"end_date\"\n                    >\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"false\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id,\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        }),\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id,\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking'),\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        }),\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n    public readonly setRegion = (r) => (this._org.region = r);\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.parking.available_period') || 7,\n            ),\n        );\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService,\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    space.level?.display_name ||\n                                    space.level?.name ||\n                                    space.zone?.display_name ||\n                                    space.zone?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity || 1 }} {\n                            (space.capacity < 1 ? 2 : space.capacity || 1),\n                            plural, =1 { Person } other { People } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div>Change</div>\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">close</app-icon>\n                                <div>Remove</div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon class=\"text-2xl\">search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    @Input() public disable_date = false;\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: {\n                    capacity: this.room_size,\n                    disable_date: this.disable_date,\n                },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    flatten,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, forkJoin, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryBookings } from './bookings.fn';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n}\n\nexport interface ParkingUser {\n    id: string;\n    name: string;\n    email: string;\n    car_model: string;\n    car_colour: string;\n    plate_number: string;\n    phone: string;\n    notes: string;\n    deny: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ParkingService extends AsyncHandler {\n    private _loading = new BehaviorSubject<string[]>([]);\n\n    public readonly loading =\n        this._loading.asObservable(); /** List of available parking levels for the current building */\n    public levels = this._org.level_list.pipe(\n        map((_) => {\n            if (!this._settings.get('app.use_region')) {\n                const blds = this._org.buildingsForRegion();\n                const bld_ids = blds.map((bld) => bld.id);\n                const list = _.filter(\n                    (lvl) =>\n                        bld_ids.includes(lvl.parent_id) &&\n                        lvl.tags.includes('parking'),\n                );\n                list.map((lvl) => ({\n                    ...lvl,\n                    display_name: `${\n                        blds.find((_) => _.id === lvl.parent_id)?.display_name\n                    } - ${lvl.display_name}`,\n                }));\n                return list;\n            }\n            return _.filter(\n                (lvl) =>\n                    lvl.parent_id === this._org.building.id &&\n                    lvl.tags.includes('parking'),\n            );\n        }),\n    );\n    /** List of parking spaces for the current building/level */\n    public spaces = combineLatest([this.levels]).pipe(\n        filter(([lvls]) => !!lvls[0]?.id),\n        switchMap(([levels]) => {\n            this._loading.next([...this._loading.getValue(), 'spaces']);\n            return forkJoin(\n                levels.map((lvl) =>\n                    showMetadata(lvl.id, 'parking-spaces').pipe(\n                        map(\n                            (d) =>\n                                (d.details instanceof Array\n                                    ? d.details\n                                    : []\n                                ).map((s) => ({\n                                    ...s,\n                                    zone_id: lvl.id,\n                                })) as ParkingSpace[],\n                        ),\n                    ),\n                ),\n            );\n        }),\n        map((list) => flatten<ParkingSpace>(list)),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'spaces'),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    /** List of parking spaces for the current building/level */\n    public users = combineLatest([this._org.active_building]).pipe(\n        filter(([bld]) => !!bld?.id),\n        switchMap(([bld]) => {\n            this._loading.next([...this._loading.getValue(), 'users']);\n            return showMetadata(bld.id, 'parking-users');\n        }),\n        map(\n            (metadata) =>\n                (metadata.details instanceof Array\n                    ? metadata.details\n                    : []) as ParkingUser[],\n        ),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'users'),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    public readonly assigned_space = this.spaces.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.assigned_to?.toLowerCase() ===\n                    currentUser().email?.toLowerCase(),\n            ),\n        ),\n    );\n\n    public readonly user_details = this.users.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.email?.toLowerCase() ===\n                    currentUser().email?.toLowerCase(),\n            ),\n        ),\n    );\n\n    public readonly deny_parking_access = this.user_details.pipe(\n        map((details) => !!details?.deny),\n    );\n\n    public readonly booked_space = combineLatest([\n        this._org.active_building,\n        this.spaces,\n    ]).pipe(\n        map(([_, spaces]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(Date.now())),\n                period_end: getUnixTime(endOfDay(Date.now())),\n                type: 'parking',\n            }).pipe(\n                catchError(() => of([])),\n                map((booking_list) =>\n                    booking_list\n                        .map((booking) =>\n                            spaces.find(\n                                (space) => space.id === booking.asset_id,\n                            ),\n                        )\n                        .filter((space) => !!space),\n                ),\n            ),\n        ),\n        map((_) => _[0]),\n        shareReplay(1),\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n        this.subscription('spaces', this.assigned_space.subscribe());\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    randomString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\nimport { CateringOrder } from './catering-order.class';\nimport { Organisation, OrganisationService } from '@placeos/organisation';\nimport { endOfDay, format, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                order\n                *ngFor=\"let order of orders\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < order.deliver_at\"\n                [class.border-base-300]=\"end_time >= order.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Order for\n                                {{ order.deliver_at_time | date: 'mediumDate' }}\n                                at\n                                {{ order.deliver_at_time | date: time_format }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < order.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ order.item_count }} item(s) for\n                            {{\n                                order.total_cost / 100 | currency: currency_code\n                            }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"duplicateOrder(order)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Order\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"editOrder(order)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Order\"\n                        class=\"text-error\"\n                        *ngIf=\"!disabled\"\n                        (click)=\"removeOrder(order)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_order[order.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"show_order[order.id] = !show_order[order.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_order[order.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_order[order.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of order.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                            <span\n                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                *ngIf=\"item.option_list?.length\"\n                                [matTooltip]=\"optionList(item)\"\n                            >\n                                {{ item.option_list?.length || '0' }} option(s)\n                            </span>\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <div\n                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                        >\n                            {{\n                                item.unit_price_with_options / 100\n                                    | currency: currency_code\n                            }}\n                            ea\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Order Item\"\n                            class=\"text-error\"\n                            *ngIf=\"!disabled\"\n                            (click)=\"removeOrderItem(order, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editOrder()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Order</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public orders: CateringOrder[] = [];\n    public show_order: Record<string, boolean> = {};\n    public disabled = false;\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: CateringOrder[]) => void;\n    private _onTouch: (_: CateringOrder[]) => void;\n    public selected: CateringOrder[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    public get currency_code() {\n        return this._org.building?.currency || 'USD';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringOrder[]) {\n        this.orders = new_value;\n        if (this._onChange) this._onChange(this.orders);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.orders = (this.orders || []).map(\n                (_) => new CateringOrder({ ..._, event: this.options as any })\n            );\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringOrder[]) {\n        this.orders = (value || []).map(\n            (_) => new CateringOrder({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringOrder[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringOrder[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeOrder(order: CateringItem) {\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        this.setValue(updated_list);\n    }\n\n    public duplicateOrder(order: CateringOrder) {\n        const new_order = new CateringOrder({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.orders, new_order]);\n    }\n\n    public removeOrderItem(order: CateringOrder, item: CateringItem) {\n        const new_order = new CateringOrder({\n            ...order,\n            items: order.items.filter((_) => _.custom_id !== item.custom_id),\n        });\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public editOrder(order: CateringOrder = new CateringOrder()) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            const orders = this.orders.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            const time = new Date(this.options.date);\n            for (const item of items) {\n                (item as any).options = [\n                    ...item.options.map((_) => ({ ..._ })),\n                ];\n                for (const option of item.options) {\n                    const opt = item.option_list.find(\n                        (_) => _.id === option.id\n                    );\n                    option.active = !!opt;\n                }\n            }\n            const new_order = new CateringOrder({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\nimport { CateringItem } from './catering-item.class';\nimport { unique } from '@placeos/common';\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <simple-table\n            class=\"w-full min-w-[32rem] block text-sm\"\n            [data]=\"menu\"\n            [columns]=\"[\n                {\n                    key: 'active',\n                    name: ' ',\n                    content: active_template,\n                    size: '3.5rem',\n                    sortable: false\n                },\n                { key: 'name', name: 'Name' },\n                { key: 'category', name: 'Category' },\n                {\n                    key: 'unit_price',\n                    name: 'Price',\n                    content: price_template,\n                    size: '6rem'\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: actions_template,\n                    size: '6.5rem',\n                    sortable: false\n                }\n            ]\"\n            [filter]=\"filters?.search\"\n            [show_children]=\"show_children\"\n            [child_template]=\"child_template\"\n            [sortable]=\"true\"\n            empty_message=\"No Items in Menu\"\n        ></simple-table>\n        <ng-template #active_template let-row=\"row\">\n            <mat-checkbox\n                class=\"mx-auto\"\n                matTooltip=\"Allow Ordering Item for this zone\"\n                matTooltipPosition=\"right\"\n                [ngModel]=\"isEnabled(row)\"\n                (ngModelChange)=\"setEnabled(row, $event)\"\n            ></mat-checkbox>\n        </ng-template>\n        <ng-template #price_template let-data=\"data\">\n            <div\n                class=\"px-2 py-1 font-mono text-xs flex items-center mx-auto bg-secondary text-secondary-content rounded\"\n            >\n                {{ data / 100 | currency: (symbol | async) }}\n            </div>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <div class=\"p-2 flex items-center mx-auto space-x-2\">\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!can_edit\"\n                    [class.opacity-0]=\"!can_edit\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"addOption(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon>add</app-icon>\n                            <div>Add Option</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"editItem(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon>edit</app-icon>\n                            <div>Edit Item</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"removeItem(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon class=\"text-error\">delete</app-icon>\n                            <div>Remove Item</div>\n                        </div>\n                    </button>\n                </mat-menu>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!row.options?.length\"\n                    [matTooltip]=\"\n                        row.options?.length\n                            ? (show_children[row.id] ? 'Hide' : 'Show') +\n                              ' Menu Item Options'\n                            : ''\n                    \"\n                    (click)=\"show_children[row.id] = !show_children[row.id]\"\n                >\n                    <app-icon>\n                        {{\n                            show_children[row.id]\n                                ? 'keyboard_arrow_down'\n                                : 'chevron_right'\n                        }}\n                    </app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <ng-template #child_template let-row=\"row\">\n            <div\n                class=\"flex p-2 items-center border-b border-solid border-base-200 relative space-x-2\"\n                *ngFor=\"let option of row.options\"\n            >\n                <div\n                    class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                ></div>\n                <div class=\"flex-1 pl-4 pr-2\">\n                    <div class=\"text\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.group }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Menu Item Option\"\n                    (click)=\"editOption(row, option)\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"!mr-1\"\n                    matTooltip=\"Remove Menu Item Option\"\n                    (click)=\"removeOption(row, option)\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon class=\"text-error\">delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    public show_children: Record<string, boolean> = {};\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n\n    public readonly addOption = (item) => this._catering.addOption(item);\n\n    public readonly editOption = (item, option) =>\n        this._catering.addOption(item, option);\n\n    public readonly removeOption = (item, option) =>\n        this._catering.deleteOption(item, option);\n\n    public readonly editItem = (item) => this._catering.addItem(item);\n\n    public readonly removeItem = (item) => this._catering.deleteItem(item);\n\n    public get filters() {\n        return this._orders.filters;\n    }\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(\n        private _catering: CateringStateService,\n        private _orders: CateringOrdersService\n    ) {}\n\n    public isEnabled(item: CateringItem) {\n        return !item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public setEnabled(item: CateringItem, state: boolean) {\n        let list = item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...item, hide_for_zones: list })\n        );\n    }\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-16 text-right h-14 relative\">\n                <div\n                    arm\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full -translate-x-px\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border-2 border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 items-center border-b border-base-200 border-solid py-4 space-x-4\"\n            >\n                <div class=\"\">\n                    <div\n                        class=\"p-1 rounded-full bg-base-300 w-10 h-10 flex items-center justify-center font-mono text-sm\"\n                    >\n                        {{ item?.amount || item?.quantity || 1 }}×\n                    </div>\n                </div>\n                <div class=\"flex-1\">{{ item?.name }}</div>\n                <div class=\"flex space-x-2 mr-2 px-4\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-warning-content rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div class=\"flex flex-col h-full w-full overflow-auto\">\n            <mat-progress-bar\n                [class.opacity-0]=\"!(loading | async)\"\n                class=\"sticky top-0 left-0 w-full\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n            <simple-table\n                class=\"min-w-[72rem] w-full block text-sm\"\n                [data]=\"order_list\"\n                [columns]=\"[\n                    {\n                        key: 'state',\n                        name: ' ',\n                        size: '4rem',\n                        sortable: false,\n                        content: state_template,\n                    },\n                    {\n                        key: 'deliver_at',\n                        name: 'Time',\n                        content: time_template,\n                    },\n                    {\n                        key: 'event',\n                        name: 'Location',\n                        content: location_template,\n                        sortable: false,\n                    },\n                    {\n                        key: 'event',\n                        name: 'Host',\n                        content: host_template,\n                        sortable: false,\n                    },\n                    { key: 'charge_code', name: 'Charge Code' },\n                    {\n                        key: 'invoice_number',\n                        name: 'Invoice No.',\n                        empty: 'No Invoice',\n                    },\n                    {\n                        key: 'status',\n                        name: 'Status',\n                        content: status_template,\n                        size: '11rem',\n                    },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        size: '6.5rem',\n                        content: actions_template,\n                        sortable: false,\n                    },\n                ]\"\n                [sortable]=\"true\"\n                [show_children]=\"show_children\"\n                [child_template]=\"child_template\"\n                empty_message=\"No Catering Orders\"\n            >\n            </simple-table>\n            <ng-template #state_template let-data=\"data\">\n                <div class=\"p-2\">\n                    <div\n                        class=\"rounded-full bg-base-200 p-2 text-2xl flex items-center justify-center\"\n                    >\n                        <app-icon>room_service</app-icon>\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #time_template let-data=\"data\" let-row=\"row\">\n                <div class=\"p-4\">\n                    <div>Deliver at {{ data | date: time_format }}</div>\n                    <div class=\"text-xs opacity-30\">\n                        {{ row?.event?.date | date: 'MMM d' }},\n                        {{ row?.event?.date | date: time_format }}\n                        -\n                        {{ row?.event?.date_end | date: 'MMM d' }},\n                        {{ row?.event?.date_end | date: time_format }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #location_template let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    {{ data?.space?.display_name || data?.space?.name || '' }}\n                    <span\n                        class=\"opacity-30\"\n                        *ngIf=\"\n                            !(data?.space?.display_name || data?.space?.name)\n                        \"\n                    >\n                        No Location\n                    </span>\n                </div>\n            </ng-template>\n            <ng-template #host_template let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    <div>\n                        {{ data?.organiser?.name || data?.host || '' }}\n                        <span\n                            class=\"opacity-30\"\n                            *ngIf=\"!(data?.organiser?.name || data?.host)\"\n                        >\n                            Unknown Host\n                        </span>\n                    </div>\n                    <div class=\"text-xs opacity-30\">\n                        {{ data?.organiser?.email || data?.host }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\" let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    <button\n                        status\n                        matRipple\n                        class=\"rounded-3xl text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                        [style.background]=\"status(data)?.colour\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <div class=\"flex text-center capitalize mx-2\">\n                            {{ status(data)?.name }}\n                        </div>\n                        <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                    </button>\n                </div>\n                <mat-menu #menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        *ngFor=\"let status of statuses\"\n                        class=\"flex items-center\"\n                        (click)=\"updateStatus(row, status.id)\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"rounded-full h-4 w-4 mr-2\"\n                                [style.background-color]=\"status.colour\"\n                            ></div>\n                            <span class=\"mr-2 w-20\">{{ status.name }}</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #actions_template let-row=\"row\">\n                <div class=\"flex items-center space-x-2 p-2 mx-auto\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [hover]=\"true\"\n                        xPosition=\"end\"\n                        yPosition=\"top\"\n                        [content]=\"notes_template\"\n                        [disabled]=\"!row.notes\"\n                    >\n                        <app-icon>description</app-icon>\n                    </button>\n                    <ng-template #notes_template>\n                        <div\n                            class=\"p-2 rounded-lg bg-base-100 text-base-content max-w-[32rem] min-w-[8rem] shadow border border-base-200\"\n                        >\n                            <div class=\"mb-2\">Notes</div>\n                            <p class=\"text-sm px-4 py-2 bg-base-200 rounded\">\n                                {{ row.notes }}\n                            </p>\n                        </div>\n                    </ng-template>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"show_children[row.id] = !show_children[row.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_children[row.id]\n                                    ? 'keyboard_arrow_down'\n                                    : 'chevron_right'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n            </ng-template>\n            <ng-template #child_template let-row=\"row\">\n                <ul\n                    *ngIf=\"row?.items.length\"\n                    class=\"list-none p-0 m-0 w-full relative z-0\"\n                >\n                    <li\n                        catering-order-item\n                        class=\"flex items-center\"\n                        *ngFor=\"let item of row.items; let i = index\"\n                        [order_id]=\"row?.id\"\n                        [item]=\"item\"\n                    ></li>\n                </ul>\n            </ng-template>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent extends AsyncHandler {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    public readonly statuses = CATERING_STATUSES;\n    public readonly show_children: Record<string, boolean> = {};\n\n    public readonly updateStatus = async (order, s) => {\n        await this._orders.updateStatus(order, s);\n        this.timeout('status-change', () => ((order as any).status = s));\n    };\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public status(value: string) {\n        return CATERING_STATUSES.find((i) => i.id === value);\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    startOfDay,\n} from 'date-fns';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (filters | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemFiltersComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getFilters().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.catering.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getFilters().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getFilters().date,\n                this._state.getFilters().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getFilters().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    constructor(\n        private _state: CateringOrderStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.catering.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.filters.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getFilters().duration || 60) -\n                        this._settings.get('app.catering.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getFilters();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            matRipple\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center z-0\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) =>\n                    (d.details instanceof Array ? d.details : []).map(\n                        (_) => new CateringItem(_)\n                    )\n                ),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n\n    public getFilters() {\n        return { ...this._filters.getValue() };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                    [(at_time)]=\"exact_time\"\n                    [(offset)]=\"offset\"\n                    [(offset_day)]=\"offset_day\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: CateringItem[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._order.setFilters(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.catering.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\n\nfunction deliverAtTime(order: CateringOrder) {\n    let date = order.event?.date || (order as any)._time;\n    if (order.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(order.deliver_time),\n            minutes: (order.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (order.deliver_day_offset > 0 || order.event?.all_day) {\n        date = addDays(startOfDay(date), order.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, order.deliver_offset).valueOf();\n}\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n    public readonly deliver_at_time: number;\n    /** Current status of the order */\n    private _status: CateringOrderStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: CateringOrderStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) =>\n            i instanceof CateringItem ? i : new CateringItem(i)\n        );\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status =\n            data[`${this.event_id}_status`] || data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_time = data.deliver_time || undefined;\n        this.deliver_offset = data.deliver_offset || 0;\n        this.deliver_day_offset = data.deliver_day_offset || 0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, currentUser, flatten } from '@placeos/common';\nimport {\n    queryEvents,\n    saveEvent,\n    updateEventMetadata,\n} from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(\n                        events.map((event) =>\n                            event.valid_catering.map(\n                                (o) => new CateringOrder({ ...o, event })\n                            )\n                        )\n                    )\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...(order.event.extension_data.catering || []).filter(\n                (o) => o.id !== order.id\n            ),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const system_id = event?.resources[0]?.id || event?.system?.id;\n        const booking = await updateEventMetadata(\n            event.id,\n            system_id,\n            event.extension_data\n        ).toPromise();\n        this.timeout('refresh-list', () => this._poll.next(Date.now()), 1000);\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\nexport * from './lib/keep-alive.service';\nexport * from './lib/uploads.service';\nexport * from './lib/shorten.fn';\nexport * from './lib/fixed-device-helpers';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    if (!(ruleset_list instanceof Array)) return DEFAULT_RULES;\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === '*' ||\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                // console.log(\n                //     'Matched Ruleset:',\n                //     details.resource.id,\n                //     details,\n                //     ruleset\n                // );\n                return ruleset.rules;\n            }\n        }\n    }\n    // console.log(\n    //     'No Matched Ruleset:',\n    //     details.resource.id,\n    //     details,\n    //     DEFAULT_RULES\n    // );\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    if (conditions.locations && conditions.locations.includes(resource.name))\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    id?: string;\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(\n        `${event.body || ''}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`\n    );\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { MapsPeopleService } from './mapspeople.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","let _wake_lock: WakeLockSentinel | null = null;\n\nexport async function requestScreenWakeLock() {\n    if (_wake_lock) {\n        await _wake_lock.release();\n    }\n    // create an async function to request a wake lock\n    try {\n        _wake_lock = await navigator.wakeLock.request('screen');\n    } catch (err) {\n        throw err;\n    }\n}\n\ndocument.addEventListener('visibilitychange', async () => {\n    if (_wake_lock !== null && document.visibilityState === 'visible') {\n        _wake_lock = await navigator.wakeLock.request('screen');\n    }\n});\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name,\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args,\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789',\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog,\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        },\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi',\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2]?.replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3],\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i]?.replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[], seperator = ',') {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(seperator)}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) =>\n                        (JSON.stringify(item[key]) || '')?.replace(',', '|'),\n                    )\n                    .join(seperator),\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents),\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join(''),\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(\n    s1: number,\n    e1: number,\n    s2: number,\n    e2: number,\n) {\n    return (\n        (s1 >= s2 && s1 < e2) ||\n        (s2 >= s1 && s2 < e1) || // Check start time\n        (e1 > s2 && e1 <= e2) ||\n        (e2 > s1 && e2 <= e1) // Check end time\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language,\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, ''],\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n\n// Calculate the distance between geographical cooridinates\nexport function calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number,\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n//////////////////////////////////////////\n//////   Colour Conversion Utils   ///////\n//////////////////////////////////////////\n\nexport function hexToRgb(hex: string): RGB {\n    let r = parseInt(hex.slice(1, 3), 16);\n    let g = parseInt(hex.slice(3, 5), 16);\n    let b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n}\n\nexport type RGB = [number, number, number];\n\nexport function interpolateColors(rgb1: RGB, rgb2: RGB, fraction: number): RGB {\n    let r = rgb1[0] + (rgb2[0] - rgb1[0]) * fraction;\n    let g = rgb1[1] + (rgb2[1] - rgb1[1]) * fraction;\n    let b = rgb1[2] + (rgb2[2] - rgb1[2]) * fraction;\n    return [Math.round(r), Math.round(g), Math.round(b)];\n}\n\nexport function rgbToHex(r: number, g: number, b: number): string {\n    function componentToHex(c) {\n        const hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport function shiftColorTowards(\n    hex1: string,\n    hex2: string,\n    fraction: number,\n) {\n    const rgb1 = hexToRgb(hex1);\n    const rgb2 = hexToRgb(hex2);\n    const resultRgb = interpolateColors(rgb1, rgb2, fraction);\n    return rgbToHex(resultRgb[0], resultRgb[1], resultRgb[2]);\n}\n\nexport function extractTextFromHTML(html_string: string) {\n    // Create a temporary DOM element\n    const temp_element = document.createElement('div');\n\n    // Set the innerHTML to our HTML string\n    temp_element.innerHTML = html_string;\n\n    // Extract and return the text content\n    return temp_element.textContent || temp_element.innerText || '';\n}\n\n/**\n * Shuffle the items in array into random order\n * @param array List of items to shuffle\n */\nexport function shuffleArray(array: any[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\n/**\n * Shuffle the items in array into random order with a specific item as the first\n * @param array List of items to shuffle\n * @param first_index Index of the item in the list to set as first\n */\nexport function shuffleArrayWithFirstItem(array: any[], first_index: number) {\n    // Move the specified item to the beginning\n    const firstItem = array.splice(first_index, 1)[0];\n    array.unshift(firstItem);\n\n    // Shuffle the rest of the array (starting from index 1)\n    for (let i = array.length - 1; i > 1; i--) {\n        const j = Math.floor(Math.random() * (i - 1)) + 1;\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = [\n    'control',\n    'shift',\n    'alt',\n    'meta',\n    'os',\n];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] =\n                        this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code]?.next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = combo instanceof Array ? combo : combo.split('+');\n        const combination: string[] = combo.map((i) =>\n            this.mapKey(i.toLowerCase())\n        );\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] =\n                    this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) {\n                                return;\n                            }\n                        }\n                    }\n                    const total = presses.reduce(\n                        (a, v) => a + (v > 0 ? 1 : -1),\n                        0\n                    );\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (\n            code.indexOf('alt') >= 0 ||\n            code.indexOf('shift') >= 0 ||\n            code.indexOf('control') >= 0\n        ) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KeepAliveService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _delay = 3 * 60 * 1000;\n\n    private _status = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'poll')])),\n        tap(() => this.timeout('poll', () => location.reload(), this._delay))\n    );\n\n    constructor() {\n        super();\n        this.subscription('status', this._status.subscribe());\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    public setReloadDelay(delay: number) {\n        this._delay = delay;\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'SystemHealth') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    map,\n    tap,\n    filter,\n    debounce,\n    debounceTime,\n    shareReplay,\n} from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\nimport { log } from './general';\n\nexport enum MapService {\n    GoogleMaps,\n    Mapbox,\n}\n\nexport interface MapsPeopleKeys {\n    mapsindoors?: string;\n    google?: string;\n    mapbox?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapsPeopleService extends AsyncHandler {\n    private _map_service = new BehaviorSubject<MapService>(null);\n    private _map_token = new BehaviorSubject<string>('');\n    private _ready = new BehaviorSubject(false);\n    private _injected: Record<string, boolean> = {};\n    private _custom_zone = new BehaviorSubject<string>('');\n\n    public readonly available$ = combineLatest([\n        this._org.active_building,\n        this._custom_zone,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_]) => !!_),\n        debounceTime(300),\n        tap(() => this._injectMapsApiKeys()),\n        map(\n            ([bld, zone]) =>\n                this.map_keys.mapsindoors &&\n                (this.use_service.includes(zone || bld.id) ||\n                    this.use_service.includes('*'))\n        ),\n        shareReplay(1)\n    );\n\n    public get map_keys(): MapsPeopleKeys {\n        return this._settings.get('app.maps_people.keys') || {};\n    }\n\n    public get use_service(): string[] {\n        return this._settings.get('app.maps_people.use_zones') || [];\n    }\n\n    public get map_service(): MapService {\n        return this._map_service.getValue();\n    }\n\n    public get map_token(): string {\n        return this._map_token.getValue();\n    }\n\n    public get is_ready(): boolean {\n        return this._ready.getValue();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setCustomZone(zone_id: string) {\n        this._custom_zone.next(zone_id);\n    }\n\n    private _injectMapsApiKeys() {\n        log('MapsPeople', 'Initializing Maps API Keys');\n        this._ready.next(false);\n        const { mapsindoors, google, mapbox } = this.map_keys;\n        if (!mapsindoors) return;\n        if (mapsindoors && !this._injected.mapsindoors) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.35.0/mapsindoors-4.35.0.js.gz?apikey=${mapsindoors}`;\n            document.body.appendChild(script);\n            this._injected.mapsindoors = true;\n        }\n        if (google && mapbox) {\n            log(\n                'MapsPeople',\n                'Both Google and Mapbox keys provided',\n                undefined,\n                'error'\n            );\n            return;\n        }\n        if (google && !this._injected.google) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google}`;\n            document.body.appendChild(script);\n            this._map_service.next(MapService.GoogleMaps);\n            this._injected.google = true;\n        } else if (mapbox && !this._injected.mapbox) {\n            const script = document.createElement('script');\n            script.src = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js`;\n            document.body.appendChild(script);\n            const styles = document.createElement('link');\n            styles.rel = 'stylesheet';\n            styles.href = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css`;\n            document.head.appendChild(styles);\n            this._map_service.next(MapService.Mapbox);\n            this._map_token.next(mapbox);\n            this._injected.mapbox = true;\n        }\n\n        if (google || mapbox) {\n            log(\n                'MapsPeople',\n                `Initialized Maps API Keys for ${\n                    google ? 'Google Maps' : 'Mapbox'\n                }`\n            );\n            this.timeout('ready', () => this._ready.next(true), 300);\n        }\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { log, randomInt, randomString } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    device_id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    raw: any;\n    data: any;\n    metadata: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\nlet DEVICE_ID =\n    localStorage.getItem('PLACEOS.DEVICE_ID') || `DEV-${randomString(8)}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _disable_handling: boolean = false;\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(20000));\n    private _metadata = null;\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe(async (d) => {\n                    this._disable_handling = true;\n                    await getModule(id, 'Logger')\n                        .execute('post_event', [d])\n                        .catch();\n                    this._disable_handling = false;\n                })\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    public setMetadata(metadata: any) {}\n\n    constructor() {\n        super();\n        localStorage.setItem('PLACEOS.DEVICE_ID', DEVICE_ID);\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n        log('Logger', 'Remote logging initialised...');\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        if (data.includes('\"Logger\"') || this._disable_handling) return;\n        const blob = [...data[0]];\n        blob[0] =\n            typeof blob[0] === 'string' ? blob[0].replace(/\\%c/g, '') : blob[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            device_id: DEVICE_ID,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            raw: data,\n            data: blob.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n            metadata: this._metadata || null,\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import {\n    apiKey,\n    del,\n    get,\n    patch,\n    post,\n    put,\n    query,\n    token,\n} from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst ENDPOINT = '/api/engine/v2/short_url';\n\nexport interface ShortURL {\n    id: string;\n    name: string;\n    description: string;\n    uri: string;\n\n    user_id: string;\n    user_name: string;\n    user_email: string;\n\n    redirect_count: number;\n\n    enabled: boolean;\n    valid_from: number;\n    valid_to: number;\n\n    created_at: number;\n    updated_at: number;\n}\n\nexport function queryShortURLs(q: Record<string, any> = {}) {\n    return query<ShortURL>({\n        query_params: q,\n        fn: (item) => item as ShortURL,\n        endpoint: ENDPOINT,\n        path: '',\n    }).pipe(map((_) => _.data));\n}\n\nexport function showShortURL(id: string): Observable<ShortURL> {\n    return get(`${ENDPOINT}/${id}`).pipe(map((_) => _ as ShortURL));\n}\n\nconst QR_STORE = new Map<string, string>();\n\nexport async function getShortUrlQRCode(\n    id: string,\n    format: 'svg' | 'png' = 'svg',\n): Promise<string> {\n    const key = `${id}.${format}`;\n    if (QR_STORE.has(key)) return QR_STORE.get(key);\n    const tkn = token();\n    document.cookie = `${\n        tkn === 'x-api-key'\n            ? 'api-key=' + encodeURIComponent(apiKey())\n            : 'bearer_token=' + encodeURIComponent(tkn)\n    };max-age=30;path=/api/engine/v2/short_url/;samesite=strict;${\n        location.protocol === 'https:' ? 'secure;' : ''\n    }`;\n    const response = await fetch(`${ENDPOINT}/${id}/qr_code.${format}`);\n    const blob = await response.blob();\n    const url = URL.createObjectURL(blob);\n    QR_STORE.set(key, url);\n    return url;\n}\n\nexport function createShortURL(data: ShortURL): Observable<ShortURL> {\n    return post(ENDPOINT, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function updateShortURL(\n    id: string,\n    data: ShortURL,\n): Observable<ShortURL> {\n    return put(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function saveShortURL(data: ShortURL): Observable<ShortURL> {\n    return data.id ? updateShortURL(data.id, data) : createShortURL(data);\n}\n\nexport function patchShortURL(\n    id: string,\n    data: Partial<ShortURL>,\n): Observable<ShortURL> {\n    return patch(`${ENDPOINT}/${id}`, data).pipe(map((_) => _ as ShortURL));\n}\n\nexport function deleteShortURL(id: string): Observable<void> {\n    return del(`${ENDPOINT}/${id}`).pipe(map((_) => null));\n}\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\nexport const LOCAL_TIMEZONE =\n    Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(\n    date: Date | number,\n    tz: string = LOCAL_TIMEZONE,\n) {\n    const offset_diff =\n        getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(\n    date: Date | number,\n    tz: string = LOCAL_TIMEZONE,\n) {\n    const offset_diff =\n        getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\nexport function getTimezoneOffsetInMinutes(timeZone, date = new Date()) {\n    const options: Intl.DateTimeFormatOptions = {\n        timeZone,\n        hour12: false,\n        timeZoneName: 'short',\n    };\n    const formatter = new Intl.DateTimeFormat([], options);\n    const parts = formatter.formatToParts(date);\n\n    // Find the timeZoneName part which contains the GMT offset\n    const tzOffsetPart = parts.find((part) => part.type === 'timeZoneName');\n    const tzOffsetString = tzOffsetPart ? tzOffsetPart.value : 'GMT';\n\n    // Match the offset from the string (e.g., \"GMT+0530\")\n    const offsetMatch = tzOffsetString.match(/GMT([+-])(\\d{1,2})(\\d{2})?/);\n    if (!offsetMatch) {\n        return 0; // If no match, assume UTC (offset 0)\n    }\n\n    const sign = offsetMatch[1] === '+' ? 1 : -1;\n    const hours = parseInt(offsetMatch[2], 10);\n    const minutes = offsetMatch[3] ? parseInt(offsetMatch[3], 10) : 0;\n\n    return sign * (hours * 60 + minutes);\n}\n\nexport function getTimezoneDifferenceInHours(\n    src_tz: string,\n    dest_tz: string = LOCAL_TIMEZONE,\n    date: Date = new Date(),\n) {\n    const offset1 = getTimezoneOffsetInMinutes(src_tz, date);\n    const offset2 = getTimezoneOffsetInMinutes(dest_tz, date);\n\n    // Calculate the difference in hours\n    return (offset1 - offset2) / 60;\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UploadDetails, UploadPermissions, uploadFile } from './uploads';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UploadsService {\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n\n    public readonly upload_list = this._upload_list.asObservable();\n\n    constructor(private _dialog: MatDialog) {\n        if (localStorage) {\n            this._upload_list.next(\n                JSON.parse(localStorage.getItem('BACKOFFICE.uploads') || '[]')\n            );\n        }\n    }\n\n    public clearList() {\n        const in_progress_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress < 100 && !file.error);\n        this._upload_list.next(in_progress_list);\n    }\n\n    public uploadFileWithPermissions(file: File) {\n        return new Promise<number>((resolve, reject) => {\n            const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                data: { file },\n            });\n            ref.afterClosed().subscribe(async (details) => {\n                if (details) {\n                    const id = await this.uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).catch((e) => {\n                        reject(e);\n                        throw e;\n                    });\n                    resolve(id);\n                } else reject();\n            });\n        });\n    }\n\n    public uploadFile(\n        file: File,\n        pub: boolean = true,\n        permissions: UploadPermissions = 'none'\n    ) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            uploadFile(file, pub, permissions).subscribe(\n                update_fn,\n                update_fn,\n                () => this._updateUploadHistory()\n            );\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem('PLACEOS.uploads', JSON.stringify(done_list));\n        }\n    }\n}\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\nconst _change = new BehaviorSubject(0);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    combineLatest([showUser('current'), _change])\n        .pipe(\n            delay(1000),\n            retry(10),\n            map(([i]) => new StaffUser(i as any)),\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\nexport function reloadUserData() {\n    setTimeout(async () => {\n        const user = await showUser('current').toPromise();\n        _current_user.next(new StaffUser(user as any));\n    }, 300);\n}\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"23bd8cc\",\n    \"hash\": \"23bd8cc\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"23bd8cc\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1727691230861\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-renderer.component';\nexport * from './lib/maps-indoors.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth], video [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=30;path=/api/engine/v2/uploads;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        let response = null;\n        try {\n            response = await fetch(this.source).catch((_) => null);\n        } catch {}\n        if (!response || !response.ok) {\n            console.info('Failed to load image:', this.source);\n            return;\n        }\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\nimport { StaffUser } from 'libs/users/src/lib/user.class';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await combineLatest([onlineState(), this._org.initialised])\n            .pipe(first(([online, org_init]) => online && org_init))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const groups = this._access?.group\n            ? [this._access.group]\n            : this._settings.get('app.allow_access_groups') || [];\n        const can_activate = !!(\n            user &&\n            (!groups.length || groups.find((_) => user.groups.includes(_)))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '', { async: false }) as any;\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[40rem] max-w-[calc(100vw-1rem)]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"toggleChat()\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[32rem] max-h-[60vh] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    icons[(progress | async).function] || 'info'\n                                }}</app-icon>\n                                <p class=\"text-sm\">\n                                    {{\n                                        (progress | async).message ||\n                                            (progress | async).function\n                                    }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    [style.bottom]=\"height + 8 + 'px'\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex bg-base-100 focus-within:outline outline-info border-t border-base-300 max-h-[10rem] overflow-y-auto\"\n                >\n                    <textarea\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none resize-none overflow-hidden\"\n                        [style.height]=\"height + 'px'\"\n                        [(ngModel)]=\"message\"\n                        (ngModelChange)=\"resizeInput()\"\n                        (keyup.enter)=\"sendMessage()\"\n                    ></textarea>\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        class=\"mt-2\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n    public height = 56;\n\n    public readonly icons = {\n        list_function_schemas: 'help',\n        call_function: 'settings',\n        task_complete: 'check_circle',\n    };\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLTextAreaElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n        if (!this.show) this._chat.close();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public resizeInput() {\n        const el = this._input_el.nativeElement;\n        this.height = Math.max(el.scrollHeight, 56);\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        this.height = 56;\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    log,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { apiKey, getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _binding = new BehaviorSubject('');\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = combineLatest([\n        this._org.active_building,\n        this._binding,\n    ]).pipe(\n        filter(([b]) => !!b),\n        map(([_, biniding]) => biniding || this._org.binding('chat_room')),\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1),\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const auth =\n                token() !== 'x-api-key'\n                    ? `bearer_token=${encodeURIComponent(token())}`\n                    : `x-api-key=${apiKey()}`;\n            const url = `ws${location.origin.replace(\n                'http',\n                '',\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(id)}?${auth}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => {\n                        log('CHAT', 'Connection error:', [e], 'error');\n                        this._cleanup();\n                    },\n                    () => this._cleanup(),\n                ),\n            );\n            return this._socket;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public setBinding(system_id: string) {\n        this._binding.next(system_id);\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public close() {\n        this.endChat();\n        this._chat_id = '';\n        this._chat_messages.next([]);\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay,\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message, { async: false }) as any,\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n            if (msg.function === 'task_complete') {\n                this._settings.post('CHAT:task_complete', msg.task_id);\n            }\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message, { async: false }) as any,\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport {\n    provideHttpClient,\n    withInterceptorsFromDi,\n} from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\nimport { MediaDurationPipe } from './media-duration.pipe';\nimport { ThumbnailPipe } from './thumbnail.pipe';\nimport { MapRendererComponent } from './map-renderer.component';\nimport { MapsIndoorsComponent } from './maps-indoors.component';\nimport { MapCanvasComponent } from './map-canvas.component';\nimport { ImageViewerComponent } from './image-viewer.component';\nimport { SimpleTableComponent } from './simple-table.component';\nimport { LimitInputDirective } from './limit-input.directive';\nimport { DeskHeightPresetsComponent } from './desk-height-presets.component';\nimport { WorkLocationTooltipComponent } from './work-location-tooltip.component';\nimport { ZonePipe } from './zone.pipe';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapRendererComponent,\n    MapsIndoorsComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    MapCanvasComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n    ImageViewerComponent,\n    SimpleTableComponent,\n    WorkLocationTooltipComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n    MediaDurationPipe,\n    ThumbnailPipe,\n    ZonePipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n    DeskHeightPresetsComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [\n    BindingDirective,\n    AuthenticatedImageDirective,\n    LimitInputDirective,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [\n        { provide: MAP_FEATURE_DATA, useValue: {} },\n        provideHttpClient(withInterceptorsFromDi()),\n    ],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n    /** Delay before closing the modal */\n    close_delay?: number;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '28em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header class=\"px-4 py-3\">\n            <h3 class=\"font-medium text-xl\">{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-4 p-4 max-w-[80vw]\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p content class=\"text-center\" [innerHTML]=\"content\"></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-4 space-x-4\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse flex-1\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"flex-1\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-4\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent extends AsyncHandler {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        if (this._data.close_delay) {\n            this.timeout(\n                'close',\n                () => this._dialog_ref.close(),\n                this._data.close_delay,\n            );\n        }\n    }\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            first: idx === 0,\n                                            last:\n                                                idx ===\n                                                    data_source.data.length -\n                                                        1 ||\n                                                idx === data_source.length - 1,\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop && !this.hover,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\nconst COLOR_MAP = {\n    console: 'bg-success-light text-black',\n    network: 'bg-success text-success-content',\n    dom: 'bg-warning-light text-black',\n\n    log: `bg-info-light text-black`,\n    info: `bg-info text-info-content`,\n    warn: `bg-warning text-warning-content`,\n    debug: `bg-base-300 text-base-content`,\n    error: `bg-error text-error-content`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 left-2 max-w-[80vw] w-[40rem] border border-base-300 bg-base-200 text-base-content shadow rounded overflow-hidden h-[24rem] max-h-[65vh] flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <div\n                class=\"flex items-center justify-between bg-base-100 border-b border-base-300\"\n            >\n                <div class=\"p-2\">Console</div>\n                <button icon matRipple (click)=\"show = false\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                *ngIf=\"(filtered_logs | async)?.length; else empty_state\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono pl-1\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-info\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"h-8 w-full\"></div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-1 right-1 rounded-lg p-1 flex items-center w-[20rem] overflow-hidden\"\n            >\n                <div\n                    class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                ></div>\n                <div\n                    class=\"absolute inset-1 bg-base-content opacity-90 rounded z-0\"\n                ></div>\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"relative border-none flex-1 text-sm px-2 py-1 font-mono rounded text-base-100\"\n                />\n                <div\n                    class=\"relative font-mono text-xs px-2 text-center text-base-100\"\n                >\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n        <button\n            activation\n            *ngIf=\"can_activate\"\n            class=\"absolute bottom-0 right-0 h-12 w-12\"\n            (mousedown)=\"onStart()\"\n            (touchstart)=\"onStart()\"\n            (mouseup)=\"onEnd()\"\n            (touchend)=\"onEnd()\"\n        ></button>\n        <ng-template #empty_state>\n            <div\n                class=\"flex-1 flex flex-col items-center justify-center h-[30rem] w-full\"\n            >\n                <div class=\"text-2xl opacity-30\">\n                    No {{ filter.getValue() ? 'matching' : '' }} logs\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase()),\n            ),\n        ),\n    );\n\n    public readonly onStart = () =>\n        this.timeout('show', () => (this.show = true), 5000);\n    public readonly onEnd = () => this.clearTimeout('show');\n\n    public get can_activate() {\n        return !!this._settings.get('app.debug_console');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'binding',\n            this._org.active_building.subscribe(() => {\n                this._logs.setSystem(this._org.binding('remote_logger'));\n            }),\n        );\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) => {\n                let logs = this.logs.getValue();\n                if (\n                    logs.length >\n                    (this._settings.get('app.log_limits') || 20000)\n                )\n                    logs.splice(0, 1);\n                this.logs.next([...logs, event]);\n            }),\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show),\n            ),\n        );\n        this._logs.setSystem(this._org.binding('remote_logger'));\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'desk-height-presets',\n    template: `\n        <div class=\"relative p-4 bg-base-100 rounded shadow w-[20rem]\">\n            <div class=\"text-lg mb-2\" i18n>Desk Height Presets</div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Desk height presets allow you to store and recall your preferred\n                desk height when checking into a booked desk that supports\n                height adjustment.\n            </div>\n            <div\n                class=\"text-xs mb-4 -mx-2 p-2 rounded bg-warning text-warning-content\"\n                *ngIf=\"not_set && show_close\"\n            >\n                Before you can set a desk height, presets must be set\n            </div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Set your desk height for the best experience.\n            </div>\n            <div class=\"flex flex-col mt-2\">\n                <label>Sitting Height</label>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-slider\n                        min=\"60\"\n                        max=\"80\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"desk_sitting_height\"\n                            (ngModelChange)=\"\n                                saveSetting('desk_sitting_height', $event)\n                            \"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right\">\n                        {{ desk_sitting_height.toFixed(1) }}cm\n                    </div>\n                </div>\n                <label>Standing Height</label>\n                <div class=\"flex items-center space-x-2  mr-2\">\n                    <mat-slider\n                        min=\"90\"\n                        max=\"120\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"desk_standing_height\"\n                            (ngModelChange)=\"\n                                saveSetting('desk_standing_height', $event)\n                            \"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right mr-2\">\n                        {{ desk_standing_height.toFixed(1) }}cm\n                    </div>\n                </div>\n            </div>\n            <button\n                btn\n                matRipple\n                (click)=\"onClose()\"\n                class=\"w-full mt-2\"\n                *ngIf=\"show_close\"\n            >\n                Save Presets\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskHeightPresetsComponent {\n    @Input() public show_close = false;\n    @Output() public close = new EventEmitter<void>();\n    public not_set = false;\n    public desk_sitting_height = 71;\n    public desk_standing_height = 101;\n\n    constructor(private _settings: SettingsService) {}\n\n    public ngOnInit() {\n        this.not_set =\n            !this._settings.get('desk_sitting_height') &&\n            !this._settings.get('desk_standing_height');\n        this.desk_sitting_height =\n            this._settings.get('desk_sitting_height') || 71;\n        this.desk_standing_height =\n            this._settings.get('desk_standing_height') || 101;\n    }\n\n    public onClose() {\n        this.saveSetting('desk_sitting_height', this.desk_sitting_height);\n        this.saveSetting('desk_standing_height', this.desk_standing_height);\n        this.close.emit();\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n\n    public saveSetting(name: string, value: any) {\n        this._settings.saveUserSetting(name, value);\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.text-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.text-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.text-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'image-viewer',\n    template: `\n        <div class=\"h-screen w-screen bg-base-200\">\n            <img\n                class=\"object-contain object-center w-full h-full\"\n                [src]=\"url\"\n            />\n            <button\n                class=\"absolute top-1 right-1 bg-base-100\"\n                icon\n                matRipple\n                mat-dialog-close\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ImageViewerComponent {\n    constructor(@Inject(MAT_DIALOG_DATA) public url: string) {}\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    log,\n    notifyError,\n} from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\nfunction calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number,\n): number {\n    const radius = 6371; // Earth's radius in kilometers\n\n    const dLat = degreesToRadians(lat2 - lat1);\n    const dLon = degreesToRadians(lon2 - lon1);\n\n    lat1 = degreesToRadians(lat1);\n    lat2 = degreesToRadians(lat2);\n\n    const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.sin(dLon / 2) *\n            Math.sin(dLon / 2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return radius * c;\n}\n\nfunction degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        ></div>\n        <div\n            class=\"absolute inset-0 flex items-center justify-center\"\n            *ngIf=\"loading\"\n        >\n            <mat-spinner [diameter]=\"48\"></mat-spinner>\n        </div>\n        <div\n            class=\"absolute inset-0 flex flex-col space-y-2 items-center justify-center\"\n            *ngIf=\"geolocation_error_message\"\n        >\n            <img\n                src=\"assets/icons/not-found.svg\"\n                alt=\"graphic of magnifying glass\"\n                width=\"200px\"\n                class=\"items-center\"\n            />\n            <p class=\"opacity-60 text-sm text-center mt-10\">\n                {{ geolocation_error_message | translate }}\n            </p>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-2 left-2 bg-base-100 text-base-content rounded-lg z-50 p-2 shadow\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"map no-subscript\">\n                <input\n                    matInput\n                    #searchInput\n                    name=\"location-search\"\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    (keyup.enter)=\"onSearch()\"\n                />\n                <div matSuffix class=\"h-10 relative\">\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        aria-label=\"search button\"\n                        matTooltip=\"Search...\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\">\n                            search\n                        </app-icon>\n                    </button>\n                </div>\n            </mat-form-field>\n\n            <ng-container *ngIf=\"search_result_items?.length\">\n                <div\n                    class=\"flex items-center justify-between px-2 my-2 space-x-2\"\n                >\n                    <h3 class=\"font-medium text-lg\">\n                        Results ({{ search_result_items.length || '0' }})\n                    </h3>\n                    <button\n                        icon\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        (click)=\"search_result_items = []\"\n                        matTooltip=\"Clear Results\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <ul\n                    class=\"list-none m-0 p-0 w-full space-y-2 max-h-[65vh] overflow-auto\"\n                >\n                    <li\n                        class=\"w-full even:bg-base-200 hover:bg-base-300 rounded border border-base-200\"\n                        *ngFor=\"let item of search_result_items | slice: 0 : 10\"\n                    >\n                        <button\n                            class=\"flex items-center w-full p-2 space-x-2 text-left\"\n                            (click)=\"getRoute(item); search_result_items = []\"\n                        >\n                            <div class=\"flex flex-col flex-1\">\n                                <div>{{ item.properties.name }}</div>\n                                <div class=\"opacity-30 text-xs\">\n                                    {{ item.properties.roomId }}, Level\n                                    {{ item.properties.floorName }}\n                                </div>\n                            </div>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n    /** Mark location of a specific item */\n    @Input() public locate: string;\n    /** Default zoom level for the map */\n    @Input() public default_zoom: number = 19;\n\n    public view_instance: any;\n    public maps_service: any;\n    public map_instance: any;\n    public directions_service: any;\n    public directions_renderer: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[] = [];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction } = {};\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._setLocationToBuilding();\n    };\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ]),\n    );\n    public floor_mapping: { [id: string]: string } = {};\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _api_service: MapsPeopleService,\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        if (this.custom_coordinates) this.coordinates = this.custom_coordinates;\n        const get_location = () => {\n            this._getUserLocation();\n            document.removeEventListener('click', get_location);\n        };\n        document.addEventListener('click', get_location);\n        await this._initMapView();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n        }\n        if (change.locate && this.locate && mapsindoors) {\n            const searchParams = { q: this.searchElement.nativeElement.value };\n            const locations =\n                await mapsindoors?.services.LocationsService.getLocations(\n                    searchParams,\n                );\n            if (locations.length) this.getRoute(locations[0]);\n        }\n        this.mapFloorsToIndex();\n        this.loading = false;\n    }\n\n    public ngAfterViewInit() {\n        this.maps_service?.addListener('click', (location: any, e: Event) => {\n            const found_action = this.actions_hashmap[location.id];\n            if (found_action) found_action.callback(e);\n        });\n    }\n\n    private _initMapView() {\n        if (!this._api_service.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initMapView(), 1000);\n            return;\n        }\n        const view_options: any = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: this.default_zoom || 19,\n            maxZoom: 24,\n        };\n\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            log('MapsIndoors', 'Using Google Maps API');\n            this.view_instance = new mapsindoors.mapView.GoogleMapsView(\n                view_options,\n            );\n        } else {\n            view_options.accessToken = this._api_service.map_token;\n            log('MapsIndoors', 'Using Mapbox API');\n            this.view_instance = new mapsindoors.mapView.MapboxView(\n                view_options,\n            );\n        }\n        if (!this.view_instance) {\n            log(\n                'MapsIndoors',\n                'Failed to initialise map view instance.',\n                undefined,\n                'warn',\n            );\n            return;\n        }\n        this.maps_service = new mapsindoors.MapsIndoors({\n            mapView: this.view_instance,\n        });\n        this.map_instance = this.view_instance.getMap();\n        this.initDirections();\n        this.handleLocationChange();\n        this.mapFloorsToIndex();\n        this._setLocationToBuilding();\n    }\n\n    public initDirections() {\n        const provider =\n            this._api_service.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._api_service.map_token,\n                  );\n        this.directions_service = new mapsindoors.services.DirectionsService(\n            provider,\n        );\n        const directionsRendererOptions = {\n            mapsIndoors: this.maps_service,\n        };\n        this.directions_renderer =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions,\n            );\n    }\n\n    public async mapFloorsToIndex() {\n        const building = await this.maps_service?.getBuilding();\n        const input_string =\n            building?.buildingInfo?.fields?.floorMapping?.value;\n        const pairs = input_string?.split(',\\n').map((pair) => pair.split(':'));\n        this.floor_mapping =\n            pairs?.reduce((lvl_map, [key, value]) => {\n                lvl_map[key] = value;\n                return lvl_map;\n            }, {}) || {};\n        const floor_index: string = await this.maps_service?.getFloor();\n        if (floor_index && this.floor_mapping) {\n            const level_id = this.floor_mapping[floor_index];\n            this._state.setLevel(level_id);\n        }\n    }\n\n    public handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(floorSelectorElement, this.maps_service);\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            this.map_instance.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(floorSelectorElement);\n        } else {\n            const instance = this.view_instance.getMap();\n            instance.addControl({\n                onAdd: () => floorSelectorElement,\n                onRemove: () => {},\n            });\n        }\n\n        this.maps_service?.addListener('building_changed', (e: any) => {\n            const found_building = this._org.buildings.find((building) => {\n                building.name.toLowerCase() ===\n                    e.buildingInfo?.name.toLowerCase();\n                this.setBuilding(found_building);\n            });\n        });\n        this.maps_service?.addListener('floor_changed', (e: string) => {\n            if (!e || !this.floor_mapping) return;\n            const level_id: string = this.floor_mapping[e];\n            this._state.setLevel(level_id);\n        });\n    }\n\n    public onSearch() {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        mapsindoors?.services.LocationsService.getLocations(searchParams).then(\n            (locations: any[]) => {\n                this.search_result_items = locations;\n            },\n        );\n    }\n\n    private async _getUserLocation(): Promise<void> {\n        if (!('geolocation' in navigator)) {\n            log(\n                'MapsIndoors',\n                \"User's geolocation not available.\",\n                undefined,\n                'warn',\n            );\n            return this._setLocationToBuilding();\n        }\n        if (this.coordinates) {\n            this.user_latitude = this.coordinates.latitude;\n            this.user_longitude = this.coordinates.longitude;\n            return;\n        } else {\n            navigator.geolocation.watchPosition(\n                (_) => this._updateGeolocation(_),\n                (_) => this._handleGeolocationError(_),\n            );\n            const options = { timeout: 10000, enableHighAccuracy: true };\n            navigator.geolocation.getCurrentPosition(\n                (position: GeolocationPosition) => {\n                    if (\n                        !this._userWithinRadius([\n                            position.coords.latitude,\n                            position.coords.longitude,\n                        ])\n                    ) {\n                        // Only use geolocation if user is within 1km of building\n                        return this._setLocationToBuilding();\n                    }\n                    this._updateGeolocation(position);\n                    this.map_instance.setCenter({\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    });\n                },\n                () => this._setLocationToBuilding(),\n                options,\n            );\n        }\n    }\n\n    private _userWithinRadius(\n        [d_lat, d_long]: [number, number],\n        radius: number = 1,\n    ) {\n        const [lat_str, long_str] =\n            this._org.building?.location.split(',') || [];\n        if (lat_str && long_str) {\n            const lat = parseFloat(lat_str);\n            const long = parseFloat(long_str);\n            const distance = calculateDistance(lat, long, d_lat, d_long);\n            if (distance >= radius) return false;\n        }\n        return true;\n    }\n\n    private _setLocationToBuilding() {\n        log('MapsIndoors', 'Settings location to building:', [\n            this._org.building?.display_name || this._org.building?.name,\n            this._org.building?.location,\n        ]);\n        const [lat, long] = this._org.building?.location.split(',');\n        if (!this.map_instance) return;\n        this.map_instance.setCenter({\n            lat: parseFloat(lat),\n            lng: parseFloat(long),\n        });\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (!updated_location?.coords) return;\n        log(\n            'MapsIndoors',\n            'Settings location to user:',\n            updated_location.coords,\n            'warn',\n        );\n        const { latitude, longitude } = updated_location.coords;\n        if (\n            latitude !== this.user_latitude ||\n            longitude !== this.user_longitude\n        ) {\n            this.user_latitude = latitude;\n            this.user_longitude = longitude;\n            this.getRoute(this.selected_destination);\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError(`Error retrieving your geolocation. [${error.message}]`);\n    }\n\n    public async getRoute(location: any) {\n        this.maps_service?.highlight([]);\n        if (!this.directions_service || !location) return;\n        log('MapsIndoors', 'Getting route to location:', [\n            location,\n            this.user_latitude,\n            this.user_longitude,\n        ]);\n        this.selected_destination = location;\n        const destination = {\n            lat: location.properties.anchor.coordinates[1],\n            lng: location.properties.anchor.coordinates[0],\n            floor: location.properties.floor,\n        };\n        const level_id: string = (this.floor_mapping || {})[\n            location.properties.floor\n        ];\n        if (level_id) this._state.setLevel(level_id);\n\n        if (\n            !this._userWithinRadius(\n                [this.user_latitude, this.user_longitude],\n                1000,\n            )\n        ) {\n            this.map_instance.setZoom(19);\n            this.map_instance.setCenter(destination);\n            this.maps_service.setFloor(destination.floor);\n            this.maps_service.highlight([location.id]);\n            return;\n        }\n\n        if (!this.user_latitude || !this.user_longitude) {\n            return notifyError('Unable to find a route.');\n        }\n\n        const origin: any = {\n            lat: this.user_latitude,\n            lng: this.user_longitude,\n        };\n\n        const routeParameters = {\n            origin: origin,\n            destination: destination,\n        };\n\n        const result = await this.directions_service\n            .getRoute(routeParameters)\n            .catch((e) => {\n                log(\n                    'MapsIndoors',\n                    'Error fetching route: ',\n                    e.message || e,\n                    'warn',\n                );\n                const origin_error =\n                    e instanceof TypeError && e.message?.includes('origin');\n                if (!origin_error) return;\n                notifyError('Error: Origin location is outside of map area.');\n            });\n        if (!result) return;\n        this.directions_renderer?.setRoute(result);\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (!this.styles) return;\n        const promises: Promise<void>[] = [];\n        for (const key in this.styles) {\n            const colour = this.styles[key]['fill'] as string;\n            if (key) {\n                const updated_key = key.substring(1);\n                promises.push(this._setPolygonFill(updated_key, colour));\n            }\n        }\n        return await Promise.all(promises);\n    }\n\n    public async mapActions() {\n        return this.actions?.reduce((accumulator, currentValue) => {\n            accumulator[currentValue.id] = currentValue;\n            return accumulator;\n        }, {});\n    }\n\n    private _setPolygonFill(location_id: string, colour: string) {\n        return this.maps_service?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    InjectionToken,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, MapsPeopleService, log } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { ExploreStateService } from 'libs/explore/src/lib/explore-state.service';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nexport interface MapOptions {\n    disable_zoom?: boolean;\n    disable_pan?: boolean;\n    controls?: boolean;\n}\n\nexport interface MapMetadata {\n    styles?: ViewerStyles;\n    features?: ViewerFeature[];\n    labels?: ViewerLabel[];\n    actions?: ViewAction[];\n}\n\n@Component({\n    selector: 'interactive-map',\n    template: `\n        <ng-container\n            *ngIf=\"!(use_mapsindoors$ | async); else mapsindoors_template\"\n        >\n            <map-renderer\n                [src]=\"src\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [reset]=\"reset\"\n                [styles]=\"styles || metadata?.styles\"\n                [features]=\"features || metadata?.features\"\n                [actions]=\"actions || metadata?.actions\"\n                [labels]=\"labels || metadata?.labels\"\n                (mapInfo)=\"mapInfo.next($event)\"\n            >\n                <ng-content></ng-content>\n            </map-renderer>\n        </ng-container>\n        <ng-template #mapsindoors_template>\n            <maps-indoors\n                [zone]=\"location\"\n                (zoneChange)=\"onLevelChange($event)\"\n                [(zoom)]=\"zoom\"\n                (zoomChange)=\"zoomChange.next($event)\"\n                [options]=\"options\"\n                [reset]=\"reset\"\n                [focus]=\"focus\"\n                [metadata]=\"metadata\"\n            >\n                <ng-content></ng-content>\n            </maps-indoors>\n        </ng-template>\n        <div\n            zoom\n            *ngIf=\"options?.controls\"\n            class=\"absolute bottom-16 right-1 border border-base-200 divide-y divide-base-200 shadow flex flex-col bg-base-100 text-base-content rounded overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom In\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * 1.1\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Zoom Out\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"zoom = zoom * (10 / 11)\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                matTooltip=\"Reset Zoom and Position\"\n                matTooltipPosition=\"left\"\n                class=\"rounded-none\"\n                (click)=\"reset = reset + 1\"\n            >\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class InteractiveMapComponent extends AsyncHandler {\n    @Input() public src: string;\n    @Input() public zoom = 1;\n    @Input() public center: any = { x: 0.5, y: 0.5 };\n    @Input() public reset = 0;\n    @Input() public metadata: MapMetadata = {};\n    @Input() public styles: any;\n    @Input() public features: any[];\n    @Input() public labels: any[];\n    @Input() public actions: any[];\n    @Input() public options: MapOptions = {};\n    @Input() public focus: string;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public centerChange = new EventEmitter<any>();\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public readonly use_mapsindoors$ = this._mapspeople.available$;\n\n    public get location() {\n        return this._org.levels.find((_) => _.map_id === this.src);\n    }\n\n    constructor(\n        private _mapspeople: MapsPeopleService,\n        private _org: OrganisationService,\n        private _explore: ExploreStateService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (\n            changes.actions ||\n            changes.labels ||\n            changes.styles ||\n            changes.features\n        ) {\n            this.metadata = {\n                actions: this.actions || [],\n                labels: this.labels || [],\n                styles: this.styles || {},\n                features: this.features || [],\n            };\n        }\n    }\n\n    public onLevelChange(zone: any) {\n        log(\n            'Map',\n            'Level changed to:',\n            zone?.display_name || zone?.name || zone\n        );\n        this._explore.setLevel(zone.id);\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2 border border-base-300\"\n        >\n            <pre\n                class=\"font-mono text-sm bg-base-200 p-2 rounded break-all w-full\"\n                >{{ formatted_json }}</pre\n            >\n        </div>\n    `,\n    styles: [\n        `\n            pre {\n                white-space: pre-wrap; /* Since CSS 2.1 */\n                white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n                white-space: -pre-wrap; /* Opera 4-6 */\n                white-space: -o-pre-wrap; /* Opera 7 */\n                word-wrap: break-word; /* Internet Explorer 5.5+ */\n            }\n        `,\n    ],\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\nconst ALLOWED_NUMBERS = '0123456789'.split('');\nconst ALLOWED_DECIMALS = '0123456789.'.split('');\nconst ALLOWED_LETTERS = 'abcdefghijklmnopqrstuvwxyz'.split('');\nconst ALLOWED_ALPHANUMERIC = 'abcdefghijklmnopqrstuvwxyz0123456789'.split('');\n\n@Directive({\n    selector: '[limitInput]',\n})\nexport class LimitInputDirective {\n    @Input() restriction:\n        | 'number'\n        | 'decimals'\n        | 'letters'\n        | 'alphanumeric'\n        | 'custom' = 'decimals';\n    @Input() custom_list: string[] = [];\n\n    constructor(private _el: ElementRef) {}\n\n    @HostListener('keydown', ['$event']) onKeyDown(event) {\n        const e: KeyboardEvent = event;\n        const key = e.key;\n        if (\n            ['ArrowLeft', 'ArrowRight', 'Tab', 'Backspace', 'Home'].indexOf(\n                key\n            ) !== -1 ||\n            // Allow: Ctrl+A\n            (e.key === 'a' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+C\n            (e.key === 'c' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+V\n            (e.key === 'v' && (e.ctrlKey || e.metaKey)) ||\n            // Allow: Ctrl+X\n            (e.key === 'x' && (e.ctrlKey || e.metaKey))\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        switch (this.restriction) {\n            case 'letters':\n                if (ALLOWED_LETTERS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'alphanumeric':\n                if (ALLOWED_ALPHANUMERIC.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'custom':\n                if (this.custom_list.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'decimals':\n                if (ALLOWED_DECIMALS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n            case 'number':\n            default:\n                if (ALLOWED_NUMBERS.indexOf(key) === -1) {\n                    e.preventDefault();\n                }\n                break;\n        }\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { take } from 'rxjs/operators';\nimport { AsyncHandler, shiftColorTowards } from '@placeos/common';\n\nexport interface Polygon {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** List of x, y coordinates from 0 to 1 */\n    points: [number, number][];\n}\n\nexport interface MapPolygonData {\n    draw_labels?: boolean;\n    draw_points?: boolean;\n    polygons$: Observable<Polygon[]>;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-canvas]',\n    template: `\n        <canvas\n            #canvas\n            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n            [style.width]=\"width * svg_ratio * zoom + '%'\"\n            [style.height]=\"width * svg_ratio * ratio * zoom + '%'\"\n        ></canvas>\n    `,\n    styles: [],\n})\nexport class MapCanvasComponent extends AsyncHandler implements OnInit {\n    public zoom = 1;\n    public ratio = 1;\n    public svg_ratio = 1;\n    public width = 10000;\n\n    @ViewChild('canvas', { static: true })\n    private canvas_element: ElementRef<HTMLCanvasElement>;\n\n    public get ratioed_height(): number {\n        return +(this.width * this.ratio).toFixed(2);\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: MapPolygonData) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'state',\n            combineLatest([\n                this._data.ratio$,\n                this._data.zoom$,\n                this._data.svg_ratio$,\n            ]).subscribe(([ratio, zoom, sr]) =>\n                this._handleMapChange(ratio, zoom, sr)\n            )\n        );\n        this.subscription(\n            'polygons',\n            this._data.polygons$.subscribe((list) =>\n                this._handleStateChange(list)\n            )\n        );\n    }\n\n    private async _handleMapChange(\n        ratio: number,\n        zoom: number,\n        svg_ratio: number\n    ) {\n        const old_ratio = this.ratio;\n        this.zoom = zoom;\n        this.ratio = ratio;\n        this.svg_ratio = svg_ratio;\n        const width = this.width / 10;\n        const height = (this.width * this.ratio) / 10;\n\n        if (old_ratio === ratio) return;\n\n        const canvas = this.canvas_element.nativeElement;\n        canvas.width = width;\n        canvas.height = height;\n\n        const polygons = await this._data.polygons$.pipe(take(1)).toPromise();\n        this._handleStateChange(polygons);\n    }\n\n    private _handleStateChange(polygon_list: Polygon[]): void {\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        polygon_list.forEach((poly) => this._drawPolygon(poly));\n    }\n\n    private _drawPolygon(polygon: Polygon) {\n        const points = polygon.points;\n        if (!points?.length) return;\n        const canvas = this.canvas_element.nativeElement;\n        const ctx = canvas.getContext('2d');\n        const width = canvas.width;\n        const height = canvas.height;\n        // Draw polygon\n        ctx.fillStyle = polygon.color + '80';\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.fill();\n        // Draw Outline\n        ctx.strokeStyle = shiftColorTowards(polygon.color, '#888888', 0.5);\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(points[0][0] * width, points[0][1] * height);\n        points.forEach(([x, y]) => ctx.lineTo(x * width, y * height));\n        ctx.closePath();\n        ctx.stroke();\n        // Draw Points\n        if (this._data.draw_points !== false) {\n            ctx.fillStyle = '#fff';\n            ctx.strokeStyle = polygon.color;\n            ctx.lineWidth = 4;\n            points.forEach(([x, y]) => {\n                ctx.beginPath();\n                ctx.arc(x * width, y * height, 8, 0, Math.PI * 2);\n                ctx.fill();\n                ctx.stroke();\n            });\n        }\n        // Draw Text\n        if (this._data.draw_labels !== false) {\n            const center = points.reduce(\n                (acc, [x, y]) => [acc[0] + x, acc[1] + y],\n                [0, 0]\n            );\n            center[0] /= points.length;\n            center[1] /= points.length;\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = '#FFF';\n            ctx.font = '32px sans-serif';\n            ctx.fillText(\n                polygon.name,\n                center[0] * width + 1,\n                center[1] * height + 2\n            );\n            ctx.fillStyle = '#000';\n            ctx.fillText(polygon.name, center[0] * width, center[1] * height);\n        }\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler, MapsPeopleService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <interactive-map\n                    class=\"pointer-events-none\"\n                    [src]=\"level?.map_id\"\n                    [focus]=\"item?.map_id\"\n                    [features]=\"features\"\n                    [options]=\"{\n                        disable_pan: true,\n                        disable_zoom: true\n                    }\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner\n                ></interactive-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\nimport { get } from 'http';\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `map-renderer`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class MapRendererComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n    /** Number of times to reset the map */\n    @Input() public reset = 0;\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    @Output() public mapInfo = new EventEmitter<any>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>,\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n              ? 'template'\n              : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue,\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n        if (\n            changes.reset &&\n            changes.reset.currentValue !== changes.reset.previousValue\n        ) {\n            this.zoom = 1;\n            this.center = { x: 0.5, y: 0.5 };\n            this.updateDisplay();\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout(\n                'create_view',\n                () => this.createView().catch((e) => console.warn(e)),\n                300,\n            );\n        }\n        const simp_url = this.src?.toLowerCase() || '';\n        if (!simp_url.includes('svg') && !simp_url.includes('upload')) return;\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                try {\n                    updateViewer(this.viewer, {\n                        styles: this.styles,\n                        features: [],\n                        labels: this.labels,\n                        actions: this.actions,\n                        options: this.options,\n                    });\n                    removeViewer(this.viewer);\n                } catch (e) {\n                    console.warn(e);\n                    return;\n                }\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=30;path=/api/engine/v2/uploads;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            }).catch((e) => {\n                console.warn(e);\n                return '';\n            });\n            this.loading = false;\n            if (!this.viewer) return;\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                }),\n            );\n            const viewer = getViewer(this.viewer);\n            this.mapInfo.emit(viewer.mappings);\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e)),\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id,\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                }),\n        );\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { MapMetadata } from './interactive-map.component';\nimport {\n    AsyncHandler,\n    MapsPeopleService,\n    calculateDistance,\n    log,\n    notifyError,\n    notifyWarn,\n    randomString,\n} from '@placeos/common';\nimport { MapService } from 'libs/common/src/lib/mapspeople.service';\nimport { take } from 'rxjs/operators';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\nconst DEFAULT_ZOOM = 18.5;\n\ninterface MapsIndoorServices {\n    mapsindoors: any;\n    view: any;\n    map: any;\n    directions: any;\n    directions_renderer: any;\n}\n\nconst RESOURCE_MAP: Record<string, any> = {};\n\n@Component({\n    selector: 'maps-indoors',\n    template: `\n        <div #map_container class=\"absolute inset-0 z-0\"></div>\n        <button\n            *ngIf=\"focus && !show_directions && options?.controls\"\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 bg-base-100 text-base-content shadow z-10 border-base-200 space-x-2\"\n            (click)=\"toggleDirections()\"\n        >\n            <app-icon>place</app-icon>\n            <div class=\"pr-2\">\n                {{ viewing_directions ? 'Hide' : 'Show' }} Directions\n            </div>\n            <mat-spinner diameter=\"24\" *ngIf=\"loading_directions\"></mat-spinner>\n        </button>\n    `,\n    styles: [``],\n})\nexport class MapsIndoorsComponent extends AsyncHandler implements OnInit {\n    @Input() public zone: BuildingLevel;\n    @Input() public metadata: MapMetadata;\n    @Input() public options: any;\n    @Input() public focus: string;\n    @Input() public zoom = DEFAULT_ZOOM;\n    @Input() public reset: number;\n    @Output() public zoomChange = new EventEmitter<number>();\n    @Output() public zoneChange = new EventEmitter<BuildingLevel>();\n\n    public id: string;\n    public show_directions = false;\n    public viewing_directions = false;\n    public loading_directions = false;\n    public ignore_zoom = false;\n\n    private _services: MapsIndoorServices;\n    private _floor_list: any[] = [];\n    private _last_building: string;\n\n    @ViewChild('map_container', { static: true })\n    private _container: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _maps_people: MapsPeopleService,\n        private _org: OrganisationService,\n    ) {\n        super();\n        const data =\n            sessionStorage.getItem('PLACEOS.mapsindoors.resources') || '{}';\n        const value = JSON.parse(data);\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                RESOURCE_MAP[key] = value[key];\n            }\n        }\n    }\n\n    public ngOnInit() {\n        this.id = randomString(8);\n        this._initialised.next(false);\n        this._initialiseServices();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (!this.is_initialised) {\n            return this.timeout('on_changes', () => this.ngOnChanges(changes));\n        }\n        if (changes.zone && this.zone) {\n            this._centerOnZone();\n        }\n        if (changes.focus && this.focus) {\n            this._focusOnLocation();\n        }\n        if (changes.metadata) {\n            this._updateMapStyling();\n        }\n        if (changes.zoom && this.zoom && !this.ignore_zoom) {\n            this._services?.map?.setZoom(this.zoom);\n        }\n        if (changes.reset) {\n            this._services?.map?.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        if (changes.options) {\n            this._addFloorSelector();\n        }\n    }\n\n    private _setResource(id: string, resource: any) {\n        RESOURCE_MAP[id] = resource;\n        this.timeout('set_resource', () => {\n            sessionStorage.setItem(\n                'PLACEOS.mapsindoors.resources',\n                JSON.stringify(RESOURCE_MAP),\n            );\n        });\n    }\n\n    private _initialiseServices() {\n        if (!this._maps_people.is_ready || !(window as any).mapsindoors) {\n            this.timeout('init', () => this._initialiseServices(), 1000);\n            return;\n        }\n        const [lat, long] = (\n            this._org.building?.location || `-33.8567844,151.2152967`\n        ).split(',');\n        const view_options: Record<string, any> = {\n            element: this._container.nativeElement,\n            center: { lat: parseFloat(lat), lng: parseFloat(long) },\n            zoom: DEFAULT_ZOOM,\n            maxZoom: 24,\n        };\n        let view_instance = null;\n        switch (this._maps_people.map_service) {\n            case MapService.GoogleMaps:\n                log('MapsIndoors', 'Using Google Maps API');\n                view_instance = new mapsindoors.mapView.GoogleMapsView(\n                    view_options,\n                );\n                break;\n            case MapService.Mapbox:\n                view_options.accessToken = this._maps_people.map_token;\n                log('MapsIndoors', 'Using Mapbox API');\n                view_instance = new mapsindoors.mapView.MapboxView(\n                    view_options,\n                );\n                break;\n        }\n        if (!view_instance) {\n            notifyWarn('Failed to initialise map view.');\n            return;\n        }\n        const provider =\n            this._maps_people.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider(\n                      this._maps_people.map_token,\n                  );\n        const maps_indoors = new mapsindoors.MapsIndoors({\n            mapView: view_instance,\n        });\n        this._services = {\n            mapsindoors: maps_indoors,\n            view: view_instance,\n            map: view_instance.getMap(),\n            directions: new mapsindoors.services.DirectionsService(provider),\n            directions_renderer: new mapsindoors.directions.DirectionsRenderer({\n                mapsIndoors: maps_indoors,\n            }),\n        };\n        this._initialised.next(true);\n        if (this.zone) {\n            this._services.map.setZoom(DEFAULT_ZOOM);\n            this._centerOnZone();\n        }\n        this._addFloorSelector();\n        // Add Events listenders\n        this._services.mapsindoors.addListener('building_changed', (e) =>\n            this._handleBuildingChange(e),\n        );\n        this._services.mapsindoors.addListener('floor_changed', (e) =>\n            this._handleLevelChange(e),\n        );\n        this._services.mapsindoors.addListener('zoom_changed', (e) =>\n            this._handleZoomChange(e),\n        );\n        this._services.mapsindoors.addListener('click', (e) =>\n            this._handleUserClick(e),\n        );\n        this.timeout(\n            'resize',\n            () => window.dispatchEvent(new Event('resize')),\n            100,\n        );\n        (window as any).maps_indoors = this._services;\n        this.timeout('focus', () => this._focusOnLocation());\n        this.timeout('init_zoom', () => this._handleZoomChange(DEFAULT_ZOOM));\n    }\n\n    public clearDirections() {\n        this._services.directions_renderer.setRoute(null);\n        this.viewing_directions = false;\n    }\n\n    private _last_position: GeolocationPosition;\n\n    public async toggleDirections() {\n        if (this.viewing_directions) {\n            this.clearDirections();\n            this._focusOnLocation();\n            return;\n        }\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        if (!items?.length) {\n            notifyError(`Unable to find location \"${this.focus}\".`);\n            return;\n        }\n        this.loading_directions = true;\n        const item = items[0];\n        const bld = this._org.buildings.find(\n            (bld) => bld.id === this.zone.parent_id,\n        );\n        const [d_lng, d_lat] = item.properties?.anchor?.coordinates ||\n            bld?.location.split(',') || [37.8136, 144.9631];\n        const options = { timeout: 10000, enableHighAccuracy: true };\n        navigator.geolocation.getCurrentPosition(\n            async (position: GeolocationPosition) => {\n                this._last_position = position;\n                this.setDirectionsFromLocation(\n                    {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude,\n                    },\n                    { lat: d_lat, lng: d_lng },\n                );\n            },\n            () => {\n                if (this._last_position) {\n                    this.setDirectionsFromLocation(\n                        {\n                            lat: this._last_position.coords.latitude,\n                            lng: this._last_position.coords.longitude,\n                        },\n                        { lat: d_lat, lng: d_lng },\n                    );\n                } else notifyError('Failed to get your current location.');\n            },\n            options,\n        );\n    }\n\n    public async setDirectionsFromLocation(\n        from: { lat: number; lng: number },\n        to: { lat: number; lng: number },\n    ) {\n        const distance = calculateDistance(to.lat, to.lng, from.lat, from.lng);\n        const routeParameters = {\n            origin: {\n                lat: from.lat,\n                lng: from.lng,\n            },\n            destination: { lat: to.lat, lng: to.lng },\n            travelMode: distance < 2 ? 'WALKING' : 'DRIVING',\n        };\n        const result = await this._services.directions\n            .getRoute(routeParameters)\n            .catch((e) => {\n                log(\n                    'MapsIndoors',\n                    'Error fetching route: ',\n                    e.message || e,\n                    'warn',\n                );\n                const origin_error =\n                    e instanceof TypeError && e.message?.includes('origin');\n                this.loading_directions = false;\n                if (!origin_error) return;\n                notifyError('Error: Origin location is outside of map area.');\n            });\n        if (!result) return;\n        this._services.directions_renderer.setRoute(result);\n        this.viewing_directions = true;\n        this.loading_directions = false;\n    }\n\n    private _handleZoomChange(level: number) {\n        this.timeout(\n            'zoom_change',\n            () => {\n                this.ignore_zoom = true;\n                this.zoom = level;\n                this.zoomChange.emit(level);\n                this.timeout(\n                    'reset_ignore_zoom',\n                    () => (this.ignore_zoom = false),\n                    50,\n                );\n            },\n            100,\n        );\n    }\n\n    private _handleBuildingChange(building: any) {\n        const id = building.externalId || building.id;\n        log('MapsIndoors', `Building switched to \"${id}\"`);\n        const floors = building.floors || {};\n        this._floor_list = Object.keys(floors).map((key) => ({\n            index: key,\n            ...floors[key],\n        }));\n        log('MapsIndoors', 'Floor List:', this._floor_list);\n        if (!this._services) return;\n        const bld = this._org.buildings.find(\n            (_) => _.id === id || _.map_id === id,\n        );\n        this.timeout('set_floor', () => {\n            const has_set_floor = this._setFloorFromZone();\n            if (!has_set_floor && building.defaultFloor) {\n                this._handleLevelChange(building.defaultFloor);\n            }\n        });\n        if (!bld) return;\n        this._org.building = bld;\n        this._last_building = bld.id;\n    }\n\n    private async _handleLevelChange(index: any) {\n        log('MapsIndoors', `Level switched to \"${index}\"`);\n        const floor = this._floor_list.find((_) => _.index === index);\n        const id = floor?.externalId || floor?.id;\n        if (!this._services) return;\n        const levels = await this._org.active_levels.pipe(take(1)).toPromise();\n        if (!levels) return;\n        const new_level = levels.find((_) => _.map_id === id || _.id === id);\n        if (!new_level) return;\n        this.zone = new_level;\n        this.zoneChange.emit(new_level);\n    }\n\n    private _handleUserClick(event: any) {\n        log('MapsIndoors', `Click occurred`, event);\n        const id =\n            event.properties?.externalId ||\n            event.properties?.roomId ||\n            event.id;\n        const actions = this.metadata?.actions || [];\n        log('MapsIndoors', `Registered Actions`, actions);\n        const ignore_actions = ['mousedown', 'touchstart', 'enter', 'leave'];\n        for (const action of actions) {\n            if (\n                (action.id === id || action.id === '*') &&\n                !ignore_actions.includes(action.action as any)\n            ) {\n                action.callback(event);\n                break;\n            }\n        }\n    }\n\n    private async _search(query: string): Promise<any[]> {\n        if (!this._services) return;\n        return mapsindoors?.services.LocationsService.getLocations({\n            q: query,\n        });\n    }\n\n    private async _updateMapStyling() {\n        if (!this._services) return;\n        const styles = this.metadata?.styles || {};\n        for (const id in styles) {\n            if (!styles[id].fill) continue;\n            let resource = RESOURCE_MAP[id];\n            if (!resource) {\n                const id_simple = id.replace(/#/, '');\n                const list = await this._search(id_simple);\n                if (!list.length) continue;\n                resource = list.find(\n                    (_) =>\n                        _.properties?.externalId === id_simple ||\n                        _.properties?.roomId === id_simple ||\n                        _.id === id_simple,\n                );\n                if (resource) this._setResource(id, resource);\n            }\n            if (!resource) continue;\n            const value = {\n                extrusionHeight: 0,\n                extrusionVisible: false,\n                polygonVisible: true,\n                polygonFillColor: styles[id].fill,\n            };\n            this._services.mapsindoors.setDisplayRule(resource.id, value);\n        }\n    }\n\n    private async _focusOnLocation() {\n        if (!this.focus) return;\n        const items = await this._search(this.focus);\n        this.clearDirections();\n        if (!items?.length) {\n            notifyError(`Unable to find location ${this.focus}.`);\n            return;\n        }\n        const item =\n            items.find((_) => _.properties?.externalId === this.focus) ||\n            items[0];\n        const bld = this._org.buildings.find(\n            (bld) => bld.id === this.zone.parent_id,\n        );\n        const [lng, lat] = item.properties?.anchor?.coordinates ||\n            bld?.location.split(',') || [37.8136, 144.9631];\n        this._services.map.setZoom(DEFAULT_ZOOM);\n        this._services.map.setCenter({ lat, lng });\n        this._services.mapsindoors.setFloor(item.properties?.floor);\n        this._services.mapsindoors.highlight([item.id]);\n    }\n\n    private _centerOnZone() {\n        if (\n            !this._services ||\n            !this.zone ||\n            this.zone.parent_id === this._last_building ||\n            this.zone.id === this._last_building\n        )\n            return;\n        this.timeout('set_center', () => {\n            const bld = this._org.buildings.find(\n                (bld) => bld.id === this.zone.parent_id,\n            );\n            if (!bld) return;\n            const [lat, long] = bld?.location.split(',');\n            if (!this.focus) {\n                this._services.map.setCenter({\n                    lat: parseFloat(lat),\n                    lng: parseFloat(long),\n                });\n            }\n            this._setFloorFromZone();\n            this._last_building = this.zone.id;\n        });\n    }\n\n    private _setFloorFromZone() {\n        if (!this.zone.map_id || !this._services) return false;\n        const map_id = this.zone.map_id;\n        const floor = this._floor_list.find(\n            (_) =>\n                _.index === map_id ||\n                _.externalId === map_id ||\n                _.id === map_id,\n        );\n        if (!floor) return false;\n        this._services.mapsindoors.setFloor(floor.index);\n        return true;\n    }\n\n    private _added_floor_selector = false;\n\n    private _addFloorSelector() {\n        if (!this.options?.controls || this._added_floor_selector) return;\n        const element = document.createElement('div');\n        new mapsindoors.FloorSelector(element, this._services.mapsindoors);\n        if (this._maps_people.map_service === MapService.GoogleMaps) {\n            this._services.map.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(element);\n        } else {\n            this._services.map.addControl({\n                onAdd: () => element,\n                onRemove: () => {},\n            });\n        }\n        this._added_floor_selector = true;\n    }\n}\n","import { Pipe } from '@angular/core';\n\nexport function padLength(value: number | string, length: number = 2): string {\n    let str = `${value}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n@Pipe({\n    name: 'mediaDuration',\n})\nexport class MediaDurationPipe {\n    public transform(period_length: number, show_ms: boolean = false): string {\n        const hours = Math.floor(period_length / 60 / 60);\n        const minutes = Math.floor((period_length / 60) % 60);\n        const seconds = Math.floor(period_length % 60);\n        const milliseconds = Math.floor((period_length * 1000) % 1000);\n        let str = `${padLength(minutes)}:${padLength(seconds)}`;\n        if (show_ms) {\n            str += `.${padLength(milliseconds, 3)}`;\n        }\n        if (hours > 0) str = `${padLength(hours)}:${str}`;\n        return str;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"fixed top-0 left-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { debounceTime, map, shareReplay, take } from 'rxjs/operators';\n\nexport interface TableColumn {\n    key: string;\n    name: string;\n    sortable?: boolean;\n    filterable?: boolean;\n    content?: string | TemplateRef<any> | Component;\n    size?: string;\n    show?: boolean;\n    empty?: string;\n}\n\n@Component({\n    selector: 'simple-table',\n    template: `\n        <div\n            role=\"table\"\n            class=\"grid border border-base-300\"\n            [style.gridTemplateColumns]=\"column_template\"\n            (click)=\"active_row >= 0 ? rowClicked.emit(active_row) : null\"\n            (touchend)=\"active_row = -1\"\n            (mouseleave)=\"active_row = -1\"\n        >\n            <div\n                *ngIf=\"selectable\"\n                id=\"column-selector\"\n                class=\"sticky top-0 flex items-center justify-between px-2 border-r border-b border-base-200 bg-base-300 min-h-full z-20\"\n                [style.gridColumn]=\"'1 / 2'\"\n            >\n                <mat-checkbox\n                    [checked]=\"selected.length === (data_view$ | async)?.length\"\n                    [indeterminate]=\"\n                        selected.length > 0 &&\n                        selected.length < (data_view$ | async)?.length\n                    \"\n                    (change)=\"selectAll($event.checked)\"\n                ></mat-checkbox>\n            </div>\n            <button\n                header\n                matRipple\n                *ngFor=\"let column of active_columns; let i = index\"\n                [id]=\"'column-' + column.key\"\n                class=\"sticky top-0 flex items-center justify-between p-4 border-b border-base-200 bg-base-300 min-h-full z-20\"\n                [style.gridColumn]=\"\n                    1 +\n                    i +\n                    (selectable ? 1 : 0) +\n                    ' / ' +\n                    (2 + i + (selectable ? 1 : 0))\n                \"\n                [class.pointer-events-none]=\"\n                    !sortable || column.sortable === false\n                \"\n                (click)=\"setSort(column.key)\"\n                [class.active]=\"sort?.key === column.key\"\n                [class.border-r]=\"i !== active_columns.length - 1\"\n                [class.width]=\"column.size\"\n            >\n                <div class=\"font-medium\">{{ column.name || column.key }}</div>\n                <app-icon\n                    class=\"text-[1.25em]\"\n                    *ngIf=\"sortable && column.sortable !== false\"\n                >\n                    {{\n                        sort?.key === column.key && sort?.reverse\n                            ? 'arrow_upward'\n                            : 'arrow_downward'\n                    }}\n                </app-icon>\n            </button>\n            <ng-container\n                *ngFor=\"\n                    let row of data_view$\n                        | async\n                        | slice\n                            : page * (page_size || 9999)\n                            : (page + 1) * (page_size || 9999);\n                    let i = index\n                \"\n            >\n                <div\n                    *ngIf=\"selectable\"\n                    id=\"column-selector\"\n                    class=\"flex items-center justify-between px-2 border-r border-base-200 min-h-full z-10\"\n                    [style.gridColumn]=\"'1 / 2'\"\n                    [class.border-b]=\"i !== (data_view$ | async)?.length - 1\"\n                    (mouseenter)=\"active_row = i\"\n                    (touchstart)=\"active_row = i\"\n                >\n                    <mat-checkbox\n                        [checked]=\"selected.includes(i)\"\n                        (change)=\"select(i, $event.checked)\"\n                    ></mat-checkbox>\n                </div>\n                <div\n                    *ngFor=\"let column of active_columns; let j = index\"\n                    class=\"flex items-center justify-between border-base-200 min-h-full z-10\"\n                    [style.gridColumn]=\"\n                        1 +\n                        j +\n                        (selectable ? 1 : 0) +\n                        ' / ' +\n                        (2 + j + (selectable ? 1 : 0))\n                    \"\n                    [class.border-b]=\"i !== (data_view$ | async)?.length - 1\"\n                    [class.border-r]=\"j !== active_columns.length - 1\"\n                    [class.width]=\"column.size\"\n                    (mouseenter)=\"active_row = i\"\n                    (touchstart)=\"active_row = i\"\n                >\n                    <ng-container [ngSwitch]=\"columnType(column)\">\n                        <div class=\"p-4\" *ngSwitchDefault>\n                            {{\n                                row[column.key] ??\n                                    (column.key === '_index'\n                                        ? i + 1\n                                        : row[column.key])\n                            }}\n                            <span\n                                *ngIf=\"\n                                    (row[column.key] == null ||\n                                        row[column.key] === '') &&\n                                    column.key !== '_index'\n                                \"\n                                class=\"opacity-30\"\n                            >\n                                {{ column.empty || 'N/A' }}\n                            </span>\n                        </div>\n                        <ng-container *ngSwitchCase=\"'template'\">\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    column.content;\n                                    context: {\n                                        first: i === 0,\n                                        last:\n                                            i ===\n                                                (data_view$ | async)?.length -\n                                                    1 ||\n                                            i ===\n                                                (data_view$ | async)?.length -\n                                                    1,\n                                        index: i,\n                                        data: row[column.key],\n                                        row: row,\n                                        key: column.key,\n                                        name: column.name || column.key,\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </ng-container>\n                </div>\n                <div\n                    child-node\n                    *ngIf=\"show_children[row.id] && child_template\"\n                    [style.gridColumn]=\"'span ' + active_columns.length\"\n                    class=\"border-b last:border-t last:border-b-0 border-base-200\"\n                >\n                    <ng-container\n                        *ngTemplateOutlet=\"\n                            child_template;\n                            context: {\n                                first: i === 0,\n                                last:\n                                    i === (data_view$ | async)?.length - 1 ||\n                                    i === (data_view$ | async)?.length - 1,\n                                index: i,\n                                row: row,\n                            }\n                        \"\n                    ></ng-container>\n                </div>\n            </ng-container>\n            <div\n                *ngIf=\"!(data_view$ | async)?.length\"\n                [style.gridColumnStart]=\"'span ' + active_columns.length\"\n                class=\"flex items-center justify-center p-8 opacity-30\"\n            >\n                {{ empty_message }}\n            </div>\n            <!-- TODO: Add pagination -->\n        </div>\n        <div\n            *ngIf=\"page_size\"\n            class=\"sticky bottom-0 w-full flex items-center justify-end space-x-2 p-2 bg-base-200\"\n        >\n            <div class=\"px-4 py-2\">\n                {{ page * (page_size || 9999) + 1 }} &ndash;\n                {{\n                    (page + 1) * (page_size || 9999) > total_count\n                        ? total_count\n                        : (page + 1) * (page_size || 9999)\n                }}\n                of {{ total_count }}\n            </div>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === 0\"\n                (click)=\"setPage(page - 1)\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === total_pages - 1\"\n                (click)=\"setPage(page + 1)\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n            <button icon matRipple [disabled]=\"page === 0\" (click)=\"setPage(0)\">\n                <app-icon>first_page</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                [disabled]=\"page === total_pages - 1\"\n                (click)=\"setPage(total_pages - 1)\"\n            >\n                <app-icon>last_page</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            :host > button {\n                min-width: 100%;\n            }\n\n            [header] app-icon {\n                opacity: 0;\n            }\n            [header]:hover app-icon {\n                opacity: 0.3;\n            }\n            [header]:hover.pointer-events-none app-icon {\n                opacity: 0;\n            }\n            [header].active app-icon {\n                opacity: 1;\n            }\n        `,\n    ],\n})\nexport class SimpleTableComponent<T extends {} = any> extends AsyncHandler {\n    @Input() public data: T[] | Observable<T[]>;\n    @Input() public columns: TableColumn[] = [];\n    @Input() public selectable = false;\n    @Input() public filter: string = '';\n    @Input() public sortable = false;\n    @Input() public selected: number[] = [];\n    @Input() public page_size = 0;\n    @Input() public empty_message = 'No data to list';\n    @Input() public child_template: TemplateRef<any> = null;\n    @Input() public show_children: Record<string, boolean> = {};\n    @Output() public selectedChange = new EventEmitter<number[]>();\n    @Output() public rowClicked = new EventEmitter<number>();\n\n    public page = 0;\n    public total_count = 0;\n    public total_pages = 0;\n    public active_row = -1;\n    public active_columns = [];\n\n    private _data$ = new BehaviorSubject<T[]>([]);\n    private _filter$ = new BehaviorSubject<string>('');\n    private _sort$ = new BehaviorSubject<{ key: string; reverse: boolean }>(\n        null,\n    );\n\n    public data_view$?: Observable<T[]> = null;\n\n    public get sort() {\n        return this._sort$.getValue();\n    }\n\n    public get data$(): Observable<T[]> {\n        return this.data instanceof Array ? this._data$ : this.data;\n    }\n\n    public get column_count() {\n        return this.active_columns.length + (this.selectable ? 1 : 0);\n    }\n\n    public get column_template() {\n        const template = this.active_columns\n            .map((_) => _.size || 'auto')\n            .join(' ');\n        return this.selectable ? `3.5rem ${template}` : template;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.filter) {\n            this._filter$.next(this.filter);\n        }\n        if (changes.columns) {\n            this.active_columns = this.columns.filter((_) => _.show !== false);\n        }\n        if (changes.data) {\n            this.data_view$ = combineLatest([\n                this.data$,\n                this._filter$,\n                this._sort$,\n            ]).pipe(\n                debounceTime(300),\n                map(([data, filter, sort]) => {\n                    data = [...data];\n                    if (filter) {\n                        data = data.filter((_) =>\n                            Object.values(_).some((i) =>\n                                JSON.stringify(i)\n                                    ?.toLowerCase()\n                                    .includes((filter || '').toLowerCase()),\n                            ),\n                        );\n                    }\n                    if (sort && data.length) {\n                        const type = typeof data[0][sort.key];\n                        if (type === 'number') {\n                            data = data.sort((a, b) => {\n                                const result = a[sort.key] - b[sort.key];\n                                return sort.reverse ? -result : result;\n                            });\n                        } else {\n                            data = data.sort((a, b) => {\n                                const a_value = JSON.stringify(\n                                    a[sort.key] || '',\n                                );\n                                const b_value = JSON.stringify(\n                                    b[sort.key] || '',\n                                );\n                                const result = a_value.localeCompare(b_value);\n                                return sort.reverse ? -result : result;\n                            });\n                        }\n                    }\n                    this.selected = [];\n                    this.page = 0;\n                    if (this.page_size) {\n                        this.total_count = data.length;\n                        this.total_pages = Math.ceil(\n                            this.total_count / this.page_size,\n                        );\n                    }\n                    return data;\n                }),\n                shareReplay(1),\n            );\n        }\n    }\n\n    public columnType(column: TableColumn) {\n        return column.content instanceof TemplateRef ? 'template' : 'raw';\n    }\n\n    public gridSquare(row: number, column: number) {\n        return `${row} / ${column} / ${row + 1} / ${column + 1}`;\n    }\n\n    public select(index: number, state: boolean) {\n        if (state) this.selected.push(index);\n        else this.selected = this.selected.filter((i) => i !== index);\n    }\n\n    public async selectAll(state: boolean) {\n        const list = await this.data_view$.pipe(take(1)).toPromise();\n        if (state) this.selected = list.map((_, i) => i);\n        else this.selected = [];\n    }\n\n    public setSort(key: string) {\n        const sort = this._sort$.getValue();\n        if (!sort || sort.key !== key) {\n            this._sort$.next({ key, reverse: false });\n        } else if (!sort.reverse) {\n            this._sort$.next({ key, reverse: true });\n        } else {\n            this._sort$.next(null);\n        }\n    }\n\n    public setPage(page: number) {\n        this.timeout('set_page', () => (this.page = page), 100);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-2xl px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'thumbnail',\n})\nexport class ThumbnailPipe implements PipeTransform {\n    private _thumbnail_cache: Record<string, string> = {};\n\n    public transform(url: string): string {\n        if (!url) return null;\n        if (!this._thumbnail_cache[url]) {\n            createVideoThumbnail(url)\n                .then((_) => (this._thumbnail_cache[url] = _))\n                .catch((GENERATING[url] = null));\n        }\n        return this._thumbnail_cache[url] || '';\n    }\n}\n\nconst GENERATING = {};\n\nfunction createVideoThumbnail(url: string) {\n    if (!GENERATING[url]) {\n        GENERATING[url] = new Promise<string>((resolve) => {\n            var video = document.createElement('video');\n            video.crossOrigin = 'anonymous';\n            video.src = url;\n            var canvas = document.createElement('canvas');\n            var context = canvas.getContext('2d');\n            video.addEventListener('loadedmetadata', () => {\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                video.currentTime = 1;\n            });\n\n            video.addEventListener('seeked', () => {\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n                var thumbnail = canvas.toDataURL('image/png');\n                resolve(thumbnail);\n            });\n            video.load();\n        });\n    }\n    return GENERATING[url];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img auth class=\"h-full w-full\" [source]=\"user.photo\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\nimport { first } from 'rxjs/operators';\nimport { WorkLocationTooltipComponent } from './work-location-tooltip.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"building_select\"\n                class=\"relative\"\n                *ngIf=\"!disable_building_select && !use_region\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                *ngIf=\"features.includes('wfh')\"\n                customTooltip\n                [content]=\"work_location_tooltip\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length || !desk_height\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"desk_height_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n                *ngIf=\"desk_height\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>desk</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Desk Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <ng-template #desk_height_tooltip>\n                <desk-height-presets></desk-height-presets>\n            </ng-template>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n    public readonly work_location_tooltip = WorkLocationTooltipComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get desk_height() {\n        return this._settings.get('app.desks.height_enabled');\n    }\n\n    public get use_region(): boolean {\n        return this._settings.get('app.use_region');\n    }\n\n    public get disable_building_select() {\n        return this._settings.get('app.disable_building_select');\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank',\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md',\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n\n    public saveSetting(name: string, value: any) {\n        this._settings.saveUserSetting(name, value);\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.keyset) {\n            if (!this.keyset) this.keyset = DEFAULT_KEYS;\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, reloadUserData } from '@placeos/common';\nimport { updateUser } from '@placeos/ts-client';\nimport { WorktimePreference } from '@placeos/users';\nimport {\n    format,\n    parse,\n    set,\n    startOfMinute,\n    isBefore,\n    addDays,\n    startOfDay,\n} from 'date-fns';\n\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\n\n@Component({\n    selector: 'work-location-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center justify-between px-2\">\n                <h3 class=\"px-2 py-4 font-medium\">Work Location</h3>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Work Location Preferences\"\n                    matTooltipPosition=\"left\"\n                    class=\"hover:bg-base-200\"\n                    (click)=\"editSettings()\"\n                >\n                    <app-icon>edit_note</app-icon>\n                </button>\n            </div>\n\n            <h3 class=\"px-4 font-medium text-sm\">\n                {{ now | date: 'fullDate' }}\n            </h3>\n            <div\n                class=\"pb-2\"\n                *ngIf=\"active_preference?.blocks?.length; else empty_state\"\n            >\n                <div\n                    class=\"relative flex items-center px-4 py-2\"\n                    *ngFor=\"\n                        let block of active_preference?.blocks;\n                        let i = index\n                    \"\n                    [class.opacity-30]=\"now > timeFrom(block.end_time)\"\n                >\n                    <div\n                        class=\"rounded-full h-10 w-10 flex items-center justify-center bg-base-200 z-20\"\n                        [class.bg-base-200]=\"\n                            now < timeFrom(block.start_time) ||\n                            now > timeFrom(block.end_time)\n                        \"\n                        [class.bg-info]=\"\n                            now >= timeFrom(block.start_time) &&\n                            now <= timeFrom(block.end_time)\n                        \"\n                        [class.text-info-content]=\"\n                            now >= timeFrom(block.start_time) &&\n                            now <= timeFrom(block.end_time)\n                        \"\n                    >\n                        <app-icon class=\"text-2xl\">{{\n                            location_icon(timeFrom(block.start_time))\n                        }}</app-icon>\n                    </div>\n                    <div class=\"flex-1 ml-2\">\n                        <button\n                            matRipple\n                            class=\"font-medium flex items-center space-x-2 rounded hover:bg-base-200 px-2 py-1\"\n                            [matMenuTriggerFor]=\"menu\"\n                        >\n                            <div>\n                                {{ location(timeFrom(block.start_time)) }}\n                            </div>\n                            <app-icon>expand_more</app-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\">\n                            <button\n                                mat-menu-item\n                                *ngFor=\"let loc of locations\"\n                                (click)=\"setLocation(i, loc.id)\"\n                            >\n                                <div class=\"flex items-center space-x-2\">\n                                    <app-icon class=\"text-2xl\">{{\n                                        loc.icon\n                                    }}</app-icon>\n                                    <div class=\"pr-8\">{{ loc.name }}</div>\n                                </div>\n                            </button>\n                        </mat-menu>\n                        <div class=\"text-xs opacity-60 px-2\">\n                            {{ timeFrom(block.start_time) | date: 'shortTime' }}\n                            &ndash;\n                            {{ timeFrom(block.end_time) | date: 'shortTime' }}\n                        </div>\n                    </div>\n                    <div\n                        *ngIf=\"i > 0\"\n                        class=\"absolute -top-2 left-7 h-4 w-0 border-l-2 border-dashed border-base-200 -translate-x-px\"\n                    ></div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"flex flex-col items-center justify-center p-8 space-y-2 w-full opacity-30\"\n            >\n                <app-icon class=\"text-6xl\">event_busy</app-icon>\n                <p class=\"text-center text-sm\">No work location for today.</p>\n                <p class=\"text-center text-sm\">\n                    Click the edit button on the top right to edit your work\n                    location preferences.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WorkLocationTooltipComponent {\n    public readonly locations = [\n        { id: 'wfo', name: 'Office', icon: 'business' },\n        { id: 'wfh', name: 'Home', icon: 'home' },\n        { id: 'aol', name: 'Leave', icon: 'event_busy' },\n    ];\n    public settings: WorktimePreference[];\n    public overrides: Record<string, WorktimePreference>;\n\n    public get active_preference() {\n        const date = format(new Date(), 'yyyy-MM-dd');\n        if (this.overrides[date]) return this.overrides[date];\n        return this.settings.find(\n            (pref) => pref.day_of_week === new Date().getDay(),\n        );\n    }\n\n    public get now() {\n        return startOfMinute(Date.now()).getTime();\n    }\n\n    constructor(private _dialog: MatDialog) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        this.settings = user.work_preferences;\n        this.overrides = user.work_overrides;\n    }\n\n    public location_icon(time: number) {\n        const user = currentUser();\n        return user.location_icon(time + 1 * 60 * 1000);\n    }\n\n    public location(time: number) {\n        const user = currentUser();\n        return user.location_name_time(time + 1 * 60 * 1000);\n    }\n\n    public timeFrom(hours: number) {\n        return startOfMinute(\n            set(new Date(), {\n                hours: Math.floor(hours),\n                minutes: (hours * 60) % 60,\n                seconds: 0,\n                milliseconds: 0,\n            }),\n        ).getTime();\n    }\n\n    public editSettings() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async setLocation(index: number, location: string) {\n        const user = currentUser();\n        const active_preference = this.active_preference;\n        const date = format(Date.now(), 'yyyy-MM-dd');\n        const new_overrides = {\n            ...user.work_overrides,\n            [date]: {\n                ...active_preference,\n                blocks: [\n                    ...active_preference.blocks.slice(0, index),\n                    {\n                        ...active_preference.blocks[index],\n                        location,\n                    },\n                    ...active_preference.blocks.slice(index + 1),\n                ],\n            },\n        };\n        for (const key in new_overrides) {\n            const key_date = parse(key, 'yyyy-MM-dd', new Date());\n            if (\n                !new_overrides[key].blocks.length ||\n                isBefore(key_date, addDays(startOfDay(Date.now()), -1))\n            ) {\n                delete new_overrides[key];\n            }\n        }\n        this.overrides = new_overrides;\n        await updateUser(user.id, {\n            ...user,\n            work_overrides: new_overrides,\n        } as any).toPromise();\n        reloadUserData();\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { PlaceZone, showZone } from '@placeos/ts-client';\n\nconst ZONE_LIST: Record<string, PlaceZone> = {};\nconst EMPTY_ZONE = new PlaceZone();\n\n@Pipe({\n    name: 'zone',\n})\nexport class ZonePipe implements PipeTransform {\n    public async transform(id: string): Promise<PlaceZone> {\n        if (ZONE_LIST[id]) return ZONE_LIST[id];\n        const zone = await showZone(id)\n            .toPromise()\n            .catch((_) => null);\n        if (!zone) return EMPTY_ZONE;\n        ZONE_LIST[id] = zone;\n        return zone;\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\nexport * from './lib/group-event-details-modal.component';\nexport * from './lib/group-event-card.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div\n                class=\"flex items-center border-b border-base-200 p-2 min-h-12\"\n            >\n                <button\n                    close\n                    icon\n                    matRipple\n                    *ngIf=\"!hide_close\"\n                    (click)=\"close.emit()\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center font-medium\" i18n>\n                    {{ list.length }}\n                    {{\n                        custom_title\n                            ? custom_title\n                            : list.length === 1\n                              ? 'Attendee'\n                              : 'Attendees'\n                    }}\n                </div>\n                <div class=\"w-12\" *ngIf=\"!hide_close\"></div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <ng-container *ngFor=\"let user of list\">\n                    <div\n                        attendee\n                        class=\"flex items-center p-2 space-x-2 hover:bg-base-200\"\n                        *ngIf=\"\n                            !user.resource && (host !== user.email || show_host)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                        <div class=\"flex-1 w-1/2\">\n                            <div class=\"truncate\">{{ user.name }}</div>\n                            <div\n                                class=\"opacity-60 text-sm\"\n                                *ngIf=\"host === user.email\"\n                            >\n                                Host\n                            </div>\n                        </div>\n                        <div class=\"p-2\">\n                            <div\n                                class=\"h-3 w-3 rounded-full\"\n                                [class.bg-success]=\"user.checked_in\"\n                                [class.bg-pending]=\"!user.checked_in\"\n                                [matTooltip]=\"\n                                    user.checked_in\n                                        ? 'Checked in'\n                                        : 'Not checked in'\n                                \"\n                            ></div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public show_host = true;\n    @Input() public list: User[] = [];\n    @Input() public hide_close = false;\n    @Input() public custom_title = '';\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : '',\n            ),\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email,\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format,\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format,\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            if (this.event.extension_data?.shared_event) {\n                this._dialog.open(GroupEventDetailsModalComponent, {\n                    data: { event: this.event, concierge: false },\n                });\n                return;\n            }\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit()),\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_),\n                ),\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { getEventMetadata } from './events.fn';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon class=\"text-2xl\">{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"pr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-12 w-12\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 my-2 text-lg font-medium\" i18n>\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                order\n                                *ngFor=\"let order of event.valid_catering\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Order at\n                                            {{\n                                                order.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ order.item_count }} item(s) for\n                                            {{\n                                                order.total_cost / 100\n                                                    | currency: currency_code\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_order[order.id]\n                                                ? 'Hide order items'\n                                                : 'Show order items'\n                                        \"\n                                        (click)=\"\n                                            show_order[order.id] =\n                                                !show_order[order.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_order[order.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_order[order.id] ? 'show' : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of order.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                            <span\n                                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                                *ngIf=\"item.option_list?.length\"\n                                                [matTooltip]=\"optionList(item)\"\n                                            >\n                                                {{\n                                                    item.option_list?.length ||\n                                                        '0'\n                                                }}\n                                                option(s)\n                                            </span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                        >\n                                            {{\n                                                item.unit_price_with_options /\n                                                    100\n                                                    | currency: currency_code\n                                            }}\n                                            ea\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true,\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"body\"\n                        [innerHTML]=\"\n                            (body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ event.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of event.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                        'rejected'\n                                                      ? 'close'\n                                                      : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    [matTooltip]=\"!can_edit ? no_edit_message : ''\"\n                    [disabled]=\"!can_edit\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl\">edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl text-error\">delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl text-error\">delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base pr-2\">\n                        <app-icon class=\"text-2xl\">{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public show_order = {};\n    public show_request = {};\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public readonly no_edit_message =\n        'Editing bookings long than \\n a day is not available';\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request',\n    );\n\n    public get can_edit() {\n        return true;\n        // return (\n        //     this.event.duration <= 24 * 60 ||\n        //     this._settings.get('app.events.allow_multiday')\n        // );\n    }\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0,\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0,\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0,\n    );\n\n    public get body() {\n        return this.event.body.replace(/\\\\n\\\\n\\[ID\\|.*\\]/gm, '');\n    }\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format,\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format,\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email,\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id),\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n        if (\n            this.event.extension_data.catering?.length ||\n            this.event.extension_data.assets?.length\n        ) {\n            return;\n        }\n        const metadata = await getEventMetadata(\n            this._event.id,\n            this.space.id,\n        ).toPromise();\n        if (metadata) {\n            this._event = new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    ...metadata,\n                },\n            });\n        }\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id,\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                  ? 'rejected'\n                  : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.hide_map = false;\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    unique,\n} from '@placeos/common';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm(undefined, this._settings);\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _changed = new BehaviorSubject<number>(0);\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}'),\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public get options_value() {\n        return this._options.getValue();\n    }\n\n    public get is_multiday() {\n        return this._event.getValue()?.duration > 24 * 60;\n    }\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = this._org.building_list.pipe(\n        switchMap((list) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, 'room_booking_rules').toPromise(),\n                ),\n            ),\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_region.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n        ),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            const use_region = this._settings.get('app.use_region');\n            if (!zone_ids?.length) {\n                zone_ids = [\n                    (use_region\n                        ? this._org.region?.id\n                        : this._org.building?.id) || this._org.building?.id,\n                ];\n            }\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([]))),\n                ),\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features)))),\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces',\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_),\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length)),\n        ),\n        shareReplay(1),\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings',\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i)),\n                            ),\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                }),\n            );\n        }),\n        shareReplay(1),\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n        this._changed,\n    ]).pipe(\n        debounceTime(300),\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { ical_uid, date, duration, all_day } =\n                this._form.getRawValue();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules[this._org.building?.id] || [],\n            ) as any;\n            return (list || [])\n                .filter((_, idx) => {\n                    const start = all_day ? startOfDay(date).valueOf() : date;\n                    const end =\n                        start +\n                        (all_day ? Math.max(24 * 60, duration) : duration) *\n                            MINUTES;\n                    let booking_list = bookings[idx] || [];\n                    if (this.last_success?.system?.id === _.id) {\n                        booking_list = [...booking_list, this.last_success];\n                    }\n                    return periodInFreeTimeSlot(\n                        start,\n                        end,\n                        booking_list.filter((_) => _.ical_uid !== ical_uid),\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([\n            this.filtered_spaces,\n            this.booking_rules,\n            this.form.valueChanges.pipe(debounceTime(400), startWith({})),\n        ]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(500),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules[this._org.building?.id] || [],\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    this?.event?.resources[0]?.id ||\n                        this.event?.system?.id ||\n                        this.event?.id ||\n                        undefined,\n                    undefined,\n                    [this.event?.date, this.event?.duration],\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules[this._org.building?.id] || [],\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => []),\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1),\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            const cache_length =\n                this._settings.get('app.events.cache_duration_in_days') || 14;\n            return diff < cache_length\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        }),\n        shareReplay(1),\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog,\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            }),\n        );\n        const previous = {};\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, duration, assets }) => {\n                if (\n                    (date && date !== previous['date']) ||\n                    (duration && duration !== previous['duration'])\n                ) {\n                    this._assets.setOptions({\n                        date: this.form.value.date,\n                        duration: this.form.value.duration,\n                    });\n                    previous['date'] = date;\n                    previous['duration'] = duration;\n                }\n                if (date && date !== this._date.getValue()) {\n                    this._date.next(date);\n                }\n                this.storeForm();\n            }),\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this.timeout('set_view', () => this._view.next(value), 50);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        }),\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(event.recurring_event_id)\n                .toPromise()\n                .catch((_) => null);\n            if (master) {\n                (this._event.getValue() as any).recurrence = {\n                    ...master.recurrence,\n                    _pattern: master.recurrence.pattern,\n                };\n            }\n        }\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id],\n                ) || [],\n            ),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email,\n            );\n        }\n        this._date.next(event.date);\n        this.timeout(\n            'post-event-form',\n            () => {\n                this._form.patchValue({\n                    date: event.date || this._form.value.date,\n                });\n            },\n            1000,\n        );\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: flatten(\n                event.linked_bookings?.map(\n                    (_) => _.asset_ids || [_.asset_id],\n                ) || [],\n            ),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: (event.extension_data.assets || []).map(\n                (_) => new AssetRequest({ ..._, event }),\n            ),\n        });\n        this._form.patchValue({\n            date: event.date || this._form.value.date,\n            date_end: event.date_end || this._form.value.date_end,\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {}),\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}',\n        );\n        if (form_data.id && form_data.id !== this._event.getValue()?.id) {\n            showEvent(form_data.id).subscribe((event) => {\n                this._event.next(event);\n                this._assets.setOptions({\n                    ignore: flatten(\n                        event.linked_bookings?.map(\n                            (_) => _.asset_ids || [_.asset_id],\n                        ) || [],\n                    ),\n                });\n            });\n        }\n        this._form.patchValue({ ...form_data });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : '',\n        );\n    }\n\n    public postForm(\n        force: boolean = false,\n        ignore_space_check: string[] = [],\n        ignore_owner: boolean = false,\n    ) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form,\n                    ).join(', ')}]`,\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let value = this._form.getRawValue();\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = value;\n            let spaces = form.get('resources')?.value || [];\n            if (ignore_space_check.length) {\n                spaces = spaces.filter(\n                    (_) =>\n                        !ignore_space_check.includes(_.email) &&\n                        !ignore_space_check.includes(_.id),\n                );\n            }\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n                value = this._form.getRawValue();\n            }\n            let changed_times = false;\n            let changed_spaces = spaces.some(\n                (s) => !event.resources?.find((_) => _.id === s.id),\n            );\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                changed_times = true;\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    ical_uid || id || '',\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            spaces = form.get('resources')?.value || [];\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            if (\n                !spaces.length &&\n                this._settings.get('app.events.no_space_resource')\n            ) {\n                const space = await this._space_pipe.transform(\n                    this._settings.get('app.events.no_space_resource'),\n                );\n                spaces.push(space);\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email',\n            );\n            if (!spaces.length && attendees.find((_) => _.is_external)) {\n                this._loading.next('');\n                const message =\n                    'External attendees require a space to be booked';\n                reject(message);\n                throw message;\n            }\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner && !ignore_owner) query.calendar = host || creator;\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            for (const order of catering) {\n                order.notes = value.catering_notes;\n                order.charge_code = value.catering_charge_code;\n            }\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`,\n                    );\n                    if (overflow?.setup) {\n                        setup = Math.max(setup, overflow.setup);\n                    }\n                    if (overflow?.breakdown) {\n                        breakdown = Math.max(breakdown, overflow.breakdown);\n                    }\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n                (value as any).setup_time = value.setup_time || setup;\n                (value as any).breakdown_time =\n                    value.breakdown_time || breakdown;\n            }\n            const processed_assets = (assets || []).map((_) =>\n                new AssetRequest(_).toJSON(),\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        const v = { ..._ };\n                        delete v.visit_expected;\n                        return v;\n                    }),\n                    date: d,\n                    catering,\n                    assets: processed_assets,\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query,\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected,\n            );\n            let creating_assets = false;\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {},\n                    ).toPromise();\n                    console.warn(\"Couldn't update asset requests\", e);\n                    if (e?.status === 409) {\n                        notifyError(\n                            'Some assets are already booked for the selected time',\n                        );\n                    } else notifyError('Unable to book the selected assets.');\n                } else if (creating_assets) {\n                    notifyError(\n                        `Unable to update all asset requests for event.\\n${e}`,\n                    );\n                    return;\n                }\n                this._loading.next('');\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any,\n                ).catch(on_error);\n            }\n\n            if (assets?.length || event.extension_data.assets?.length) {\n                creating_assets = true;\n                const requests = await validateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        all_day,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: unique([\n                            this._org.organisation.id,\n                            this._org.region?.id,\n                            this._org.building?.id,\n                            ...spaces[0]?.zones,\n                        ]).filter((_) => !!_),\n                        reset_state: changed_times,\n                    },\n                    assets,\n                    changed_spaces || changed_times,\n                ).catch(on_error);\n                if (!requests) throw 'Unable to validate asset requests';\n                await requests();\n                creating_assets = false;\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result),\n            );\n            this.setView('success');\n            this.timeout('post_finshed', () => this._changed.next(Date.now()));\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>,\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any),\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string,\n    ) {\n        if (!spaces?.length) return true;\n        if (this.has_calendar) {\n            const response = await querySpaceAvailability(\n                spaces.map(({ id }) => id),\n                date,\n                duration,\n                this?.event?.resources[0]?.id ||\n                    this.event?.system?.id ||\n                    this.event?.id ||\n                    undefined,\n                undefined,\n                [this.event?.date, this.event?.duration],\n            ).toPromise();\n            if (!response.every((_) => _)) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore,\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`,\n                ),\n            ]),\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n    /**  */\n    public readonly date_end: number;\n\n    public readonly is_system_event: boolean;\n\n    public get images() {\n        return this.extension_data.images || [];\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    public get view_access() {\n        return this.extension_data.view_access || 'PRIVATE';\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    }),\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30),\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            (data as any).host_email ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email',\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.date_end = this.event_end * 1000 || this.date_end;\n        this.duration = differenceInMinutes(this.date_end, this.date);\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60 - 1, this.duration - 1);\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration).valueOf() - 1,\n            ).getTime();\n        }\n        const matches = this.body.match(/\\[ID\\|([^\\]]+)\\]/);\n        const associated_id = matches ? matches[1] : null;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id =\n            associated_id || data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host,\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000,\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000,\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_),\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                  ? 'external'\n                  : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        const simple_event = {\n            date: this.date,\n            duration: this.duration,\n            date_end: this.date_end,\n            all_day: this.all_day,\n            space: this.space,\n            organiser: this.organiser,\n        };\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: simple_event } as any),\n        );\n        const linked_assets = this.linked_bookings\n            .filter((_) => _.booking_type === 'asset-request')\n            .map((_) => _.extension_data?.request)\n            .filter((_) => !!_);\n        const asset_requests =\n            (linked_assets.length\n                ? linked_assets\n                : this.extension_data.assets) || [];\n        this.extension_data.images =\n            this.extension_data.images || data.images || [];\n        this.extension_data.assets = asset_requests.map(\n            (i) => new AssetRequest({ ...i, event: simple_event } as any),\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get valid_catering() {\n        return (this.ext('catering') || []).filter(\n            (order) => order.deliver_at < this.date_end,\n        );\n    }\n\n    _valid_asset_cache = [];\n    _valid_cache_expiry = 0;\n\n    public get valid_assets() {\n        if (\n            this._valid_cache_expiry > Date.now() &&\n            this._valid_asset_cache.length\n        ) {\n            return this._valid_asset_cache;\n        }\n        const list = this.linked_bookings;\n        this._valid_asset_cache = (this.ext('assets') || [])\n            .map((request) => new AssetRequest({ ...request, event: this }))\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find(\n                    (_: any) => _.extension_data.request_id === request.id,\n                );\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                          ? 'rejected'\n                          : 'pending';\n                }\n                return request;\n            });\n        this._valid_cache_expiry = addMinutes(Date.now(), 5).valueOf();\n        return this._valid_asset_cache;\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? endOfDay(this.date_end).valueOf() + 1\n            : this.date_end;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email',\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null }),\n        );\n        obj.extension_data.assets = obj.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null }),\n        );\n        obj.system_id = this.system?.id;\n        for (const key of [\n            'catering',\n            'date',\n            'date_end',\n            'duration',\n            'status',\n            'linked_bookings',\n            '_valid_asset_cache',\n            '_valid_cache_expiry',\n            'type',\n        ]) {\n            if (key in obj) delete obj[key];\n        }\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport {\n    queryCalendarAvailability,\n    querySpaceFreeBusy,\n} from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams,\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([])),\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams,\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([])),\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item)),\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch',\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON(),\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams,\n) => {\n    const id = data.update_master\n        ? data.recurring_event_id || data.id\n        : data.id;\n    delete (data as any)?.status;\n    return id ? updateEvent(id, { ...data, id }, q) : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        },\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        '',\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        '',\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        '',\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {},\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`,\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {},\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        '',\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Add a guest to a booking\n * @param id ID of the booking\n * @param guest Guest to add to the booking\n */\nexport function addEventGuest(\n    id: string,\n    guest: GuestUser,\n    q: CalendarEventShowParams = {},\n) {\n    const query = toQueryString(q);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/attendee${query ? '?' + query : ''}`,\n        guest,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Remove an attendee from a booking\n * @param id ID of the booking\n * @param guest Guest to remove from the booking\n */\nexport function removeEventGuest(\n    id: string,\n    guest: GuestUser,\n    q: CalendarEventShowParams = {},\n) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/attendee/${encodeURIComponent(guest.email)}${query ? '?' + query : ''}`,\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Get the extension data for an event\n * @param id ID of the event\n * @param system_id  ID of the system associated with the event\n * @param query Extra query parameters to pass to the API request\n */\nexport function getEventMetadata(\n    id: string,\n    system_id: string,\n    query: { ical_uid?: string } = {},\n) {\n    const q = toQueryString({ ...query });\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {},\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id,\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata,\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type?: any,\n    ignore_period: [number, number] = [0, 0],\n) {\n    const end = addMinutes(start, duration).valueOf();\n    return combineLatest([\n        queryCalendarAvailability({\n            system_ids: id_list.join(),\n            period_start: getUnixTime(start),\n            period_end: getUnixTime(end),\n        }).pipe(catchError((_) => of([]))),\n        ignore && id_list.includes(ignore)\n            ? querySpaceFreeBusy({\n                  period_start: getUnixTime(start),\n                  period_end: getUnixTime(end),\n                  system_ids: ignore,\n              })\n            : of([]),\n    ]).pipe(\n        map(([spaces, ignore_check]) => {\n            const short_list = id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id,\n                    ),\n            );\n            for (const space of ignore_check) {\n                if (!id_list.includes(space.id)) continue;\n                const availability = space.availability.filter(\n                    (i) =>\n                        !(\n                            i.date === ignore_period[0] &&\n                            i.duration === ignore_period[1]\n                        ),\n                );\n                short_list[id_list.indexOf(space.id)] = !availability.find(\n                    (i) => i.status !== 'free',\n                );\n            }\n            return short_list;\n        }),\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\nimport { GroupEventCardComponent } from './group-event-card.component';\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\n\nimport { setDefaultCreator } from './event.class';\nimport { currentUser, current_user } from 'libs/common/src/lib/user-state';\nimport { first } from 'rxjs/operators';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n    GroupEventDetailsModalComponent,\n    GroupEventCardComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        SharedSpacesModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {\n    public async ngOnInit() {\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        setDefaultCreator(currentUser());\n    }\n}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { GroupEventDetailsModalComponent } from './group-event-details-modal.component';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { CalendarEvent } from './event.class';\n\n@Component({\n    selector: 'group-event-card',\n    template: `\n        <button\n            matRipple\n            (click)=\"viewDetails()\"\n            *ngIf=\"!featured; else featured_card\"\n            class=\"border border-base-300 hover:border-info flex flex-col bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-60 h-[20rem]\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-28 min-h-28 w-full bg-base-200 overflow-hidden border-b border-base-200\"\n            >\n                <img\n                    *ngIf=\"event.images?.length\"\n                    auth\n                    [source]=\"event.images[0]\"\n                    class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                />\n            </div>\n            <div class=\"p-4 flex-1 h-1/2 w-full\">\n                <div class=\"opacity-60 text-sm text-left\">\n                    {{ event.date | date: 'EEE d MMM' }},\n                    {{ event.date | date: time_format }}\n                </div>\n                <h2\n                    class=\"text-xl mb-2 text-left truncate w-full\"\n                    [title]=\"event.title\"\n                >\n                    {{ event.title }}\n                </h2>\n                <div\n                    class=\"opacity-60 text-xs flex-1 overflow-hidden h-[4.5rem] mb-2 text-left\"\n                >\n                    <p class=\"line-clamp-4\">{{ raw_description }}</p>\n                    <p *ngIf=\"!raw_description.trim()\" class=\"opacity-30\">\n                        No description\n                    </p>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">place</app-icon>\n                    <div *ngIf=\"is_onsite && has_space\">\n                        {{ space.display_name || space.name || '' }}\n                    </div>\n                    <div *ngIf=\"is_onsite && !has_space\" class=\"opacity-30\">\n                        Room to be confirmed\n                    </div>\n                    <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                        Remote event\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2 text-sm\">\n                    <app-icon class=\"text-info\">people</app-icon>\n                    <div class=\"\">\n                        {{ event.attendees?.length || '0' }} attending\n                    </div>\n                </div>\n            </div>\n        </button>\n        <ng-template #featured_card>\n            <button\n                matRipple\n                (click)=\"viewDetails()\"\n                class=\"border border-base-300 hover:border-info flex bg-base-100 rounded-xl shadow hover:shadow-2xl overflow-hidden w-[63rem] max-w-full h-56 mx-auto\"\n            >\n                <div\n                    class=\"relative flex items-center justify-between h-full min-w-56 w-1/2 max-w-[20rem] bg-base-200 overflow-hidden border-r border-base-200\"\n                >\n                    <img\n                        *ngIf=\"event.images?.length\"\n                        auth\n                        [source]=\"event.images[0]\"\n                        class=\"absolute top-0 left-0 h-full w-full object-center object-cover\"\n                    />\n                </div>\n                <div\n                    class=\"absolute top-0 left-0 rounded-br-xl py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                >\n                    <app-icon class=\"text-base\">star</app-icon>\n                    <div class=\"uppercase\">Featured</div>\n                </div>\n                <div details class=\"flex px-8 py-4 space-x-4\">\n                    <div class=\"flex flex-col items-center\">\n                        <div class=\"text-sm opacity-30 \">\n                            {{ event.date | date: 'MMM' }}\n                        </div>\n                        <div class=\"text-lg\">{{ event.date | date: 'd' }}</div>\n                    </div>\n                    <div class=\"flex flex-col space-y-2\">\n                        <h3 class=\"text-left\">{{ event.title }}</h3>\n                        <div time class=\"text-sm opacity-30 text-left\">\n                            {{ event.date | date: 'EEEE' }}\n                            {{ event.date | date: time_format }} -\n                            {{\n                                event.date + event.duration * 60 * 1000\n                                    | date: time_format\n                            }}\n                        </div>\n                        <div class=\"h-20 overflow-hidden text-left\">\n                            <p class=\"line-clamp-3\">{{ raw_description }}</p>\n                            <p\n                                *ngIf=\"!raw_description.trim()\"\n                                class=\"opacity-30\"\n                            >\n                                No description\n                            </p>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">place</app-icon>\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ space.display_name || space.name || '' }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div class=\"opacity-30\" *ngIf=\"!is_onsite\">\n                                Remote event\n                            </div>\n                        </div>\n                        <div class=\"flex items-center space-x-2 text-sm\">\n                            <app-icon class=\"text-info\">people</app-icon>\n                            <div class=\"\">\n                                {{ event.attendees?.length || '0' }} attending\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute top-4 right-4 bg-secondary text-secondary-content rounded px-4 py-2 w-32 text-center truncate\"\n                >\n                    View Details\n                </div>\n            </button>\n        </ng-template>\n    `,\n    styles: [\n        `\n            button {\n                transition:\n                    box-shadow 300ms,\n                    border 200ms;\n            }\n        `,\n    ],\n})\nexport class GroupEventCardComponent {\n    @Input() public event: CalendarEvent;\n    @Input() public featured: boolean;\n    public space: Space;\n    public raw_description = '';\n\n    public get time_format(): string {\n        return this._settings.time_format;\n    }\n\n    public get is_onsite() {\n        return this.event?.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.space?.id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.event?.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get group_event_calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        const resource = this.event.resources.find(\n            (_) => _.email !== this.group_event_calendar,\n        );\n        this.space = await space_pipe.transform(\n            resource?.id || resource?.email,\n        );\n        this.raw_description = this.removeHtmlTags(this.event.body);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails(): void {\n        this._dialog.open(GroupEventDetailsModalComponent, {\n            data: { event: this.event, concierge: false },\n        });\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport {\n    SettingsService,\n    currentUser,\n    notifyInfo,\n    unique,\n} from '@placeos/common';\nimport { MapLocateModalComponent, MapPinComponent } from '@placeos/components';\nimport {\n    Building,\n    BuildingLevel,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { CalendarEvent } from './event.class';\nimport {\n    addEventGuest,\n    checkinEventGuest,\n    removeEventGuest,\n} from './events.fn';\n\n@Component({\n    selector: `group-event-details-modal`,\n    template: `\n        <div\n            class=\"relative w-[48rem] max-w-[calc(100vw-1rem)] max-h-[80vh] overflow-hidden\"\n        >\n            <div\n                class=\"relative flex items-center justify-between h-52 w-full bg-base-200 overflow-hidden\"\n            >\n                <img\n                    *ngIf=\"event.extension_data?.images?.length\"\n                    auth\n                    [source]=\"event.extension_data?.images[0]\"\n                    class=\"absolute top-1/2 left-1/2 min-h-full min-w-full object-cover -translate-x-1/2 -translate-y-1/2\"\n                />\n            </div>\n\n            <div\n                class=\"absolute top-0 left-0 rounded-br py-2 pl-2 pr-4 space-x-2 bg-info text-info-content flex items-center text-sm\"\n                *ngIf=\"featured\"\n            >\n                <app-icon class=\"text-base\">star</app-icon>\n                <div class=\"uppercase\">Featured</div>\n            </div>\n            <button\n                icon\n                mat-dialog-close\n                class=\"absolute top-1 right-1 overflow-hidden\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-30 z-0\"></div>\n                <app-icon class=\"z-10\">close</app-icon>\n            </button>\n            <div\n                class=\"flex items-center justify-between py-4 px-8 border-b border-base-200\"\n            >\n                <h3 class=\"text-left text-xl\">\n                    {{ event.title }}\n                </h3>\n                <div class=\"flex items-center space-x-2\">\n                    <ng-container *ngIf=\"!concierge\">\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_interested\"\n                            [class.text-base-content]=\"!is_interested\"\n                            [class.opacity-30]=\"!is_interested\"\n                            [class.bg-success]=\"is_interested\"\n                            [class.text-success-content]=\"is_interested\"\n                            [class.opacity-100]=\"is_interested\"\n                        >\n                            <app-icon>star</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_interested ? '' : 'Not ' }}Interested\n                            </div>\n                        </div>\n                        <div\n                            btn\n                            class=\"flex items-center px-4 h-10 rounded space-x-2\"\n                            [class.bg-base-200]=\"!is_going\"\n                            [class.text-base-content]=\"!is_going\"\n                            [class.opacity-30]=\"!is_going\"\n                            [class.bg-success]=\"is_going\"\n                            [class.text-success-content]=\"is_going\"\n                            [class.opacity-100]=\"is_going\"\n                        >\n                            <app-icon>help</app-icon>\n                            <div class=\"pr-2\">\n                                {{ is_going ? '' : 'Not ' }}Going\n                            </div>\n                        </div>\n                    </ng-container>\n                    <button\n                        btn\n                        matRipple\n                        class=\"clear bg-base-200 text-base-content w-[2.75rem]\"\n                        [disabled]=\"event.state === 'done'\"\n                        [matMenuTriggerFor]=\"concierge ? concierge_menu : menu\"\n                    >\n                        <app-icon class=\"text-2xl\">more_horiz</app-icon>\n                    </button>\n                    <mat-menu #concierge_menu=\"matMenu\">\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    confirmation_number\n                                </app-icon>\n                                <div class=\"mr-2\">Promote Event</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"edit.emit()\"\n                            mat-dialog-close\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div class=\"mr-2\">Edit Event</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item [disabled]=\"true\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\"\n                                    >content_copy</app-icon\n                                >\n                                <div class=\"mr-2\">Copy URL</div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"remove.emit()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    delete\n                                </app-icon>\n                                <div class=\"mr-2\">Delete Event</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            class=\"flex items-center space-x-2\"\n                            (click)=\"toggleInterest()\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_interested\">\n                                    star\n                                </app-icon>\n                                <span>\n                                    {{ is_interested ? 'Revoke' : 'Indicate' }}\n                                    Interest\n                                </span>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"toggleAttendance()\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon [class.text-error]=\"is_going\">\n                                    help\n                                </app-icon>\n                                <span>\n                                    {{ is_going ? 'Revoke' : 'Indicate' }}\n                                    Going\n                                </span>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-1 max-h-[calc(80vh-18rem)] overflow-y-auto overflow-x-hidden p-8 space-x-6\"\n            >\n                <div class=\"flex flex-1 flex-col space-y-2 w-1/3\">\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            Event by\n                            {{ event.organiser?.name || event.host }}\n                        </div>\n                    </div>\n                    <h3 class=\"font-medium pt-4\">When and where</h3>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>calendar_today</app-icon>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <div class=\"text-sm\">Date and Time</div>\n                            <div class=\"text-sm opacity-30\">\n                                {{ event.date | date: 'EEEE, d MMMM, yyyy' }}\n                                . {{ event.date | date: time_format }} -\n                                {{\n                                    event.date + event.duration * 60 * 1000\n                                        | date: time_format\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-4\">\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>place</app-icon>\n                        </div>\n                        <div class=\"flex flex-col text-sm\">\n                            <div *ngIf=\"is_onsite && has_space\">\n                                {{ (system_id | space | async)?.display_name }}\n                            </div>\n                            <div\n                                *ngIf=\"is_onsite && !has_space\"\n                                class=\"opacity-30\"\n                            >\n                                Room to be confirmed\n                            </div>\n                            <div *ngIf=\"is_online\" class=\"opacity-30\">\n                                {{\n                                    is_onsite\n                                        ? 'Can be attended online'\n                                        : 'Remote Event'\n                                }}\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        matRipple\n                        (click)=\"show_attendees = true\"\n                        class=\"flex items-center space-x-4 rounded min-h-12\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center w-10 h-10 bg-base-200 rounded-full\"\n                        >\n                            <app-icon>person</app-icon>\n                        </div>\n                        <div>\n                            {{ attendance }} going,\n                            {{ event.attendees?.length }}\n                            interested\n                        </div>\n                    </button>\n                    <h3 class=\"font-medium pt-4\">About this event</h3>\n                    <div class=\"text-sm pb-4\">\n                        <span\n                            event-details\n                            [innerHTML]=\"body | sanitize\"\n                        ></span>\n                        <span\n                            *ngIf=\"!raw_description.trim()\"\n                            class=\"opacity-30\"\n                        >\n                            No description\n                        </span>\n                    </div>\n                </div>\n                <div>\n                    <div class=\"flex w-[20rem]\" *ngIf=\"level\">\n                        <div class=\"border border-base-300 w-full\">\n                            <button\n                                matRipple\n                                class=\"relative w-full h-40 bg-base-200\"\n                                (click)=\"viewLocation()\"\n                            >\n                                <interactive-map\n                                    *ngIf=\"!showing_map\"\n                                    [src]=\"level?.map_id\"\n                                    [features]=\"features\"\n                                    [styles]=\"styles\"\n                                ></interactive-map>\n                            </button>\n                            <div class=\"p-4 space-y-2\">\n                                <div *ngIf=\"is_onsite && has_space\">\n                                    {{\n                                        (system_id | space | async)\n                                            ?.display_name\n                                    }}\n                                </div>\n                                <div\n                                    *ngIf=\"is_onsite && !has_space\"\n                                    class=\"opacity-30\"\n                                >\n                                    Room to be confirmed\n                                </div>\n                                <div class=\"opacity-30 text-sm !mt-0\">\n                                    <span *ngIf=\"building && level\">\n                                        {{\n                                            building.display_name ||\n                                                building.name\n                                        }},\n                                        {{ level?.display_name || level?.name }}\n                                    </span>\n                                    <span\n                                        *ngIf=\"!building || !level\"\n                                        class=\"opacity-30\"\n                                    >\n                                        No location set for this event\n                                    </span>\n                                </div>\n                                <a\n                                    *ngIf=\"is_online\"\n                                    class=\"opacity-30 mt-4\"\n                                    [class.underline]=\"event.meeting_url\"\n                                    [href]=\"event.meeting_url\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    {{\n                                        is_onsite\n                                            ? 'Can be attended online'\n                                            : 'Remote Event'\n                                    }}\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n            <button\n                class=\"absolute inset-0 bg-base-content opacity-60\"\n                (click)=\"show_attendees = false\"\n            ></button>\n            <div\n                class=\"absolute left-1/2 -translate-x-1/2 w-[24rem] inset-y-8 rounded shadow overflow-hidden\"\n            >\n                <attendee-list\n                    [show_host]=\"false\"\n                    [list]=\"event.attendees\"\n                    [host]=\"event.user_email\"\n                    (click)=\"show_attendees = false\"\n                ></attendee-list>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class GroupEventDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    public space: Space;\n    public event: CalendarEvent = this._data.event;\n    public concierge = this._data.concierge;\n    public building: Building;\n    public level: BuildingLevel;\n    public features: ViewerFeature[] = [];\n    public locate = '';\n    public showing_map = false;\n    public show_attendees: boolean = false;\n    public styles = {};\n    public raw_description = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get featured() {\n        return (\n            (this.event as any).featured || this.event.extension_data?.featured\n        );\n    }\n\n    public get is_onsite() {\n        return this.event.extension_data.attendance_type !== 'ONLINE';\n    }\n\n    public get has_space() {\n        return !!this.space?.id;\n    }\n\n    public get is_online() {\n        return (\n            !this.is_onsite ||\n            this.event.extension_data.attendance_type === 'ANY'\n        );\n    }\n\n    public get body() {\n        if (this.is_online) return this.event.body;\n        let body = this.event.body;\n        const remove_blocks = [\n            `<div style=\"margin-bottom:24px; overflow:hidden; white-space:nowrap\">________________________________________________________________________________</div>`,\n            `<p>________________________________________________________________________________</p>`,\n        ];\n        for (const block of remove_blocks) {\n            const first = body.indexOf(block);\n            const last = body.lastIndexOf(block);\n            body = body.substring(0, first) + body.substring(last);\n        }\n        for (const block of remove_blocks) {\n            body = body.replace(block, '');\n        }\n        return body;\n    }\n\n    public get attendance() {\n        return (\n            this.event.attendees?.filter((_: any) => _.checked_in)?.length || 0\n        );\n    }\n\n    public get is_interested() {\n        return !!this.guest_details;\n    }\n\n    public get is_going() {\n        return this.guest_details?.checked_in;\n    }\n\n    public get system_id() {\n        return this.space?.id;\n    }\n\n    public get guest_details() {\n        const user = currentUser();\n        return this.event.attendees?.find((_) => _.email === user.email);\n    }\n\n    public get group_event_calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: { event: CalendarEvent; concierge: boolean },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<GroupEventDetailsModalComponent>,\n    ) {}\n\n    public async ngOnInit() {\n        const space_pipe = new SpacePipe(this._org);\n        const resource = this.event.resources.find(\n            (_) => _.email !== this.group_event_calendar,\n        );\n        this.space = await space_pipe.transform(\n            resource?.id || resource?.email,\n        );\n        const map_id = (this.event.extension_data as any)?.map_id;\n        const id = this.space?.map_id || map_id;\n        if (id) {\n            this.styles[`#${id}`] = { fill: 'green' };\n            this.features = [\n                {\n                    location: id,\n                    content: MapPinComponent,\n                    data: {},\n                },\n            ];\n        }\n        const zones = (this.space?.zones as any) || [];\n        this.level = this._org.levelWithID(zones);\n        this.building =\n            this._org.buildings.find((_) => zones.includes(_.id)) ||\n            this._org.building;\n        this.locate = map_id || '';\n        this.raw_description = this.removeHtmlTags(this.event.body);\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return (doc.body.textContent || '').trim();\n    }\n    public viewLocation() {\n        if (!this.space?.map_id) {\n            return notifyInfo('Unable to locate space on map.');\n        }\n        this.showing_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.showing_map = false;\n        });\n    }\n\n    public async toggleInterest() {\n        let user = this.guest_details;\n        if (this.is_interested && user) {\n            await removeEventGuest(this.event.id, currentUser() as any, {\n                system_id: this.event.system?.id,\n            }).toPromise();\n            (this.event as any).attendees = (this.event.attendees || []).filter(\n                (_: any) => _.email !== user.email,\n            );\n        } else {\n            user = await addEventGuest(this.event.id, currentUser() as any, {\n                system_id: this.event.system?.id,\n            }).toPromise();\n            (this.event as any).attendees = unique(\n                [...(this.event.attendees || []), user],\n                'email',\n            );\n        }\n    }\n\n    public async toggleAttendance() {\n        let user = this.guest_details;\n        if (!user) {\n            user = await addEventGuest(this.event.id, currentUser() as any, {\n                system_id: this.event.system?.id,\n            }).toPromise();\n            (this.event as any).attendees = unique(\n                [...(this.event.attendees || []), user],\n                'email',\n            );\n        }\n        user = { ...currentUser(), ...(user || {}) };\n        if (!user.email) return;\n        await checkinEventGuest(this.event.id, user.email, !this.is_going, {\n            system_id: this.event.system?.id,\n        }).toPromise();\n        const guest = this.event.attendees.find((_) => _.email === user.email);\n        if (!guest) return;\n        (guest as any).checked_in = !this.is_going;\n    }\n}\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.status === 'cancelled') return 'declined';\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 29\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 29\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 29\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent, updateEventMetadata } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>,\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n            ical_uid: this._event?.ical_uid,\n        };\n        let event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query,\n        )\n            .toPromise()\n            .catch((_) => null);\n        if (!event) {\n            event = await updateEventMetadata(this._event.id, query.system_id, {\n                ...this._event.extension_data,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n                setup: this.form.value.setup,\n                breakdown: this.form.value.breakdown,\n            } as any)\n                .toPromise()\n                .catch((_) => null);\n        }\n        if (!event) {\n            this.loading = false;\n            this._dialog_ref.disableClose = false;\n            notifyError(`Error updating setup and breakdown.`);\n            return;\n        }\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport {\n    LOCAL_TIMEZONE,\n    SettingsService,\n    currentUser,\n    timePeriodsIntersect,\n    unique,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { time } from 'console';\nimport { share } from 'rxjs/operators';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(\n    event: CalendarEvent = new CalendarEvent(),\n    settings?: SettingsService,\n) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        ical_uid: new FormControl(event.ical_uid),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required],\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' }),\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        date_end: new FormControl(event.date_end),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data?.catering as any),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || '',\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || '',\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(event.extension_data?.assets),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false,\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n        attendance_type: new FormControl(\n            event.extension_data?.attendance_type || 'ONSITE',\n        ),\n        timezone: new FormControl(event.timezone || LOCAL_TIMEZONE),\n        shared_event: new FormControl(\n            event.extension_data?.shared_event || false,\n        ),\n        view_access: new FormControl(\n            event.extension_data?.view_access || 'PRIVATE',\n        ),\n        images: new FormControl(event.extension_data?.images || []),\n        featured: new FormControl(event.extension_data?.featured || false),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email),\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    const setCateringTime = () => {\n        if (!form.value.catering?.length || !form.getRawValue().date) return;\n        form.patchValue(\n            {\n                catering: form.value.catering.map((order: any) => ({\n                    ...order,\n                    event: {\n                        date: form.value.all_day\n                            ? startOfDay(form.getRawValue().date)\n                            : form.getRawValue().date,\n                        duration: form.value.all_day\n                            ? 24 * 60\n                            : form.value.duration,\n                    },\n                })),\n            },\n            { emitEvent: false },\n        );\n    };\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (v.date || v.duration || v.all_day) setCateringTime();\n    });\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n        setCateringTime();\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' },\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false },\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date,\n                    ),\n                },\n                { emitEvent: false },\n            );\n        }\n        setCateringTime();\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' },\n                ).valueOf(),\n            },\n            { emitEvent: false },\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false },\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n        setCateringTime();\n    });\n    form.controls.catering.valueChanges.subscribe((_) => {\n        const catering = form.getRawValue().catering || [];\n        if (\n            catering?.length &&\n            (settings?.get('app.events.catering_notes_required') ||\n                settings.value('require_catering_notes'))\n        ) {\n            form.get('catering_notes')?.setValidators([Validators.required]);\n            form.get('catering_notes').patchValue(form.value.catering_notes);\n        } else {\n            form.get('catering_notes')?.clearValidators();\n            form.get('catering_notes').setErrors(null);\n        }\n        form.updateValueAndValidity();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date()),\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end,\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n              ? requestable\n                  ? 'Available by Request'\n                  : 'Available'\n              : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n              ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n              : free_tomorrow\n                ? 'Unavailable today'\n                : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number },\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources?.find(\n                (space) => space.email === filter_options.space,\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            }),\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = combineLatest([\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        filter(([_, { is_public }]) => !!_ && !is_public),\n        map(([lvl]) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            let can_book = true;\n            const book_fn = async () => {\n                if (!can_book) return;\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            ['mousedown', 'touchstart'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: () => {\n                        can_book = true;\n                        this.timeout('booking', () => (can_book = false));\n                    },\n                })\n            );\n            ['mouseup', 'touchend'].forEach((event) =>\n                actions.push({\n                    id: desk.id,\n                    action: event,\n                    priority: 10,\n                    callback: book_fn,\n                })\n            );\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationIcon } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: `explore-icon`,\n    template: `\n        <div\n            class=\"flex items-center justify-center h-8 w-8 shadow rounded-full border border-base-200\"\n            [style.background-color]=\"color\"\n            [style.color]=\"text_color\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-xl\"></app-icon>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                align-items: end;\n                justify-content: end;\n            }\n        `,\n    ],\n})\nexport class ExploreIconComponent {\n    public readonly icon = this._details.icon || { content: 'done' };\n    public readonly color = this._details.color || 'var(--in)';\n    public readonly text_color = this._details.text_color || 'var(--inc)';\n    constructor(\n        @Inject(MAP_FEATURE_DATA)\n        private _details: {\n            icon?: ApplicationIcon;\n            color?: string;\n            text_color?: string;\n        },\n    ) {}\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._explore.level,\n        this._explore.options,\n        this._org.active_building,\n    ]).pipe(\n        map(([lvl, { is_public }]) => {\n            if (!lvl || is_public) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem] no-subscript\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem] no-subscript\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <interactive-map\n            [src]=\"url | async\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n            [focus]=\"locate\"\n            [options]=\"{ controls: true }\"\n        ></interactive-map>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"!hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public locate = '';\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.available$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription('parking_poll', this._parking.startPolling());\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.locate = id;\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { ParkingSpace } from 'libs/bookings/src/lib/parking.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\ninterface ParkingSpaceExtended extends ParkingSpace {\n    user: string;\n    status: string;\n    plate_number: string;\n}\n\n@Component({\n    selector: 'explore-parking-info',\n    template: `\n        <div\n            class=\"absolute bg-base-300 p-2 rounded-lg !rounded-tl-none shadow top-1/2 left-1/2 text-left\"\n            [class.!bg-error]=\"status === 'busy'\"\n            [class.!text-error-content]=\"status === 'busy'\"\n            [class.!bg-warning]=\"status === 'reserved'\"\n            [class.!text-warning-content]=\"status === 'reserved'\"\n            [class.!bg-success]=\"status === 'free'\"\n            [class.!text-success-content]=\"status === 'free'\"\n        >\n            <div class=\"absolute top-0.5 left-0.5 triangle\"></div>\n            <div class=\"flex space-x-2\">\n                <div class=\"flex flex-col leading-tight min-w-24 pl-1\">\n                    <div class=\"whitespace-nowrap\">{{ name }}</div>\n                    <div class=\"capitalize text-sm font-medium\">\n                        {{ status }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-col relative h-full px-2 rounded bg-base-100 text-base-content shadow leading-tight\"\n                    *ngIf=\"is_concierge && plate_number\"\n                >\n                    <div\n                        class=\"text-[0.625rem] w-full text-center pt-1 whitespace-nowrap font-medium\"\n                    >\n                        Plate Number\n                    </div>\n                    <div class=\"font-mono pb-1 w-full text-center uppercase\">\n                        {{ plate_number || 'ABC3' }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .triangle {\n                width: 0px;\n                height: 0px;\n                border-style: solid;\n                border-width: 0.5rem 0.5rem 0 0;\n                border-color: currentColor transparent transparent transparent;\n                transform: rotate(0deg);\n            }\n        `,\n    ],\n})\nexport class ExploreParkingInfoComponent {\n    public readonly status =\n        this._data.assigned_to === this._data.user && this._data.user\n            ? 'reserved'\n            : this._data.status;\n    public readonly user = this._data.user;\n    public readonly name = this._data.name;\n    public readonly map_id = this._data.map_id;\n    public readonly plate_number = this._data.plate_number;\n\n    public get is_concierge() {\n        return this._settings.app_name.toLowerCase().includes('concierge');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _data: ParkingSpaceExtended,\n        private _element: ElementRef<HTMLDivElement>,\n        private _settings: SettingsService,\n    ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { StaffUser } from '@placeos/users';\nimport { PlaceZone, showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable, of } from 'rxjs';\nimport {\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreParkingInfoComponent } from './explore-parking-info.component';\nimport { ParkingService } from 'libs/bookings/src/lib/parking.service';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n    zone?: PlaceZone;\n    groups?: string[];\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n    public on_book: (ParkingSpace) => Promise<void> = null;\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking'))),\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n        this._state.options,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, _, __, { is_public }]) =>\n            is_public\n                ? of([])\n                : queryBookings({\n                      period_start: getUnixTime(\n                          startOfMinute(_.date || Date.now()),\n                      ),\n                      period_end: getUnixTime(\n                          endOfMinute(_.date || Date.now()),\n                      ),\n                      type: 'parking',\n                      zones: this._settings.get('app.use_region')\n                          ? bld?.parent_id\n                          : bld?.id,\n                      rejected: false,\n                  }),\n        ),\n        shareReplay(1),\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly user_events = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            }),\n        ),\n        shareReplay(1),\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            (d.details instanceof Array ? d.details : []).map(\n                                (s) => ({ ...s, zone_id: l.id }),\n                            ),\n                        ),\n                    ),\n                ),\n            ),\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1),\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id)),\n    );\n\n    private _users: Record<string, string> = {};\n    private _plate_numbers: Record<string, string> = {};\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n        this._parking.users,\n    ]).pipe(\n        map(([events, spaces, users]) => {\n            const available = spaces.filter((_) => {\n                const event = events.find((e) => e.asset_id === _.id);\n                const assigned = `${\n                    event?.user_email || _.assigned_to || ''\n                }`.toLowerCase();\n                const user = users.find(\n                    (u) => u.email.toLowerCase() === assigned.toLowerCase(),\n                );\n                this._users[_.id] = assigned;\n                this._plate_numbers[_.id] =\n                    event?.extension_data?.plate_number ||\n                    user?.plate_number ||\n                    undefined;\n                return !assigned;\n            });\n            this._updateParkingSpaces(spaces, available);\n            return available;\n        }),\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _parking: ParkingService,\n        private _dialog: MatDialog,\n    ) {\n        super();\n        this.subscription('spaces', this.available_spaces.subscribe());\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n    }\n\n    public startPolling() {\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n        this._poll.next(Date.now());\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private async _updateParkingSpaces(\n        spaces: ParkingSpace[],\n        available: ParkingSpace[],\n    ) {\n        const styles = {};\n        const features = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        let options = this._options.getValue();\n        const assigned_space = await this._parking.assigned_space\n            .pipe(take(1))\n            .toPromise();\n        const deny_parking_access = await this._parking.deny_parking_access\n            .pipe(take(1))\n            .toPromise();\n        const booked_space = await this._parking.booked_space\n            .pipe(take(1))\n            .toPromise();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const is_assigned = !!space.assigned_to;\n            const id = space.map_id || space.id;\n            const status = can_book\n                ? 'free'\n                : assigned_space\n                  ? 'pending'\n                  : 'busy';\n            styles[`#${id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            features.push({\n                location: `${id}`,\n                content: ExploreParkingInfoComponent,\n                z_index: 20,\n                hover: true,\n                data: {\n                    ...space,\n                    user: this._users[space.id],\n                    plate_number: this._plate_numbers[space.id],\n                    status:\n                        status === 'pending' && assigned_space\n                            ? 'reserved'\n                            : status,\n                },\n            });\n            if (!can_book) continue;\n            const book_fn = async () => {\n                if (this.on_book) {\n                    await this.on_book(space);\n                    this._poll.next(Date.now());\n                    return;\n                }\n                if (deny_parking_access) {\n                    return notifyError(\n                        `Your user account has been denied parking access to ${\n                            space.zone?.display_name || space.zone?.name\n                        }.`,\n                    );\n                }\n                if (assigned_space) {\n                    return notifyError(\n                        `You are already assigned to parking space \"${\n                            space.name || space.id\n                        }\".`,\n                    );\n                }\n                if (booked_space?.find((_) => _.id === space.id)) {\n                    return notifyError(\n                        `You already have a parking space booked for the selected time.`,\n                    );\n                }\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`,\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`,\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                options = this._options.getValue();\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any,\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    if (e === 'User cancelled') throw e;\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`,\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`,\n                );\n                this._poll.next(Date.now());\n            };\n            actions.push({\n                id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : [],\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setFeatures('parking', features);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null,\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90,\n                ),\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <button\n            #button\n            icon\n            matRipple\n            class=\"bg-base-200 m-2\"\n            (window:resize)=\"checkButtonPosition()\"\n            (click)=\"show ? closeSearch($event) : showSearch()\"\n        >\n            <app-icon>{{ show || search_str ? 'close' : 'search' }}</app-icon>\n        </button>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"absolute top-1/2 -translate-y-1/2 bg-base-100 flex items-center z-10 overflow-hidden outline-none px-4 max-w-[calc(100vw-7rem)]\"\n            [class.right-0]=\"right_size\"\n            [class.-translate-x-14]=\"right_size\"\n            [class.left-0]=\"!right_size\"\n            [class.translate-x-14]=\"!right_size\"\n            [class.show]=\"show || search_str\"\n            (click)=\"focusInput()\"\n            matAutocompleteOrigin\n            #origin=\"matAutocompleteOrigin\"\n        >\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setFilter($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (focus)=\"cancelClear()\"\n                (blur)=\"clear()\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0 : 5\"\n                    [value]=\"option.name\"\n                    (click)=\"select(option)\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[22rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n                position: relative;\n            }\n\n            [role='search'] {\n                height: 3rem;\n                width: 0;\n                border-radius: 1.5rem;\n                border: 1px solid var(--b3);\n                transition: width 200ms opacity 200ms;\n                opacity: 0;\n                pointer-events: none;\n            }\n\n            [role='search'].show {\n                width: 24rem;\n                opacity: 1;\n                pointer-events: auto;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public right_size = false;\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n    @ViewChild('button', { static: true })\n    private _button_el: ElementRef<HTMLButtonElement>;\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.checkButtonPosition();\n    }\n\n    public clear() {\n        this.timeout('clear', () => {\n            this.show = false;\n            this.search_str = '';\n            this.setFilter('');\n        });\n    }\n\n    public cancelClear() {\n        this.clearTimeout('clear');\n    }\n\n    public focusInput() {\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300,\n            );\n        }\n    }\n\n    public showSearch() {\n        this.show = true;\n        this.focusInput();\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                  ? 'locate'\n                  : 'user';\n        query[type] = item.id;\n        if (type === 'locate') {\n            query.name = item.name;\n            query.zone = item.zone;\n        }\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n        this.focusInput();\n    }\n\n    public checkButtonPosition() {\n        const window_width = window.innerWidth;\n        const button_rect =\n            this._button_el.nativeElement.getBoundingClientRect();\n        const x_center = button_rect.left + button_rect.width / 2;\n        this.right_size = x_center > window_width / 2;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { MapsPeopleService, SettingsService, flatten } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface PointOfInterest {\n    id: string;\n    name: string;\n    level_id: string;\n    location: string | [number, number];\n    short_link_id: string;\n    qr_code?: string;\n    qr_link?: string;\n    can_search?: boolean;\n}\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n    /** ID of the zone that the item is located */\n    zone?: string;\n}\n\nconst TYPES = ['space', 'contact', 'feature', 'user'];\n\nfunction typeIndex(item: SearchResult): number {\n    return TYPES.indexOf(item.is_role ? 'contact' : item.type);\n}\n\ndeclare let mapsindoors: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1),\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[])),\n                  )\n                : of([] as StaffUser[]),\n        ),\n        shareReplay(1),\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any,\n                                          ),\n                                      } as any),\n                              ),\n                      ),\n                  )\n                : of([]),\n        ),\n        catchError(() => []),\n    );\n\n    private _maps_people_search: Observable<SearchResult[]> = combineLatest([\n        this._maps_people.available$,\n        this._filter,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([available, q]) =>\n            available && q.length > 2\n                ? mapsindoors?.services.LocationsService.getLocations({ q })\n                : of([]),\n        ),\n        map((list: any[]) => {\n            return list.map(\n                (_) =>\n                    ({\n                        id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            _.id,\n                        map_id:\n                            _.properties?.externalId ||\n                            _.properties?.roomId ||\n                            _.roomId ||\n                            '',\n                        type: 'feature',\n                        name: _.properties?.name || '',\n                        description: `${_.properties?.roomId} , Level ${_.properties?.floorName}`,\n                    }) as SearchResult,\n            );\n        }),\n        shareReplay(1),\n    );\n\n    private _map_features: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'map_features',\n                }).pipe(catchError(() => of({ details: [] }))),\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.map_features;\n                    if (!metadata) continue;\n                    const feature_list =\n                        metadata.details instanceof Array\n                            ? metadata.details\n                            : [];\n                    for (const feature of feature_list) {\n                        list.push({\n                            id: feature.id,\n                            type: 'feature',\n                            name: feature.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            }),\n        );\n\n    private _poi_metadata = this._org.initialised.pipe(\n        filter((_) => _),\n        switchMap(() =>\n            showMetadata(this._org.organisation.id, 'points-of-interest').pipe(\n                catchError((_) => of({ details: {} })),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    private _poi_list = combineLatest([\n        this._org.active_building,\n        this._poi_metadata,\n    ]).pipe(\n        filter(([bld]) => !!bld.id),\n        map(([bld, metadata]) => {\n            const mapping = metadata.details || {};\n            const levels = this._org.levelsForBuilding(bld);\n            const list: PointOfInterest[] = flatten(\n                levels.map((lvl) => mapping[lvl.id] || []),\n            );\n            return list.filter((_) => _.can_search);\n        }),\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._poi_list.pipe(\n            map((poi_list) => {\n                return poi_list.map(\n                    (item) =>\n                        ({\n                            id: item.id || item.location,\n                            type: 'feature',\n                            name: item.name,\n                            description: '',\n                            zone: item.level_id,\n                        }) as SearchResult,\n                );\n            }),\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._map_features,\n        this._maps_people_search,\n        this._points_of_interest,\n    ]).pipe(\n        map(\n            ([\n                filter,\n                spaces,\n                users,\n                contacts,\n                roled_contacts,\n                features,\n                mapspeople_items,\n                points_of_interest,\n            ]) => {\n                const search = filter.toLowerCase();\n                const results = [\n                    ...mapspeople_items,\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search),\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...flatten(\n                        roled_contacts.map((u) =>\n                            (u as any).roles.map(\n                                (role) =>\n                                    ({\n                                        id: u.email,\n                                        type: role || 'contact',\n                                        is_role: true,\n                                        name: u.name,\n                                        description: u.email,\n                                    }) as any,\n                            ),\n                        ),\n                    ).filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search),\n                    ),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                    ...points_of_interest.filter((_) =>\n                        _.name.toLowerCase().includes(search),\n                    ),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                }) as any,\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search),\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                ];\n                results.sort(\n                    (a, b) =>\n                        typeIndex(a) - typeIndex(b) ||\n                        a.name.localeCompare(b.name),\n                );\n                return results;\n            },\n        ),\n        tap(() => this._loading.next(false)),\n        shareReplay(1),\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data),\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _maps_people: MapsPeopleService,\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices',\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    id: string;\n    temp: number;\n    humidity: number;\n}\n\nlet shown_id = '';\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <button\n            icon\n            matRipple\n            customTooltip\n            [content]=\"stats\"\n            yPosition=\"center\"\n            xPosition=\"center\"\n            class=\"absolute top-1/2 left-1/2 w-7 h-7 min-w-0 -translate-x-1/2 -translate-y-1/2 bg-base-100 shadow pointer-events-auto\"\n        >\n            <app-icon> visibility </app-icon>\n        </button>\n        <ng-template #stats>\n            <div\n                class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"temp\"\n                >\n                    <app-icon>thermostat</app-icon>\n                    <div class=\"\">{{ temp }}˚F</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                    *ngIf=\"humidity\"\n                >\n                    <app-icon>opacity</app-icon>\n                    <div class=\"\">{{ humidity }}%</div>\n                </div>\n                <div\n                    *ngIf=\"temp > 82\"\n                    class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n                >\n                    <app-icon class=\"text-error text-xl\">error</app-icon>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent extends AsyncHandler {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    public get show() {\n        return shown_id === this._details.id;\n    }\n\n    public set show(value: boolean) {\n        this.timeout('show', () => (shown_id = value ? this._details.id : ''));\n    }\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {\n        super();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { combineLatest, Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreIconComponent } from './explore-icon.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: Record<string, CalendarEvent[]> = {};\n    private _statuses: Record<string, string> = {};\n    private _presence: Record<string, boolean> = {};\n    private _panning = true;\n    private _last_action = '';\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] })),\n                ),\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1),\n        );\n\n    private _bind = combineLatest([\n        this._state.spaces,\n        this._state.options,\n    ]).pipe(\n        filter(([_, { is_public }]) => !is_public),\n        map(([list]) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this.unsubWith('c-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d),\n                        ),\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d),\n                        ),\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n                binding = mod.binding('presence');\n                this.subscription(\n                    `c-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handlePresenceChange(list, space, d),\n                        ),\n                );\n                this.subscription(`c-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        }),\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        if (this._panning && this._last_action === 'down') return;\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules,\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.',\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`,\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            },\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[],\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100,\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        if (space.bookable) this._statuses[space.id] = status || 'free';\n        else delete this._statuses[space.id];\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100,\n        );\n    }\n\n    public handlePresenceChange(\n        spaces: Space[],\n        space: Space,\n        presence: boolean,\n    ) {\n        this._presence[space.id] = presence;\n        this.timeout('update_icons', () => this._updateIcons(spaces), 100);\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            if (!this._statuses[space.id]) continue;\n            const status = this._statuses[space.id];\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id] || 'not-bookable',\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private _updateIcons(spaces: Space[]) {\n        if (!this._settings.get('app.show_presence_indicators')) return;\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                content: ExploreIconComponent,\n                data: {\n                    icon: {\n                        class: 'material-symbols-rounded',\n                        content: 'sensor_occupied',\n                    },\n                    color: this._presence[space.id] ? 'var(--su)' : 'var(--bc)',\n                    text_color: this._presence[space.id]\n                        ? 'var(--suc)'\n                        : 'var(--b1)',\n                },\n                z_index: 98,\n            } as ViewerFeature);\n        }\n        this._state.setFeatures('spaces-presence', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            for (const action of ['mousedown', 'touchstart']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this._panning = false;\n                        this.timeout(\n                            'panning',\n                            () => (this._panning = true),\n                            300,\n                        );\n                        this._last_action = 'down';\n                    },\n                });\n            }\n            for (const action of ['mouseup', 'touchend']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this.bookSpace(space);\n                        this._last_action = 'up';\n                    },\n                });\n            }\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50,\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    is_public: boolean;\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        is_public: false,\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_, initialised]) => initialised),\n        switchMap(([level]) =>\n            querySystems({\n                zone_id: level?.id || this._org.organisation.id,\n                limit: 50,\n            }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[])),\n            ),\n        ),\n        shareReplay(1),\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || ''),\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key) ||\n                    (key === 'zones-canvas' &&\n                        options.disable?.includes('zones'))\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        }),\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        }),\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        }),\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        }),\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService,\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id,\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions',\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels',\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features',\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles',\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: Partial<MapOptions>) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            is_public: false,\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n\n    public has(\n        type: 'style' | 'feature' | 'action' | 'label',\n        id: string,\n        exclude: string[] = [],\n    ): boolean {\n        if (type === 'style') {\n            const styles_map = this._styles.getValue();\n            for (const group in styles_map) {\n                if (exclude.includes(group)) continue;\n                const styles = styles_map[group];\n                if (id in styles || `#${id}` in styles) return true;\n            }\n        } else if (type === 'feature') {\n            const feature_map = this._features.getValue();\n            for (const group in feature_map) {\n                if (exclude.includes(group)) continue;\n                for (const feature of feature_map[group]) {\n                    if (feature.location === id) return true;\n                }\n            }\n        } else if (type === 'action') {\n            const actions_map = this._actions.getValue();\n            for (const group in actions_map) {\n                if (exclude.includes(group)) continue;\n                for (const feature of actions_map[group]) {\n                    if (feature.id === id) return true;\n                }\n            }\n        } else if (type === 'label') {\n            const labels_map = this._labels.getValue();\n            for (const group in labels_map) {\n                if (exclude.includes(group)) continue;\n                for (const feature of labels_map[group]) {\n                    if (feature.location === id) return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    MapCanvasComponent,\n    Polygon,\n} from 'libs/components/src/lib/map-canvas.component';\nimport { ExploreIconComponent } from './explore-icon.component';\n\nexport interface ZoneData {\n    /** ID of the zone */\n    map_id?: string;\n    /** ID of the zone */\n    area_id: string;\n    /** Max occupancy allowed in zone */\n    capacity: number;\n    /** Number of devices in the zone */\n    count: number;\n    /** Key in the ZoneData to use for people count */\n    area_count_key: string;\n    /** Average temperature from the sensors in the zone */\n    temperature: number;\n    /** Average humidity from the sensors in the zone */\n    humidity: number;\n    people_count: number;\n    people_count_sum: number;\n    queue_size: number;\n    counter: number;\n    at_location?: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _area_list: string[] = [];\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _label_location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n    private _polygons$ = new BehaviorSubject<Polygon[]>([]);\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n        this._state.options,\n    ]).pipe(\n        filter(([bld, lvl, { is_public }]) => !!bld && !!lvl && !is_public),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const bind_areas = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`,\n            );\n            const bind_zone = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}`,\n            );\n            const zones = combineLatest([\n                bind_areas.listen(),\n                bind_zone.listen(),\n            ]).pipe(\n                debounceTime(100),\n                map(([a, z]) => [\n                    ...(a?.value || []),\n                    ...(z?.value || []).filter((_) => _.location === 'area'),\n                ]),\n            );\n            this.subscription(\n                `zones-status`,\n                zones.subscribe((l) => this.parseData(l)),\n            );\n            this.subscription('binding', bind_areas.bind());\n            this.subscription('zone-binding', bind_zone.bind());\n        }),\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise(),\n            ),\n        );\n        this._area_list = [];\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] = coordinates?.length\n                    ? getCenterPoint(coordinates)\n                    : null;\n                this._label_location[area.id] =\n                    hide_label === false\n                        ? label_location || this._location[area.id]\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n                this._area_list.push(area.map_id || area.id);\n            }\n        }\n        this._state.setFeatures('zones-canvas', [\n            {\n                track_id: 'zones-canvas',\n                location: { x: 0.5, y: 0.5 },\n                content: MapCanvasComponent,\n                data: {\n                    polygons$: this._polygons$,\n                    draw_points: false,\n                    draw_labels: false,\n                },\n            },\n        ]);\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(value: ZoneData[] = []) {\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const id = zone.map_id || zone.area_id;\n            // if (!this._area_list.includes(id)) continue;\n            const capacity = zone.capacity || this._capacity[id] || 100;\n            const count =\n                zone[\n                    this._count_key[id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ] || 0;\n            const filled = count / capacity;\n            this._statuses[id] = zone.at_location\n                ? 'busy'\n                : filled < 0.4\n                  ? 'free'\n                  : filled < 0.75\n                    ? 'pending'\n                    : 'busy';\n            if (!this._location[id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            if (\n                this._label_location[id] &&\n                !this._settings.get('app.explore.show_zone_labels')\n            ) {\n                labels.push({\n                    location: this._label_location[id],\n                    content,\n                    z_index: 100,\n                });\n            }\n            if (\n                this._settings.get('app.explore.show_zone_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    track_id: `sensors:${id}`,\n                    location: this._location[id],\n                    content: ExploreSensorInfoComponent,\n                    data: {\n                        id,\n                        temp: zone.temperature || 10,\n                        humidity: zone.humidity || 10,\n                    },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        this._state.setLabels('zones', labels);\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const polygons = [];\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                polygons.push({\n                    name: zone_id,\n                    points: this._points[zone_id],\n                    color: colour,\n                } as Polygon);\n            } else {\n                if (\n                    this._state.has('style', zone_id, ['zones', 'zones-styles'])\n                ) {\n                    features.push({\n                        location: zone_id,\n                        content: ExploreIconComponent,\n                        data: {\n                            icon: { content: 'pin_drop' },\n                        },\n                        full_size: true,\n                        z_index: 98,\n                    } as ViewerFeature);\n                } else {\n                    style_map[`#${zone_id}`] = {\n                        fill: colour,\n                        opacity: 0.6,\n                    };\n                }\n            }\n        }\n        this._polygons$.next(polygons);\n        this._state.setFeatures('zones', [...features, ...this._features]);\n        this._state.setStyles('zones-styles', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        },\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { ExploreParkingInfoComponent } from './explore-parking-info.component';\nimport { ExploreIconComponent } from './explore-icon.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n    ExploreParkingInfoComponent,\n    ExploreIconComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a minimum length of:</label\n                    >\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a maximum length up to:</label\n                    >\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[1]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base space-x-2 p-2\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                decrease\n                icon\n                matRipple\n                type=\"button\"\n                class=\"border border-error text-error rounded h-10 w-10\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div\n                value\n                class=\"relative p-1 flex items-center justify-center w-16 h-10 rounded border border-base-300\"\n            >\n                <span *ngIf=\"!focused\">\n                    {{ (render_fn ? render_fn(value) : value) || '0' }}\n                </span>\n                <input\n                    type=\"text\"\n                    class=\"absolute inset-0 opacity-0 focus:opacity-100 p-2\"\n                    [(ngModel)]=\"value\"\n                    (focus)=\"focused = true\"\n                    (blur)=\"setValue(+value); focused = false\"\n                    limitInput\n                />\n            </div>\n            <button\n                increase\n                icon\n                matRipple\n                type=\"button\"\n                class=\"border border-success text-success rounded h-10 w-10\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 999;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n    public focused = false;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        if (new_value < this.min) new_value = this.min;\n        if (new_value > this.max) new_value = this.max;\n        if ((new_value / this.step) % 1 !== 0) {\n            new_value =\n                Math.round(new_value * (1 / this.step)) / (1 / this.step);\n        }\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0]?.id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34]?.id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day?.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[14%] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.generateDates();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                @if (date) {\n                    {{ date | date: (short ? 'MMM d, yyyy' : 'MMMM d, yyyy') }}\n                } @else {\n                    <span class=\"opacity-30\">No Date Selected</span>\n                }\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"has_error\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date || now\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    @Input() public short = false;\n    /** Currently selected date */\n    public date: number;\n\n    public readonly now = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value;\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    addDays,\n    addMonths,\n    endOfDay,\n    isAfter,\n    isBefore,\n    isSameDay,\n    isSameMonth,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\n@Component({\n    selector: `date-range-calendar`,\n    template: `\n        <div class=\"flex items-center justify-between\">\n            <div month class=\"font-medium px-2\">\n                {{ month | date: 'MMMM yyyy' }}\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <button icon matRipple (click)=\"previousMonth()\">\n                    <app-icon>chevron_left</app-icon>\n                </button>\n                <button icon matRipple (click)=\"nextMonth()\">\n                    <app-icon>chevron_right</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            class=\"grid grid-cols-7 grid-rows-7 gap-1 w-[17.25rem] h-[17.25rem]\"\n        >\n            <div\n                class=\"col-span-full grid grid-cols-7 border-b border-base-200\"\n            >\n                <div\n                    weekday\n                    *ngFor=\"let weekday of weekdays\"\n                    class=\"relative flex items-center justify-center text-sm opacity-60\"\n                >\n                    {{ weekday | date: 'EEE' }}\n                </div>\n            </div>\n            <button\n                *ngFor=\"let day of month_days; trackBy: trackByFn\"\n                class=\"relative h-9 w-9 hover:bg-base-200 rounded-full\"\n                [class.text-secondary-content]=\"day.is_start || day.is_end\"\n                [disabled]=\"day.disabled\"\n                (click)=\"selectDate(day.id)\"\n                (mouseenter)=\"setHoveredDate(day.id)\"\n            >\n                <div\n                    *ngIf=\"day.is_selected && !day.is_start && !day.is_end\"\n                    class=\"absolute inset-y-0 -inset-x-0.5 border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start && end_after_start\"\n                    class=\"absolute inset-y-0 -right-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_end && end_after_start\"\n                    class=\"absolute inset-y-0 -left-0.5 w-[calc(50%+2px)] border-y border-base-content border-dashed bg-base-200\"\n                ></div>\n                <div\n                    *ngIf=\"day.is_start || day.is_end\"\n                    class=\"absolute inset-0 flex items-center justify-center bg-secondary rounded-full z-10\"\n                ></div>\n                <div\n                    matRipple\n                    class=\"absolute inset-0 flex items-center justify-center rounded-full z-20\"\n                    [class.opacity-30]=\"!day.is_month\"\n                >\n                    {{ day.id | date: 'd' }}\n                </div>\n                <div\n                    *ngIf=\"day.is_today\"\n                    class=\"absolute -inset-[3px] flex items-center justify-center border border-secondary rounded-full z-10\"\n                ></div>\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DateRangeCalendarComponent {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public offset_weekday: number = 0;\n    /** Start date of the selected range */\n    @Input() public start: number;\n    /** End date of the selected range */\n    @Input() public end: number;\n    /** Month to display the calendar for */\n    @Input() public month = startOfDay(Date.now()).valueOf();\n    /** Emitter for when the start date changes */\n    @Output() public startChange = new EventEmitter<number>();\n    /** Emitter for when the end date changes */\n    @Output() public endChange = new EventEmitter<number>();\n\n    public hovered_date = null;\n\n    public weekdays = [];\n    public month_days = [];\n\n    public get end_after_start() {\n        return (\n            this.end &&\n            this.end > this.start &&\n            !isSameDay(this.end, this.start)\n        );\n    }\n\n    public ngOnInit() {\n        this._setWeekdays();\n        this._setMonthDays();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this._setWeekdays();\n            this._setMonthDays();\n        }\n        if (changes.start) {\n            this._setMonthDays();\n            this.month = this.start || Date.now();\n        }\n        if (changes.month) {\n            this._setMonthDays();\n        }\n        if (changes.end) this._setMonthDays();\n    }\n\n    public selectDate(date: number) {\n        if (!this.start || date < this.start) {\n            this.start = date;\n            this.startChange.emit(date);\n        } else {\n            this.end = date;\n            this.endChange.emit(date);\n        }\n        this._setMonthDays();\n    }\n\n    public setHoveredDate(date: number) {\n        if (!this.start) return;\n        this.end = date;\n        this._setMonthDays();\n    }\n\n    public trackByFn(index: number, day: any) {\n        return day.id;\n    }\n\n    public nextMonth() {\n        this.month = addMonths(this.month, 1).valueOf();\n        this._setMonthDays();\n    }\n\n    public previousMonth() {\n        this.month = addMonths(this.month, -1).valueOf();\n        this._setMonthDays();\n    }\n\n    private _setMonthDays() {\n        const start = startOfWeek(startOfMonth(this.month), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.month_days = Array.from(Array(7 * 6).keys()).map((i) => {\n            const date = addDays(start, i).valueOf();\n            return {\n                id: date,\n                disabled:\n                    (this.from_date && isBefore(date, this.from_date)) ||\n                    (this.to_date && isAfter(date, this.to_date)),\n                is_today: isSameDay(date, Date.now()),\n                is_start: isSameDay(date, this.start),\n                is_end: isSameDay(date, this.end),\n                is_month: isSameMonth(date, this.month),\n                is_selected:\n                    this.end &&\n                    date >= startOfDay(this.start).valueOf() &&\n                    date <= endOfDay(this.end).valueOf(),\n            };\n        });\n    }\n\n    private _setWeekdays() {\n        const start = startOfWeek(Date.now(), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.weekdays = Array.from(Array(7).keys()).map((i) =>\n            addDays(start, i)\n        );\n    }\n}\n","import { Component, ContentChild, Input, ViewChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { startOfDay } from 'date-fns';\n\n@Component({\n    selector: 'date-range-field',\n    template: `\n        <button\n            matRipple\n            class=\"flex items-center rounded px-4 py-2 border border-neutral hover:border-base-content focus:outline-2 outline-base-content space-x-2 min-w-max\"\n            type=\"button\"\n            role=\"date-picker\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n        >\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ start_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <div>&ndash;</div>\n            <div class=\"flex-1 whitespace-nowrap\">\n                {{ end_date?.value || now | date: 'MMM d, yyyy' }}\n            </div>\n            <app-icon class=\"text-2xl\">today</app-icon>\n        </button>\n        <div class=\"hidden\">\n            <ng-content select=\"input[startDate]\"></ng-content>\n            <ng-content select=\"input[endDate]\"></ng-content>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18.25rem] rounded bg-base-100 px-2 py-4\">\n                <date-range-calendar\n                    [month]=\"start_date?.control?.value || now\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (startChange)=\"setStartDate($event)\"\n                    (endChange)=\"setEndDate($event)\"\n                ></date-range-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DateRangeFieldComponent extends AsyncHandler {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean = false;\n    @Input() public short = false;\n\n    public readonly now = Date.now();\n\n    @ContentChild('startDate', { read: NgControl })\n    public start_date?: NgControl;\n    @ContentChild('endDate', { read: NgControl }) public end_date?: NgControl;\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    public setStartDate(date: number) {\n        if (!this.start_date) return;\n        this.start_date.control.setValue(date);\n    }\n\n    public setEndDate(date: number) {\n        this._tooltip?.close();\n        if (!this.end_date) return;\n        this.end_date.control.setValue(date);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\nimport { PlaceUserPipe } from './place-user.pipe';\nimport { DateRangeFieldComponent } from './date-range-field.component';\nimport { DateRangeCalendarComponent } from './date-range-calendar.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DateRangeFieldComponent,\n    DateRangeCalendarComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n\n    PlaceUserPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { Upload } from '@placeos/cloud-uploads';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyInfo,\n    unique,\n    UploadsService,\n} from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ImageViewerComponent } from 'libs/components/src/lib/image-viewer.component';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <div\n                image\n                class=\"relative rounded border-2 border-base-200  border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-base-content/10 :bg-base-100/10 cursor-pointer\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                <input\n                    #file_input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                    (change)=\"uploadImages($event)\"\n                />\n            </div>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0 bg-base-200\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"object-contain absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 z-10 pointer-events-none\"\n                />\n                <div overlay class=\"absolute inset-0 text-base-100 z-20\">\n                    <div bg class=\"absolute inset-0 opacity-0 bg-black\"></div>\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                image\n                *ngFor=\"let item of uploads | async; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 rounded border border-base-content/10 /5 bg-base-200  flex items-center justify-center flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n                [matTooltip]=\"item.error\"\n                (click)=\"retryUpload(item)\"\n            >\n                <mat-progress-spinner\n                    *ngIf=\"!item.error\"\n                    [value]=\"item.progress\"\n                    [diameter]=\"64\"\n                    mode=\"determinate\"\n                ></mat-progress-spinner>\n                <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                    >warning</app-icon\n                >\n                <div\n                    overlay\n                    *ngIf=\"item.error\"\n                    class=\"absolute inset-0 hover:bg-base-content hover:bg-opacity-50 text-base-100 flex items-center justify-center\"\n                >\n                    <app-icon class=\"text-3xl opacity-0\">refresh</app-icon>\n                </div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [image]:hover [actions],\n            [image]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [image]:hover [bg] {\n                opacity: 0.4 !important;\n            }\n\n            [actions],\n            [image] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n    @ViewChild('file_input') private _file_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _uploads: UploadsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        this.timeout(\n            'init_view_space',\n            () => {\n                const box = this._list_el.nativeElement.getBoundingClientRect();\n                this.view_space = Math.floor(box.width / 152);\n            },\n            100\n        );\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {\n        this._dialog.open(ImageViewerComponent, { data: url });\n    }\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public retryUpload(item: UploadDetails) {\n        if (item.error) {\n            item.error = null;\n            item.upload.resume();\n        }\n    }\n\n    public async uploadImages(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                this.interval('update_status', () =>\n                    this._updateUploadHistory()\n                );\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this._uploads.uploadFileWithPermissions(\n                        files[i]\n                    );\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                    this._file_input.nativeElement.value = '';\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: string[]) {\n        this.list = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    private async _updateUploadHistory() {\n        const list = this.upload_ids.getValue();\n        if (list.length === 0) return;\n        const global_list = await this._uploads.upload_list\n            .pipe(take(1))\n            .toPromise();\n        const new_list = global_list.filter((_) =>\n            list.find((i) => i === _.id)\n        );\n        const done_list = new_list.filter((file) => file.progress >= 100);\n        this._upload_list.next(new_list);\n        done_list.forEach((i) => delete i.upload);\n        if (done_list.length >= list.length)\n            this.clearInterval('update_status');\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if (value.includes(',')) {\n        const list = value.split(',');\n        for (const item of list) {\n            if ((item || '').trim()) {\n                item_list.push(item.trim());\n                control.setValue(item_list);\n            }\n        }\n    } else {\n        if ((value || '').trim()) {\n            item_list.push(value.trim());\n            control.setValue(item_list);\n        }\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { StaffUser, User } from '../../../users/src/lib/user.class';\nimport { showUser } from '@placeos/ts-client';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new StaffUser();\n\n@Pipe({\n    name: 'placeuser',\n})\nexport class PlaceUserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id,\n        );\n        if (user) return user;\n        user = await showUser(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            user = new StaffUser(user);\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, uploadFile } from '@placeos/common';\nimport Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container class=\"absolute inset-0\">\n            <div #editor class=\"h-full\"></div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                position: relative;\n                min-height: 8rem;\n                margin-bottom: 4rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n    @Input() public images_allowed = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: Quill;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string,\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string,\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.images_allowed) {\n            this.timeout('init', () => this._initialiseEditor());\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.timeout('init', () => this._initialiseEditor());\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        this.timeout('write', () => {\n            if (this._editor) {\n                const delta = this._editor.clipboard.convert({ html: value });\n                this._editor.setContents(delta, 'silent');\n            } else {\n                this.timeout('write', () => this.writeValue(value));\n            }\n        });\n    }\n\n    private _initialiseEditor() {\n        if (\n            !this._editor_el?.nativeElement ||\n            !this._container_el?.nativeElement\n        ) {\n            return this.timeout('init', () => this._initialiseEditor());\n        }\n        const toolbarOptions = [\n            [{ font: [] }],\n            [{ header: [1, 2, 3, 4, 5, 6, false] }],\n            ['bold', 'italic', 'underline'], // toggled buttons\n\n            [{ list: 'ordered' }, { list: 'bullet' }, { list: 'check' }],\n            [{ align: [] }],\n        ];\n        if (this.images_allowed) {\n            toolbarOptions.push(['image', 'link']);\n        }\n        if (this._editor) {\n            this.unsub('changes');\n            this._editor_el.nativeElement.innerHTML = '';\n            delete this._editor;\n        }\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: {\n                    container: toolbarOptions,\n                    handlers: {\n                        image: () => this._embedImage(),\n                        link: () => this._embedAttachment(),\n                    },\n                },\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn),\n        );\n    }\n\n    private _embedImage() {\n        if (!this._editor) return;\n        const range = this._editor.getSelection();\n        if (!range) return;\n        const { index } = range;\n        // Create a File input element\n        var file_input = document.createElement('input');\n        file_input.setAttribute('type', 'file');\n        file_input.setAttribute('accept', 'image/*');\n        file_input.click();\n\n        file_input.onchange = () => {\n            var file = file_input.files[0];\n            uploadFile(file, true).subscribe(({ link, progress }) => {\n                if (!link || progress !== 100) return;\n                this._editor.insertEmbed(index, 'image', link);\n            });\n        };\n    }\n\n    private _embedAttachment() {\n        if (!this._editor) return;\n        const range = this._editor.getSelection();\n        if (!range) return;\n        const { index } = range;\n        // Create a File input element\n        var file_input = document.createElement('input');\n        file_input.setAttribute('type', 'file');\n        file_input.click();\n\n        file_input.onchange = () => {\n            var file = file_input.files[0];\n            uploadFile(file, true).subscribe(({ link, progress }) => {\n                if (!link || progress !== 100) return;\n                this._editor.insertText(range.index, file.name, 'link', link);\n                this._editor.setSelection(range.index + file.name.length);\n            });\n        };\n    }\n}\n","import { ChangeDetectorRef, Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    @Input() multiday = false;\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n                multiday: this.multiday,\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\nexport interface SupportRequestType {\n    name: string;\n    email: string;\n}\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"support_request_types?.length\"\n                >\n                    <label i18n>Issue Type</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Issue Type\"\n                            formControlName=\"issue_type\"\n                        >\n                            <mat-option\n                                *ngFor=\"let type of support_request_types\"\n                                [value]=\"type?.name || type\"\n                            >\n                                {{ type.name || type }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n>\n                        Issue Description<span>*</span>\n                    </label>\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        issue_type: new FormControl(''),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get support_request_types(): SupportRequestType[] {\n        return this._settings.get('app.support_issue_types') || [];\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.',\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images, issue_type } =\n                this.form.value;\n            const support_email =\n                this.support_request_types.find(\n                    (type) => type.name === issue_type,\n                )?.email || this.support_email;\n            await mod.execute('send_mail', [\n                support_email,\n                `Support Ticket from Workplace Application${\n                    issue_type ? ' - ' + issue_type : ''\n                }`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    '',\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>',\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                    {{ extra_info_fn(option.date) }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    @Input() public extra_info_fn = (t?: number) => '';\n    /** Prevent times before */\n    @Input() public from: number = startOfDay(Date.now()).valueOf();\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step,\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step || changes.from) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step,\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm'),\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`),\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] }),\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step,\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step,\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    }),\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15,\n    ): Identity[] {\n        const now = new Date(Math.max(this.from, Date.now()));\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = new Date(now);\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step as any });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\nconst ACCEPTED_FILE_TYPES = ['text/csv', 'text/plain'];\nconst DENIED_FILE_TYPES = [\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <div>{{ item.name || item.email }}</div>\n                                <app-icon\n                                    *ngIf=\"!item.is_external\"\n                                    [matTooltip]=\"\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_name_time(time)\n                                    \"\n                                >\n                                    {{\n                                        (\n                                            item?.email\n                                            | placeuser\n                                            | async\n                                        )?.location_icon(time)\n                                    }}\n                                </app-icon>\n                            </div>\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    @Input() public time = Date.now();\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input() public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file: File = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                if (\n                    !ACCEPTED_FILE_TYPES.includes(file.type) ||\n                    DENIED_FILE_TYPES.includes(file.type)\n                ) {\n                    notifyError('Only CSV files are supported');\n                    return;\n                }\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full no-subscript\">\n            <input\n                #input\n                matInput\n                keyboard\n                name=\"user-search\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"search$.next($event || '')\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"placeholder || 'Search for user...'\"\n                [matAutocomplete]=\"auto\"\n                (keyup.enter)=\"\n                    validate && validate(search_str) ? setValue(search_str) : ''\n                \"\n                (blur)=\"resetSearchString()\"\n                (focus)=\"cancelReset()\"\n            />\n            <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n            <mat-spinner *ngIf=\"loading\" matSuffix diameter=\"16\"></mat-spinner>\n        </mat-form-field>\n        <mat-autocomplete\n            #auto=\"matAutocomplete\"\n            (optionSelected)=\"setValue($event.option.value)\"\n        >\n            <mat-option\n                *ngFor=\"let option of user_list\"\n                (click)=\"setValue(option); blurInput()\"\n            >\n                <div class=\"leading-tight\">{{ option.name }}</div>\n                <div class=\"text-xs opacity-60\">\n                    {{ option.email }}\n                </div>\n            </mat-option>\n            <mat-option\n                *ngIf=\"search_str && validate && validate(search_str)\"\n                class=\"relative pointer-events-none\"\n            >\n                <div\n                    class=\"absolute inset-0 px-4 pointer-events-auto\"\n                    (mousedown)=\"\n                        $event.stopPropagation(); $event.preventDefault()\n                    \"\n                    (touchstart)=\"\n                        $event.stopPropagation(); $event.preventDefault()\n                    \"\n                    (click)=\"\n                        setValue(search_str);\n                        $event.stopPropagation();\n                        $event.preventDefault()\n                    \"\n                >\n                    <div class=\"pointer-events-none\" i18n>\n                        Add external attendee \"{{ search_str }}\"\n                    </div>\n                </div>\n            </mat-option>\n            <mat-option\n                *ngIf=\"!user_list?.length && (search_str || error)\"\n                [disabled]=\"!empty_fn\"\n                (click)=\"empty_fn()\"\n            >\n                {{ search_str ? 'No users found.' : '' }} {{ error }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (!new_value) return;\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        const user = new_value as any;\n        if (!('name' in user) && !('email' in user)) return;\n        this.active_user = user;\n        if (this._onChange) this._onChange(user);\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = [\n    'desk',\n    'parking',\n    'asset-request',\n    'visitor',\n    'locker',\n    'group-event',\n];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(300).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        attendees: [],\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        permission: type === 'group-event' ? 'OPEN' : 'PRIVATE',\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            }\n            const user = {\n                id: _.body.id,\n                name: _.body.name,\n                email: _.body.email,\n                checked_in: false,\n            };\n            event.attendees.push(user);\n            return user;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/guests/:email/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            const guest = event.attendees.find(\n                (_) => _.email === decodeURIComponent(email)\n            );\n            if (!guest) {\n                throw {\n                    status: 404,\n                    message: `Unable to find guest with email ${email}`,\n                };\n            }\n            guest.checked_in = _.query_params.state === 'true';\n            return guest;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/attendee/:email',\n        metadata: {},\n        method: 'DELETE',\n        callback: (_) => {\n            const { id, email } = _.route_params;\n            const event = MOCK_BOOKINGS.find((e) => e.id === id);\n            if (!event) {\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${id}`,\n                };\n            }\n            event.attendees = event.attendees.filter(\n                (_) => _.email !== decodeURIComponent(email)\n            );\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3', 'zone-EmWFTjuYExK'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    }),\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Demo User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { getUnixTime, subMinutes } from 'date-fns';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: getUnixTime(Date.now()),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: getUnixTime(\n                        subMinutes(Date.now(), predictableRandomInt(60))\n                    ),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: getUnixTime(\n                        subMinutes(Date.now(), predictableRandomInt(60))\n                    ),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: ['org'],\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nexport const MOCK_ZONES = [];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: ['level'],\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce(\n    (p, c) => p.concat(c),\n    [\n        // {\n        //     id: 'test',\n        //     parent_id: 'bld-01',\n        //     name: 'Test',\n        //     map_id: 'assets/maps/test.svg',\n        // },\n        {\n            id: 'level-p1',\n            parent_id: 'bld-01',\n            name: 'Level P1',\n            tags: ['level', 'parking'],\n            map_id: 'assets/maps/level_P1.svg',\n        },\n    ]\n);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport {\n    MOCK_ORGS,\n    MOCK_LEVELS,\n    MOCK_BUILDINGS,\n    MOCK_ZONES,\n} from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            } else if (request.query_params.tags) {\n                return MOCK_ZONES.filter((_) =>\n                    _.tags.includes(request.query_params.tags)\n                );\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => [],\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/settings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => ({}),\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** Identifier of building in relation to mapping */\n    public readonly map_id: string;\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.map_id = raw_data.map_id || '';\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    public readonly location: string;\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string; name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.location = _data.location || '';\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number = (\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || ''\n        ).substring(0, 2);\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    EncryptionLevel,\n    PlaceZone,\n    authority,\n    isFixedDevice,\n    isMock,\n    onlineState,\n    querySettings,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n} from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { AsyncHandler, log, unique } from '@placeos/common';\n\nimport * as yaml from 'js-yaml';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings,\n        ),\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay(1),\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id || this.buildings[0]?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id,\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(\n        private _service: SettingsService,\n        private _router: Router,\n    ) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        combineLatest([this.active_region, this.active_building])\n            .pipe(\n                filter(([_, bld]) => !!bld),\n                debounceTime(300),\n            )\n            .subscribe(() => this._updateSettingOverrides());\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id,\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    /**\n     * Get list of levels for the given region\n     * @param region Region to list levels for\n     */\n    public levelsForRegion(region: Region = this.region): BuildingLevel[] {\n        const bld_list = this.buildingsForRegion(region);\n        return this.levels.filter(\n            (lvl) =>\n                lvl.parent_id &&\n                bld_list.find((bld) => bld.id === lvl.parent_id),\n        );\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            let buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            buildings = buildings.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || ''),\n            );\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            let levels = this._levels.getValue().filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            levels = levels.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || ''),\n            );\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id,\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id,\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n        }\n        await this.loadLevels();\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone,\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([])),\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id'),\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id,\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules, driver_settings]: any =\n            await Promise.all([\n                showMetadata(bld.id, this.app_key)\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({})),\n                    )\n                    .toPromise(),\n                showMetadata(bld.id, 'bindings')\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({})),\n                    )\n                    .toPromise(),\n                showMetadata(bld.id, 'booking_rules')\n                    .pipe(\n                        map((_) => _?.details),\n                        catchError(() => of({})),\n                    )\n                    .toPromise(),\n                querySettings({ parent_id: bld.id })\n                    .pipe(\n                        catchError(() => of({ data: {} as any })),\n                        map((_) => {\n                            try {\n                                return yaml.load(\n                                    _?.data.find(\n                                        (_) =>\n                                            _.encryption_level ===\n                                            EncryptionLevel.None,\n                                    ) || { settings_string: '' },\n                                );\n                            } catch {\n                                return {};\n                            }\n                        }),\n                    )\n                    .toPromise(),\n            ]);\n        this._building_settings[bld.id] = {\n            ...(driver_settings || {}),\n            ...(settings || {}),\n        };\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        let level_list = await queryZones({\n            tags: 'level',\n            authority_id: authority().id,\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n        level_list = level_list.filter((_) => _.parent_id);\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        let levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels = levels.sort((a, b) =>\n            (a.name || '').localeCompare(b.name || ''),\n        );\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this.building = this.buildings.find((bld) => bld.id === id);\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2),\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2),\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id),\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id,\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        setTimeout(\n            () =>\n                (this._service.overrides = [\n                    this.buildingSettings(this.building?.id),\n                    this.regionSettings(this.region?.id),\n                    ...this._settings,\n                ]),\n            300,\n        );\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Address of the region */\n    public readonly address: string;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n        this.address = _data.address || '';\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { currentUser } from 'libs/common/src/lib/user-state';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [multiday]=\"multiday\"\n                    [hide_levels]=\"view !== 'list'\"\n                    [viewing_map]=\"view === 'map'\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:flex-col sm:max-w-[20rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n    public readonly multiday = !!this._data.multiday;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: Space[];\n            options: Partial<EventFlowOptions>;\n            multiday?: boolean;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport {\n    flatten,\n    MapsPeopleService,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { addDays, endOfDay, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\nimport { Region } from '@placeos/organisation';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[8rem]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[8rem] relative\" *ngIf=\"multiday\">\n                        <label for=\"date\">\n                            {{ 'FORM.END_DATE' | translate }}<span>*</span>\n                        </label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"start_date\"\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"end-time\"\n                            [ngModel]=\"form.value.date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"form?.getRawValue()?.date\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"!multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.getRawValue()?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section\n                favs\n                class=\"space-y-2 pb-4\"\n                *ngIf=\"!viewing_map || !(using_mapspeople | async)\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"\n                    (features | async)?.length &&\n                    (!viewing_map || !(using_mapspeople | async))\n                \"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    @Input() public multiday: boolean;\n    @Input() public hide_levels: boolean;\n    @Input() public viewing_map: boolean;\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly regions = this._org.region_list;\n\n    public readonly using_mapspeople = this._mapspeople.available$;\n\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get start_date() {\n        return startOfDay(this.form.getRawValue().date).valueOf();\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _mapspeople: MapsPeopleService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public setRegion(region: Region) {\n        this._org.region = region;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public coordinates = undefined;\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking'),\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || ''),\n            );\n        }),\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            })),\n        ),\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            })),\n        ),\n    );\n\n    public readonly styles = combineLatest([\n        this._event_form.spaces,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([spaces, free_spaces]) =>\n            spaces.reduce((styles, space) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_spaces.find((_) => _.id === space.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${space.map_id || space.id}`] = {\n                    fill:\n                        colours[`space-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {}),\n        ),\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this._event_form.options.subscribe(({ zone_ids }) => {\n                const level = this._org.levelWithID(zone_ids);\n                if (level) this.level = level;\n            }),\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_ids: [level?.id] });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = (level.location || bld.location)\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n\n    public inUseAt(start: number, duration: number): boolean {\n        const end = start + duration * 60 * 1000;\n        return (\n            this.availability.filter(\n                (i) =>\n                    i.date == start &&\n                    i.date + i.duration * 60 * 1000 == end &&\n                    i.status !== 'free'\n            ).length > 0\n        );\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\nconst ATTEMPT_COUNT: Record<string, number> = {};\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\nsetInterval(() => {\n    for (const id in ATTEMPT_COUNT) {\n        ATTEMPT_COUNT[id] = ATTEMPT_COUNT[id] - 1;\n        if (ATTEMPT_COUNT[id] <= 0) {\n            delete ATTEMPT_COUNT[id];\n        }\n    }\n}, 10 * 1000);\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (ATTEMPT_COUNT[space_id]) return EMPTY_SPACE;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({\n                in: space_id,\n                zone_id: this._org?.organisation.id,\n            }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string): Observable<Space[]> {\n    if (!id) return of([]);\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({\n        q,\n        fields: [\n            'id',\n            'name',\n            'email',\n            'username',\n            'organisation',\n            'department',\n        ].join(','),\n    });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { format, isSameDay } from 'date-fns';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n              ? 'declined'\n              : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport interface WorktimePreference {\n    /* Index of the day of the week. `0` being Sunday */\n    day_of_week: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n    blocks: WorktimeBlock[];\n}\n\nexport interface WorktimeBlock {\n    /* Start time of work hours. e.g. `7.5` being 7:30AM */\n    start_time: number;\n    /* End time of work hours. e.g. `18.5` being 6:30PM */\n    end_time: number;\n    /** Name of the location the work is being performed at */\n    location?: string;\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Default worktime preferences for the user */\n    public readonly work_preferences: WorktimePreference[];\n    /** Overrides of the worktime preferences for the user */\n    public readonly work_overrides: Record<string, WorktimePreference>;\n\n    public get location() {\n        return this.location_time(Date.now());\n    }\n\n    public work_preference(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const date = new Date(datetime);\n        const day = date.getDay();\n        const date_string = format(date, 'yyyy-MM-dd');\n        if (this.work_overrides[date_string]?.blocks?.length) {\n            for (const block of this.work_overrides[date_string].blocks) {\n                const start = block.start_time;\n                const end = block.end_time;\n                if (\n                    start <= date.getHours() + date.getMinutes() / 60 &&\n                    end >= date.getHours() + date.getMinutes() / 60\n                ) {\n                    return block;\n                }\n            }\n        }\n        for (const pref of this.work_preferences) {\n            if (pref.day_of_week === day && pref.blocks?.length) {\n                for (const block of pref.blocks) {\n                    if (\n                        block.start_time <=\n                            date.getHours() + date.getMinutes() / 60 &&\n                        block.end_time >=\n                            date.getHours() + date.getMinutes() / 60\n                    ) {\n                        return block;\n                    }\n                }\n            }\n        }\n    }\n\n    public location_time(datetime: number = Date.now()) {\n        return this.work_preference(datetime)?.location || 'wfo';\n    }\n\n    public get location_name() {\n        return this.location_name_time();\n    }\n\n    public location_name_time(datetime: number = Date.now()) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location.includes('w') && !in_hours) {\n            return 'Outside working hours';\n        }\n        switch (location) {\n            case 'wfh':\n                return 'Working from Home';\n            case 'wfo':\n                return 'Working from Office';\n            case 'ooo':\n                return 'Out of Office';\n            case 'aol':\n                return 'Away on Leave';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    public outsideHours(datetime: number = Date.now()) {\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        return location.includes('w') && !in_hours;\n    }\n\n    public get in_hours() {\n        return this.in_hours_time(Date.now());\n    }\n\n    public location_icon(datetime: number) {\n        if (!datetime) datetime = Date.now();\n        const location = this.location_time(datetime);\n        const in_hours = this.in_hours_time(datetime);\n        if (location === 'wfh' && in_hours) return 'home';\n        if (location === 'wfo' && in_hours) return 'business';\n        return 'event_busy';\n    }\n\n    public in_hours_time(datetime: number = Date.now()) {\n        const block = this.work_preference(datetime);\n        return !!block;\n    }\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.is_logged_in = !!data.is_logged_in;\n        this.work_preferences = data.work_preferences || [];\n        this.work_overrides = data.work_overrides || ({} as any);\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/^\\+?(\\d[\\d\\s\\-\\(\\)]{5,13}\\d)$/)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, notifyError, reloadUserData } from '@placeos/common';\nimport { addDays, set, startOfMinute, startOfWeek } from 'date-fns';\nimport { WorktimeBlock, WorktimePreference } from './user.class';\nimport { showUser, updateUser } from '@placeos/ts-client';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <header class=\"relative flex items-center justify-between\">\n            <h2 class=\"font-medium text-xl\">Working Location Settings</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"bg-base-200\"\n                *ngIf=\"!loading\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"relative flex flex-col rounded w-[40rem] max-w-full p-4 space-y-2 max-h-[65vh] overflow-auto\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <h3>Working Days</h3>\n            <div\n                class=\"flex items-center justify-between w-full pb-4 space-x-2\"\n            >\n                <mat-checkbox\n                    *ngFor=\"let day of days\"\n                    [(ngModel)]=\"weekdays_enabled[day.getDay()]\"\n                    (ngModelChange)=\"$event && initialiseDay(day.getDay())\"\n                >\n                    {{ day | date: 'EEE' }}\n                </mat-checkbox>\n            </div>\n            <h3>Work Hours</h3>\n            <ng-container *ngIf=\"has_working_days; else empty_state\">\n                <ng-container *ngFor=\"let day of days\">\n                    <ng-container *ngIf=\"weekdays_enabled[day.getDay()]\">\n                        <div\n                            class=\"flex w-full space-x-2 hover:bg-base-200 rounded px-2 pt-1\"\n                        >\n                            <label class=\"w-12 min-w-0 px-2 pt-3\">\n                                {{ day | date: 'EEE' }}\n                            </label>\n                            <div class=\"flex-1 w-1/2\">\n                                <div\n                                    class=\"flex items-center space-x-2\"\n                                    *ngFor=\"\n                                        let block of settings[day.getDay()]\n                                            .blocks;\n                                        let i = index\n                                    \"\n                                >\n                                    <a-time-field\n                                        [ngModel]=\"timeFrom(block.start_time)\"\n                                        (ngModelChange)=\"\n                                            setStartTime(\n                                                block,\n                                                day.getDay(),\n                                                $event\n                                            )\n                                        \"\n                                        [from]=\"\n                                            timeFrom(\n                                                (i > 0\n                                                    ? settings[day.getDay()]\n                                                          .blocks[i - 1]\n                                                          ?.end_time\n                                                    : 0) || 0\n                                            )\n                                        \"\n                                        class=\"flex-1 w-1/4 h-[3.25rem]\"\n                                    ></a-time-field>\n                                    <a-time-field\n                                        [ngModel]=\"timeFrom(block.end_time)\"\n                                        (ngModelChange)=\"\n                                            setEndTime(\n                                                block,\n                                                day.getDay(),\n                                                $event\n                                            )\n                                        \"\n                                        [from]=\"\n                                            timeFrom(block.start_time + 0.25)\n                                        \"\n                                        class=\"flex-1 w-1/4 h-[3.25rem]\"\n                                    ></a-time-field>\n                                    <mat-form-field\n                                        appearance=\"outline\"\n                                        class=\"flex-1 w-1/4 h-[3.25rem]\"\n                                    >\n                                        <mat-select\n                                            [(ngModel)]=\"block.location\"\n                                        >\n                                            <mat-option\n                                                *ngFor=\"let type of options\"\n                                                [value]=\"type.id\"\n                                            >\n                                                {{ type.name }}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [disabled]=\"\n                                            settings[day.getDay()].blocks\n                                                .length > 2\n                                        \"\n                                        (click)=\"\n                                            addBlock(settings[day.getDay()], i)\n                                        \"\n                                    >\n                                        <app-icon>add</app-icon>\n                                    </button>\n                                    <button\n                                        icon\n                                        matRipple\n                                        class=\"text-error\"\n                                        [class.opacity-0]=\"i === 0\"\n                                        [class.pointer-events-none]=\"i === 0\"\n                                        (click)=\"\n                                            removeBlock(\n                                                settings[day.getDay()],\n                                                i\n                                            )\n                                        \"\n                                    >\n                                        <app-icon>delete</app-icon>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n            <ng-template #empty_state>\n                <div\n                    class=\"flex flex-col items-center justify-center px-8 py-16 space-y-4\"\n                >\n                    <img src=\"assets/icons/no-results.svg\" class=\"m-auto\" />\n                    <p class=\"opacity-30\">\n                        No work days are currently set for this user\n                    </p>\n                </div>\n            </ng-template>\n        </main>\n        <footer\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48\" (click)=\"saveChanges()\">\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[24rem] h-[18rem] text-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">\n                    Saving changes to work location settings...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Office' },\n        { id: 'wfh', name: 'Home' },\n        { id: 'aol', name: 'Leave' },\n    ];\n    public option = this.options[0].id;\n    public settings: WorktimePreference[] = [];\n    public weekdays_enabled: Record<number, boolean> = {};\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [];\n    public readonly days = new Array(7)\n        .fill(0)\n        .map((_, idx) => addDays(startOfWeek(addDays(Date.now(), 30)), idx));\n\n    public get has_working_days() {\n        return Object.keys(this.weekdays_enabled).some(\n            (day) => this.weekdays_enabled[day],\n        );\n    }\n\n    public get option_name() {\n        return this.options.find((_) => _.id === this.option)?.name || '';\n    }\n\n    public get now() {\n        return startOfMinute(Date.now()).getTime();\n    }\n\n    constructor(private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        this.settings = [\n            ...(user.work_preferences || []).map((_) => ({\n                ..._,\n                blocks: [...(_?.blocks || [])],\n            })),\n        ];\n        for (const day of this.settings) {\n            if (day.blocks.length)\n                this.weekdays_enabled[day.day_of_week] = true;\n        }\n    }\n\n    public timeFrom(hours: number) {\n        return startOfMinute(\n            set(addDays(new Date(), 1), {\n                hours: Math.floor(hours),\n                minutes: (hours * 60) % 60,\n            }),\n        ).getTime();\n    }\n\n    public fromTime(time: number) {\n        const date = new Date(time);\n        return date.getHours() + date.getMinutes() / 60;\n    }\n\n    public initialiseDay(day: number) {\n        if (!this.settings[day])\n            this.settings[day] = { day_of_week: day as any, blocks: [] };\n        if (!this.settings[day].blocks) this.settings[day].blocks = [];\n        if (this.settings[day].blocks.length === 0) {\n            this.addBlock(this.settings[day], 0);\n        }\n    }\n\n    public addBlock(pref: WorktimePreference, index: number) {\n        pref.blocks.splice(index + 1, 0, {\n            start_time: 9,\n            end_time: 17,\n            location: 'wfo',\n        });\n        this.cleanupBlocks(pref);\n    }\n\n    public removeBlock(pref: WorktimePreference, index: number) {\n        if (pref.blocks.length <= 1) return;\n        pref.blocks.splice(index, 1);\n    }\n\n    public setEndTime(block: WorktimeBlock, day: number, time: number) {\n        setTimeout(() => {\n            block.end_time = this.fromTime(time);\n            this.cleanupBlocks(this.settings[day]);\n        }, 50);\n    }\n\n    public setStartTime(block: WorktimeBlock, day: number, time: number) {\n        setTimeout(() => {\n            block.start_time = this.fromTime(time);\n            this.cleanupBlocks(this.settings[day]);\n        }, 50);\n    }\n\n    public cleanupBlocks(pref: WorktimePreference) {\n        if (!pref?.blocks?.length) return;\n        for (let i = 0; i < pref.blocks.length; i++) {\n            const block = pref.blocks[i];\n            if (i > 0) {\n                if (block.start_time < pref.blocks[i - 1].end_time) {\n                    block.start_time = pref.blocks[i - 1].end_time;\n                }\n            }\n            if (block.end_time <= block.start_time) {\n                block.end_time = block.start_time + 1;\n            }\n        }\n    }\n\n    public async saveChanges(close = true) {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const user = await showUser('current').toPromise();\n        const new_settings = new Array(7)\n            .fill(0)\n            .map((_, idx) => ({ day_of_week: idx, blocks: [] }));\n        for (const day of this.days) {\n            const day_of_week = day.getDay();\n            if (this.weekdays_enabled[day_of_week]) {\n                new_settings[day_of_week] = {\n                    day_of_week: day_of_week,\n                    blocks: this.settings[day_of_week].blocks,\n                };\n            }\n        }\n        console.log('Update user...');\n        await updateUser(user.id, {\n            ...user,\n            groups: user.groups.filter((_) => !_.startsWith('placeos_')),\n            work_preferences: new_settings,\n        } as any)\n            .toPromise()\n            .catch((e) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError('Unable to save user work preferences.');\n                throw e;\n            });\n        console.log('Updated user');\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n        if (close) {\n            reloadUserData();\n            console.log('Close WFH Modal');\n            this._dialog_ref.close();\n        }\n    }\n}\n"],"x_google_ignoreList":[]}