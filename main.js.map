{"version":3,"file":"main.js","mappings":"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AI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKtL,EAAUqL,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAA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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","_class","AppRoutingModule","_createClass","_classCallCheck","this","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_settings","_org","_cache","_snackbar","_this","_callSuper","title","_inherits","key","value","_ngOnInit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","get_token","tkn","_Office2","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","i0","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form2","_this$form3","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r3","room_tile_component_1","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_locateSpaces","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","_r2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r4","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_30_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_31_ng_container_6_Template","_r14","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","getRawValue","levelWithID","find","address","_item$option_list","option_list","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_30_Template","MeetingFlowConfirmComponent_section_31_Template","MeetingFlowConfirmComponent_button_33_Template","pattern","is_multiday","all_day","date_end","spaces_1","date_fns_1","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","linked_event","desks","_ref14","include_checked_out","parking","_ref16","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref23","_ref24","p","l","filtered_events","ev","bkn","meeting_id","_ref25","_ref26","filters","_filters$shown_types","_filters$shown_types2","triggerPoll","parse","interval","stopPolling","clearInterval","setAsDeleted","push","_toggleType","clear","_x2","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_request_class_1","err_tooltip","item_r4","request_r1","removeRequestItem","toggleFavourite","quantity","favorites","AssetListFieldComponent_div_1_div_8_Template","duplicateRequest","editRequest","removeRequest","show_request","AssetListFieldComponent_div_1_div_22_Template","deliver_at","deliver_at_time","items","EMPTY_FAVS","AssetListFieldComponent","asset_requests","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","time","changes","AssetRequest","new_value","order","AssetSelectModalComponent","Math","max","exact_time","deliver_time","offset","deliver_offset","offset_day","deliver_day_offset","orders","_item$assets","item_ids","Array","fill","idx","new_order","_changed","_items$find","__","getHours","getMinutes","item_count","setValue","request","updated_list","randomString","asset","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","deliverAtTime","_request$event","_request$event2","_time","hours","floor","minutes","addDays","addMinutes","_data$asset_ids","_data$extension_data","_data$extension_data2","_data$extension_data3","_data$extension_data4","startOfMinute","randomInt","event_id","asset_ids","reduce","amount","_status","status","notes","blob","category_id","toggleFav","countChange","active","activeChange","fav","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","day_r6","_r8","offset_dayChange","AssetFiltersComponent_div_7_ng_container_3_mat_option_5_Template","day_options","_r11","at_time","at_timeChange","AssetFiltersComponent_div_7_ng_container_3_Template","offsetChange","exact_tooltip","start_of_date","step_interval","min_offset","max_offset","use_24hr","item_r15","toggleCategory","category","ɵɵattribute","AssetFiltersComponent","search","_min_offset","_max_offset","search_value","categories","category_list","setSearch","c","getOptions","min","diff","differenceInMinutes","_updateDayOptions","_this$_state$getOptio","day","count","AssetFiltersComponent_h3_6_Template","AssetFiltersComponent_div_7_Template","AssetFiltersComponent_h3_8_Template","AssetFiltersComponent_mat_checkbox_10_Template","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_data","_this$_data$exact_tim","t","selected_ids","state","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_15_Template","isSelected","bookings_fn_1","asset_group_pipe_1","asset_utilities_1","_options","_search","_category","rules","getAssetRulesForZone","replace","asset_list","queryAssets","asset_bookings","_ref5","available_groups","_ref7$","ignore","queryGroupAvailability","endOfMinute","rejected","localeCompare","queryAssetCategories","zone_id","_ref9","_$assets","assetAvailable","_ref13","showMetadata","disabled_rooms","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","brand","generateAssetForm","RULE_REQUESTS","current_date","event_date","isRuleMatch","rule","_event$space","some","matches","condition","isBefore","subHours","isAfter","setHours","stringToMinutes","ext","api_1","booking_class_1","BASE_ENDPOINT","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","asset_type_id","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_booking$asset_ids","_removeAssetRequests","requests","_$asset_ids","removeBooking","_updateAssetRequestsForResource","new_assets","ical_uid","from_booking","location_name","location_id","reset_state","booking_id","_request$items","createBooking","user_email","approved","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","products","_loop2","removeAssetRequests","updateAssetRequestsForResource","_x3","_x4","booking_details_modal_component_1","async_handler_class_1","BookingCardComponent_h4_0_span_1_Template","show_day","_r9","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","ɵɵpureFunction1","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","_this$booking2","_this$booking3","_this$booking4","_this$booking5","is_done","queryParamMap","params","_this2$booking","has","_this$booking7","_this$booking8","_this$booking9","is_today","format","_this$booking10","_this$booking11","_this$booking12","_this$booking13","is_all_day","dur","formatDuration","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","item_r17","request_r15","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","_c6","actions","BookingDetailsModalComponent_ng_container_38_interactive_map_1_Template","BookingDetailsModalComponent_ng_container_38_ng_template_3_Template","use_mapsindoors$","_r22","_r24","_booking","_maps_people","hide_map","has_assets","linked_bookings","use_mapspeople$","_this$booking6","ts","booking_start","booking_end","_this$level","setCustomZone","_this$booking14","_this$booking15","_toggleCheckedIn","checkinBooking","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","InjectMapApiService","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","viewLocation","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_49_Template","BookingDetailsModalComponent_button_50_Template","booking_status","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","unique","booking_rules","available_resources","merge","timer","restrictions","_this$form$getRawValu","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","is_restricted","rulesForResource","hidden","groups","grp","bookable","grouped_availability","_options$members","_a$zone","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","_confirmPost","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user3","_value$user4","_ref11","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","available","unavailable","group_name","_asset$zone4","_asset$zone5","_unavailable$map","t1","_getNearbyResources","t2","t3","call","organisation","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x5","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$title","roundToNearestMinutes","nearestTo","abs","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","getTime","removeEmptyFields","addHours","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","response_type","_createBookingsForEvent","_item$items","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","approveBooking","rejectBooking","json","message","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","createBookingsForEvent","components_module_1","form_fields_module_1","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","ɵɵi18nStart","ɵɵi18nEnd","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r4","_r6","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r10","DeskFiltersComponent_div_10_mat_option_5_Template","_c12","lvl_r15","DeskFiltersComponent_div_12_mat_option_6_Template","feat_r21","_r23","_c21","DeskFiltersComponent_section_32_div_3_Template","_r25","ctx_r24","_bsheet_ref","can_close","active_buildings","active_levels","setLevel","allow_time_changes","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","end_date","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","DEFAULT_COLOURS","_this2$level","_this2$level3","_this2$level2","new_zoom","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","_c16","item_r19","_r21","setVisitor","item_r22","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","feat_r2","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_16_0","tmp_18_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r16","_r18","ctx_r17","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","_removeFeature","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","lvl","tags","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","zone_ids","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","removeTag","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","saveChanges","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","tag","markAsDirty","input","existing_tag","index","indexOf","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","has_options","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","catering_order_class_1","optionList","CateringListFieldComponent_div_1_div_25_span_3_Template","order_r1","removeOrderItem","currency_code","CateringListFieldComponent_div_1_div_8_Template","duplicateOrder","editOrder","removeOrder","show_order","CateringListFieldComponent_div_1_div_25_Template","CateringListFieldComponent","currency","CateringOrder","custom_id","NewCateringOrderModalComponent","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","CateringOrderItemComponent","_this$item","order_id","item_key","delete","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","filtered","CateringOrdersService","CateringOrderListComponent_li_20_Template","CateringOrderListComponent_div_22_Template","CateringOrderListComponent_mat_progress_bar_24_Template","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","_this$order$event","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","CateringItemFiltersComponent_div_7_ng_container_3_mat_option_5_Template","CateringItemFiltersComponent_div_7_ng_container_3_Template","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","getFilters","_toggleCategory","_toggleTag","toggleTag","_this$_state$getFilte","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_div_7_Template","CateringItemFiltersComponent_h3_8_Template","CateringItemFiltersComponent_mat_checkbox_10_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","require_notes","charge_codes","available_menu","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_order$event","_order$event2","_data$event","charge_code","catering_vars_1","CateringOrderComponent_div_0_span_18_Template","CateringOrderComponent_div_0_span_21_Template","CateringOrderComponent_div_0_button_25_Template","CateringOrderComponent_div_0_span_28_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r13","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_ref2$","valid_catering","checkOrder","_updateStatus","_event$resources$","updated_order","updateEventMetadata","catering_item_modal_component_1","catering_option_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_updated","_menu","_currency","getCateringForZone","_manageCateringOrder","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","config","_this8","_context8","_yield$this$settings$","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","old_settings","_context10","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","i_r6","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","is_available","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","parts","addToDate","ruleset_list","_details$resource$zon","_details$resource$zon2","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","is_period","max_length","resource_ids","filterResourcesFromRules","_rulesForResource","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","inject_map_api_service_1","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","slice","confirm_modal_component_1","_app_name","ceil","random","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","s1","e1","s2","e2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","_this$keydown_states$","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","GoogleMaps","Mapbox","_map_service","_map_token","_ready","_injected","_custom_zone","_injectMapsApiKeys","map_keys","mapsindoors","use_service","_this$map_keys","google","mapbox","script","rel","head","KeepAliveService","_system_id","_delay","_bindTo","module","_disable_logging","notify","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","DEVICE_ID","RemoteLoggingService","_disable_handling","_events","Subject","_event_history","_metadata","_logging_bindings","_patchConsoleMethods","_types","_i","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","device_id","subtype","timestamp","raw","startsWith","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_init","_this$get","application","_applyUserSettings","_initDarkMode","_applyTheme","_setFontSize","DEFAULT_SETTINGS","override_settings","override","setTheme","_savePendingChanges","important","getElementById","innerText","theme","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","class_list","classList","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","isdst","utc","TIMEZONES","cloud_uploads_1","blobUtil","uploadFile","pub","permissions","Observable","observer","arrayBufferToBlob","upload","upload_list","uploadFiles","file_name","public","upload_details","progress","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","distance","suffix","semverString","version","load","_load","injectVorlonScript","removeVorlonScript","_script","setDarkMode","dark_mode","applySetting","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","saveNotesSetting","type_r12","AttachedResourceConfigModalComponent_div_8_div_30_mat_option_4_Template","i_r10","set_r5","rule_r9","rule_types","show_rules","rulesets","AttachedResourceConfigModalComponent_div_8_div_30_Template","RULE_TYPES","AttachedResourceConfigModalComponent_button_3_Template","AttachedResourceConfigModalComponent_div_5_Template","new_id","AttachedResourceConfigModalComponent_div_8_Template","can_save_notes","IMAGE_STORE","AuthenticatedImageDirective","_image_el","source","_loadImage","_loadImage2","response","authority","nativeElement","cookie","apiKey","fetch","URL","createObjectURL","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","space_utilities_1","space_r4","toggleRoom","AvailableRoomsStateModalComponent_main_7_tr_13_Template","rooms","AvailableRoomsStateModalComponent","change","_toggleRoom","_enableSelected","enableSelected","_disableSelected","disableSelected","AvailableRoomsStateModalComponent_main_7_Template","AvailableRoomsStateModalComponent_ng_template_13_Template","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","Renderer2","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","hint","message_r8","show_time","ChatComponent_div_0_div_4_div_18_div_3_Template","waiting","show_info","ChatComponent_div_0_div_4_div_20_div_12_Template","function","toggleChat","ChatComponent_div_0_div_4_div_16_Template","ChatComponent_div_0_div_4_div_18_Template","ChatComponent_div_0_div_4_div_20_Template","ChatComponent_div_0_div_4_div_22_Template","resizeInput","sendMessage","messages","ChatComponent_div_0_div_4_Template","show","ChatComponent","_chat","list_function_schemas","call_function","task_complete","chat_hint","_this$user","scrollToBottom","_input_el","scrollHeight","connected","startChat","_this4$_container_el","_container_el","scrollTop","ChatService","viewQuery","ChatComponent_div_0_Template","can_show","webSocket_1","_chat_messages","_progress_message","_chat_system","_chat_id","_chat_pipe","_socket","webSocket","serializer","deserializer","return_value","_onMessage","_cleanup","endChat","_this$_socket","_this$_socket2","chat_id","msg_list","_timeoutSocket","task_id","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","indoor_maps_component_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","IndoorMapsComponent","AsyncPipe","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","DatePipe","SanitizePipe","UserControlsComponent","MatTooltip","TranslatePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_ng_container_0_Template","ɵɵpureFunction7","idx_r10","data_source","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_ng_template_2_Template","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r26","row_clicked","empty","CustomTableComponent","pagination","page_size","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","_this$_paginator","dataSource","reset_page","previousValue","firstPage","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_class2","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","DateFromPipe","direction","json_display_component_1","obj_r10","json_tooltip","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_div_8_Template","log_r8","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_div_1_Template","filtered_logs","DebugConsoleComponent_div_0_cdk_virtual_scroll_viewport_7_Template","DebugConsoleComponent_div_0_span_16_Template","logs","onStart","onEnd","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","JsonDisplayComponent","setSystem","DebugConsoleComponent_div_0_Template","DebugConsoleComponent_button_1_Template","DebugConsoleComponent_ng_template_2_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","geolocation_error_message","getRoute","properties","search_result_items","IndoorMapsComponent_ng_container_11_li_8_Template","ɵɵpipeBind3","_api_service","live_data_status","selected_destination","user_latitude","user_longitude","route_error_message","coordinates","levels_list","buildings_list","floor_mapping","custom_coordinates","_getUserLocation","initMapView","_ngOnChanges","renderSpaceStatus","mapActions","mapFloorsToIndex","ngOnChanges","_this$maps_service","maps_service","addListener","found_action","actions_hashmap","is_ready","view_options","lat","lng","maxZoom","map_service","view_instance","mapView","GoogleMapsView","accessToken","map_token","MapboxView","MapsIndoors","map_instance","getMap","initDirections","handleLocationChange","provider","directions","GoogleMapsProvider","MapboxProvider","directions_service","services","DirectionsService","directions_renderer","DirectionsRenderer","mapsIndoors","_mapFloorsToIndex","_this$maps_service2","_building$buildingInf","_this$maps_service3","input_string","pairs","floor_index","getBuilding","buildingInfo","fields","floorMapping","pair","accumulator","getFloor","_this$maps_service4","_this$maps_service5","floorSelectorElement","FloorSelector","ControlPosition","RIGHT_TOP","addControl","onAdd","onRemove","found_building","_e$buildingInfo","_onSearch","_mapsindoors","searchParams","searchElement","LocationsService","getLocations","locations","onSearch","enableHighAccuracy","customPosition","_setLocationToBuilding","coords","latitude","longitude","accuracy","geolocation","getCurrentPosition","_updateGeolocation","watchPosition","_handleGeolocationError","_this$_org$building$l","_this$_org$building$l2","long","parseFloat","updated_location","_updated_location$coo","_updated_location$coo2","_updated_location$coo3","_updated_location$coo4","destination","anchor","travelMode","directionsResult","_this7$directions_ren","setRoute","_error$message","TypeError","_renderSpaceStatus","promises","updated_key","_setPolygonFill","_mapActions","_this8$actions","currentValue","_setPolygonFill2","_this$maps_service6","setDisplayRule","polygonVisible","polygonFillOpacity","polygonZoomFrom","polygonZoomTo","visible","polygonFillColor","ExploreStateService","IndoorMapsComponent_mat_spinner_1_Template","IndoorMapsComponent_div_2_Template","IndoorMapsComponent_ng_container_11_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_createView","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","MapLocateModalComponent_div_6_interactive_map_1_Template","MapLocateModalComponent_div_6_ng_template_3_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","padLength","MediaDurationPipe","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","PrintableComponent","_elem","outerHTML","PrintableComponent_ng_template_1_Template","RedirectComponent","setRegion","RegionSelectComponent","regions","region_list","region","active_region","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","StatusPillComponent","StatusPillComponent_ng_container_3_Template","StatusPillComponent_ng_container_4_Template","StatusPillComponent_ng_container_5_Template","StatusPillComponent_ng_container_6_Template","StatusPillComponent_ng_container_7_Template","ThumbnailPipe","_thumbnail_cache","createVideoThumbnail","GENERATING","video","crossOrigin","videoWidth","videoHeight","currentTime","drawImage","thumbnail","UploadPermissionsModalComponent","is_public","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","help_tooltip","openWfhModal","language_tooltip","newSupportTicket","reloadPage","building_select","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_21_Template","UserControlsComponent_div_22_Template","UserControlsComponent_div_33_Template","UserControlsComponent_button_34_Template","UserControlsComponent_button_39_Template","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element2","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_26_div_1_Template","EventCardComponent_a_1_div_26_div_3_Template","EventCardComponent_a_1_div_18_Template","EventCardComponent_a_1_div_26_Template","tmp_7_0","EventCardComponent","_this$event","_this$event2","_this$event3","_this$event4","_this2$event","getLocationString","_this$event5","_getLocationString","_this$event6","_this$event7","_this$event8","zone_list","_this$event9","_this$event10","_this$event11","_this$event12","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_11_button_1_Template","EventDetailsModalComponent_div_11_button_2_Template","can_check_in","allow_edit","item_r21","EventDetailsModalComponent_ng_container_65_div_5_div_13_span_4_Template","order_r19","EventDetailsModalComponent_ng_container_65_div_5_div_13_Template","EventDetailsModalComponent_ng_container_65_div_5_Template","EventDetailsModalComponent_ng_container_67_interactive_map_1_Template","EventDetailsModalComponent_ng_container_67_ng_template_3_Template","EventDetailsModalComponent_div_68_div_3_Template","request_r31","_r35","EventDetailsModalComponent_ng_container_69_div_5_div_13_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","show_attendees","_r39","no_edit_message","_r41","ctx_r40","act_r42","_r44","ctx_r43","EMPTY_ACTIONS","hide_edit","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","_this$event$extension","_this$event$extension2","getEventMetadata","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_11_Template","EventDetailsModalComponent_ng_container_31_Template","EventDetailsModalComponent_div_33_Template","EventDetailsModalComponent_ng_container_65_Template","EventDetailsModalComponent_ng_container_67_Template","EventDetailsModalComponent_div_68_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_div_73_Template","EventDetailsModalComponent_button_76_Template","EventDetailsModalComponent_button_83_Template","EventDetailsModalComponent_button_84_Template","event_status","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_1","events_fn_2","BOOKING_URLS","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","periodInFreeTimeSlot","future_available_spaces","startWith","_assertThisInitialize","_ref15","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","_assertThisInitialized","differenceInDays","_ref17","_this$_event$getValue","_newForm","_event$extension_data","master","showEvent","_pattern","resetForm","_event$extension_data2","_event$extension_data3","catering_charge_code","form_data","EventLinkModalComponent","_this4$event","_ref20","_spaces$","_this4$event2","_this4$event3","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data4","_form$getRawValue","changed_times","is_owner","breakdown","overflow","processed_assets","on_error","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","recurring","checkSelectedSpacesAreAvailable","calendar","catering_notes","setup_time","breakdown_time","toJSON","old_system","visit_expected","host_override","is_external","removeEvent","_makeBooking2","_updateVisitorList","saveEvent","_checkSelectedSpacesAreAvailable","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","event_start","event_end","private","_data$recurrence$days","associated_id","online_meeting_url","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","is_system_event","attachments","eventStatus","simple_event","_this$recurrence","_this$system","parseRecurrence","all_day_date","calendar_fn_1","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","isSpaceAvailable","system_ids","ignore_period","short_list","_s$resource","inUseAt","attendee_list_component_1","event_card_component_1","i9","i10","MatMenu","MatMenuItem","MatMenuTrigger","i11","i12","CurrencyPipe","i13","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event3","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","setMinutes","catering_control","control","_catering_control$val","catering_field","_event$extension_data5","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","visitor_type","needs_space","needs_parking","setCateringTime","_form$value$catering","_form$value$recurrenc","_form$value$recurrenc2","getDay","_form$get3","_form$get4","clearValidators","updateValueAndValidity","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","_this$_element$native","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r1","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","_step4","_iterator4","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","_loadUser","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","updateZoom","updateCenter","positions","toggleZones","ExploreMapViewComponent_div_6_div_2_Template","hide_zones","pair_r12","ExploreMapViewComponent_div_8_div_3_Template","ExploreMapViewComponent","_s","_desks","_zones","_parking","_maps","map_styles","map_positions","map_actions","map_labels","_toggleZones","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","ExploreMapViewComponent_i_map_0_Template","ExploreMapViewComponent_indoor_maps_2_Template","ExploreMapViewComponent_explore_zoom_controls_4_Template","ExploreMapViewComponent_div_6_Template","ExploreMapViewComponent_div_8_Template","show_legend","existing_event","week_events","active_spaces","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","_space$groups","_this2$_options$getVa","_this2$_options$getVa2","_space$zone","_space$zone2","_yield$_this2$_setBoo","active_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_role_assigned_contacts","contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","roled_contacts","roles","role","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","_bookSpace","openEventLinkModal","bookSpace","_updateStatus2","_positions","_styles","_actions","_labels","_message","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_count_key","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","area_count_key","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","zone_r10","BookingRulesFormComponent_div_59_div_1_Template","BookingRulesFormComponent_div_59_div_2_Template","available_conditions","time_r14","BookingRulesFormComponent_div_60_mat_option_5_Template","duration_blocks","time_r16","BookingRulesFormComponent_div_61_mat_option_5_Template","setIsPeriod","time_r22","time_r23","BookingRulesFormComponent_div_63_ng_container_9_mat_option_1_Template","setIsBetween","BookingRulesFormComponent_div_63_mat_option_6_Template","BookingRulesFormComponent_div_63_ng_container_9_Template","time_blocks","BookingRulesFormComponent","rulesetChange","building_zones","queryZones","firstChange","_condition_keys","BookingRulesFormComponent_mat_option_12_Template","BookingRulesFormComponent_mat_checkbox_31_Template","BookingRulesFormComponent_div_57_Template","BookingRulesFormComponent_div_58_Template","BookingRulesFormComponent_div_59_Template","BookingRulesFormComponent_div_60_Template","BookingRulesFormComponent_div_61_Template","BookingRulesFormComponent_div_62_Template","BookingRulesFormComponent_div_63_Template","BookingRulesFormComponent_div_64_Template","CounterComponent","step","ctrl_key","shift_key","render_fn","day_r2","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","DateFieldComponent","from_date","short","_this$_control","_this$_control2","_control","to_date","NgControl","_this$_tooltip","old_date","new_date","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","has_error","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","duration_field_component_1","user_search_field_component_1","item_list_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","booking_rules_form_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","ImageListFieldComponent","i14","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","FormGroupName","i17","MatCheckbox","ItemListFieldComponent","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","upload_permissions_modal_component_1","uploadImages","url_r10","copyLink","viewImage","removeImage","retryUpload","ImageListFieldComponent_ng_container_4_div_1_mat_progress_spinner_1_Template","ImageListFieldComponent_ng_container_4_div_1_app_icon_2_Template","ImageListFieldComponent_ng_container_4_div_1_div_3_Template","ImageListFieldComponent_ng_container_4_div_1_Template","uploads","view_space","item_r29","_clipboard","upload_ids","_upload_list","ids","_list_el","addImageUrl","copy","chipInput","inputElement","_uploadImages","uploads_allowed","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_ng_container_2_Template","ImageListFieldComponent_div_3_Template","ImageListFieldComponent_ng_container_4_Template","ImageListFieldComponent_button_5_Template","ImageListFieldComponent_button_6_Template","ImageListFieldComponent_mat_chip_row_10_Template","addImage","item_r2","addChipItem","removeChipItem","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","_r0","formatted_value","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","modules","toolbar","readOnly","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","multiday","NewSpaceSelectModalComponent","_this2$_dialog_ref","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","bld_r7","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_mat_error_31_Template","SupportTicketModalComponent_main_6_div_32_Template","desc_error","allow_images","_submit","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","extra_info_fn","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","number","setting","generateMockSpace","_request$query_params","building_id","MOCK_SURVEYS","_request$query_params2","survey_id","MOCK_SURVEY_ANSWERS","_request$query_params3","MOCK_SURVEY_QUESTIONS","survey","createMockSurvey","pages","createMockSurveyQuestion","choices","createMockSurveyAnswer","question_id","answer_json","systems_bindings_mock_1","createSystem","common_mock_1","PREDEF_USERS","sys_admin","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","MOCK_ZONES","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","surveys_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","SURVEY_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","_roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","_updateSettingOverrides","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","_this4$building","_position$coords","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","_step5","bld_list","_this5$region","_iterator5","_step6","_iterator6","_this$building5","_this$region2","buildingSettings","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_ng_container_16_Template","SpaceFiltersDisplayComponent_ng_container_17_Template","SpaceFiltersDisplayComponent_div_21_Template","tmp_8_0","bld_r11","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","lvl_r14","start_date","_r20","SpaceFiltersComponent_div_30_div_6_Template","SpaceFiltersComponent_div_30_div_7_Template","feat_r24","feature_display","SpaceFiltersComponent_section_41_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_41_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_div_28_Template","SpaceFiltersComponent_div_29_Template","SpaceFiltersComponent_div_30_Template","SpaceFiltersComponent_section_41_Template","SpaceFiltersComponent_div_43_Template","tmp_17_0","tmp_19_0","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_user_availability_list_36_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","event_metadata","_User2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","i_r7","available_weekdays","changed","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-request.class.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/booking-rules.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/inject-map-api.service.ts","./libs/common/src/lib/keep-alive.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/attached-resource-config-modal.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/available-rooms-state-modal.component.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/chat/chat.component.ts","./libs/components/src/lib/chat/chat.service.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/date-from.pipe.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/indoor-maps.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/media-duration.pipe.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/printable.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/status-pill.component.ts","./libs/components/src/lib/thumbnail.pipe.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/booking-rules-form.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/surveys.mock.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-base-200\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-base-200\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-neutral rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-base-200 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-base-200 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-base-100 text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"10 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-base-200 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-base-200\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-base-100 p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div>\n            {{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}\n        </div>\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--s);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-base-200 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-base-200 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-base-200 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-base-200\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-base-200 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--p);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 bg-base-200 h-full overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-base-200 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-base-200 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-base-200 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-base-200 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-base-200 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-base-200 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-base-200 border-base-200 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-base-200 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-base-100 border-t border-base-200 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-base-100 border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-base-100 h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-base-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-base-100 h-full border-t border-base-200 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-base-100 border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-base-200\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            is_multiday\n                                ? (event.date | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date\n                                        | date: ', ' + time_format)) +\n                                  ' - ' +\n                                  (event.date_end | date: 'MMM d') +\n                                  (event.all_day\n                                      ? ''\n                                      : (event.date_end\n                                        | date: ', ' + time_format))\n                                : event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get is_multiday() {\n        return this.event.duration > 24 * 60;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[])))\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) => {\n            const filtered_events = e.filter(\n                (ev) => !d.find((bkn) => `${ev.meeting_id}` === `${bkn.id}`)\n            );\n            return [...filtered_events, ...v, ...d, ...p, ...l].sort(\n                (a, b) => a.date - b.date\n            );\n        })\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll())\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetStateService } from './asset-state.service';\nimport { AssetItem, AssetRequest } from './asset-request.class';\nimport { ANIMATION_SHOW_CONTRACT_EXPAND, randomString } from '@placeos/common';\nimport { endOfDay, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                request\n                *ngFor=\"let request of asset_requests\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < request.deliver_at\"\n                [class.border-base-300]=\"end_time >= request.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Request for\n                                {{\n                                    request.deliver_at_time | date: 'mediumDate'\n                                }}\n                                at\n                                {{\n                                    request.deliver_at_time | date: time_format\n                                }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < request.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Request\"\n                        (click)=\"duplicateRequest(request)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Request\"\n                        (click)=\"editRequest(request)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Request\"\n                        class=\"text-error\"\n                        (click)=\"removeRequest(request)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_request[request.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"\n                            show_request[request.id] = !show_request[request.id]\n                        \"\n                    >\n                        <app-icon>\n                            {{\n                                show_request[request.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_request[request.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of request.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Request Item\"\n                            class=\"text-error\"\n                            (click)=\"removeRequestItem(request, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editRequest()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public asset_requests: AssetRequest[] = [];\n    public disabled = false;\n    public show_request: Record<string, boolean> = {};\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: AssetRequest[]) => void;\n    private _onTouch: (_: AssetRequest[]) => void;\n    public selected: AssetRequest[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.asset_requests = (this.asset_requests || []).map(\n                (_) => new AssetRequest({ ..._, event: this.options as any })\n            );\n            this._state.setOptions({\n                date: this.options.date,\n                duration: this.options.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetRequest[]) {\n        this.asset_requests = new_value;\n        if (this._onChange) this._onChange(this.asset_requests);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetRequest[]) {\n        this.asset_requests = (value || []).map(\n            (_) => new AssetRequest({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetRequest[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetRequest[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public editRequest(order: AssetRequest = new AssetRequest()) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: AssetItem[]) => {\n            const orders = this.asset_requests.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            for (const item of items) {\n                if ((item as any).assets?.length) {\n                    item.item_ids = new Array(item.quantity)\n                        .fill(0)\n                        .map((_, idx) => (item as any).assets[idx].id);\n                }\n            }\n            const time = new Date(this.options.date);\n            const new_order = new AssetRequest({\n                ...order,\n                _changed:\n                    order._changed ||\n                    order.items.find(\n                        (_) =>\n                            items.find((__) => __.id === _.id)?.quantity !==\n                            _.quantity\n                    ),\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public removeRequest(request: AssetRequest) {\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== request.id\n        );\n        this.setValue(updated_list);\n    }\n\n    public duplicateRequest(order: AssetRequest) {\n        const new_order = new AssetRequest({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.asset_requests, new_order]);\n    }\n\n    public removeRequestItem(order: AssetRequest, item: AssetItem) {\n        const new_order = new AssetRequest({\n            ...order,\n            items: order.items.filter((_) => _.id !== item.id),\n        });\n        const updated_list = this.asset_requests.filter(\n            (_) => _.id !== order.id\n        );\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public toggleFavourite(asset: AssetItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { randomInt } from '@placeos/common';\n\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport type AssetStatus =\n    | 'in_storage'\n    | 'in_transit'\n    | 'delivered'\n    | 'returned'\n    | 'cancelled';\n\nexport interface AssetItem {\n    id: string; // ID of the group\n    name: string; // Name of the group\n    quantity: number; // Number of items from the group\n    item_ids: string[]; // List of physical item IDs\n}\n\nfunction deliverAtTime(request: AssetRequest) {\n    let date = request.event?.date || (request as any)._time;\n    if (request.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(request.deliver_time),\n            minutes: (request.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (request.deliver_day_offset > 0 || request.event?.all_day) {\n        date = addDays(startOfDay(date), request.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, request.deliver_offset).valueOf();\n}\n\nexport class AssetRequest {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly AssetItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: Booking | null;\n    public readonly deliver_at_time: number;\n    public _changed = false;\n    /** Current status of the order */\n    private _status: AssetStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: AssetStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: any = {} as any) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.event_id = data.event_id || data.parent_id || '';\n        this.items =\n            data.items ||\n            data.asset_ids?.map((_) => ({ id: _, quantity: 1 })) ||\n            [];\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this._status =\n            data[`${this.event_id}_status`] ||\n            data.status ||\n            (data.extension_data || {})[`${this.event_id}_status`] ||\n            data.extension_data?.status ||\n            'in_storage';\n        this.event = data.event || data || null;\n        this.notes = data.notes || data.description || '';\n        this.deliver_time =\n            data.deliver_time || data.extension_data?.deliver_time || undefined;\n        this.deliver_offset =\n            data.deliver_offset || data.extension_data?.deliver_offset || 0;\n        this.deliver_day_offset =\n            data.deliver_day_offset ||\n            data.extension_data?.deliver_day_offset ||\n            0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n\n    public toJSON() {\n        const blob = { ...this } as any;\n        delete blob.event;\n        delete blob._changed;\n        delete blob._status;\n        delete blob._time;\n        delete blob.deliver_at_time;\n        delete blob.deliver_at;\n        blob.items = blob.items.map((_) => ({\n            id: _.id,\n            category_id: _.category_id,\n            quantity: _.quantity,\n            name: _.name,\n            item_ids: _.item_ids,\n        }));\n        return blob;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-base-200\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.quantity) this.item.quantity = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.quantity) this.item.quantity = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    startOfDay,\n} from 'date-fns';\n\n@Component({\n    selector: 'asset-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"search_value | async\"\n                    (ngModelChange)=\"setSearch($event)\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (options | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(category | async) === item.id\"\n                (ngModelChange)=\"toggleCategory(item.id)\"\n            >\n                {{ item.name }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class AssetFiltersComponent extends AsyncHandler {\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly search_value = this._state.search;\n    public readonly category = this._state.category;\n    public readonly categories = this._state.category_list;\n    public readonly options = this._state.options;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getOptions().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.assets.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getOptions().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getOptions().date,\n                this._state.getOptions().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getOptions().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    public readonly setSearch = (s) => this._state.setSearch(s);\n    public readonly toggleCategory = (c) => this._state.toggleCategory(c);\n\n    constructor(\n        private _state: AssetStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.assets.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.options.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getOptions().duration || 60) -\n                        this._settings.get('app.assets.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getOptions();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2 bg-base-200\">\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-base-200 mr-4 flex items-center justify-center overflow-hidden border border-base-200\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-base-300 bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.quantity || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-info]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.quantity = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.quantity;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { AssetGroup } from '../asset.class';\nimport { AssetStateService } from '../asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <asset-filters\n                        class=\"h-full hidden sm:block\"\n                        [(at_time)]=\"exact_time\"\n                        [(offset)]=\"offset\"\n                        [(offset_day)]=\"offset_day\"\n                    ></asset-filters>\n                </div>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-base-200\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-base-100  z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.quantity, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: AssetStateService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: AssetGroup[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._state.setOptions(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.assets.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.assets.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) {\n            item.quantity = count;\n            item.assets = this.displayed.assets;\n        }\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport {\n    queryAssetCategories,\n    queryAssets,\n    queryGroupAvailability,\n} from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\nimport { assetAvailable, getAssetRulesForZone } from './asset.utilities';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { unique } from '@placeos/common';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _category = new BehaviorSubject<string[]>([]);\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly category = this._category.asObservable();\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly rules = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        debounceTime(300),\n        switchMap(([options, bld]) => {\n            this._loading.next(this._loading.getValue() + '[Rules]');\n            return getAssetRulesForZone(bld.id || options.zone || '');\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Rules\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                    rejected: false,\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly category_list = this._org.active_building.pipe(\n        switchMap((bld) => queryAssetCategories({ zone_id: bld.id })),\n        map((_) => _.sort((a, b) => a.name.localeCompare(b.name))),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this._category,\n        this.available_groups,\n        this.rules,\n    ]).pipe(\n        map(([search, category, assets, rules]) => {\n            const s = search.toLowerCase();\n            let list = assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (!category.length || category.includes(_.category_id)) &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s)) &&\n                    assetAvailable(_, rules, this._options.getValue() as any)\n            );\n            return list;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly settings = combineLatest([this._org.active_building]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'assets-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as Record<string, any>) || {}),\n        shareReplay(1)\n    );\n    public readonly disabled_rooms = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public toggleCategory(value: string) {\n        const categories = this._category.getValue();\n        if (categories.includes(value)) {\n            this._category.next(categories.filter((_) => _ !== value));\n        } else {\n            this._category.next([...categories, value]);\n        }\n    }\n\n    public getOptions() {\n        return this._options.getValue();\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    quantity?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten, stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\nimport { CalendarEvent } from '@placeos/events';\nimport { isAfter, isBefore, setHours, subHours } from 'date-fns';\nimport { catchError, map } from 'rxjs/operators';\nimport { showMetadata } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { AssetRequest } from './asset-request.class';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getAssetRulesForZone(zone_id: string, fresh: boolean = false) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'assets_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function assetAvailable(\n    item: AssetGroup,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n): boolean {\n    const current_date = Date.now();\n    const event_date = new Date(event.date);\n\n    const isRuleMatch = (rule: AttachedResourceRuleset): boolean =>\n        item.name === rule.name ||\n        item.category.name.includes(rule.name) ||\n        event.resources.some((resource) =>\n            resource.zones.includes(rule.name)\n        ) ||\n        event.space?.zones.includes(rule.name) ||\n        rule.name === '*';\n\n    const countMatches = (rule: AttachedResourceRuleset): number =>\n        rule.rules.reduce((matches, condition) => {\n            switch (condition[0]) {\n                case 'is_before':\n                    return (\n                        matches +\n                        (isBefore(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'within_hours':\n                    return (\n                        matches +\n                        (isAfter(\n                            current_date,\n                            subHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'after_hour':\n                    return (\n                        matches +\n                        (isAfter(event_date, setHours(event_date, condition[1]))\n                            ? 1\n                            : 0)\n                    );\n                case 'before_hour':\n                    return (\n                        matches +\n                        (isBefore(\n                            event_date,\n                            setHours(event_date, condition[1])\n                        )\n                            ? 1\n                            : 0)\n                    );\n                case 'min_length':\n                    return (\n                        matches +\n                        (event.duration >= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'max_length':\n                    return (\n                        matches +\n                        (event.duration <= stringToMinutes(condition[1])\n                            ? 1\n                            : 0)\n                    );\n                case 'visitor_type':\n                    return (\n                        matches +\n                        (event.ext('visitor_type') === condition[1] ? 1 : 0)\n                    );\n                default:\n                    return matches + 1;\n            }\n        }, 0);\n\n    for (const rule of rules) {\n        if (isRuleMatch(rule)) {\n            if (countMatches(rule) < rule.rules.length) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { AssetRequest } from './asset-request.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 2000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find(\n                        (booking) =>\n                            booking.asset_id === asset.id ||\n                            booking.asset_ids?.includes(asset.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets({ limit: 5000, ...query }, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id || _.asset_ids?.includes(id))\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid, from_booking }: any,\n    {\n        date,\n        duration,\n        all_day,\n        host,\n        location_name,\n        location_id,\n        zones,\n        reset_state,\n    }: {\n        date: number;\n        duration: number;\n        all_day: boolean;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n        reset_state?: boolean;\n    },\n    new_assets: AssetRequest[]\n) {\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: from_booking ? '' : id,\n        booking_id: from_booking ? id : '',\n        ical_uid,\n    }).toPromise();\n    await Promise.all(\n        bookings.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        new_assets.map((request) => {\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    request.items?.find((i) => i.item_ids.includes(id))\n                )\n            );\n            return createBooking(\n                new Booking({\n                    type: 'asset-request',\n                    booking_type: 'asset-request',\n                    date,\n                    duration,\n                    all_day,\n                    description: location_name,\n                    user_email: host,\n                    asset_id: request.id,\n                    asset_ids: flatten(request.items.map((_) => _.item_ids)),\n                    asset_name: request.items.map((_) => _.name).join(', '),\n                    title: request.items.map((_) => _.name).join(', '),\n                    approved:\n                        !reset_state && booking?.approved && !request._changed,\n                    rejected:\n                        !reset_state && booking?.rejected && !request._changed,\n                    extension_data: {\n                        parent_id: id,\n                        location_id,\n                        request: new AssetRequest({ ...request, event: null }),\n                    },\n                    zones: zones || [],\n                }),\n                { ical_uid, event_id: from_booking ? '' : id }\n            ).toPromise();\n        })\n    );\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    notifyError,\n    notifySuccess,\n    SettingsService,\n    InjectMapApiService,\n} from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                        <ng-template #mapspeople>\n                            <indoor-maps\n                                [styles]=\"styles | async\"\n                                [actions]=\"actions | async\"\n                            ></indoor-maps>\n                        </ng-template>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    public readonly use_mapsindoors$ = this._maps_people.use_mapspeople$;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _maps_people: InjectMapApiService\n    ) {}\n\n    public ngOnInit() {\n        this._maps_people.setCustomZone(this.level?.id);\n    }\n\n    public ngOnDestroy() {\n        this._maps_people.setCustomZone('');\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_booking_rules`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                },\n                value.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import {\n    LinkedBooking,\n    capitalizeFirstLetter,\n    removeEmptyFields,\n} from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    id?: string;\n    date: number;\n    duration: number;\n    date_end: number;\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** List of identifier of the physical assets assocated with the booking */\n    public readonly asset_ids: string[];\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** End time of booking in ms */\n    public readonly date_end: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status:\n        | 'declined'\n        | 'cancelled'\n        | 'approved'\n        | 'tentative'\n        | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    public get valid_assets() {\n        const list = this.linked_bookings;\n        return (this.extension_data.assets || [])\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find((_) => _.asset_id === request.id);\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                        ? 'rejected'\n                        : 'pending';\n                }\n                return request;\n            });\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_ids = data.asset_ids || [data.asset_id].filter((_) => _);\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            data.asset_id ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.date_end =\n            this.booking_end * 1000 || this.date + this.duration * 60 * 1000;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day || this.duration >= 24 * 60;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(\n                24 * 60 - 1,\n                this.duration - ((this.duration % 24) * 60 === 0 ? 1 : 0)\n            );\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration - 1).valueOf()\n            ).getTime();\n        }\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.linked_bookings = data.linked_bookings || [];\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) =>\n                new AssetRequest({ ...i, event: this, date: this.date } as any)\n        );\n        if (this.extension_data.request) {\n            this.extension_data.request = new AssetRequest({\n                ...this.extension_data.request,\n                event: this,\n                date: this.date,\n            } as any);\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        data.extension_data.assets = data.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        if (data.extension_data.request) {\n            data.extension_data.request = new AssetRequest({\n                ...data.extension_data.request,\n                event: null,\n            });\n        }\n        if (!data.parent_id) delete data.parent_id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport { roundToNearestMinutes } from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date > Date.now() || form.value.id) return;\n        form.patchValue(\n            {\n                date: roundToNearestMinutes(Date.now(), {\n                    nearestTo: 5,\n                    roundingMethod: 'ceil',\n                }).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { CalendarEvent } from '@placeos/events';\nimport { BookableResource, flatten, unique } from '@placeos/common';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    booking_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => (data.id ? updateBooking(data.id, data) : createBooking(data, q));\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(\n        map((item) => new Booking(item)),\n        catchError(async (e) => {\n            const body = await e.json();\n            throw body.error || body.message || body;\n        })\n    );\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room',\n    ignore_period: [number, number] = [0, 0]\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n\n/**\n *\n * @param event\n * @param type\n * @param resources\n */\nexport async function createBookingsForEvent(\n    event: CalendarEvent,\n    type: BookingType,\n    resources: BookableResource\n) {\n    const bookings = await queryBookings({\n        type,\n        period_start: getUnixTime(event.date),\n        period_end: getUnixTime(addMinutes(event.date, event.duration)),\n    })\n        .pipe(map((_) => _.filter((_) => _.parent_id === event.id)))\n        .toPromise();\n    await Promise.all(bookings.map((_) => removeBooking(_.id).toPromise()));\n    const zones =\n        (event.system?.zones as any) ||\n        unique(flatten(event.resources.map((_) => _.zones))) ||\n        [];\n    await Promise.all(\n        resources.map((item) => {\n            const booking = bookings.find((_) =>\n                _.asset_ids.find((id) =>\n                    item.items?.find((i) => i.item_ids.includes(id))\n                )\n            );\n            return createBooking(\n                new Booking({\n                    type,\n                    booking_type: type,\n                    date: event.date,\n                    duration: event.duration,\n                    description: event.title,\n                    user_email: event.host,\n                    asset_id: item.email,\n                    asset_name: (item as any).name,\n                    title: (item as any).name,\n                    attendees: [item],\n                    approved: booking?.approved && !item._changed,\n                    rejected: booking?.rejected && !item._changed,\n                    extension_data: {\n                        parent_id: event.id,\n                        name: (item as any).name,\n                        location_id: event.location,\n                    },\n                    zones,\n                }),\n                { ical_uid: event.ical_uid, event_id: event.id }\n            ).toPromise();\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { debounceTime, map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    randomString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\nimport { CateringOrder } from './catering-order.class';\nimport { Organisation, OrganisationService } from '@placeos/organisation';\nimport { endOfDay, format, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                order\n                *ngFor=\"let order of orders\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < order.deliver_at\"\n                [class.border-base-300]=\"end_time >= order.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Order for\n                                {{ order.deliver_at_time | date: 'mediumDate' }}\n                                at\n                                {{ order.deliver_at_time | date: time_format }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < order.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ order.item_count }} item(s) for\n                            {{\n                                order.total_cost / 100 | currency: currency_code\n                            }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Order\"\n                        (click)=\"duplicateOrder(order)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Order\"\n                        (click)=\"editOrder(order)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Order\"\n                        class=\"text-error\"\n                        (click)=\"removeOrder(order)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_order[order.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"show_order[order.id] = !show_order[order.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_order[order.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_order[order.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of order.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                            <span\n                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                *ngIf=\"item.option_list?.length\"\n                                [matTooltip]=\"optionList(item)\"\n                            >\n                                {{ item.option_list?.length || '0' }} option(s)\n                            </span>\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <div\n                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                        >\n                            {{\n                                item.unit_price_with_options / 100\n                                    | currency: currency_code\n                            }}\n                            ea\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Order Item\"\n                            class=\"text-error\"\n                            (click)=\"removeOrderItem(order, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editOrder()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Order</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public orders: CateringOrder[] = [];\n    public show_order: Record<string, boolean> = {};\n    public disabled = false;\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: CateringOrder[]) => void;\n    private _onTouch: (_: CateringOrder[]) => void;\n    public selected: CateringOrder[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get end_time() {\n        const time =\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000;\n        return this.options.all_day ? endOfDay(time).valueOf() : time;\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    public get currency_code() {\n        return this._org.building?.currency || 'USD';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringOrder[]) {\n        this.orders = new_value;\n        if (this._onChange) this._onChange(this.orders);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            this.orders = (this.orders || []).map(\n                (_) => new CateringOrder({ ..._, event: this.options as any })\n            );\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringOrder[]) {\n        this.orders = (value || []).map(\n            (_) => new CateringOrder({ ..._, event: this.options as any })\n        );\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringOrder[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringOrder[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeOrder(order: CateringItem) {\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        this.setValue(updated_list);\n    }\n\n    public duplicateOrder(order: CateringOrder) {\n        const new_order = new CateringOrder({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.orders, new_order]);\n    }\n\n    public removeOrderItem(order: CateringOrder, item: CateringItem) {\n        const new_order = new CateringOrder({\n            ...order,\n            items: order.items.filter((_) => _.custom_id !== item.custom_id),\n        });\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public editOrder(order: CateringOrder = new CateringOrder()) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: {\n                items: order.items,\n                details: {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                exact_time: !!order.deliver_time,\n                offset: order.deliver_offset,\n                offset_day: order.deliver_day_offset,\n            },\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            const orders = this.orders.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            const time = new Date(this.options.date);\n            const new_order = new CateringOrder({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n                deliver_day_offset: ref.componentInstance.offset_day || 0,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-base-100 border border-base-200 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-secondary-content rounded bg-secondary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-base-200 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-base-200 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-base-200 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-neutral w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-base-200 bg-base-100\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"w-36\">Meeting Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-base-200\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p class=\"p-4 text-center\">No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    startOfDay,\n} from 'date-fns';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <ng-container *ngIf=\"day_options.length > 1\">\n                <label>Deliver Date:</label>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full no-subscript mb-4\"\n                >\n                    <mat-select\n                        [(ngModel)]=\"offset_day\"\n                        (ngModelChange)=\"offset_dayChange.next($event)\"\n                    >\n                        <mat-option\n                            *ngFor=\"let day of day_options\"\n                            [value]=\"day.id\"\n                        >\n                            {{ day.value | date: 'mediumDate' }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-container>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"\n                    offset_day > 0 ? start_of_date : (filters | async)?.date\n                \"\n                [step]=\"step_interval\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n                [use_24hr]=\"use_24hr\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemFiltersComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n    @Input() public offset_day = 0;\n    @Output() public offset_dayChange = new EventEmitter<number>();\n\n    private _min_offset = 0;\n    private _max_offset = 60;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get start_of_date() {\n        return startOfDay(\n            addDays(this._state.getFilters().date, this.offset_day)\n        ).valueOf();\n    }\n\n    public get min_offset() {\n        return this.offset_day > 0 ? 0 : this._min_offset;\n    }\n\n    public get step_interval() {\n        return this._settings.get('app.catering.step_interval') || 5;\n    }\n\n    public get max_offset() {\n        const end = Math.min(\n            endOfDay(\n                addDays(this._state.getFilters().date, this.offset_day)\n            ).valueOf(),\n            addMinutes(\n                this._state.getFilters().date,\n                this._state.getFilters().duration\n            ).valueOf()\n        );\n        const diff = differenceInMinutes(end, this._state.getFilters().date);\n        return Math.min(diff, Math.min(24 * 60 - 1, this._max_offset));\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public day_options = [];\n\n    constructor(\n        private _state: CateringOrderStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._min_offset = Math.max(\n            this._settings.get('app.catering.min_offset'),\n            0\n        );\n        this.subscription(\n            'filters',\n            this._state.filters.subscribe(() => {\n                this._max_offset = Math.max(\n                    15,\n                    (this._state.getFilters().duration || 60) -\n                        this._settings.get('app.catering.end_offset')\n                );\n                this._updateDayOptions();\n            })\n        );\n        this._updateDayOptions();\n    }\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n\n    private _updateDayOptions() {\n        const { date, duration } = this._state.getFilters();\n        if (duration <= 24 * 60) return (this.day_options = []);\n        let day = startOfDay(date);\n        let count = 0;\n        const end = endOfDay(addMinutes(date, duration)).valueOf();\n        const options = [];\n        while (day.valueOf() <= end) {\n            options.push({ id: count, value: day.valueOf() });\n            day = addDays(day, 1);\n            count++;\n        }\n        this.day_options = options;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            matRipple\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center z-0\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n\n    public getFilters() {\n        return { ...this._filters.getValue() };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                    [(at_time)]=\"exact_time\"\n                    [(offset)]=\"offset\"\n                    [(offset_day)]=\"offset_day\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data.items || [])];\n    public exact_time = this._data.exact_time ?? false;\n    public offset: number;\n    public offset_day: number;\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: CateringItem[];\n            details: any;\n            exact_time?: boolean;\n            offset?: number;\n            offset_day?: number;\n        }\n    ) {\n        const { duration } = this._data.details;\n        this._order.setFilters(this._data.details);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.catering.min_offset'),\n                this._data.offset || 0\n            ),\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n        this.offset_day = this._data.offset_day || 0;\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\nimport { addDays, addMinutes, set, startOfDay, startOfMinute } from 'date-fns';\n\nfunction deliverAtTime(order: CateringOrder) {\n    let date = order.event?.date || (order as any)._time;\n    if (order.deliver_time) {\n        date = set(date, {\n            hours: Math.floor(order.deliver_time),\n            minutes: (order.deliver_time % 1) * 60,\n        }).valueOf();\n    }\n    if (order.deliver_day_offset > 0 || order.event?.all_day) {\n        date = addDays(startOfDay(date), order.deliver_day_offset).valueOf();\n    }\n    return addMinutes(date, order.deliver_offset).valueOf();\n}\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_day_offset: number;\n    /** Minutes from set time to deliver item */\n    public readonly deliver_offset: number;\n    /** Hour to from set time to deliver item */\n    public readonly deliver_time?: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n    public readonly deliver_at_time: number;\n    /** Current status of the order */\n    private _status: CateringOrderStatus;\n    private _time = startOfMinute(Date.now()).valueOf();\n\n    public get deliver_at() {\n        return deliverAtTime(this);\n    }\n\n    public get status() {\n        return this._status;\n    }\n\n    public set status(value: CateringOrderStatus) {\n        this._status = value;\n        this[`${this.event_id}_status`] = value;\n    }\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status =\n            data[`${this.event_id}_status`] || data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_time = data.deliver_time || undefined;\n        this.deliver_offset = data.deliver_offset || 0;\n        this.deliver_day_offset = data.deliver_day_offset || 0;\n        this.deliver_at_time = deliverAtTime(this);\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2\"\n            [class.bg-base-200]=\"!show_items\"\n            [class.bg-base-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-base-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-base-300 p-2 text-2xl text-black opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: time_format }}\n            </div>\n            <div time class=\"w-36 text-sm\">\n                {{ order.event?.date | date: 'MMM d' }},\n                {{ order.event?.date | date: time_format }}\n                <br />\n                {{ order.event?.date_end | date: 'MMM d' }},\n                {{ order.event?.date_end | date: time_format }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space?.display_name ||\n                        order.event?.space?.name ||\n                        ''\n                }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"\n                        !(\n                            order.event?.space?.display_name ||\n                            order.event?.space?.name\n                        )\n                    \"\n                >\n                    No Location\n                </span>\n            </div>\n            <div class=\"w-56\">\n                {{ order.event?.organiser?.name || order.event?.host || '' }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"!(order.event?.organiser?.name || order.event?.host)\"\n                >\n                    Unknown Host\n                </span>\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '' }}\n                <span class=\"opacity-30\" *ngIf=\"!order.invoice_number\">\n                    No Invoice\n                </span>\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [order_id]=\"order?.id\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, currentUser, flatten } from '@placeos/common';\nimport {\n    queryEvents,\n    saveEvent,\n    updateEventMetadata,\n} from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(\n                        events.map((event) =>\n                            event.valid_catering.map(\n                                (o) => new CateringOrder({ ...o, event })\n                            )\n                        )\n                    )\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...(order.event.extension_data.catering || []).filter(\n                (o) => o.id !== order.id\n            ),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const system_id = event?.resources[0]?.id || event?.system?.id;\n        const booking = await updateEventMetadata(\n            event.id,\n            system_id,\n            event.extension_data\n        ).toPromise();\n        this.timeout('refresh-list', () => this._poll.next(Date.now()), 1000);\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\nexport * from './lib/booking-rules';\nexport * from './lib/keep-alive.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { addMinutes, isAfter, isBefore } from 'date-fns';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface BookingRuleset {\n    id?: string;\n    name?: string;\n    zone: string;\n    rules: BookingRules;\n    conditions: BookingRuleConditions;\n}\n\nexport interface BookingRules {\n    auto_approve?: boolean;\n    hidden?: boolean;\n}\n\nexport interface BookableResource extends Record<string, any> {\n    id: string;\n    zones?: string[];\n    zone?: { id: string; name: string };\n}\n\nexport interface BookingRuleDetails {\n    resource: BookableResource;\n    date: number;\n    duration: number;\n    host: User;\n}\n\nexport interface BookingRuleConditions {\n    /** List of user groups that the host must be in */\n    groups?: string[];\n    /** List of locations that the host must be */\n    locations?: string[];\n    /** Minimum length of a booking */\n    min_length?: number;\n    /** Maximum length of a booking */\n    max_length?: number;\n    /** How far in the future this bookings are allowed */\n    is_before?: string;\n    /** How far in the future this bookings must be */\n    is_after?: string;\n    /** How far in the future this bookings must be */\n    is_between?: [number, number];\n    /** Between the selected date/times */\n    is_period?: [number, number];\n    /** List of resources that this rule applies to */\n    resource_ids?: string[];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1\n        ? +parts[0] * DURATION_MAP[parts[1].toLowerCase()]\n        : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterResourcesFromRules(\n    resources: BookableResource[],\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n) {\n    return resources.filter(\n        (_) =>\n            !rulesForResource({ ...details, resource: _ }, ruleset_list)?.hidden\n    );\n}\n\nexport function rulesForResource(\n    details: BookingRuleDetails,\n    ruleset_list: BookingRuleset[]\n): BookingRules {\n    for (const ruleset of ruleset_list) {\n        if (\n            ruleset.zone === '*' ||\n            ruleset.zone === details.resource.zone?.id ||\n            details.resource.zones?.includes(ruleset.zone)\n        ) {\n            if (checkRulesMatch(details, ruleset)) {\n                // console.log(\n                //     'Matched Ruleset:',\n                //     details.resource.id,\n                //     details,\n                //     ruleset\n                // );\n                return ruleset.rules;\n            }\n        }\n    }\n    // console.log(\n    //     'No Matched Ruleset:',\n    //     details.resource.id,\n    //     details,\n    //     DEFAULT_RULES\n    // );\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host, resource }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (conditions.min_length && conditions.min_length <= duration)\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 >=\n            conditions.is_between[0] &&\n        date_obj.getHours() + date_obj.getMinutes() / 60 <\n            conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.is_period &&\n        date >= conditions.is_period[0] &&\n        date < conditions.is_period[1]\n    )\n        matches += 1;\n    if (conditions.max_length && conditions.max_length >= duration)\n        matches += 1;\n    if (\n        conditions.resource_ids &&\n        conditions.resource_ids.includes(resource.id)\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, format, set, startOfMinute } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    id?: string;\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(\n        `${event.body || ''}${event.id ? '\\n\\n[ID|' + event.id + ']' : ''}`\n    );\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day\n                ? startOfMinute(set(event.date, { hours: 6, minutes: 0 }))\n                : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? startOfMinute(\n                      set(event.date, { hours: 18, minutes: 0 })\n                  ).toISOString()\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: `${event.body || ''}${\n            event.id ? '\\n\\n[ID|' + event.id + ']' : ''\n        }`,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    if (event.all_day) delete data.enddt;\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\nexport { InjectMapApiService } from './inject-map-api.service';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(s1: number, e1: number, s2: number, e2: number) {\n    return (\n        s1 >= s2 && s1 < e2 || s2 >= s1 && s2 < e1 || // Check start time\n        e1 > s2 && e1 <= e2 || e2 > s1 && e2 <= e1 // Check end time\n    )\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = [\n    'control',\n    'shift',\n    'alt',\n    'meta',\n    'os',\n];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] =\n                        this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code]?.next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = combo instanceof Array ? combo : combo.split('+');\n        const combination: string[] = combo.map((i) =>\n            this.mapKey(i.toLowerCase())\n        );\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] =\n                    this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) {\n                                return;\n                            }\n                        }\n                    }\n                    const total = presses.reduce(\n                        (a, v) => a + (v > 0 ? 1 : -1),\n                        0\n                    );\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (\n            code.indexOf('alt') >= 0 ||\n            code.indexOf('shift') >= 0 ||\n            code.indexOf('control') >= 0\n        ) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { notifyError } from './notifications';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, tap, filter } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\nexport enum MapService {\n    GoogleMaps,\n    Mapbox,\n}\n\nexport interface MapsPeopleKeys {\n    mapsindoors?: string;\n    google?: string;\n    mapbox?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class InjectMapApiService extends AsyncHandler {\n    private _map_service = new BehaviorSubject<MapService>(null);\n    private _map_token = new BehaviorSubject<string>('');\n    private _ready = new BehaviorSubject(false);\n    private _injected: Record<string, boolean> = {};\n    private _custom_zone = new BehaviorSubject<string>('');\n\n    public readonly use_mapspeople$ = combineLatest([\n        this._org.active_building,\n        this._custom_zone,\n        this._org.initialised,\n    ]).pipe(\n        filter(([_, __, initialised]) => initialised),\n        tap(() => this._injectMapsApiKeys()),\n        map(\n            ([bld, zone]) =>\n                this.map_keys.mapsindoors &&\n                (this.use_service.includes(zone || bld.id) ||\n                    this.use_service.includes('*'))\n        )\n    );\n\n    public get map_keys(): MapsPeopleKeys {\n        return this._settings.get('app.maps_people.keys') || {};\n    }\n\n    public get use_service(): string[] {\n        return this._settings.get('app.maps_people.use_zones') || [];\n    }\n\n    public get map_service(): MapService {\n        return this._map_service.getValue();\n    }\n\n    public get map_token(): string {\n        return this._map_token.getValue();\n    }\n\n    public get is_ready(): boolean {\n        return this._ready.getValue();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setCustomZone(zone_id: string) {\n        this._custom_zone.next(zone_id);\n    }\n\n    private _injectMapsApiKeys() {\n        this._ready.next(false);\n        const { mapsindoors, google, mapbox } = this.map_keys;\n        if (!mapsindoors) return;\n        if (mapsindoors && !this._injected.mapsindoors) {\n            const script = document.createElement('script');\n            script.src = `https://app.mapsindoors.com/mapsindoors/js/sdk/4.21.4/mapsindoors-4.21.4.js.gz?apikey=${mapsindoors}`;\n            document.body.appendChild(script);\n            this._injected.mapsindoors = true;\n        }\n\n        if (google && mapbox) {\n            notifyError(\n                \"You can't use both Google and Mapbox maps at the same time\"\n            );\n            return;\n        }\n        if (google && !this._injected.google) {\n            const script = document.createElement('script');\n            script.src = `https://maps.googleapis.com/maps/api/js?libraries=geometry&key=${google}`;\n            document.body.appendChild(script);\n            this._map_service.next(MapService.GoogleMaps);\n            this._injected.google = true;\n        } else if (mapbox && !this._injected.mapbox) {\n            const script = document.createElement('script');\n            script.src = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js`;\n            document.body.appendChild(script);\n            const styles = document.createElement('link');\n            styles.rel = 'stylesheet';\n            styles.href = `https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css`;\n            document.head.appendChild(styles);\n            this._map_service.next(MapService.Mapbox);\n            this._map_token.next(mapbox);\n            this._injected.mapbox = true;\n        }\n\n        if (google || mapbox) {\n            this.timeout('ready', () => this._ready.next(true), 300);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { AsyncHandler } from './async-handler.class';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KeepAliveService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _delay = 3 * 60 * 1000;\n\n    private _status = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'poll')])),\n        tap(() => this.timeout('poll', () => location.reload(), this._delay))\n    );\n\n    constructor() {\n        super();\n        this.subscription('status', this._status.subscribe());\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    public setReloadDelay(delay: number) {\n        this._delay = delay;\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'SystemHealth') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { log, randomInt, randomString } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    device_id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    raw: any;\n    data: any;\n    metadata: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\nlet DEVICE_ID =\n    localStorage.getItem('PLACEOS.DEVICE_ID') || `DEV-${randomString(8)}`;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _disable_handling: boolean = false;\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(20000));\n    private _metadata = null;\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe(async (d) => {\n                    this._disable_handling = true;\n                    await getModule(id, 'Logger')\n                        .execute('post_event', [d])\n                        .catch();\n                    this._disable_handling = false;\n                })\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    public setMetadata(metadata: any) {}\n\n    constructor() {\n        super();\n        localStorage.setItem('PLACEOS.DEVICE_ID', DEVICE_ID);\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n        log('Logger', 'Remote logging initialised...');\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        if (data.includes('\"Logger\"') || this._disable_handling) return;\n        const blob = [...data[0]];\n        blob[0] =\n            typeof blob[0] === 'string' ? blob[0].replace(/\\%c/g, '') : blob[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            device_id: DEVICE_ID,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            raw: data,\n            data: blob.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n            metadata: this._metadata || null,\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._initDarkMode();\n        this._applyTheme();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this.setTheme(value ? 'dark' : '');\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    public setTheme(theme: string) {\n        const current_theme = this.get('theme');\n        if (current_theme === theme) return;\n        this.saveUserSetting('theme', theme);\n        this._applyTheme();\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _applyTheme() {\n        const theme = this.get('theme');\n        const class_list = document.body.classList.value.split(' ');\n        for (const item of class_list) {\n            if (item.startsWith('theme-')) {\n                document.body.classList.remove(item);\n            }\n        }\n        if (theme) {\n            document.body.classList.add(`theme-${theme}`);\n        } else {\n            document.body.classList.remove(`theme-${theme}`);\n        }\n    }\n\n    private _initDarkMode() {\n        if (this.get('theme') || true) return;\n        const os_dark = window?.matchMedia\n            ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches\n            : false;\n        this.setTheme(os_dark ? 'dark' : '');\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"91ee5d9\",\n    \"hash\": \"91ee5d9\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"91ee5d9\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1706500213134\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/indoor-maps.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\nexport * from './lib/attached-resource-config-modal.component';\nexport * from './lib/available-rooms-state-modal.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 overflow-hidden\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"setDarkMode($event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div class=\"px-8 py-4 bg-base-200 text-center\" i18n>\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-base-300 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return this._settings.get('theme') === 'dark';\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setDarkMode(state: boolean) {\n        const theme = this._settings.get('theme');\n        if (state && theme !== 'dark') this._settings.setTheme('dark');\n        else if (!state && theme === 'dark') this._settings.setTheme('light');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nexport type AttachedResourceRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface AttachedResourceRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: AttachedResourceRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n\nexport interface AttachedResourceConfigModalData {\n    resource_name?: string;\n    /** List of catering rules */\n    config: AttachedResourceRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'attached-resource-config-modal',\n    template: `\n        <header>\n            <h3>Edit {{ resource_name }} Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-auto text-center max-w-lg min-w-[32rem] px-4 pt-2 pb-4 space-y-2\"\n        >\n            <div\n                class=\"text-left p-2 rounded bg-base-200\"\n                *ngIf=\"can_save_notes\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"require_notes\"\n                    (ngModelChange)=\"saveNotesSetting($event)\"\n                >\n                    Require notes for orders\n                </mat-checkbox>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div\n                *ngFor=\"let set of rulesets; let i = index\"\n                class=\"ruleset mb-2\"\n            >\n                <div class=\"flex items-center mb-2 space-x-2\">\n                    <mat-form-field\n                        class=\"flex-1 no-subscript\"\n                        appearance=\"outline\"\n                    >\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button icon matRipple [matMenuTriggerFor]=\"menu\">\n                        <app-icon>more_vert</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                set.rules.push(['', '']); show_rules = set.id\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div>Add Rule</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"\n                                show_rules = show_rules !== set.id ? set.id : ''\n                            \"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    show_rules === set.id\n                                        ? 'expand_less'\n                                        : 'expand_more'\n                                }}</app-icon>\n                                <div>\n                                    {{\n                                        show_rules === set.id ? 'Hide' : 'Show'\n                                    }}\n                                    Rules\n                                </div>\n                            </div>\n                        </button>\n                        <button mat-menu-item (click)=\"rulesets.splice(i, 1)\">\n                            <div class=\"flex items-center space-x-2 text-error\">\n                                <app-icon class=\"text-2xl\">delete</app-icon>\n                                <div>Remove Ruleset</div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 4 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center pl-7 h-16 space-x-2 relative\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <div\n                            class=\"absolute left-3 top-1/2 -translate-y-full w-4 h-32 border-b-2 border-l-2 border-base-200\"\n                        ></div>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            class=\"flex-1 no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button icon matRipple (click)=\"set.rules.splice(i, 1)\">\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex py-2 px-4 items-center justify-end border-t border-solid border-base-200\"\n        >\n            <button btn matRipple class=\"w-36\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class AttachedResourceConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n    public readonly resource_name = this._data.resource_name || 'Catering';\n\n    public readonly rulesets: AttachedResourceRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    public get can_save_notes() {\n        return !!this._data.saveNotes;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: AttachedResourceConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, authority, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el || !authority()) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\nimport { StaffUser } from 'libs/users/src/lib/user.class';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await combineLatest([onlineState(), this._org.initialised])\n            .pipe(first(([online, org_init]) => online && org_init))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const groups = this._access?.group\n            ? [this._access.group]\n            : this._settings.get('app.allow_access_groups') || [];\n        const can_activate = !!(\n            user &&\n            (!groups.length || groups.find((_) => user.groups.includes(_)))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set {{ type }} Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead class=\"border-b border-base-200\">\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-neutral:bg-base-100/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-center\">\n                                <div\n                                    class=\"ml-auto px-3 py-1 rounded-2xl text-white w-24\"\n                                    [class.bg-success]=\"\n                                        !disabled_rooms?.includes(space.id)\n                                    \"\n                                    [class.bg-error]=\"\n                                        disabled_rooms?.includes(space.id)\n                                    \"\n                                >\n                                    {{\n                                        !disabled_rooms?.includes(space.id)\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-base-200\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class AvailableRoomsStateModalComponent {\n    @Output() public change = new EventEmitter<string[]>();\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly type: string = this._data.type;\n    public disabled_rooms: string[] = this._data.disabled_rooms;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: any,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n\n    public async disableSelected() {\n        this.loading = true;\n        const disabled_list = this.disabled_rooms;\n        const list = unique(disabled_list.concat(this.selected));\n        this.disabled_rooms = list;\n        this.change.next(list);\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AsyncHandler, SettingsService, current_user } from '@placeos/common';\nimport { ChatService } from './chat.service';\nimport { StaffUser } from '@placeos/users';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'global-chat',\n    template: `\n        <div class=\"absolute bottom-0 right-0 p-2\" *ngIf=\"can_show\">\n            <button\n                icon\n                matRipple\n                class=\"bg-base-100 rounded-full border border-base-300 shadow\"\n                (click)=\"toggleChat()\"\n            >\n                <app-icon>chat</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-2 right-2 bg-base-200 rounded-xl border border-base-300 shadow overflow-hidden w-[40rem] max-w-[calc(100vw-1rem)]\"\n                *ngIf=\"show\"\n            >\n                <div\n                    class=\"flex items-center justify-between bg-base-100 w-full p-2 border-b border-base-300\"\n                >\n                    <h3 class=\"pl-4\">Virtual Assistant</h3>\n                    <button icon matRipple (click)=\"toggleChat()\">\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div class=\"h-[32rem] max-h-[60vh] overflow-auto\" #container>\n                    <div\n                        class=\"w-full flex flex-col items-center justify-center p-8 space-y-2\"\n                    >\n                        <app-icon class=\"text-8xl\">forum</app-icon>\n                        <p class=\"text-center text-xl\">\n                            Hi {{ user.name }}. <br />\n                            Welcome to the virtual assistant.\n                        </p>\n                    </div>\n                    <div\n                        class=\"m-2 bg-base-100 border-base-300 p-4 rounded shadow text-sm\"\n                        *ngIf=\"hint | async\"\n                    >\n                        {{ hint | async }}\n                    </div>\n                    <div\n                        class=\"flex flex-col m-2\"\n                        *ngFor=\"let message of messages | async\"\n                        [class.pr-4]=\"message.user_id !== user.id\"\n                        [class.pl-4]=\"message.user_id === user.id\"\n                        [class.items-left]=\"message.user_id !== user.id\"\n                        [class.items-end]=\"message.user_id === user.id\"\n                        (click)=\"show_time[message.id] = !show_time[message.id]\"\n                        [class.waiting-margin]=\"waiting | async\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"text-sm text-base-content opacity-60 px-2 py-1\"\n                                *ngIf=\"message.user_id !== user.id\"\n                            >\n                                Assistant\n                            </div>\n                            <div\n                                class=\"text-xs  text-base-content opacity-40 px-2 py-1\"\n                            >\n                                {{ message.timestamp + offset | dateFrom }}\n                            </div>\n                        </div>\n                        <div\n                            message\n                            class=\"bg-base-100 border-base-300 p-4 rounded shadow text-sm markdown selectable\"\n                            [innerHTML]=\"message.content | sanitize\"\n                        ></div>\n                    </div>\n                    <div class=\"p-4\" *ngIf=\"progress | async\">\n                        <button\n                            class=\"block p-2 rounded border-base-300 bg-info text-info-content w-full\"\n                            (click)=\"show_info = !show_info\"\n                        >\n                            <div class=\" flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">{{\n                                    icons[(progress | async).function] || 'info'\n                                }}</app-icon>\n                                <p class=\"text-sm\">\n                                    {{\n                                        (progress | async).message ||\n                                            (progress | async).function\n                                    }}\n                                </p>\n                            </div>\n                            <div\n                                class=\"relative overflow-hidden w-full rounded\"\n                            >\n                                <div\n                                    class=\"absolute inset-0 bg-base-100 opacity-10\"\n                                ></div>\n                                <div\n                                    class=\"text-xs text-mono text-left p-2 break-words\"\n                                    *ngIf=\"show_info\"\n                                    [innerHTML]=\"\n                                        (progress | async).content | sanitize\n                                    \"\n                                ></div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <div\n                    class=\"absolute right-2 flex items-center justify-center space-x-2 p-1 rounded-2xl bg-base-100 border border-neutral\"\n                    [style.bottom]=\"height + 8 + 'px'\"\n                    *ngIf=\"waiting | async\"\n                >\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-1\"\n                    ></div>\n                    <div\n                        class=\"h-2 w-2 bg-neutral rounded-full animate-bounce anim-delay-2\"\n                    ></div>\n                    <span class=\"sr-only\">Waiting for reply...</span>\n                </div>\n                <div\n                    class=\"flex bg-base-100 focus-within:outline outline-info border-t border-base-300 max-h-[10rem] overflow-y-auto\"\n                >\n                    <textarea\n                        #input\n                        placeholder=\"New message...\"\n                        class=\"p-4 flex-1 w-1/2 focus:outline-none resize-none overflow-hidden\"\n                        [style.height]=\"height + 'px'\"\n                        [(ngModel)]=\"message\"\n                        (ngModelChange)=\"resizeInput()\"\n                        (keyup.enter)=\"sendMessage()\"\n                    ></textarea>\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!message\"\n                        class=\"mt-2\"\n                        (click)=\"sendMessage()\"\n                    >\n                        <app-icon>send</app-icon>\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .anim-delay-1 {\n                animation-delay: 0.25s;\n            }\n            .anim-delay-2 {\n                animation-delay: 0.5s;\n            }\n\n            .waiting-margin:last-child {\n                padding-bottom: 2rem;\n            }\n        `,\n    ],\n})\nexport class ChatComponent extends AsyncHandler implements OnInit {\n    public show = false;\n    public show_info = false;\n    public message = '';\n    public user: StaffUser;\n    public show_time: Record<string, boolean> = {};\n    public offset = 0;\n    public height = 56;\n\n    public readonly icons = {\n        list_function_schemas: 'help',\n        call_function: 'settings',\n        task_complete: 'check_circle',\n    };\n    public readonly hint = this._chat.chat_hint;\n    public readonly messages = this._chat.messages;\n    public readonly progress = this._chat.progress;\n    public readonly waiting = this._chat.messages.pipe(\n        map((_) => _.length !== 0 && _[_.length - 1]?.user_id === this.user?.id)\n    );\n\n    public get can_show() {\n        return this._settings.get('app.chat.enabled');\n    }\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLTextAreaElement>;\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n\n    public toggleChat() {\n        this.show = !this.show;\n        if (!this.show) this._chat.close();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _chat: ChatService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'current_user',\n            current_user.subscribe((user) => (this.user = user))\n        );\n        this.subscription(\n            'hint',\n            this.hint.subscribe(() => this.scrollToBottom(500))\n        );\n        this.subscription(\n            'messages',\n            this.messages.subscribe(() => this.scrollToBottom())\n        );\n        this.subscription(\n            'progress',\n            this.progress.subscribe((i) =>\n                i ? this.scrollToBottom() : (this.show_info = false)\n            )\n        );\n        this.interval(\n            'offset',\n            () => (this.offset = this.offset ? 0 : 1),\n            20 * 1000\n        );\n    }\n\n    public resizeInput() {\n        const el = this._input_el.nativeElement;\n        this.height = Math.max(el.scrollHeight, 56);\n    }\n\n    public sendMessage() {\n        if (!this.message) return;\n        if (!this._chat.connected) {\n            this._chat.startChat();\n            return this.timeout('send', () => this.sendMessage(), 100);\n        }\n        this._chat.sendMessage(this.message);\n        this.message = '';\n        this.height = 56;\n        setTimeout(() => this._input_el.nativeElement.focus(), 100);\n    }\n\n    public scrollToBottom(delay = 300) {\n        this.timeout(\n            'scroll',\n            () => {\n                if (this._container_el?.nativeElement) {\n                    this._container_el.nativeElement.scrollTop =\n                        this._container_el.nativeElement.scrollHeight;\n                }\n            },\n            delay\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    log,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { apiKey, getModule, token } from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\nimport * as marked from 'marked';\n\nexport interface ChatMessage {\n    id: string;\n    chat_id: string;\n    user_id: string;\n    message: string;\n    content: string;\n    function?: string;\n    timestamp: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ChatService extends AsyncHandler {\n    private _chat_messages = new BehaviorSubject<ChatMessage[]>([]);\n    private _progress_message = new BehaviorSubject<ChatMessage | null>(null);\n    private _chat_system = this._org.active_building.pipe(\n        filter((b) => !!b),\n        map((_) => this._org.binding('chat_room'))\n    );\n    private _chat_id = '';\n\n    public chat_hint: Observable<string> = this._chat_system.pipe(\n        filter((_) => !!_),\n        switchMap((id) => {\n            const mod = getModule(id, 'LLM');\n            const binding = mod.binding('user_hint');\n            this.subscription(`binding:LLM:user_hint`, binding.bind());\n            return binding.listen();\n        }),\n        shareReplay(1)\n    );\n    private _change = new BehaviorSubject(0);\n    private _socket?: WebSocketSubject<any>;\n    private _chat_pipe = combineLatest([this._chat_system, this._change]).pipe(\n        switchMap(([id]) => {\n            const auth =\n                token() !== 'x-api-key'\n                    ? `bearer_token=${encodeURIComponent(token())}`\n                    : `x-api-key=${apiKey()}`;\n            const url = `ws${location.origin.replace(\n                'http',\n                ''\n            )}/api/engine/v2/chatgpt/chat/${encodeURIComponent(id)}?${auth}${\n                this._chat_id\n                    ? '&resume=' + encodeURIComponent(this._chat_id)\n                    : ''\n            }`;\n            this._socket = webSocket<any>({\n                url,\n                serializer: (data) =>\n                    typeof data === 'object' ? JSON.stringify(data) : data,\n                deserializer: (data) => {\n                    let return_value = data.data;\n                    try {\n                        const obj = JSON.parse(data.data);\n                        return_value = obj;\n                    } catch (e) {\n                        return_value = return_value;\n                    }\n                    return return_value;\n                },\n            });\n            this.subscription(\n                'chat-ws',\n                this._socket.subscribe(\n                    (_) => this._onMessage(_),\n                    (e) => this._cleanup(),\n                    () => this._cleanup()\n                )\n            );\n            return this._socket;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly messages = this._chat_messages.asObservable();\n    public readonly progress = this._progress_message.asObservable();\n\n    public get connected() {\n        return !!this._socket;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public startChat() {\n        if (this._socket) return;\n        this._change.next(Date.now());\n        log('CHAT', 'Starting chat connection.');\n        this.subscription('chat', this._chat_pipe.subscribe());\n        return () => this.endChat();\n    }\n\n    public endChat() {\n        log('CHAT', 'Dropping chat connection.');\n        this._socket?.complete();\n        this._cleanup();\n    }\n\n    public close() {\n        this.endChat();\n        this._chat_id = '';\n        this._chat_messages.next([]);\n    }\n\n    public sendMessage(message: string) {\n        if (!message) return;\n        this._onMessage({ chat_id: '', message, user_id: currentUser().id });\n        this._socket?.next(message);\n    }\n\n    private _timeoutSocket(delay = 55 * 1000) {\n        this.timeout(\n            'socket',\n            () => {\n                const msg_list = this._chat_messages.getValue();\n                if (\n                    msg_list.length > 0 &&\n                    msg_list[msg_list.length - 1].user_id !== 'assistant'\n                ) {\n                    return this._timeoutSocket(delay);\n                }\n                this.endChat();\n            },\n            delay\n        );\n    }\n\n    private _cleanup() {\n        this._socket = null;\n        this.unsubWith('chat');\n    }\n\n    private _onMessage(msg) {\n        if (msg.chat_id) this._chat_id = msg.chat_id;\n        if (msg.type === 'progress') {\n            this._progress_message.next({\n                id: `msg-${randomString(6)}`,\n                chat_id: msg.chat_id,\n                message: msg.message,\n                content: marked.parse(msg.message),\n                user_id: msg.user_id || 'assistant',\n                function: msg.function,\n                timestamp: Date.now(),\n            });\n            if (msg.function === 'task_complete') {\n                this._settings.post('CHAT:task_complete', msg.task_id);\n            }\n        } else {\n            this._chat_messages.next([\n                ...this._chat_messages.getValue(),\n                {\n                    id: `msg-${randomString(6)}`,\n                    chat_id: msg.chat_id,\n                    message: msg.message,\n                    content: marked.parse(msg.message),\n                    user_id: msg.user_id || 'assistant',\n                    timestamp: Date.now(),\n                },\n            ]);\n            if (msg.type === 'response') {\n                this._progress_message.next(null);\n            }\n        }\n        this._timeoutSocket();\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\nimport { IndoorMapsComponent } from './indoor-maps.component';\nimport { PrintableComponent } from './printable.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { DateFromPipe } from './date-from.pipe';\nimport { AttachedResourceConfigModalComponent } from './attached-resource-config-modal.component';\nimport { StatusPillComponent } from './status-pill.component';\nimport { AvailableRoomsStateModalComponent } from './available-rooms-state-modal.component';\nimport { MediaDurationPipe } from './media-duration.pipe';\nimport { ThumbnailPipe } from './thumbnail.pipe';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatButtonToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    IndoorMapsComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n    StatusPillComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n    DateFromPipe,\n    MediaDurationPipe,\n    ThumbnailPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n    PrintableComponent,\n    ChatComponent,\n    AttachedResourceConfigModalComponent,\n    AvailableRoomsStateModalComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-base-200 divide-y divide-base-200 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-base-300 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row; let idx = index\"\n                    >\n                        <ng-container\n                            *ngIf=\"column !== '_index'; else index_outlet\"\n                        >\n                            <ng-container\n                                *ngIf=\"!template[column]; else cell_outlet\"\n                                >{{ row[column]\n                                }}<span\n                                    *ngIf=\"\n                                        row[column] == null ||\n                                        row[column] === ''\n                                    \"\n                                    class=\"opacity-30\"\n                                >\n                                    N/A\n                                </span></ng-container\n                            >\n                            <ng-template #cell_outlet>\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        template[column];\n                                        context: {\n                                            first: idx === 0,\n                                            last:\n                                                idx ===\n                                                    data_source.data.length -\n                                                        1 ||\n                                                idx === data_source.length - 1,\n                                            index: i,\n                                            data: row[column],\n                                            row: row,\n                                            key: column,\n                                            name: display_column[i] || column\n                                        }\n                                    \"\n                                ></ng-container>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #index_outlet>\n                            <div class=\"w-full text-center\">{{ idx + 1 }}</div>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-base-100 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-neutral:bg-base-100/5 divide-x divide-base-200\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n    /** Reset viewed page to first on change */\n    @Input() public reset_page: any;\n    /** Emitter for when a row is clicked */\n    @Output() public row_clicked = new EventEmitter<T>();\n    /** List of items to display in the table */\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n        if (\n            changes.reset_page &&\n            this.reset_page !== changes.reset_page.previousValue\n        ) {\n            this._paginator?.firstPage();\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative print:hidden\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { differenceInMinutes, format } from 'date-fns';\n\n@Pipe({\n    name: 'dateFrom',\n})\nexport class DateFromPipe implements PipeTransform {\n    public transform(date: number): string {\n        const now = Date.now();\n        let diff = differenceInMinutes(now, date);\n        const direction = diff < 0;\n        diff = Math.abs(diff);\n        if (diff < 1) {\n            // Less than a minute\n            return direction ? 'Soon' : 'Now';\n        } else if (diff === 1) {\n            // 1 minute\n            return direction ? 'In 1 min' : '1 min';\n        } else if (diff < 60) {\n            // Minutes\n            return direction ? `In ${diff} min` : `${diff} min`;\n        } else if (diff < 24 * 60) {\n            // Hours\n            const hours = Math.floor(diff / 60);\n            return direction\n                ? `In ${hours} hour${hours === 1 ? '' : 's'}`\n                : format(date, 'H:mm');\n        } else if (diff < 7 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'E H:mm');\n        } else if (diff < 365 * 24 * 60) {\n            // Days\n            const days = Math.floor(diff / (24 * 60));\n            return direction\n                ? format(date, 'dd MMM yyyy')\n                : format(date, 'LLL d H:mm');\n        }\n        return 'Just now';\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\nconst COLOR_MAP = {\n    console: 'bg-success-light text-black',\n    network: 'bg-success text-success-content',\n    dom: 'bg-warning-light text-black',\n\n    log: `bg-info-light text-black`,\n    info: `bg-info text-info-content`,\n    warn: `bg-warning text-warning-content`,\n    debug: `bg-base-300 text-base-content`,\n    error: `bg-error text-error-content`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 left-2 max-w-[80vw] w-[40rem] border border-base-300 bg-base-200 text-base-content shadow rounded overflow-hidden h-[24rem] max-h-[65vh] flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <div\n                class=\"flex items-center justify-between bg-base-100 border-b border-base-300\"\n            >\n                <div class=\"p-2\">Console</div>\n                <button icon matRipple (click)=\"show = false\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                *ngIf=\"(filtered_logs | async)?.length; else empty_state\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-base-100 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-base-100/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono pl-1\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-info\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n                <div class=\"h-8 w-full\"></div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-1 right-1 rounded-lg p-1 flex items-center w-[20rem] overflow-hidden\"\n            >\n                <div\n                    class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                ></div>\n                <div\n                    class=\"absolute inset-1 bg-base-content opacity-90 rounded z-0\"\n                ></div>\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"relative border-none flex-1 text-sm px-2 py-1 font-mono rounded text-base-100\"\n                />\n                <div\n                    class=\"relative font-mono text-xs px-2 text-center text-base-100\"\n                >\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n        <button\n            activation\n            *ngIf=\"can_activate\"\n            class=\"absolute bottom-0 right-0 h-12 w-12\"\n            (mousedown)=\"onStart()\"\n            (touchstart)=\"onStart()\"\n            (mouseup)=\"onEnd()\"\n            (touchend)=\"onEnd()\"\n        ></button>\n        <ng-template #empty_state>\n            <div\n                class=\"flex-1 flex flex-col items-center justify-center h-[30rem] w-full\"\n            >\n                <div class=\"text-2xl opacity-30\">\n                    No {{ filter.getValue() ? 'matching' : '' }} logs\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    public readonly onStart = () =>\n        this.timeout('show', () => (this.show = true), 5000);\n    public readonly onEnd = () => this.clearTimeout('show');\n\n    public get can_activate() {\n        return !!this._settings.get('app.debug_console');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'binding',\n            this._org.active_building.subscribe(() => {\n                console.log('Binding:', this._org.binding('remote_logger'));\n                this._logs.setSystem(this._org.binding('remote_logger'));\n            })\n        );\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) => {\n                let logs = this.logs.getValue();\n                if (\n                    logs.length >\n                    (this._settings.get('app.log_limits') || 20000)\n                )\n                    logs.splice(0, 1);\n                this.logs.next([...logs, event]);\n            })\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n        console.log('Binding:', this._org.binding('remote_logger'));\n        this._logs.setSystem(this._org.binding('remote_logger'));\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full p-4 space-x-4\"\n            [class.bg-info]=\"banner.type === 'info' || !banner.type\"\n            [class.text-info-content]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-warning]=\"banner.type === 'warn'\"\n            [class.text-warning-content]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            [class.text-error-content]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { authority, isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-base-100\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (!authority() || !token()) return;\n                this.loading = false;\n                this.clearInterval('has_token');\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1 divide-y divide-base-200\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2 p-2 border-b\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div class=\"flex items-center space-x-2 py-2 w-full\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-neutral text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-base-100]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-base-300 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    Component,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    AsyncHandler,\n    HashMap,\n    InjectMapApiService,\n    log,\n    notifyError,\n} from '@placeos/common';\nimport { ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { ExploreStateService } from '../../../explore/src/lib/explore-state.service';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { combineLatest } from 'rxjs';\nimport { filter, map, first, take } from 'rxjs/operators';\nimport { MapService } from 'libs/common/src/lib/inject-map-api.service';\n\ndeclare let mapsindoors: any;\ndeclare let google: any;\ndeclare let mapboxgl: any;\n\ninterface GeolocationCoordinates {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n}\n\ninterface GeolocationPosition {\n    coords: GeolocationCoordinates;\n    timestamp: number;\n}\n\ninterface CustomCoordinates {\n    latitude: number;\n    longitude: number;\n}\n\n@Component({\n    selector: 'indoor-maps',\n    template: `\n        <div\n            id=\"maps-indoors\"\n            class=\"absolute inset-0 flex items-center justify-center\"\n        >\n            <mat-spinner\n                *ngIf=\"loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n            <div\n                *ngIf=\"geolocation_error_message\"\n                class=\"flex flex-col items-center z-50\"\n            >\n                <img\n                    src=\"assets/icons/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n                <p class=\"opacity-60 text-sm text-center mt-10\">\n                    {{ geolocation_error_message | translate }}\n                </p>\n            </div>\n        </div>\n        <div\n            class=\"absolute flex flex-col h-min w-min top-2 left-2 bg-base-100 text-base-content rounded-lg z-50 p-2 shadow\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"map no-subscript\">\n                <input\n                    matInput\n                    #searchInput\n                    name=\"location-search\"\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    (keyup.enter)=\"onSearch()\"\n                />\n                <div matSuffix class=\"h-10 relative\">\n                    <button\n                        icon\n                        name=\"indoor-map-search\"\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        aria-label=\"search button\"\n                        matTooltip=\"Search...\"\n                        (click)=\"onSearch()\"\n                    >\n                        <app-icon matPrefix class=\"text-2xl relative\">\n                            search\n                        </app-icon>\n                    </button>\n                </div>\n            </mat-form-field>\n\n            <ng-container *ngIf=\"search_result_items?.length\">\n                <div\n                    class=\"flex items-center justify-between px-2 my-2 space-x-2\"\n                >\n                    <h3 class=\"font-medium text-lg\">\n                        Results ({{ search_result_items.length || '0' }})\n                    </h3>\n                    <button\n                        icon\n                        matRipple\n                        class=\"hover:bg-base-200\"\n                        (click)=\"search_result_items = []\"\n                        matTooltip=\"Clear Results\"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <ul\n                    class=\"list-none m-0 p-0 w-full space-y-2 max-h-[65vh] overflow-auto\"\n                >\n                    <li\n                        class=\"flex items-center w-full even:bg-base-200 hover:bg-base-300 rounded p-2 space-x-2\"\n                        *ngFor=\"let item of search_result_items | slice: 0:10\"\n                    >\n                        <div class=\"flex-1\">\n                            {{ item.properties.name }}\n                        </div>\n                        <button\n                            icon\n                            name=\"get-directions\"\n                            matRipple\n                            aria-label=\"get directions button\"\n                            (click)=\"getRoute(item)\"\n                            class=\"flex text-white h-7 w-7 rounded-md bg-secondary\"\n                        >\n                            <app-icon class=\"text-sm\">near_me</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class IndoorMapsComponent extends AsyncHandler implements OnInit {\n    public view_instance: any;\n    public maps_service: any;\n    public map_instance: any;\n    public directions_service: any;\n    public directions_renderer: any;\n\n    public live_data_status: string | boolean = 'enabled';\n    public search_result_items: any[];\n    public selected_destination: any = null;\n\n    public loading: boolean;\n    public actions_hashmap: { [id: string]: ViewAction };\n\n    public user_latitude: number | null = null;\n    public user_longitude: number | null = null;\n    public geolocation_error_message: string = '';\n    public route_error_message: string = '';\n    public coordinates: CustomCoordinates | null = null;\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n    public readonly setBuilding = (b) => (this._org.building = b);\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n    public levels_list: any[] = [];\n    public buildings_list: Building[] = [];\n    public floor_mapping: { [id: string]: string } = {};\n\n    /** Custom CSS styles to apply to the map */\n    @Input() public styles: ViewerStyles;\n    /** List of available user actions for the map */\n    @Input() public actions: ViewAction[];\n    /** Custom coordinates to fixate on the map */\n    @Input() public custom_coordinates: CustomCoordinates;\n\n    @ViewChild('searchInput', { static: true }) searchElement: ElementRef;\n    @ViewChild('searchResultItems') searchResults: ElementRef;\n\n    constructor(\n        private _api_service: InjectMapApiService,\n        private _state: ExploreStateService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        this.levels_list = await this.levels.pipe(take(1)).toPromise();\n        this.buildings_list = await this._org.building_list\n            .pipe(take(1))\n            .toPromise();\n\n        if (this.custom_coordinates) {\n            this.coordinates = this.custom_coordinates;\n        }\n        await this._getUserLocation();\n        await this.initMapView();\n    }\n\n    async ngOnChanges(change: SimpleChanges) {\n        if (change.styles || change.actions) {\n            await this.renderSpaceStatus();\n            await this.mapActions();\n        }\n        this.mapFloorsToIndex();\n        this.loading = false;\n    }\n\n    ngAfterViewInit() {\n        this.maps_service?.addListener('click', (location: any, e: Event) => {\n            const found_action = this.actions_hashmap[location.id];\n            if (found_action) {\n                found_action.callback(e);\n            }\n        });\n    }\n\n    initMapView(): Promise<void> {\n        if (!this._api_service.is_ready) {\n            this.timeout('init', () => this.initMapView(), 1000);\n            return;\n        }\n        const view_options: any = {\n            element: document.getElementById('maps-indoors'),\n            center: { lat: this.user_latitude, lng: this.user_longitude },\n            zoom: 21,\n            maxZoom: 24,\n        };\n\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            this.view_instance = new mapsindoors.mapView.GoogleMapsView(\n                view_options\n            );\n        } else {\n            view_options.accessToken = this._api_service.map_token;\n            this.view_instance = new mapsindoors.mapView.MapboxView(\n                view_options\n            );\n        }\n        if (!this.view_instance) {\n            log(\n                'MapsIndoors',\n                'Failed to initialise map view instance.',\n                undefined,\n                'warn'\n            );\n            return;\n        }\n        this.maps_service = new mapsindoors.MapsIndoors({\n            mapView: this.view_instance,\n        });\n        this.map_instance = this.view_instance.getMap();\n        this.initDirections();\n        this.handleLocationChange();\n    }\n\n    initDirections() {\n        const provider =\n            this._api_service.map_service === MapService.GoogleMaps\n                ? new mapsindoors.directions.GoogleMapsProvider()\n                : new mapsindoors.directions.MapboxProvider();\n        this.directions_service = new mapsindoors.services.DirectionsService(\n            provider\n        );\n        console.log('Directions Service:', this.directions_service, provider);\n        const directionsRendererOptions = {\n            mapsIndoors: this.maps_service,\n        };\n        this.directions_renderer =\n            new mapsindoors.directions.DirectionsRenderer(\n                directionsRendererOptions\n            );\n    }\n\n    async mapFloorsToIndex() {\n        const building = await this.maps_service?.getBuilding();\n        const input_string =\n            building?.buildingInfo?.fields?.floorMapping?.value;\n        const pairs = input_string?.split(',\\n').map((pair) => pair.split(':'));\n        this.floor_mapping = pairs?.reduce((accumulator, [key, value]) => {\n            accumulator[key] = value;\n            return accumulator;\n        }, {});\n        const floor_index: string = await this.maps_service?.getFloor();\n        if (floor_index && this.floor_mapping) {\n            const level_id = this.floor_mapping[floor_index];\n            this._state.setLevel(level_id);\n        }\n    }\n\n    public handleLocationChange() {\n        const floorSelectorElement = document.createElement('div');\n        new mapsindoors.FloorSelector(floorSelectorElement, this.maps_service);\n        if (this._api_service.map_service === MapService.GoogleMaps) {\n            this.map_instance.controls[\n                google.maps.ControlPosition.RIGHT_TOP\n            ].push(floorSelectorElement);\n        } else {\n            const instance = this.view_instance.getMap();\n            instance.addControl({\n                onAdd: () => floorSelectorElement,\n                onRemove: () => {},\n            });\n        }\n\n        this.maps_service?.addListener('building_changed', (e: any) => {\n            const found_building = this.buildings_list.find((building) => {\n                building.name.toLowerCase() ===\n                    e.buildingInfo?.name.toLowerCase();\n                this.setBuilding(found_building);\n            });\n        });\n        this.maps_service?.addListener('floor_changed', (e: string) => {\n            if (e && this.floor_mapping) {\n                const level_id: string = this.floor_mapping[e];\n                this._state.setLevel(level_id);\n            }\n        });\n    }\n\n    async onSearch(): Promise<any> {\n        const searchParams = { q: this.searchElement.nativeElement.value };\n        await mapsindoors?.services.LocationsService.getLocations(\n            searchParams\n        ).then((locations: any[]) => {\n            this.search_result_items = locations;\n        });\n    }\n\n    private _getUserLocation() {\n        const options = { timeout: 10000, enableHighAccuracy: true };\n\n        return new Promise<GeolocationPosition>(async (resolve) => {\n            if (!('geolocation' in navigator)) {\n                return resolve(this._setLocationToBuilding());\n            }\n            if (this.coordinates) {\n                console.log('Custom GeoLocation:', this.coordinates);\n                const customPosition = {\n                    coords: {\n                        latitude: this.coordinates.latitude,\n                        longitude: this.coordinates.longitude,\n                        accuracy: 10,\n                    },\n                    timestamp: new Date().getTime(),\n                };\n                this.user_latitude = this.coordinates.latitude;\n                this.user_longitude = this.coordinates.longitude;\n\n                resolve(customPosition as GeolocationPosition);\n            } else {\n                await navigator.geolocation.getCurrentPosition(\n                    (position: GeolocationPosition) => {\n                        this._updateGeolocation(position);\n                        resolve(position);\n                    },\n                    (error) => resolve(this._setLocationToBuilding()),\n                    options\n                );\n                navigator.geolocation.watchPosition(\n                    (_) => this._updateGeolocation(_),\n                    (_) => this._handleGeolocationError(_)\n                );\n            }\n        });\n    }\n\n    private _setLocationToBuilding() {\n        const [lat, long] = this._org.building?.location.split(',');\n        this.user_latitude = parseFloat(lat);\n        this.user_longitude = parseFloat(long);\n        return {\n            coords: {\n                latitude: this.user_latitude,\n                longitude: this.user_longitude,\n                accuracy: 10,\n            },\n            timestamp: new Date().getTime(),\n        } as GeolocationPosition;\n    }\n\n    private _updateGeolocation(updated_location: GeolocationPosition) {\n        if (updated_location) {\n            if (\n                updated_location.coords?.latitude !== this.user_latitude ||\n                updated_location.coords?.longitude !== this.user_longitude\n            ) {\n                this.user_latitude = updated_location.coords?.latitude;\n                this.user_longitude = updated_location.coords?.longitude;\n                this.getRoute(this.selected_destination);\n            }\n        }\n    }\n\n    private _handleGeolocationError(error: any) {\n        notifyError('Error updating your geolocation.');\n    }\n\n    getRoute(location: any) {\n        if (!this.directions_service) return;\n        this.selected_destination = location;\n        if (this.user_latitude && this.user_longitude) {\n            const originLocationCoordinate: any = {\n                lat: this.user_latitude,\n                lng: this.user_longitude,\n            };\n\n            //Hardcoded coordinates for mock map in Austin\n            // const originLocationCoordinate = {\n            //     lat: 30.3603774,\n            //     lng: -97.7426772,\n            // };\n\n            const destinationCoordinate = {\n                lat: location.properties.anchor.coordinates[1],\n                lng: location.properties.anchor.coordinates[0],\n                floor: location.properties.floor,\n            };\n\n            const routeParameters = {\n                origin: originLocationCoordinate,\n                destination: destinationCoordinate,\n                travelMode: 'WALKING',\n            };\n\n            this.directions_service\n                .getRoute(routeParameters)\n                .then((directionsResult: any) => {\n                    this.directions_renderer?.setRoute(directionsResult);\n                })\n                .catch((error: any) => {\n                    console.error('Error fetching route: ' + error);\n                    if (\n                        error instanceof TypeError &&\n                        error.message?.includes('origin')\n                    ) {\n                        notifyError(\n                            'Error: Cannot create route as origin location is outside of map area.'\n                        );\n                    }\n                });\n        } else {\n            notifyError('Error: unable to find a route.');\n        }\n    }\n\n    async renderSpaceStatus(): Promise<void[]> {\n        if (this.styles) {\n            const promises: Promise<void>[] = [];\n            for (const key in this.styles) {\n                const colour = this.styles[key]['fill'] as string;\n                if (key) {\n                    const updated_key = key.substring(1);\n                    promises.push(this._setPolygonFill(updated_key, colour));\n                }\n            }\n            return await Promise.all(promises);\n        }\n    }\n\n    async mapActions() {\n        return new Promise<HashMap<ViewAction>>((resolve, reject) => {\n            this.actions_hashmap = this.actions?.reduce(\n                (accumulator, currentValue) => {\n                    accumulator[currentValue.id] = currentValue;\n                    return accumulator;\n                },\n                {}\n            );\n            resolve(this.actions_hashmap);\n        });\n    }\n\n    private async _setPolygonFill(location_id: string, colour: string) {\n        await this.maps_service?.setDisplayRule(location_id, {\n            polygonVisible: true,\n            polygonFillOpacity: 0.6,\n            polygonZoomFrom: 16,\n            polygonZoomTo: 22,\n            visible: true,\n            polygonFillColor: colour,\n        });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, authority, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (!authority()) {\n            return this.timeout('create_view', () => this.createView(), 300);\n        }\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from '@angular/core';\nimport { CustomTooltipData } from './custom-tooltip.component';\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div\n            class=\"bg-base-100 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2 border border-base-300\"\n        >\n            <pre\n                class=\"font-mono text-sm bg-base-200 p-2 rounded break-all w-full\"\n                >{{ formatted_json }}</pre\n            >\n        </div>\n    `,\n    styles: [\n        `\n            pre {\n                white-space: pre-wrap; /* Since CSS 2.1 */\n                white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n                white-space: -pre-wrap; /* Opera 4-6 */\n                white-space: -o-pre-wrap; /* Opera 7 */\n                word-wrap: break-word; /* Internet Explorer 5.5+ */\n            }\n        `,\n    ],\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow relative -top-12 -right-1\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-base-200 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-base-100 rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler, InjectMapApiService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <interactive-map\n                    *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                    class=\"pointer-events-none\"\n                    [src]=\"level?.map_id\"\n                    [features]=\"features\"\n                    [options]=\"{\n                        disable_pan: true,\n                        disable_zoom: true\n                    }\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner\n                ></interactive-map>\n                <ng-template #mapspeople>\n                    <indoor-maps\n                        [styles]=\"styles | async\"\n                        [actions]=\"actions | async\"\n                    ></indoor-maps>\n                </ng-template>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-base-100 rounded-3xl shadow border border-base-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-base-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    public readonly use_mapsindoors$ = this._maps_people.use_mapspeople$;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService,\n        private _maps_people: InjectMapApiService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this._maps_people.setCustomZone(this.level?.id);\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this._maps_people.setCustomZone('');\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-base-100 text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Pipe } from '@angular/core';\n\nexport function padLength(value: number | string, length: number = 2): string {\n    let str = `${value}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n@Pipe({\n    name: 'mediaDuration',\n})\nexport class MediaDurationPipe {\n    public transform(length: number): string {\n        let str = `${padLength(Math.floor(length / 60) % 60)}:${padLength(\n            length % 60\n        )}`;\n        const hours = Math.floor(length / 60 / 60);\n        if (hours > 0) {\n            str = `${padLength(hours)}:${str}`;\n        }\n        return str;\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: '[printable]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div\n                printable-view\n                class=\"fixed top-0 left-0 flex-col items-end hidden print:flex pointer-events-none\"\n                [innerHTML]=\"content | sanitize\"\n            ></div>\n        </ng-template>\n    `,\n})\nexport class PrintableComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public content: string = '';\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    constructor(private _overlay: Overlay, private _elem: ElementRef<any>) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.open();\n    }\n\n    public ngAfterViewInit(): void {\n        this.content = this._elem.nativeElement.outerHTML;\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        this.timeout(\n            'open',\n            () => {\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: false,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(document.body)\n                        .withPositions([\n                            {\n                                originX: default_x,\n                                originY: default_y,\n                                overlayX: default_x,\n                                overlayY: default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-base-100 shadow p-2 relative -top-12 -right-1 overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-base-100 mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component, Input } from '@angular/core';\n\nexport type StatusValue = 'success' | 'warning' | 'error' | 'info' | 'neutral';\n\n@Component({\n    selector: 'status-pill',\n    template: `\n        <div\n            class=\"flex items-center bg-opacity-30 rounded-2xl px-2 py-1 text-base space-x-2 font-medium text-black\"\n            [class.bg-success-light]=\"status === 'success'\"\n            [class.bg-warning-light]=\"status === 'warning'\"\n            [class.bg-error-light]=\"status === 'error'\"\n            [class.bg-info-light]=\"status === 'info'\"\n            [class.bg-base-200]=\"status === 'neutral'\"\n        >\n            <div\n                class=\"rounded-full h-5 w-5 flex items-center justify-center\"\n                [class.text-success]=\"status === 'success'\"\n                [class.text-warning]=\"status === 'warning'\"\n                [class.text-error]=\"status === 'error'\"\n                [class.text-info]=\"status === 'info'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n                [class.opacity-40]=\"status === 'neutral'\"\n            >\n                <app-icon class=\"text-2xl\" [ngSwitch]=\"status\">\n                    <ng-container *ngSwitchCase=\"'success'\">\n                        check_circle\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'error'\">cancel</ng-container>\n                    <ng-container *ngSwitchCase=\"'neutral'\">block</ng-container>\n                    <ng-container *ngSwitchCase=\"'info'\">info</ng-container>\n                    <ng-container *ngSwitchDefault>warning</ng-container>\n                </app-icon>\n            </div>\n            <div\n                [class.opacity-40]=\"status === 'neutral'\"\n                [class.text-base-content]=\"status === 'neutral'\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StatusPillComponent {\n    @Input() public status: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'thumbnail',\n})\nexport class ThumbnailPipe implements PipeTransform {\n    private _thumbnail_cache: Record<string, string> = {};\n\n    public transform(url: string): string {\n        if (!url) return null;\n        if (!this._thumbnail_cache[url]) {\n            createVideoThumbnail(url)\n                .then((_) => (this._thumbnail_cache[url] = _))\n                .catch((GENERATING[url] = null));\n        }\n        return this._thumbnail_cache[url] || '';\n    }\n}\n\nconst GENERATING = {};\n\nfunction createVideoThumbnail(url: string) {\n    if (!GENERATING[url]) {\n        GENERATING[url] = new Promise<string>((resolve) => {\n            var video = document.createElement('video');\n            video.crossOrigin = 'anonymous';\n            video.src = url;\n            var canvas = document.createElement('canvas');\n            var context = canvas.getContext('2d');\n            video.addEventListener('loadedmetadata', () => {\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                video.currentTime = 1;\n            });\n\n            video.addEventListener('seeked', () => {\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n                var thumbnail = canvas.toDataURL('image/png');\n                resolve(thumbnail);\n            });\n            video.load();\n        });\n    }\n    return GENERATING[url];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-base-100 text-black border border-base-200 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-base-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-base-content text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--b2);\n                overflow: hidden;\n                border: 2px solid var(--b1);\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-base-100 shadow mt-1 flex flex-col relative divide-y divide-base-200\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div customTooltip [content]=\"building_select\" class=\"relative\">\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div class=\"w-full flex items-center space-x-2\">\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-base-200\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-base-200 p-2 border-t border-base-200\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-base-200 relative cursor-pointer bg-base-100\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-base-200\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div class=\"w-full h-full overflow-hidden flex flex-col bg-base-100\">\n            <div class=\"flex items-center border-b border-base-200 p-2\">\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-base-100 flex items-center justify-center text-secondary-content\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    SettingsService,\n    InjectMapApiService,\n} from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { getEventMetadata } from './events.fn';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"event_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-success]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-base-200 sm:border-none flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-base-200\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 my-2 text-lg font-medium\" i18n>\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                order\n                                *ngFor=\"let order of event.valid_catering\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <div class=\"flex items-center space-x-2 p-3\">\n                                    <div class=\"flex-1\">\n                                        <div class=\"text-sm\">\n                                            Order at\n                                            {{\n                                                order.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ order.item_count }} item(s) for\n                                            {{\n                                                order.total_cost / 100\n                                                    | currency: currency_code\n                                            }}\n                                        </div>\n                                    </div>\n                                    <button\n                                        icon\n                                        matRipple\n                                        [matTooltip]=\"\n                                            show_order[order.id]\n                                                ? 'Hide order items'\n                                                : 'Show order items'\n                                        \"\n                                        (click)=\"\n                                            show_order[order.id] =\n                                                !show_order[order.id]\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                show_order[order.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </button>\n                                </div>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_order[order.id] ? 'show' : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of order.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                            <span\n                                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                                *ngIf=\"item.option_list?.length\"\n                                                [matTooltip]=\"optionList(item)\"\n                                            >\n                                                {{\n                                                    item.option_list?.length ||\n                                                        '0'\n                                                }}\n                                                option(s)\n                                            </span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                        >\n                                            {{\n                                                item.unit_price_with_options /\n                                                    100\n                                                    | currency: currency_code\n                                            }}\n                                            ea\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                        <ng-template #mapspeople>\n                            <indoor-maps\n                                [styles]=\"styles | async\"\n                                [actions]=\"actions | async\"\n                            ></indoor-maps>\n                        </ng-template>\n                    </ng-container>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-base-200\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"body\"\n                        [innerHTML]=\"\n                            (body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ event.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of event.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-neutral text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    [matTooltip]=\"!can_edit ? no_edit_message : ''\"\n                    [disabled]=\"!can_edit\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public show_order = {};\n    public show_request = {};\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public readonly no_edit_message =\n        'Editing bookings long than \\n a day is not available';\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get can_edit() {\n        return true;\n        // return (\n        //     this.event.duration <= 24 * 60 ||\n        //     this._settings.get('app.events.allow_multiday')\n        // );\n    }\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get body() {\n        return this.event.body.replace(/\\\\n\\\\n\\[ID\\|.*\\]/gm, '');\n    }\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get event_status() {\n        if (this.event?.state === 'done') return 'neutral';\n        if (this.event?.status === 'approved') return 'success';\n        if (this.event?.status === 'tentative') return 'warning';\n        if (this.event?.status === 'declined') return 'error';\n        return 'warning';\n    }\n\n    public readonly use_mapsindoors$ = this._maps_people.use_mapspeople$;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _maps_people: InjectMapApiService\n    ) {\n        this._load().then();\n    }\n\n    public ngOnDestroy() {\n        this._maps_people.setCustomZone('');\n    }\n\n    public get period() {\n        if (this.event?.all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const is_multiday = this.event?.duration > 24 * 60;\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(\n            start,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} - ${format(\n            end,\n            (is_multiday ? `MMM d, ` : '') + this.time_format\n        )} ${duration < 24 * 60 ? '(' + dur + ')' : ''}`;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n        console.log('Valid Assets:', this.event.valid_assets);\n        if (\n            this.event.extension_data.catering?.length ||\n            this.event.extension_data.assets?.length\n        ) {\n            return;\n        }\n        const metadata = await getEventMetadata(\n            this._event.id,\n            this.space.id\n        ).toPromise();\n        if (metadata) {\n            this._event = new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    ...metadata,\n                },\n            });\n        }\n        this._maps_people.setCustomZone(this.level?.parent_id);\n    }\n\n    public status(id: string): string {\n        const booking = this.event.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => {\n            this.hide_map = false;\n            this._maps_people.setCustomZone(this.level?.parent_id);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { differenceInDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    filterResourcesFromRules,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    createBookingsForEvent,\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm(undefined, this._settings);\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public get is_multiday() {\n        return this._event.getValue()?.duration > 24 * 60;\n    }\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(() => {\n                return this._org.building\n                    ? showMetadata(\n                          this._org.building.id,\n                          `room_booking_rules`\n                      ).pipe(catchError(() => of({ details: [] })))\n                    : of({ details: [] });\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.booking_rules,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings, booking_rules]) => {\n            this._loading.next('Updating available spaces...');\n            let { ical_uid, date, duration, all_day, organiser } =\n                this._form.getRawValue();\n            list = filterResourcesFromRules(\n                list,\n                { date, duration, resource: null, host: currentUser() },\n                booking_rules\n            ) as any;\n            return (list || [])\n                .filter((_, idx) => {\n                    const start = all_day ? startOfDay(date).valueOf() : date;\n                    const end =\n                        start +\n                        (all_day ? Math.max(24 * 60, duration) : duration) *\n                            MINUTES;\n                    return periodInFreeTimeSlot(\n                        start,\n                        end,\n                        (bookings[idx] || []).filter(\n                            (_) => _.ical_uid !== ical_uid\n                        )\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([\n            this.filtered_spaces,\n            this.booking_rules,\n            this.form.valueChanges.pipe(debounceTime(400), startWith({})),\n        ]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces, booking_rules]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration, all_day } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterResourcesFromRules(\n                    spaces,\n                    { date, duration, resource: null, host: currentUser() },\n                    booking_rules\n                ) as any;\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    this?.event?.resources[0]?.id ||\n                        this.event?.system?.id ||\n                        this.event?.id ||\n                        undefined,\n                    undefined,\n                    [this.event?.date, this.event?.duration]\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterResourcesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                resource: null,\n                                host: currentUser(),\n                            },\n                            booking_rules\n                        ) as any;\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            const cache_length =\n                this._settings.get('app.events.cache_duration_in_days') || 14;\n            return diff < cache_length\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        }),\n        shareReplay(1)\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, assets }) => {\n                this._assets.setOptions({\n                    date: this.form.value.date,\n                    duration: this.form.value.duration,\n                });\n                if (date && date !== this._date.getValue()) {\n                    this._date.next(date);\n                }\n                this.storeForm();\n            })\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(\n        event: CalendarEvent = new CalendarEvent({\n            all_day: this._settings.get('app.events.all_day_default'),\n        })\n    ) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(event.recurring_event_id)\n                .toPromise()\n                .catch((_) => null);\n            if (master) {\n                (this._event.getValue() as any).recurrence = {\n                    ...master.recurrence,\n                    _pattern: master.recurrence.pattern,\n                };\n            }\n        }\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.timeout(\n            'post-event-form',\n            () => {\n                this._form.patchValue({\n                    date: event.date || this._form.value.date,\n                });\n            },\n            1000\n        );\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            duration: event.duration >= 12 * 60 ? 30 : event.duration,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: (event.extension_data.assets || []).map(\n                (_) => new AssetRequest(_)\n            ),\n        });\n        this._form.patchValue({\n            date: event.date || this._form.value.date,\n            date_end: event.date_end || this._form.value.date_end,\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        if (!sessionStorage.getItem('PLACEOS.event_form')) {\n            return this.newForm();\n        }\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({ ...form_data });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                date_end,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            let changed_times = false;\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                changed_times = true;\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    all_day ? startOfDay(date).valueOf() : date,\n                    all_day ? Math.max(24 * 60, duration) : duration,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            for (const order of catering) {\n                order.notes = value.catering_notes;\n                order.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup_time || setup;\n                (value as any).breakdown = value.breakdown_time || breakdown;\n            }\n            const processed_assets = assets.map((_) =>\n                new AssetRequest(_).toJSON()\n            );\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees: attendees.map((_) => {\n                        const v = { ..._ };\n                        delete v.visit_expected;\n                        return v;\n                    }),\n                    date: d,\n                    catering,\n                    assets: processed_assets,\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            const domain = (currentUser()?.email || '@').split('@')[1];\n            const visitors = attendees.filter(\n                (user) =>\n                    user.is_external &&\n                    user.email !== event.host &&\n                    !user.email.includes(domain) &&\n                    user.visit_expected\n            );\n            const on_error = async (e) => {\n                if (!this.form.value.id) {\n                    await removeEvent(\n                        result.id,\n                        spaces.length\n                            ? {\n                                  calendar:\n                                      this.form.value.host ||\n                                      currentUser()?.email,\n                                  system_id: spaces[0].id,\n                              }\n                            : {}\n                    ).toPromise();\n                    notifyError('Unable to book the selected assets.');\n                }\n                this._loading.next('');\n                throw e;\n            };\n            if (visitors.length) {\n                await createBookingsForEvent(\n                    result,\n                    'visitor',\n                    visitors as any\n                ).catch(on_error);\n            }\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        all_day,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                        reset_state: changed_times,\n                    },\n                    assets\n                ).catch(on_error);\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event, query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        if (this.has_calendar) {\n            const response = await querySpaceAvailability(\n                spaces.map(({ id }) => id),\n                date,\n                duration,\n                this?.event?.resources[0]?.id ||\n                    this.event?.system?.id ||\n                    this.event?.id ||\n                    undefined,\n                undefined,\n                [this.event?.date, this.event?.duration]\n            ).toPromise();\n            if (!response.every((_) => _)) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import {\n    Identity,\n    LinkedBooking,\n    removeEmptyFields,\n    unique,\n} from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\nimport { AssetRequest } from 'libs/assets/src/lib/asset-request.class';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n    /** Setup in seconds */\n    public readonly setup_time?: number;\n    /** Breakdown in seconds */\n    public readonly breakdown_time?: number;\n    /** Bookings that a linked to this event */\n    public readonly linked_bookings: LinkedBooking[];\n    /** Whether changes to this event should update the parent event */\n    public readonly update_master: boolean;\n    /**  */\n    public readonly date_end: number;\n\n    public readonly is_system_event: boolean;\n\n    public get is_all_day() {\n        return this.all_day || this.duration >= 12 * 60;\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.event_id || data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.date_end = this.event_end * 1000 || this.date_end;\n        this.duration = differenceInMinutes(this.date_end, this.date);\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n            (this as any).duration = Math.max(24 * 60 - 1, this.duration - 1);\n            (this as any).date_end = endOfDay(\n                addMinutes(this.date, this.duration).valueOf() - 1\n            ).getTime();\n        }\n        const matches = this.body.match(/\\[ID\\|([^\\]]+)\\]/);\n        const associated_id = matches ? matches[1] : null;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id =\n            associated_id || data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        if (!system && data.system_id) {\n            this.system = { id: data.system_id } as any;\n        }\n        this.old_system = data.old_system || data.system;\n        this.is_system_event = this.body.includes('main_event_id');\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.setup_time = data.setup_time || 0;\n        this.breakdown_time = data.breakdown_time || 0;\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        const simple_event = {\n            date: this.date,\n            duration: this.duration,\n            date_end: this.date_end,\n            all_day: this.all_day,\n            space: this.space,\n            organiser: this.organiser,\n        };\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) => new CateringOrder({ ...i, event: simple_event } as any)\n        );\n        this.extension_data.assets = (this.extension_data.assets || []).map(\n            (i) => new AssetRequest({ ...i, event: simple_event } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get valid_catering() {\n        return (this.ext('catering') || []).filter(\n            (order) => order.deliver_at < this.date_end\n        );\n    }\n\n    public get valid_assets() {\n        const list = this.linked_bookings;\n        return (this.ext('assets') || [])\n            .filter((request) => request.deliver_at < this.date_end)\n            .map((request) => {\n                const booking = list.find((_) => _.asset_id === request.id);\n                if (booking) {\n                    (request as any).state = booking.approved\n                        ? 'approved'\n                        : booking.rejected\n                        ? 'rejected'\n                        : 'pending';\n                }\n                return request;\n            });\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const date = this.all_day ? startOfDay(this.date) : this.date;\n        const end = this.all_day\n            ? endOfDay(this.date_end).valueOf() + 1\n            : this.date_end;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = getUnixTime(end);\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            obj.setup_time = 0;\n            obj.breakdown_time = 0;\n            obj.extension_data.all_day_date = format(date, 'yyyy-MM-dd');\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.extension_data.assets = obj.extension_data.assets.map(\n            (i) => new AssetRequest({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport {\n    queryCalendarAvailability,\n    querySpaceFreeBusy,\n} from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n    strict?: 'limit' | 'all' | 'notify';\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id\n        ? updateEvent(\n              data.update_master ? data.recurring_event_id || data.id : data.id,\n              { ...data, id: data.recurring_event_id || data.id },\n              q\n          )\n        : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Get the extension data for an event\n * @param id ID of the event\n * @param system_id  ID of the system associated with the event\n * @param query Extra query parameters to pass to the API request\n */\nexport function getEventMetadata(\n    id: string,\n    system_id: string,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type?: any,\n    ignore_period: [number, number] = [0, 0]\n) {\n    const end = addMinutes(start, duration).valueOf();\n    return combineLatest([\n        queryCalendarAvailability({\n            system_ids: id_list.join(),\n            period_start: getUnixTime(start),\n            period_end: getUnixTime(end),\n        }),\n        ignore && id_list.includes(ignore)\n            ? querySpaceFreeBusy({\n                  period_start: getUnixTime(start),\n                  period_end: getUnixTime(end),\n                  system_ids: ignore,\n              })\n            : of([]),\n    ]).pipe(\n        map(([spaces, ignore_check]) => {\n            const short_list = id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            );\n            if (\n                ignore_check.length &&\n                ignore_check[0].id === ignore &&\n                id_list.includes(ignore) &&\n                ignore_check[0].inUseAt(\n                    ignore_period[0] || start,\n                    ignore_period[1] || duration\n                )\n            ) {\n                short_list[id_list.indexOf(ignore)] = true;\n            }\n            return short_list;\n        })\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { RecurrenceDetails, TimeBlock, TimePeriod } from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 29\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup_time || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown_time || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 29\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 29\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent, updateEventMetadata } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                    [custom_options]=\"[5, 10]\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-base-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.setup_time || 0),\n        breakdown: new FormControl(this._event.breakdown_time || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        let event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => null);\n        if (!event) {\n            event = await updateEventMetadata(this._event.id, query.system_id, {\n                ...this._event.extension_data,\n                setup_time: this.form.value.setup,\n                breakdown_time: this.form.value.breakdown,\n                setup: this.form.value.setup,\n                breakdown: this.form.value.breakdown,\n            } as any)\n                .toPromise()\n                .catch((_) => null);\n        }\n        if (!event) {\n            this.loading = false;\n            this._dialog_ref.disableClose = false;\n            notifyError(`Error updating setup and breakdown.`);\n            return;\n        }\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n    startOfDay,\n} from 'date-fns';\nimport {\n    SettingsService,\n    currentUser,\n    timePeriodsIntersect,\n    unique,\n} from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(\n    event: CalendarEvent = new CalendarEvent(),\n    settings?: SettingsService\n) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        ical_uid: new FormControl(event.ical_uid),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        date_end: new FormControl(event.date_end),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(event.extension_data?.catering as any),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup_time: new FormControl(event.setup_time || 0),\n        breakdown_time: new FormControl(event.breakdown_time || 0),\n        assets: new FormControl(event.extension_data?.assets),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    const setCateringTime = () => {\n        if (!form.value.catering?.length || !form.getRawValue().date) return;\n        form.patchValue(\n            {\n                catering: form.value.catering.map((order: any) => ({\n                    ...order,\n                    event: {\n                        date: form.value.all_day\n                            ? startOfDay(form.getRawValue().date)\n                            : form.getRawValue().date,\n                        duration: form.value.all_day\n                            ? 24 * 60\n                            : form.value.duration,\n                    },\n                })),\n            },\n            { emitEvent: false }\n        );\n    };\n    form.valueChanges.subscribe((v) => {\n        if (form.getRawValue().date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (v.date || v.duration || v.all_day) setCateringTime();\n    });\n    form.controls.duration.valueChanges.subscribe((duration) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(form.getRawValue().date, duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        setCateringTime();\n    });\n    form.controls.date_end.valueChanges.subscribe((date) => {\n        if (date < addMinutes(form.getRawValue().date, 30).valueOf()) {\n            form.patchValue(\n                {\n                    date_end: roundToNearestMinutes(\n                        addMinutes(form.getRawValue().date, 30),\n                        { nearestTo: 5, roundingMethod: 'ceil' }\n                    ).valueOf(),\n                    duration: 30,\n                },\n                { emitEvent: false }\n            );\n        } else {\n            form.patchValue(\n                {\n                    duration: differenceInMinutes(\n                        date,\n                        form.getRawValue().date\n                    ),\n                },\n                { emitEvent: false }\n            );\n        }\n        setCateringTime();\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        form.patchValue(\n            {\n                date_end: roundToNearestMinutes(\n                    addMinutes(date, form.value.duration),\n                    { nearestTo: 5, roundingMethod: 'ceil' }\n                ).valueOf(),\n            },\n            { emitEvent: false }\n        );\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n        setCateringTime();\n    });\n    form.controls.catering.valueChanges.subscribe((_) => {\n        const catering = form.getRawValue().catering || [];\n        if (\n            catering?.length &&\n            (settings?.get('app.events.catering_notes_required') ||\n                settings.value('require_catering_notes'))\n        ) {\n            form.get('catering_notes')?.setValidators([Validators.required]);\n            form.get('catering_notes').patchValue(form.value.catering_notes);\n        } else {\n            form.get('catering_notes')?.clearValidators();\n            form.get('catering_notes').setErrors(null);\n        }\n        form.updateValueAndValidity();\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n                checked_in: booking.checked_in,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\nexport * from './lib/explore-lockers.service';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `desk_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.booking_rules,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(\n            async ([\n                desks,\n                in_use,\n                presence,\n                checked_in,\n                signs,\n                restrictions,\n            ]) => {\n                this._statuses = {};\n                const level = await this._state.level.pipe(take(1)).toPromise();\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const has_presence = presence.some((i) => id === i);\n                    const has_signs = signs.some((i) => id === i);\n                    const is_checked_in =\n                        checked_in.some((i) => id === i) ||\n                        (is_used &&\n                            this._settings.get(`app.desk.auto_checkin`));\n                    const is_restricted = rulesForResource(\n                        {\n                            date: Date.now(),\n                            duration: 60,\n                            host: currentUser(),\n                            resource: {\n                                id,\n                                zones: [level.parent_id, level.id],\n                            },\n                        },\n                        restrictions\n                    )?.hidden;\n                    this._statuses[id] =\n                        bookable && !is_restricted\n                            ? !is_used && !has_presence && !is_checked_in\n                                ? has_signs\n                                    ? 'signs-of-life'\n                                    : 'free'\n                                : !has_presence && !is_checked_in\n                                ? 'pending'\n                                : 'busy'\n                            : 'not-bookable';\n                }\n                this.processDesks(desks);\n            }\n        )\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('booking_rules', this.booking_rules.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-info bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-neutral h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\nimport { InjectMapApiService } from 'libs/common/src/lib/inject-map-api.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n\n        <indoor-maps\n            *ngIf=\"use_mapsindoors$ | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></indoor-maps>\n        <explore-zoom-controls\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            class=\"absolute top-1/2 -translate-y-1/2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            *ngIf=\"!(use_mapsindoors$ | async)\"\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-base-100 border border-base-200 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"!hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-base-100 border border-base-200\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-base-200\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    public readonly use_mapsindoors$: Observable<boolean> =\n        this._maps.use_mapspeople$;\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe,\n        private _maps: InjectMapApiService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin, Observable } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport { StaffUser } from '@placeos/users';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n    zone_id?: string;\n}\n\nexport interface ParkingOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ParkingOptions>({});\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfMinute(_.date || Date.now())),\n                period_end: getUnixTime(endOfMinute(_.date || Date.now())),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(\n                    addDays(endOfDay(_.date || Date.now()), 6)\n                ),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces: Observable<ParkingSpace[]> = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    public readonly active_spaces = combineLatest([\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([spaces, level]) => spaces.filter((_) => _.zone_id === level.id))\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.active_spaces,\n    ]).pipe(\n        map(([events, spaces]) =>\n            spaces.filter(\n                (_) =>\n                    !events.find((e) => e.asset_id === _.id) && !_.assigned_to\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.parking.enable_maps') !== false,\n        });\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const actions = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        const options = this._options.getValue();\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (!can_book) continue;\n            labels.push({\n                zoom_level: 2,\n                location: `${space.map_id}`,\n                content: `${space.name}\\nFree`,\n            });\n            const book_fn = async () => {\n                if (status !== 'free') {\n                    return notifyError(\n                        `${\n                            space.name || 'Parking Space'\n                        } is unavailable at this time.`\n                    );\n                }\n                if (\n                    space.groups?.length &&\n                    !space.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${space.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'parking' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    space as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                const lvl = this._state.active_level;\n                this._bookings.form.patchValue({\n                    resources: [space],\n                    asset_id: space.id,\n                    asset_name: space.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: space?.map_id || space?.id,\n                    description: space.name,\n                    user,\n                    user_email,\n                    booking_type: 'parking',\n                    zones: space.zone\n                        ? [space.zone?.parent_id, space.zone?.id]\n                        : [lvl.parent_id, lvl.id],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book parking space ${\n                            space.name || space.id\n                        }. ${e.message || e.error || e}`\n                    );\n                    throw e;\n                });\n                notifySuccess(\n                    `Successfully booked parking space ${\n                        space.name || space.id\n                    }`\n                );\n            };\n            actions.push({\n                id: space?.map_id || space?.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'parking',\n            options.enable_booking ? actions : []\n        );\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: any = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.parking.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.parking.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-base-100 m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-base-300 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { SettingsService, flatten, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _role_assigned_contacts = this._org.active_building.pipe(\n        filter((bld) => !!bld),\n        switchMap((bld) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any)?.contacts || []),\n        shareReplay(1)\n    );\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._role_assigned_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, roled_contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = [\n                ...spaces\n                    .filter(\n                        (_) =>\n                            _.email.toLowerCase().includes(search) ||\n                            _.name.toLowerCase().includes(search) ||\n                            _.display_name.toLowerCase().includes(search)\n                    )\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'space',\n                        name: s.display_name || s.name,\n                        description: `Capacity: ${s.capacity} `,\n                    })),\n                ...flatten(\n                    roled_contacts.map((u) =>\n                        (u as any).roles.map(\n                            (role) =>\n                                ({\n                                    id: u.email,\n                                    type: role || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                    )\n                ).filter(\n                    (_) =>\n                        _.name.toLowerCase().includes(search) ||\n                        _.description.toLowerCase().includes(search) ||\n                        _.type.toLowerCase().includes(search)\n                ),\n                ...contacts\n                    .map(\n                        (u) =>\n                            ({\n                                id: u.email,\n                                type: (u as any).type || 'contact',\n                                is_role: true,\n                                name: u.name,\n                                description: u.email,\n                            } as any)\n                    )\n                    .filter(\n                        (_) =>\n                            _.name.toLowerCase().includes(search) ||\n                            _.description.toLowerCase().includes(search) ||\n                            _.type.toLowerCase().includes(search)\n                    ),\n                ...users.map((u) => ({\n                    id: u.email,\n                    type: 'user',\n                    name: u.name,\n                    description: u.email,\n                })),\n                ...features\n                    .filter((_) => _.name.toLowerCase().includes(search))\n                    .map((s) => ({\n                        id: s.id,\n                        type: 'feature',\n                        name: s.name,\n                        description: '',\n                        zone: (s as any).zone?.id,\n                    })),\n            ];\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-base-100 rounded-lg border border-base-200 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-base-100 border border-base-200\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { filter, first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { combineLatest } from 'rxjs';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n    area_count_key: string;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _count_key: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = combineLatest([\n        this._org.active_building,\n        this._state.level,\n    ]).pipe(\n        filter(([bld, lvl]) => !!bld && !!lvl),\n        map(([_, lvl]) => {\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const {\n                    capacity,\n                    hide_label,\n                    label_location,\n                    draw_polygon,\n                    area_count_key,\n                } = area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._count_key[area.id] = area_count_key || '';\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n\n        for (const zone of value) {\n            const count =\n                zone[\n                    this._count_key[zone.area_id] ||\n                        this._settings.get('app.explore.area_count_key') ||\n                        'count'\n                ];\n            const filled = count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-base-100\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-base-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-base-200 hover:border-base-200 w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    BookingRuleset,\n    SettingsService,\n    getInvalidFields,\n    notifyError,\n    randomString,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { queryZones } from '@placeos/ts-client';\nimport { endOfDay, set, startOfDay } from 'date-fns';\nimport { of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'booking-rules-form',\n    template: `\n        <div class=\"flex flex-col space-y-2\" [formGroup]=\"form\">\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"zone\">Zone<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select name=\"zone\" formControlName=\"zone\">\n                            <mat-option value=\"*\">Any Zone</mat-option>\n                            <mat-option\n                                *ngFor=\"let zone of building_zones | async\"\n                                [value]=\"zone.id\"\n                            >\n                                {{ zone.display_name || zone.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>A valid zone is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"name\">Name<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            formControlName=\"name\"\n                            placeholder=\"Ruleset Name\"\n                        />\n                        <mat-error>A valid name is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\" formGroupName=\"rules\">\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"hidden\"\n                        formControlName=\"hidden\"\n                        matTooltip=\"Prevent user from booking the resource if the conditions match\"\n                    >\n                        Prevent Bookings\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <mat-checkbox\n                        name=\"auto_approve\"\n                        formControlName=\"auto_approve\"\n                        *ngIf=\"!form.value.rules.hidden\"\n                        matTooltip=\"Whether resource should be auto-approved when booking if the conditions match\"\n                    >\n                        Auto Approve Bookings\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div class=\"flex flex-col\">\n                <label for=\"zone\">Rule Conditions:</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select\n                        name=\"zone\"\n                        multiple\n                        [(ngModel)]=\"available_conditions\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"No Conditions. Match all resources in zone\"\n                    >\n                        <mat-option value=\"groups\">Groups</mat-option>\n                        <mat-option value=\"locations\">Locations</mat-option>\n                        <mat-option value=\"min_length\">\n                            Minimum Length\n                        </mat-option>\n                        <mat-option value=\"max_length\">\n                            Maximum Length\n                        </mat-option>\n                        <mat-option value=\"is_before\">\n                            Is Within Days\n                        </mat-option>\n                        <mat-option value=\"is_after\">\n                            Is After Days\n                        </mat-option>\n                        <mat-option value=\"is_between\">\n                            Is Between Hours\n                        </mat-option>\n                        <mat-option value=\"is_period\">\n                            Between Dates\n                        </mat-option>\n                        <mat-option value=\"resource_ids\">Resources</mat-option>\n                    </mat-select>\n                    <mat-error>A valid zone is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('groups')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"groups\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} Booking\n                    for Groups:</label\n                >\n                <item-list-field\n                    name=\"groups\"\n                    formControlName=\"groups\"\n                    placeholder=\"User groups\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('locations')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"locations\">Locations:</label>\n                <item-list-field\n                    name=\"locations\"\n                    formControlName=\"locations\"\n                    placeholder=\"Locations\"\n                ></item-list-field>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"\n                    available_conditions.includes('min_length') ||\n                    available_conditions.includes('max_length')\n                \"\n                formGroupName=\"conditions\"\n            >\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('min_length')\"\n                >\n                    <label for=\"min_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a minimum length of:</label\n                    >\n                    <a-duration-field\n                        name=\"min_length\"\n                        [min]=\"15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"min_length\"\n                    ></a-duration-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1\"\n                    *ngIf=\"available_conditions.includes('max_length')\"\n                >\n                    <label for=\"max_length\"\n                        >{{\n                            form.value.rules.hidden ? 'Prevent' : 'Allow'\n                        }}\n                        booking with a maximum length up to:</label\n                    >\n                    <a-duration-field\n                        name=\"max_length\"\n                        [min]=\"form.value.conditions.min_length || 15\"\n                        [max]=\"1440\"\n                        [step]=\"15\"\n                        formControlName=\"max_length\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_before')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-before\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    before:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-before\" formControlName=\"is_before\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_after')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    after:</label\n                >\n                <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                    <mat-select name=\"is-after\" formControlName=\"is_after\">\n                        <mat-option\n                            *ngFor=\"let time of duration_blocks\"\n                            [value]=\"time\"\n                        >\n                            {{ time }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error>A valid time is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_period')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is-after\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between dates:</label\n                >\n                <div class=\"flex items-center space-x-2\">\n                    <a-date-field\n                        class=\"flex-1\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                $event,\n                                form.value.conditions.is_period[1]\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                    <a-date-field\n                        class=\"flex-1\"\n                        [from]=\"form.value.conditions.is_period[0]\"\n                        [ngModel]=\"form.value.conditions.is_period[0]\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        (ngModelChange)=\"\n                            setIsPeriod(\n                                form.value.conditions.is_period[0],\n                                $event\n                            )\n                        \"\n                    >\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('is_between')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"is_between\"\n                    >{{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    between:</label\n                >\n                <div class=\"flex items-center space-x-2 w-full\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.conditions.is_between[0] || 6\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    $event,\n                                    form.value.conditions.is_between[1]\n                                )\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let time of time_blocks\"\n                                [value]=\"time.id\"\n                            >\n                                {{ time.value | date: time_format }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-select\n                            name=\"end-time\"\n                            [ngModel]=\"\n                                form.value.conditions.is_between[1] || 18\n                            \"\n                            (ngModelChange)=\"\n                                setIsBetween(\n                                    form.value.conditions.is_between[0],\n                                    $event\n                                )\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <ng-container *ngFor=\"let time of time_blocks\">\n                                <mat-option\n                                    [value]=\"time.id\"\n                                    *ngIf=\"\n                                        time.id >\n                                        (form.value.conditions.is_between[0] ||\n                                            6)\n                                    \"\n                                >\n                                    {{ time.value | date: time_format }}\n                                </mat-option>\n                            </ng-container>\n                        </mat-select>\n                        <mat-error>A valid end time is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col\"\n                *ngIf=\"available_conditions.includes('resource_ids')\"\n                formGroupName=\"conditions\"\n            >\n                <label for=\"resource_ids\">\n                    {{ form.value.rules.hidden ? 'Prevent' : 'Allow' }} booking\n                    these resources:\n                </label>\n                <item-list-field\n                    name=\"resource_ids\"\n                    formControlName=\"resource_ids\"\n                    placeholder=\"Resource IDs\"\n                ></item-list-field>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class BookingRulesFormComponent {\n    @Input() public ruleset?: BookingRuleset;\n    @Input() public save = false;\n    @Output() public rulesetChange = new EventEmitter<BookingRuleset>();\n\n    public available_conditions: string[] = [];\n\n    public readonly building_zones = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((bld) =>\n            queryZones({ parent_id: bld.id }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((res) => res.data),\n        shareReplay(1)\n    );\n\n    public readonly time_blocks = new Array(24 * 4).fill(0).map((_, idx) => {\n        const hour = Math.floor(idx / 4);\n        const minutes = (idx % 4) * 15;\n        return {\n            id: hour + minutes / 60,\n            value: set(new Date(), { hours: hour, minutes }),\n        };\n    });\n\n    public duration_blocks = [\n        '1 Day',\n        '2 Days',\n        '3 Days',\n        '4 Days',\n        '5 Days',\n        '1 Week',\n        '2 Weeks',\n        '3 Weeks',\n        '4 Weeks',\n        '1 Month',\n        '2 Months',\n        '3 Months',\n        '4 Months',\n        '5 Months',\n        '6 Months',\n    ];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(`ruleset-${randomString(8)}`),\n        zone: new FormControl('*', Validators.required),\n        name: new FormControl('', Validators.required),\n        rules: new FormGroup({\n            auto_approve: new FormControl(false),\n            hidden: new FormControl(false),\n        }),\n        conditions: new FormGroup({\n            groups: new FormControl([]),\n            locations: new FormControl([]),\n            min_length: new FormControl(0),\n            max_length: new FormControl(24 * 60),\n            is_before: new FormControl('1 Week'),\n            is_after: new FormControl('1 Day'),\n            is_between: new FormControl([6, 18]),\n            is_period: new FormControl([\n                startOfDay(Date.now()).valueOf(),\n                endOfDay(Date.now()).valueOf(),\n            ]),\n            resource_ids: new FormControl([]),\n        }),\n    });\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.ruleset && this.ruleset) {\n            this.available_conditions = Object.keys(\n                this.ruleset.conditions || {}\n            );\n            this.form.patchValue(this.ruleset);\n        }\n        if (\n            changes.save &&\n            this.save !== changes.save.previousValue &&\n            !changes.save.firstChange\n        ) {\n            this.post();\n        }\n    }\n\n    public setIsBetween(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start + 0.25;\n        this.form.patchValue({ conditions: { is_between: [start, end] } });\n    }\n\n    public setIsPeriod(start: number, end: number) {\n        if (!start || !end) return;\n        if (start > end) end = start;\n        this.form.patchValue({\n            conditions: {\n                is_period: [\n                    startOfDay(start).valueOf(),\n                    endOfDay(end).valueOf(),\n                ],\n            },\n        });\n    }\n\n    public post(): void {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const value = this.form.getRawValue();\n        const condition_keys = Object.keys(value.conditions);\n        for (const key of condition_keys) {\n            if (!this.available_conditions.includes(key)) {\n                delete value.conditions[key];\n            }\n        }\n        this.rulesetChange.emit(value as any);\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    forwardRef,\n    OnChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0].id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34].id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-base-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[2.25rem] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-base-100]=\"day.id !== active_date\"\n                    [class.!text-base-300]=\"!day.is_month\"\n                    [class.text-secondary-content]=\"day.id === active_date\"\n                    [class.text-base-content]=\"day.id !== active_date\"\n                    [class.bg-secondary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-secondary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        if (new_value < this.from || new_value >= this.to) return;\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from 'libs/components/src/lib/custom-tooltip.component';\nimport { addYears, endOfDay, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-neutral rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: (short ? 'MMM d, yyyy' : 'MMMM d, yyyy') }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"has_error\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-base-100 px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"until\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public from_date: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public to_date: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    @Input() public short = false;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this.from_date) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this.to_date) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\nimport { BookingRulesFormComponent } from './booking-rules-form.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n    BookingRulesFormComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    AsyncHandler,\n    SettingsService,\n    UploadDetails,\n    notifyInfo,\n    unique,\n    uploadFile,\n} from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    class=\"relative rounded border-2 border-base-200 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-neutral:bg-base-100/10 cursor-pointer\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                >\n                    <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                    <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                    <input\n                        type=\"file\"\n                        class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                        (change)=\"uploadImages($event)\"\n                    />\n                </div>\n            </ng-container>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 min-h-full min-w-full\"\n                />\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-neutral text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    *ngFor=\"let item of uploads | async; let i = index\"\n                    class=\"bg-center bg-cover h-32 w-36 rounded border bg-neutral border-base-200 flex items-center justify-center flex-shrink-0\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                    [matTooltip]=\"item.error\"\n                    (click)=\"retryUpload(item)\"\n                >\n                    <mat-progress-spinner\n                        *ngIf=\"!item.error\"\n                        [value]=\"item.progress\"\n                        [diameter]=\"64\"\n                        mode=\"determinate\"\n                    ></mat-progress-spinner>\n                    <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                        >warning</app-icon\n                    >\n                    <div\n                        overlay\n                        *ngIf=\"item.error\"\n                        class=\"absolute inset-0 hover:bg-neutral hover:bg-opacity-50 text-white flex items-center justify-center\"\n                    >\n                        <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                    </div>\n                </div>\n            </ng-container>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-base-100\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    public get uploads_allowed() {\n        return this._settings.get('app.has_uploads');\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        if (!this.uploads_allowed) return;\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            const force_state = this._settings.get('app.force_upload_state');\n            if (force_state) {\n                uploadFile(\n                    file,\n                    !this._settings.get('app.private_uploads'),\n                    this._settings.get('app.uploads_permissions_level') ||\n                        'none'\n                ).subscribe(update_fn, update_fn, () => {\n                    this._updateUploadHistory();\n                });\n            } else {\n                const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                    data: { file },\n                });\n                ref.afterClosed().subscribe((details) => {\n                    if (!details) return;\n                    uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).subscribe(update_fn, update_fn, () => {\n                        this._updateUploadHistory();\n                    });\n                });\n            }\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if (value.includes(',')) {\n        const list = value.split(',');\n        for (const item of list) {\n            if ((item || '').trim()) {\n                item_list.push(item.trim());\n                control.setValue(item_list);\n            }\n        }\n    } else {\n        if ((value || '').trim()) {\n            item_list.push(value.trim());\n            control.setValue(item_list);\n        }\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-base-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    @Input() multiday = false;\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n                multiday: this.multiday,\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n\n                        >Issue Description<span>*</span></label\n                    >\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images } =\n                this.form.value;\n            await mod.execute('send_mail', [\n                this.support_email,\n                `Support Ticket from Workplace Application`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                    {{ extra_info_fn(option.date) }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    @Input() public extra_info_fn = (t?: number) => '';\n    /** Prevent times before */\n    @Input() public from: number = startOfDay(Date.now()).valueOf();\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date(Math.max(this.from, Date.now()));\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = new Date(now);\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-base-200 hover:bg-base-200 cursor-pointer p-2 rounded border border-base-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200 relative z-50\"\n                [class.!bg-error]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-base-200 flex flex-col items-center justify-center rounded hover:bg-neutral cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-base-200 rounded bg-base-100 hover:bg-base-200\"\n                        [class.!bg-error]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-warning]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.bookings.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (!new_value) return;\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        const user = new_value as any;\n        if (!('name' in user) && !('email' in user)) return;\n        this.active_user = user;\n        if (this._onChange) this._onChange(user);\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        +_.query_params.period_start,\n                        +_.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    //MapsIndoors mock spaces\n    {\n        name: 'Boardroom 1',\n        map_id: '12beee0d06a1475293aadd9f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '12beee0d06a1475293aadd9f',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 2',\n        map_id: 'dd2dec8c291a4fb7995bff3c',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: 'dd2dec8c291a4fb7995bff3c',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 3',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 4',\n        map_id: '696971dbc50a4c66a7f5356a',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 5',\n        map_id: '58cc74c5dd4249148674a191',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n        level: {\n            id: 'bld-01_lvl-1',\n            parent_id: 'bld-01',\n            name: 'Level 1',\n            display_name: 'Level 1',\n            capacity: 5,\n            number: '',\n            map_id: '23bc6cf392c842d69abc71bf',\n            tags: [''],\n            setting: {},\n            images: [''],\n            locations: { id: '', name: '' },\n        },\n    },\n    {\n        name: 'Boardroom 6',\n        map_id: 'a4c02df953f34e5dad26c95f',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Boardroom 7',\n        map_id: '23bc6cf392c842d69abc71bf',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 8',\n        map_id: '21a49f92c5924d2f9b39934b',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 9',\n        map_id: '0d3f964712ec4d36b9776449',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 10',\n        map_id: '7c01d7766a38488b8813347c',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 11',\n        map_id: '9e9efbe702bb4d91a2615c06',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Boardroom 12',\n        map_id: '66161113fff74d8780daeb2e',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) =>\n    generateMockSpace({\n        ...d,\n        features: randomSpaceFeatures(),\n        images: [\n            'https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg',\n        ],\n    })\n);\n","import { flatten, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_BUILDINGS } from './zone.data';\nimport { getUnixTime } from 'date-fns';\n\nexport const SURVEY_MOCKS = registerMocks();\n\nconst MOCK_SURVEYS = new Array(20).fill(0).map(() => createMockSurvey());\nconst MOCK_SURVEY_QUESTIONS = new Array(20)\n    .fill(0)\n    .map(() => createMockSurveyQuestion());\nconst MOCK_SURVEY_ANSWERS = flatten(\n    MOCK_SURVEYS.map((_) =>\n        new Array(20).fill(0).map(() => createMockSurveyAnswer(_))\n    )\n);\n\nfunction createMockSurvey(survey?: any) {\n    const id = predictableRandomInt(999_999, 0);\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length, 0)];\n    return {\n        id,\n        title: `Survey ${id}`,\n        description: '',\n        trigger: 'none',\n        pages: [],\n        zone_id: bld?.id,\n        building_id: bld?.id,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n        ...(survey || {}),\n    };\n}\n\nfunction createMockSurveyAnswer(survey: any) {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        survey_id: survey.id,\n        question_id: predictableRandomInt(999_999, 0),\n        answer_json: predictableRandomInt(10, 0),\n        type: 'rating',\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction createMockSurveyQuestion() {\n    const id = predictableRandomInt(999_999, 0);\n    return {\n        id,\n        type: 'text',\n        title: `Question ${id}`,\n        options: {},\n        required: false,\n        choices: {},\n        tags: [],\n        deleted: false,\n        created_at: getUnixTime(Date.now()),\n        updated_at: getUnixTime(Date.now()),\n    };\n}\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.building_id\n                ? MOCK_SURVEYS.filter(\n                      (_) => _.zone_id === request.query_params.building_id\n                  )\n                : MOCK_SURVEYS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/answers',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.survey_id\n                ? MOCK_SURVEY_ANSWERS.filter(\n                      (_) => _.survey_id === request.query_params.survey_id\n                  )\n                : MOCK_SURVEY_ANSWERS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/questions',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.id\n                ? MOCK_SURVEY_QUESTIONS.filter(\n                      (_) => _.id === +request.query_params.id\n                  )\n                : MOCK_SURVEY_QUESTIONS;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/surveys/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            console.log('Surveys:', MOCK_SURVEYS);\n            const survey = MOCK_SURVEYS.find(\n                (_) => _.id === +request.route_params.id\n            );\n            if (!survey) throw { status: 404 };\n            return survey;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n    sys_admin: true,\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data:\n        predictableRandomInt(99999) % 3 === 0\n            ? {\n                  vaccination_proof: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg',\n                  },\n                  id_data: {\n                      url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg',\n                  },\n              }\n            : {},\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: ['org'],\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: ['building'],\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nexport const MOCK_ZONES = [];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: ['level'],\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce(\n    (p, c) => p.concat(c),\n    [\n        // {\n        //     id: 'test',\n        //     parent_id: 'bld-01',\n        //     name: 'Test',\n        //     map_id: 'assets/maps/test.svg',\n        // },\n        {\n            id: 'level-p1',\n            parent_id: 'bld-01',\n            name: 'Level P1',\n            tags: ['level', 'parking'],\n            map_id: 'assets/maps/level_P1.svg',\n        },\n    ]\n);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport {\n    MOCK_ORGS,\n    MOCK_LEVELS,\n    MOCK_BUILDINGS,\n    MOCK_ZONES,\n} from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            } else if (request.query_params.tags) {\n                return MOCK_ZONES.filter((_) =>\n                    _.tags.includes(request.query_params.tags)\n                );\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date.valueOf(),\n        date.valueOf(),\n        subSeconds(start, mod.pending_before).valueOf(),\n        addSeconds(start, mod.pending_period).valueOf()\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","import { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\nimport { SURVEY_MOCKS } from './lib/api/surveys.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS,\n    SURVEY_MOCKS,\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string; name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number = (\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || ''\n        ).substring(0, 2);\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) this._updateSettingOverrides();\n        });\n        this.active_region.subscribe((region) => {\n            if (region) this._updateSettingOverrides();\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            let buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            buildings = buildings.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            let levels = this._levels.getValue().filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            levels = levels.sort((a, b) =>\n                (a.name || '').localeCompare(b.name || '')\n            );\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n        this._updateSettingOverrides();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        let levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels = levels.sort((a, b) =>\n            (a.name || '').localeCompare(b.name || '')\n        );\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this.building = this.buildings.find((bld) => bld.id === id);\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-base-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-base-200 flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-base-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { currentUser } from 'libs/common/src/lib/user-state';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\nexport * from './lib/space.pipe';\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [multiday]=\"multiday\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-base-100 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n    public readonly multiday = !!this._data.multiday;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: Space[];\n            options: Partial<EventFlowOptions>;\n            multiday?: boolean;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-neutral\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get all_day() {\n        return this._event_form.form.value.all_day;\n    }\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay, set, startOfDay } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[8rem]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[8rem] relative\" *ngIf=\"multiday\">\n                        <label for=\"date\">\n                            {{ 'FORM.END_DATE' | translate }}<span>*</span>\n                        </label>\n                        <a-date-field\n                            name=\"date\"\n                            [ngModel]=\"form.getRawValue().date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"start_date\"\n                            [to]=\"end_date\"\n                            [short]=\"true\"\n                        >\n                            {{ 'FORM.DATE_ERROR' | translate }}\n                        </a-date-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.getRawValue().date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"end-time\"\n                            [ngModel]=\"form.value.date_end\"\n                            (ngModelChange)=\"\n                                form.patchValue({ date_end: $event })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [from]=\"form?.getRawValue()?.date\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\" *ngIf=\"!multiday\">\n                        <label for=\"end-time\">\n                            {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.getRawValue()?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    @Input() public multiday: boolean;\n    public can_close = false;\n    public readonly options = this._event_form.options;\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get start_date() {\n        return startOfDay(this.form.getRawValue().date).valueOf();\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (\n                    levels.length &&\n                    !levels.find((_) => _.id === this.level?.id)\n                ) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_ids: [this.level.id] });\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n\n    public inUseAt(start: number, duration: number): boolean {\n        const end = start + duration * 60 * 1000;\n        return (\n            this.availability.filter(\n                (i) =>\n                    i.date == start &&\n                    i.date + i.duration * 60 * 1000 == end &&\n                    i.status !== 'free'\n            ).length > 0\n        );\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-base-200 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n        this.extension_data.event = (data as any).event_metadata;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/^\\+?(\\d[\\d\\s\\-\\(\\)]{5,13}\\d)$/)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-base-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-base-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-base-200 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-base-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-base-100 flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}