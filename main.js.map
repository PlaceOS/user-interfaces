{"version":3,"file":"main.js","mappings":"sOACA,IAAAA,EAAAC,EAAA,OACAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAJ,EAAA,OACAK,EAAAL,EAAA,OAIAM,EAAAN,EAAA,OACAO,EAAAP,EAAA,OACAQ,EAAAR,EAAA,OACAS,EAAAT,EAAA,OACAU,EAAAV,EAAA,kBAEMW,YAAiB,CACnB,CAAEC,KAAM,eAAgBC,UAAWR,EAAAS,uBACnC,CAAEF,KAAM,MAAOC,UAAWP,EAAAS,mBAC1B,CACIH,KAAM,GACNI,YAAa,CAACX,EAAAY,qBACdC,QAAS,CAACb,EAAAY,qBACVE,SAAU,CACN,CACIP,KAAM,UACNC,UAAWX,EAAAkB,sBAEf,CACIR,KAAM,OACNO,SAAU,CACN,CAAEP,KAAM,SAAUC,UAAWX,EAAAkB,sBAC7B,CAAER,KAAM,iBAAkBC,UAAWV,EAAAkB,2BACrC,CAAET,KAAM,UAAWC,UAAWJ,EAAAa,yBAC9B,CAAEV,KAAM,kBAAmBC,UAAWH,EAAAa,gCACtC,CAAEX,KAAM,QAASC,UAAWN,EAAAiB,sBAC5B,CAAEZ,KAAM,gBAAiBC,UAAWL,EAAAiB,+BAG5C,CACIb,KAAM,gBACNC,UAAWZ,EAAAyB,oBAEf,CACId,KAAM,kBACNC,UAAWV,EAAAkB,2BAEf,CACIT,KAAM,WACNC,UAAWT,EAAAuB,2BAEf,CAAEf,KAAM,KAAMgB,UAAW,OAAQC,WAAY,mBAGrD,CAAEjB,KAAM,KAAMgB,UAAW,OAAQC,WAAY,mBAOpCC,mBAAgB,eAAhBC,EAAgBC,EAAA,SAAAD,IAAAE,EAAAC,KAAAH,EAAA,GAAhBA,SAAgB,mBAAAI,iBAAhBJ,EAAgB,EAAhBA,EAAgB,UAAAK,EAAA,iCAAhBL,MAAgB,UAAAK,EAAA,qCAHfrC,EAAAsC,aAAaC,QAAQ3B,EAAQ,CAAE4B,SAAS,IACxCxC,EAAAsC,gBAEDN,CAAgB,kNC5D7B/B,EAAA,OACAA,EAAA,OADA,IAEAwC,EAAAxC,EAAA,OACAyC,EAAAzC,EAAA,MAOA0C,EAAA1C,EAAA,OAaA2C,GADA3C,EAAA,MACAA,EAAA,QACA4C,EAAA5C,EAAA,OAEA6C,EAAA7C,EAAA,8FAea8B,eAAa,eAAbgB,EAAa,SAAAC,GAAAC,EAAAF,EAAAC,GAAA,IAUrBE,EAVqBC,EAAAC,EAAAL,GAGtB,SAAAA,EACYM,EACAC,EACAC,EACAC,GAAsB,IAAAC,EAAAvB,SAAAC,KAAAY,IAE9BU,EAAAN,EAAAO,KAAAvB,OALQkB,YACAI,EAAAH,OACAG,EAAAF,SACAE,EAAAD,YANZC,EAAAE,MAAQ,gBAAgBF,CASxB,CAACxB,SAAAc,EAAA,EAAAa,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACHC,eAAQC,KAAI,+BACZC,OAAOC,QAAQC,aAAe,SAACC,EAAYC,GAAkB,KAE7DvC,EAAAwC,KAAI,MAAO,SAAUrC,IAAK,EAE1BH,EAAAyC,iBAAgBjD,KAAKqB,WACrBoB,QAAQC,KAAI,uCAAwCJ,EAAAE,KAAA,EAC9CxC,KAAKkB,UAAUgC,YAAYC,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAClEb,eAAQC,KAAI,+CAAgDJ,EAAAE,KAAA,GACtDe,OAAOC,UAAS,QACtBf,eAAQC,KAAI,wBAAyBJ,EAAAE,KAAA,GAC/BxC,KAAKyD,kBAAiB,QACkB,GAA9ChB,QAAQC,KAAI,mCAAkC,EAC1CnC,EAAAmD,SAAO,CAAApB,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,SAAS3D,KAAK4D,qBAAmB,QAC5CnB,eAAQC,KAAI,uBAAwBJ,EAAAC,KAAA,GAEhCE,QAAQC,KAAI,gCACZ1C,KAAK6D,QACD,QACA,WACI,KAAM,+BACV,EACA,KAEE5B,EAAkB,QAATF,EAAGwB,cAAM,IAAAxB,GAAM,QAANC,EAAND,EAAQ+B,YAAI,IAAA9B,OAAN,EAANA,EAAc+B,iBAAgBzB,EAAAE,KAAA,GAC7BP,GAAa+B,QAAQC,UAAS,QACtB,GADrB/B,EAAGI,EAAA4B,KACTlE,KAAKmE,aAAa,SACbjC,EAAG,CAAAI,EAAAE,KAAA,cAAQ,gCAA+B,QAC/CC,eAAQC,KAAI,wBAAA0B,OAAyBlC,IACrCmC,eAAeC,QAAQ,eAAgBpC,GAAKI,EAAAE,KAAA,GACtCxC,KAAKyD,iBAAgB,GAAM,QACjCzD,KAAK4D,oBAAoBtB,EAAAE,KAAA,iBAEO,GAFPF,EAAAC,KAAA,GAAAD,EAAAiC,GAAAjC,EAAAkC,MAAA,IAEzB/B,QAAQC,KAAK+B,KAAKC,UAASpC,EAAAiC,KAChB,QADqBpC,EAC3BoB,cAAM,IAAApB,GAAS,QAATC,EAAND,EAAQwC,eAAO,IAAAvC,GAAfA,EAAiBwC,GAAE,CAAAtC,EAAAE,KAAA,SACpBC,eAAQC,KAAI,gCAAiCJ,EAAAE,KAAA,GACvCxC,KAAKyD,iBAAgB,GAAM,QAAAnB,EAAAE,KAAA,iBAAAF,SAAAE,KAAA,GAE3BxC,KAAK6E,0BAAyB,yBAAAvC,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,cAG/C,SAAA+E,IAAA,OAAAhE,EAAAiE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,kBAAAC,MAAA,eAAAwD,EAAAvD,EAEO,eAAAwD,EAAAnF,KAAsBoF,IAAKH,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GAAO,OAAArD,IAAAC,KAAA,SAAA0D,IAAA,IAAAC,EAAA,OAAA5D,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACtC,SAAAhC,EAAAkF,YAAWP,EAAKjE,UAAUyE,IAAI,oBACxBH,EAAWL,EAAKjE,UAAUyE,IAAI,aAAe,IAC1CC,YAAcR,EACvBI,EAASK,QAAU,QACnBL,EAASM,OACHX,EAAKjE,UAAUyE,IAAI,SACrBI,SAASC,OAAOC,SAAS,mBAAmBR,EAAAjD,KAAA,KAC1ChC,EAAA0F,YAAWV,GAAShB,MAAO,SAACnB,GAAC,OAAKZ,QAAQ0D,MAAM9C,EAAE,GAAC,wBAAAoC,EAAAX,OAAA,EAAAS,EAAA,EARnB3D,EAQmB,GAC5D,gBAAA6B,IAAA,OAAAyB,EAAAF,MAAAhF,KAAAiF,UAAA,EAXA,IAWA,CAAAxD,IAAA,oBAAAC,MAAA,eAAA0E,EAAAzE,EAAAC,IAAAC,KAEO,SAAAwE,IAAA,IAAAC,EAAAC,EAAAC,EAAAxG,KAAA,OAAA4B,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OACJ,SAAAhC,EAAAkG,YAAW1G,KAAKoB,QACXpB,KAAKkB,UAAUyE,IAAI,yBACpB3F,KAAK6D,QAAQ,gBAAiB,kBAAM2C,EAAKG,aAAa,EAAE,KAC3DF,EAAAjE,KAAA,EACKhC,EAAAoG,aAAazD,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,QAAOA,CAAC,IAAGC,YAAW,OACtDtD,KAAKmE,aAAa,kBAAe,EACjCzD,EAAAmG,sBAAkBrG,EAAAsG,iBAAa,EAC/BrG,EAAAsG,uBACI/G,KAAKkB,UAAUyE,IAAI,qCAAmC,IAAAvB,OACjC,QADiCkC,KAC9C9F,EAAAsG,sBAAa,IAAAR,GAAO,QAAPC,EAAbD,EAAeU,aAAK,IAAAT,OAAP,EAAbA,EAAsBU,MAAM,KAAK,KAC3C,wBAAAR,EAAA3B,OAAA,EAAAuB,EAAArG,KAAA,IACL,gBAAA4D,IAAA,OAAAwC,EAAApB,MAAAhF,KAAAiF,UAAA,EAdA,IAcA,CAAAxD,IAAA,0BAAAC,MAAA,eAAAwF,EAAAvF,EAAAC,IAAAC,KAEO,SAAAsF,IAAA,IAAAC,EAAApH,KAAA,OAAA4B,IAAAS,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,OAwByC,GAvB7CC,QAAQC,KAAI,iCACZ1C,KAAK6D,QAAQ,cAAe,WACxB,IAAMnF,EAAI,GAAA0F,OAAM2B,SAASC,QAAM5B,OAAG2B,SAASuB,SAAQ,iBACnD7E,QAAQC,KAAI,kDAAA0B,OAC0C1F,IAEtD6E,OAAOoB,QAAQC,GAAG2C,mBACd7I,EACA,CAAE8I,OAAQ,GAAIC,MAAO,IACrB,SAACC,GACGjF,QAAQC,KAAI,4CACZ,IAAMiF,EAASD,EAAOhG,MACtBiG,EAAOC,gBACHrE,OAAOsE,UAAUC,sBACjB,SAACpE,GACOA,MAAOnD,EAAAwH,UAASrE,GACpB0D,EAAKxD,oBACL+D,EAAOK,OACX,EAER,EAER,GACAvF,QAAQC,KAAI,QAAA0B,OAASzB,OAAOoD,SAASkC,QAEjCtF,OAAOoD,SAASkC,KAAKhC,SAAS,kBAC9B5B,eAAe6D,QAAQ,WAAU,CAAAb,EAAA7E,KAAA,SAEjC6B,sBAAeC,QAAQ,UAAW,QAClC7B,QAAQC,KAAI,+CACZ1C,KAAKmE,aAAa,eAAekD,EAAA7E,KAAA,EAC3BxC,KAAKyD,iBAAgB,GAAM,aAC5BlD,EAAAmD,SAAO,CAAA2D,EAAA7E,KAAA,gBAAA6E,EAAA1D,OAAA,kBACZJ,OAAOoB,QAAQC,GAAGuD,iBAAc5H,EAAAmD,UAAW,IAAI,yBAAA2D,EAAAvC,OAAA,EAAAqC,EAAAnH,KAAA,IAEtD,gBAAA6E,IAAA,OAAAqC,EAAAlC,MAAAhF,KAAAiF,UAAA,EAtCA,IAsCA,CAAAxD,IAAA,cAAAC,MAEO,WAAW,IAAA0G,GACf,EAAI7H,EAAA8H,WAAyB,QAAjBD,KAAI5H,EAAAsG,sBAAa,IAAAsB,GAAbA,EAAeE,kBAC/B/H,EAAAgI,mBACAxC,SAASyC,SACb,KAAC5H,CAAA,CA3HqB,CAAQJ,EAAAiI,cAArB7H,SAAa,mBAAAX,iBAAbW,GAAYV,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAC,qBAAA5I,EAAAwI,4BAAAK,EAAAC,UAAA9I,EAAAwI,4BAAAO,EAAAC,aAAA,EAAZtI,EAAa,UAAAV,EAAA,kCAAbU,EAAYuI,UAAA,eAAAC,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GANjBvJ,EAAAyJ,oBAAA,kBAAAzJ,CAA+B,mBAA/BA,CAA+B,qGAM1BU,CAAa,uJCzC1B,IAAAgJ,EAAA9L,EAAA,OACA+L,EAAA/L,EAAA,OACAgM,EAAAhM,EAAA,OACAiM,EAAAjM,EAAA,OAEAkM,EAAAlM,EAAA,OACAmM,EAAAnM,EAAA,MACAoM,EAAApM,EAAA,OAEAqM,EAAArM,EAAA,MACAsM,EAAAtM,EAAA,OACAuM,EAAAvM,EAAA,OACAwM,EAAAxM,EAAA,MACAyM,EAAAzM,EAAA,OAEA0M,EAAA1M,EAAA,OACA2M,EAAA3M,EAAA,OACA4M,EAAA5M,EAAA,OACA6M,EAAA7M,EAAA,OACA8M,EAAA9M,EAAA,OACA+M,EAAA/M,EAAA,OAQAgN,EAAAhN,EAAA,OACAiN,EAAAjN,EAAA,OACAkN,EAAAlN,EAAA,kBAGA,SAAgBmN,EAAkBC,GAC9B,OAAO,IAAIH,EAAAI,oBAAoBD,EAAM,mBAAoB,QAC7D,mBAFAtL,oBAAAqL,EAmDarL,YAAS,eAATwL,EAAStL,EAAA,SAAAsL,IAAArL,EAAAC,KAAAoL,EAAA,GAATA,SAAS,mBAAAnL,iBAATmL,EAAS,EAATA,EAAS,UAAAlL,EAAA,iCAATkL,EAASC,UAAA,CAFNZ,EAAA7J,gBAEHwK,EAAS,UAAAlL,EAAA,sCAHP,CAAC2K,EAAAS,WAAUC,QAAA,CA9BlB1B,EAAA2B,cACAzB,EAAA0B,wBACAf,EAAA7K,iBACA8K,EAAAe,WACAd,EAAAe,sBACA5B,EAAA0B,wBACA3B,EAAA8B,iBACAhC,EAAAiC,YACA5B,EAAA6B,oBACA9B,EAAA+B,kBACAf,EAAAgB,gBACA7B,EAAA8B,eACA5B,EAAA6B,aACA3B,EAAA4B,iBACAvC,EAAAwC,oBACA9B,EAAA+B,qBACAjC,EAAAkC,oBACAxB,EAAAyB,gBAAgBnM,QAAQ,CACpBoM,gBAAiB,KACjBC,OAAQ,CACJC,QAAS5B,EAAA6B,gBACTC,WAAY3B,EACZ4B,KAAM,CAAC/C,EAAAgD,eAIf5C,EAAA6C,oBAAoBC,SAAS,iBAAkB,CAC3CC,QAASzC,EAAA0C,YAAYC,gBAMpB/B,CAAS,2ICpFtBtN,EAAA,iCAoCa8B,oBAAiB,eAAjBf,EAAiB,WAC1B,SAAAA,EAAmBuO,GAAcrN,EAAAC,KAAAnB,GAAdmB,KAAAoN,QAAiB,CAACtN,SAAAjB,EAAA,EAAA4C,IAAA,WAAAC,MAErC,WAAkB,KAAC7C,CAAA,CAHO,GAAjBA,SAAiB,mBAAAoB,iBAAjBpB,GAAiBqB,EAAAwI,4BAAAC,EAAA0E,QAAA,EAAjBxO,EAAiB,UAAAqB,EAAA,kCAAjBrB,EAAiBsK,UAAA,wBAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,gaAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA/BfvJ,EAAAqN,yBAAA,UAAArN,CAEV,cAFUA,CAEV,WAKWA,EAAAyJ,oBAAA,WAMJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAgC,UAAhCA,CAAgC,YAGpBA,EAAAuN,iBAAA,qBAAcvN,EAAAsN,wBAAAtN,KAI1BA,EAAAqN,yBAAA,UAAArN,CAAgC,YAExBA,EAAAuN,iBAAA,iBACAvN,EAAAqN,yBAAA,aAA8BrN,EAAAuN,iBAAA,IAAiBvN,EAAAsN,yBAAQtN,EAAAuN,iBAAA,uBAE3DvN,EAAAsN,wBAAAtN,cAFkCA,EAAAwN,oBAAA,IAAAxN,EAAAyN,6BAAA,IAAAjE,EAAA0D,OAAAQ,IAAA,SAOrC/O,CAAiB,+ICrC9Bf,EAAA,WACA+P,EAAA/P,EAAA,OACAgQ,EAAAhQ,EAAA,OAEAkM,EAAAlM,EAAA,OACAiQ,EAAAjQ,EAAA,OACAkQ,EAAAlQ,EAAA,OACAmQ,EAAAnQ,EAAA,OACAoQ,EAAApQ,EAAA,OACAqQ,EAAArQ,EAAA,OACAkN,EAAAlN,EAAA,OACAsQ,EAAAtQ,EAAA,OACAgN,EAAAhN,EAAA,MACAuQ,EAAAvQ,EAAA,OACAwQ,EAAAxQ,EAAA,MACAyQ,EAAAzQ,EAAA,OACA0Q,EAAA1Q,EAAA,OACA2Q,EAAA3Q,EAAA,MACA4Q,EAAA5Q,EAAA,OACA6Q,EAAA7Q,EAAA,OACA8Q,EAAA9Q,EAAA,OACA+Q,EAAA/Q,EAAA,OACAgR,EAAAhR,EAAA,OAEAiR,GADAjR,EAAA,OACAA,EAAA,QACAkR,EAAAlR,EAAA,OACAK,EAAAL,EAAA,OACAiM,EAAAjM,EAAA,kBA4Ca8B,wBAAqB,eAArB+L,EAAqB7L,EAAA,SAAA6L,IAAA5L,EAAAC,KAAA2L,EAAA,GAArBA,SAAqB,mBAAA1L,iBAArB0L,EAAqB,EAArBA,EAAqB,UAAAzL,EAAA,iCAArByL,MAAqB,UAAAzL,EAAA,qCAb1B6J,EAAA0B,wBACAsD,EAAAE,qBACAD,EAAAE,mBACA/Q,EAAAgR,iBA7BJrB,EAAAsB,gBACApF,EAAA+B,kBACAgC,EAAAsB,oBACArB,EAAAsB,gBACArB,EAAAsB,mBACAT,EAAAU,cACAtB,EAAAuB,eACAtB,EAAAuB,yBACAhB,EAAAiB,qBACA9B,EAAA+B,sBACA5E,EAAAgB,gBACAoC,EAAAyB,eACA/E,EAAAgF,gBACAzB,EAAA0B,cACAzB,EAAA0B,kBACArB,EAAAsB,mBACA1B,EAAA2B,cACAtB,EAAAuB,eACA3B,EAAA4B,iBACA3B,EAAA4B,eACAxB,EAAAyB,gBAcIvB,EAAAE,qBACAD,EAAAE,mBACA/Q,EAAAgR,oBAGKxD,CAAqB,oLCtElC7N,EAAA,OACAA,EAAA,OADA,0DAsCa8B,uBAAoB,eAApBN,EAAoB,WAO7B,SAAAA,EACYiR,EACAC,GAAe,IAAAlP,EAAAtB,KAAAD,EAAAC,KAAAV,GADfU,KAAAuQ,WACAvQ,KAAAwQ,UARIxQ,KAAAyQ,UAAY,kBAAMnP,EAAKiP,SAASE,WAAW,CASxD,CAAC3Q,SAAAR,EAAA,EAAAmC,IAAA,OAAAkE,IAPJ,WACI,OAAO3F,KAAKuQ,SAASG,IACzB,GAAC,CAAAjP,IAAA,cAAAC,OAAAiP,EAAAhP,EAAAC,IAAAC,KAOM,SAAAC,IAAA,OAAAF,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGxC,KAAKuQ,SAASK,cAAa,OACjC5Q,KAAKwQ,QAAQK,SAAS,CAAC,QAAS,QAAS,YAAY,wBAAAvO,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACxD,SAAA8Q,IAAA,OAAAH,EAAA3L,MAAAhF,KAAAiF,UAAA,MAAA3F,EAVA,IAAAqR,CAUA,CAf4B,GAApBrR,SAAoB,mBAAAW,iBAApBX,GAAoBY,EAAAwI,4BAAAC,EAAAoI,oBAAA7Q,EAAAwI,4BAAAG,EAAAwE,QAAA,EAApB/N,EAAoB,UAAAY,EAAA,kCAApBZ,EAAoB6J,UAAA,mBAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,0XAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAhCzBvJ,EAAAqN,yBAAA,UAAArN,CAA8D,UAA9DA,CAA8D,UAIjBA,EAAAuN,iBAAA,eAASvN,EAAAsN,yBAC9CtN,EAAAyJ,oBAAA,uBACAzJ,EAAAqN,yBAAA,UAAArN,CAEC,cAMOA,EAAA8Q,qBAAA,0BAAStH,EAAAoH,aAAa,GAEtB5Q,EAAAuN,iBAAA,iBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAIIrN,EAAA8Q,qBAAA,0BAAStH,EAAA+G,WAAW,GAEpBvQ,EAAAuN,iBAAA,kBACJvN,EAAAsN,wBAAAtN,cAZIA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAvH,EAAAgH,KAAAhP,MAAAwP,oEAmBX5R,CAAoB,wLCtCjCxB,EAAA,WACA0C,EAAA1C,EAAA,2KA6DwBoC,EAAAqN,yBAAA,qBAKIrN,EAAAuN,iBAAA,eACJvN,EAAAsN,+HAGRtN,EAAAqN,yBAAA,WAAArN,CAGC,WAHDA,CAGC,qBAIWA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,wBAAA,UAEbrR,EAAAsR,sBAAAF,EAAAZ,KAAAe,WAAA,CAAAC,mBAAAP,EACI,SAAW,KAE5B,GAE0BjR,EAAAuN,iBAAA,sBACJvN,EAAAsN,wBAAAtN,IAAe,4CATXA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAU,EAAAjB,KAAAhP,MAAAgQ,mBAAAxR,CAA2C,iBAAAA,EAAA0R,0BAAA,EAAAC,GAAA,2BAyB3D3R,EAAAqN,yBAAA,cAAArN,CAA0C,SAA1CA,CAA0C,WAK9BA,EAAAuN,iBAAA,SACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAqBrN,EAAAuN,iBAAA,mBAAavN,EAAAsN,wBAAAtN,GAEtCA,EAAAyJ,oBAAA,yBAKJzJ,EAAAsN,kEAJQtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAa,EAAApB,KAAAhP,MAAAqQ,KAAA7R,CAAwB,WAAA4R,EAAApB,KAAAhP,MAAAsQ,SAAA,+DAzGpC9R,EAAAqN,yBAAA,UAAArN,CAIC,cAJDA,CAIC,SAJDA,CAIC,WAMeA,EAAAuN,iBAAA,SACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAqBrN,EAAAuN,iBAAA,aAAOvN,EAAAsN,wBAAAtN,GAEhCA,EAAAqN,yBAAA,UAAArN,CAAsD,UAAtDA,CAAsD,aAE3BA,EAAAuN,iBAAA,gBAASvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GACnCA,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,eAMAzJ,EAAAqN,yBAAA,gBAAWrN,EAAAuN,iBAAA,iCAA0BvN,EAAAsN,wBAAAtN,KAG7CA,EAAAqN,yBAAA,WAAArN,CAAkC,eACZA,EAAAuN,iBAAA,WAAIvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GAC7BA,EAAAqN,yBAAA,sBACIrN,EAAAuN,iBAAA,4CACJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,YAAArN,CAAyC,YAAzCA,CAAyC,eAETA,EAAAuN,iBAAA,iBAAUvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GACzCA,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAa,GAAA,IAAAC,EAAAhS,EAAAqR,0BAAA,OAAiBrR,EAAAsR,sBAAAU,EAAAxB,KAAAe,WAAA,CAAAM,KAAAZ,IAAiC,GAErDjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAAmC,eACTA,EAAAuN,iBAAA,eAAQvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GACrCA,EAAAyJ,oBAAA,0BASAzJ,EAAAiS,qBAAA,GAAAC,EAAA,uBAOJlS,EAAAsN,wBAAAtN,GAEJA,EAAAiS,qBAAA,GAAAE,EAAA,cAkBJnS,EAAAsN,yBAEAtN,EAAAqN,yBAAA,eAAArN,CAAqB,UAArBA,CAAqB,YAKTA,EAAAuN,iBAAA,UACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAqBrN,EAAAuN,iBAAA,WAAIvN,EAAAsN,wBAAAtN,GAE7BA,EAAAyJ,oBAAA,yBACJzJ,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAAG,EAAA,kBAeJpS,EAAAsN,wBAAA,6CA3GItN,EAAA+Q,qBAAA,YAAAsB,EAAA7B,MAoCgBxQ,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,UAAAsB,EAAA7B,KAAAhP,MAAAqQ,KAAA7R,CAA2B,iBAAAA,EAAA0R,0BAAA,GAAAC,IAU3B3R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAuB,EAAAD,EAAA7B,KAAA/K,IAAA,cAAA6M,EAAA9Q,MAAAxB,CAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,WAQ/BA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsB,EAAAE,eASRvS,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsB,EAAAG,kBA6BaxS,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsB,EAAAI,aAAA,EAmBrB/S,2BAAyB,eAAzBgT,EAAyB,SAAA/R,GAAAC,EAAA8R,EAAA/R,GAAA,IAAAG,EAAAC,EAAA2R,GAOlC,SAAAA,EACYrC,EACArP,GAA0B,IAAAI,EAAAvB,SAAAC,KAAA4S,IAElCtR,EAAAN,EAAAO,KAAAvB,OAHQuQ,WACAjP,EAAAJ,YARII,EAAAoP,KAAOpP,EAAKiP,SAASG,KAAKpP,CAW1C,CAACxB,SAAA8S,EAAA,EAAAnR,IAAA,eAAAkE,IATD,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,4BAC9B,GAAC,CAAAlE,IAAA,WAAAC,MASM,WAAQ,IAAAmR,EAAAC,EAAA3N,EAAAnF,KACXA,KAAKuQ,SAASwC,WAAW,CAAEC,KAAM,SACjChT,KAAKiT,aACD,SAEqB,QAFbJ,EACR7S,KAAKuQ,SAASG,KACT/K,IAAI,oBAAY,IAAAkN,GACH,QADGC,EADrBD,EAEMK,oBAAY,IAAAJ,OADG,EADrBA,EAEoBK,UAAU,SAACC,GAAI,OAC3BA,EAAK/N,OAASF,EAAKkO,gBAAgBD,EAAK,IAAM,EAAE,GAGhE,GAAC,CAAA3R,IAAA,kBAAAC,MAEO,SAAgB4R,GAAU,IAAAC,EAAAC,EACzBF,GACLtT,KAAKuQ,SAASG,KAAKe,WAAW,CAC1BP,SAAUoC,GAAMG,GAChBC,WAAYJ,EAAKK,KACjBC,OAAQN,GAAMM,QAAUN,GAAMG,GAC9BI,YAAaP,EAAKK,KAClBG,aAAc,OACdC,MAAOT,EAAKU,KAAO,CAAU,QAAVT,EAACD,EAAKU,YAAI,IAAAT,OAAA,EAATA,EAAWU,UAAoB,QAAXT,EAAEF,EAAKU,YAAI,IAAAR,OAAA,EAATA,EAAWC,IAAM,GAC3DS,cAAeZ,GAEvB,KAACV,CAAA,CArCiC,CAAQpS,EAAAiI,cAAjCmK,SAAyB,mBAAA3S,iBAAzB2S,GAAwB1S,EAAAwI,4BAAAC,EAAAoI,oBAAA7Q,EAAAwI,4BAAAG,EAAAD,iBAAA,EAAxBgK,EAAyB,UAAA1S,EAAA,kCAAzB0S,EAAwBzJ,UAAA,wBAAAC,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,2uCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GAlH7BvJ,EAAAiS,qBAAA,EAAAgC,EAAA,oBAEKjU,EAAA+Q,qBAAA,OAAAvH,EAAAgH,yTAgHAkC,CAAyB,qJCzHtC9U,EAAA,uFAqBYoC,EAAAqN,yBAAA,OACIrN,EAAAuN,iBAAA,oEACJvN,EAAAsN,oEAeC5N,8BAA2B,eAA3BL,EAA2BO,EAGpC,SAAAP,EAAoBgR,GAA4BxQ,EAAAC,KAAAT,GAA5BS,KAAAuQ,WAFJvQ,KAAAoU,aAAepU,KAAKuQ,SAAS6D,YAEM,GAH1C7U,SAA2B,mBAAAU,iBAA3BV,GAA2BW,EAAAwI,4BAAAC,EAAAoI,oBAAA,EAA3BxR,EAA2B,UAAAW,EAAA,kCAA3BX,EAA2B4J,UAAA,2BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,qQAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjChCvJ,EAAAqN,yBAAA,UAAArN,CAEC,UACwBA,EAAAuN,iBAAA,wBAAkBvN,EAAAsN,yBACvCtN,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,OACIrN,EAAAuN,iBAAA,6BACAvN,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,GAAwDvN,EAAAsN,yBAC3DtN,EAAAuN,iBAAA,4FAOJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAAkC,EAAA,WAGAnU,EAAAqN,yBAAA,UACIrN,EAAAuN,iBAAA,oBACJvN,EAAAsN,wBAAAtN,UAdOA,EAAAwN,oBAAA,GAAAxN,EAAAoU,6BAAA,MAAA5K,EAAA0K,aAAA,KAAA1K,EAAA0K,aAAAV,cAAA,MAAAhK,EAAA0K,aAAA,KAAA1K,EAAA0K,aAAAlD,WACHhR,EAAAwN,oBAAA,GAAAxN,EAAAqU,6BAAA,yCAAArU,EAAAsU,sBAAA,UAAA9K,EAAA0K,aAAA,KAAA1K,EAAA0K,aAAArC,KAAA,uBAAA7R,EAAAsU,sBAAA,WAAA9K,EAAA0K,aAAA,KAAA1K,EAAA0K,aAAArC,KAAA,mBAAA7R,EAAAsU,sBAAA,aAAA9K,EAAA0K,aAAA,KAAA1K,EAAA0K,aAAArC,MAAA,UAAArI,EAAA0K,aAAA,KAAA1K,EAAA0K,aAAApC,UAAA,sBAQA9R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,WAGiB/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA/Q,EAAA0R,0BAAA,GAAAC,mMAcpBtS,CAA2B,iJCtCxCzB,EAAA,OAIAA,EAAA,OAJA,IAKA0C,EAAA1C,EAAA,OAEA2W,GADA3W,EAAA,OACAA,EAAA,yEAoCa8B,0BAAuB,eAAvBR,EAAuB,WAShC,SAAAA,EACYmR,EACAC,EACAkE,GAA6B,IAAApT,EAAAtB,KAAAD,EAAAC,KAAAZ,GAF7BY,KAAAuQ,WACAvQ,KAAAwQ,UACAxQ,KAAA0U,gBATI1U,KAAAyQ,UAAY,kBAAMnP,EAAKiP,SAASE,WAAW,CAUxD,CAAC3Q,SAAAV,EAAA,EAAAqC,IAAA,OAAAkE,IARJ,WACI,OAAO3F,KAAKuQ,SAASG,IACzB,GAAC,CAAAjP,IAAA,cAAAC,MAQM,WAAW,IAAA4E,EAAAnB,EAAAnF,KAGd,GAFKA,KAAK0Q,KAAKhP,MAAMiT,MACjB3U,KAAK0Q,KAAKe,WAAW,CAAEkD,KAAmB,QAAfrO,KAAE9F,EAAAsG,sBAAa,IAAAR,OAAA,EAAbA,EAAeU,SAC3ChH,KAAK0Q,KAAKkE,MACX,SAAOpU,EAAAqU,aAAW,6BAAAzQ,UACe5D,EAAAsU,kBAAiB9U,KAAK0Q,MAAMqE,KACrD,MACH,MAET/U,KAAKgV,UAAYhV,KAAK0U,cAAcO,KAAKR,EAAAS,6BACzClV,KAAKgV,UAAUG,SAASC,YAAa,EACrCpV,KAAKgV,UAAUK,iBAAiBlC,UAAU,SAACzR,GACnCA,IACAyD,EAAKqL,QAAQK,SAAS,CAAC,QAAS,UAAW,YAC3C1L,EAAKoL,SAAS+E,QAAQ,WAE9B,EACJ,KAAClW,CAAA,CAhC+B,GAAvBA,SAAuB,mBAAAa,iBAAvBb,GAAuBc,EAAAwI,4BAAAC,EAAA4M,kBAAArV,EAAAwI,4BAAAG,EAAAwE,QAAAnN,EAAAwI,4BAAAK,EAAAyM,gBAAA,EAAvBpW,EAAuB,UAAAc,EAAA,kCAAvBd,EAAuB+J,UAAA,sBAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,+WAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA/B5BvJ,EAAAqN,yBAAA,UAAArN,CAA8D,UAA9DA,CAA8D,UAIjBA,EAAAuN,iBAAA,kBAAYvN,EAAAsN,yBACjDtN,EAAAyJ,oBAAA,0BACAzJ,EAAAqN,yBAAA,UAAArN,CAEC,cAKOA,EAAA8Q,qBAAA,0BAAStH,EAAAoH,aAAa,GAEtB5Q,EAAAuN,iBAAA,oBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAIIrN,EAAA8Q,qBAAA,0BAAStH,EAAA+G,WAAW,GAEpBvQ,EAAAuN,iBAAA,kBACJvN,EAAAsN,wBAAAtN,oEAOPd,CAAuB,2LC3CpCtB,EAAA,WACA0C,EAAA1C,EAAA,OAQA2X,GAFA3X,EAAA,OACAA,EAAA,MACAA,EAAA,gRAiDgCoC,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAAyE,GAEAxV,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA+H,EAAAC,cAAAD,EAAA/B,KAAA,2GApBhBzT,EAAAqN,yBAAA,WAAArN,CAGC,cACsBA,EAAAuN,iBAAA,cAAQvN,EAAAsN,yBAC3BtN,EAAAqN,yBAAA,sBAAArN,CAAoD,mBAI5CA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAwE,GAAA,IAAAC,GAAA3V,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAAqE,GAAAC,YAAA3E,GAAmB,6FAOpCjR,EAAAiS,qBAAA,EAAA4D,EAAA,mDAMJ7V,EAAAsN,wBAAAtN,IAAa,8CAdTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAC,EAAAC,UAAAhW,CAA4B,iBAAAA,EAAA0R,0BAAA,GAAAC,GAA5B3R,CAA4B,sBAAAiW,EAAAjW,EAAA8V,sBAAA,IAAAC,EAAAC,WAAA,KAAAC,EAAAR,gBAAA,OAAAQ,EAAAjW,EAAA8V,sBAAA,IAAAC,EAAAC,WAAA,KAAAC,EAAAxC,OASRzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,KAAAC,EAAAG,WAAA,wBAsDxBlW,EAAAqN,yBAAA,qBAIKrN,EAAAuN,iBAAA,aAAOvN,EAAAsN,gDAIpBtN,EAAAqN,yBAAA,WAAArN,CAAgD,cAC1BA,EAAAuN,iBAAA,UAAIvN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,OAACvN,EAAAsN,wBAAAtN,GAC7BA,EAAAyJ,oBAAA,0BAIJzJ,EAAAsN,uFAGRtN,EAAAqN,yBAAA,cAAArN,CAA6C,SAA7CA,CAA6C,WAKjCA,EAAAuN,iBAAA,SACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAqBrN,EAAAuN,iBAAA,eAASvN,EAAAsN,yBAC9BtN,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAiF,GAAA,IAAAC,EAAApW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA8E,EAAAC,oBAAmB,GAE5BrW,EAAAuN,iBAAA,oBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAiF,GAAA,IAAAG,EAAAtW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAgF,EAAAC,WAAAC,WAAAF,EAAAC,WAAAC,UAA4C,GAErDxW,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,2BAIJzJ,EAAAsN,wBAAAtN,EAAM,4CAbYA,EAAAwN,oBAAA,IAAAxN,EAAAoU,4BAAAhD,EAAAmF,WAAAC,UAAA,6BAOdxW,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAK,EAAAmF,WAAAC,UAAA,wIAqCRxW,EAAAqN,yBAAA,cAAArN,CAA0C,SAA1CA,CAA0C,WAK9BA,EAAAuN,iBAAA,SACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAqBrN,EAAAuN,iBAAA,cAAQvN,EAAAsN,yBAC7BtN,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,cAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAuF,GAAA,IAAAC,EAAA1W,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAoF,EAAAH,WAAAI,UAAAD,EAAAH,WAAAI,SAA0C,GAEnD3W,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,GAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,6BAQJzJ,EAAAsN,wBAAAtN,EAAM,4CAjBYA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAwC,EAAAL,WAAAI,SAAA,6BAOd3W,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA6F,EAAAL,WAAAI,SAAA,eAII3W,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA6W,0BAAA,EAAAC,EAAAF,EAAApG,KAAAhP,MAAAqQ,KAAA+E,EAAApG,KAAAhP,MAAAsQ,SAAA,MAAA8E,EAAApG,KAAAhP,MAAAuV,UAAA,UAAAH,EAAApG,KAAAhP,MAAAuV,UAAA,GAAAC,MAAA,KAAAJ,EAAApG,KAAAhP,MAAAuV,UAAA,GAAAC,MAAAjD,WAAA,2BAsCZ/T,EAAAqN,yBAAA,cAAArN,CAAyC,UAAzCA,CAAyC,WAK7BA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAqBrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAE9BA,EAAAqN,yBAAA,WAAArN,CAAkC,cACXA,EAAAuN,iBAAA,uCAAiCvN,EAAAsN,yBACpDtN,EAAAyJ,oBAAA,wBAKJzJ,EAAAsN,wBAAAtN,4CAXQA,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAuE,EAAAiF,aAAA,2EAzPhBjX,EAAAqN,yBAAA,UAAArN,CAIC,cAJDA,CAIC,SAJDA,CAIC,WAMeA,EAAAuN,iBAAA,SACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAqBrN,EAAAuN,iBAAA,aAAOvN,EAAAsN,yBAC5BtN,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,cAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAgG,GAAA,IAAAC,EAAAnX,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA6F,EAAAZ,WAAAa,SAAAD,EAAAZ,WAAAa,QAAwC,GAEjDpX,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,IAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,YAIIrN,EAAAiS,qBAAA,GAAAoF,EAAA,8CAyBArX,EAAAqN,yBAAA,YAAArN,CAAmD,YAAnDA,CAAmD,eAExBA,EAAAuN,iBAAA,gBAASvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GACnCA,EAAAqN,yBAAA,wBACIrN,EAAAyJ,oBAAA,eAMAzJ,EAAAqN,yBAAA,gBACKrN,EAAAuN,iBAAA,iCAA0BvN,EAAAsN,wBAAAtN,KAIvCA,EAAAqN,yBAAA,YAAArN,CAA0B,eACJA,EAAAuN,iBAAA,WAAIvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GAC7BA,EAAAqN,yBAAA,sBACIrN,EAAAuN,iBAAA,4CACJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,YAAArN,CAAyC,YAAzCA,CAAyC,eAG5BA,EAAAuN,iBAAA,iBAAUvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GAEtBA,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAgG,GAAA,IAAAI,GAAAtX,EAAAqR,0BAAA,OAE7BrR,EAAAsR,sBAAAgG,GAAA9G,KAAAe,WAAA,CAAAM,KAAAZ,IACD,GAC2BjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAAmC,eACTA,EAAAuN,iBAAA,eAAQvN,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GACrCA,EAAAqN,yBAAA,0BAMIrN,EAAAuN,iBAAA,2CACJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAAsF,EAAA,uBAMJvX,EAAAsN,wBAAAtN,GAEJA,EAAAiS,qBAAA,GAAAuF,EAAA,cAOJxX,EAAAsN,wBAAAtN,GAEJA,EAAAiS,qBAAA,GAAAwF,EAAA,mBAoCAzX,EAAAqN,yBAAA,eAAArN,CAAqB,UAArBA,CAAqB,YAKTA,EAAAuN,iBAAA,UACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAqBrN,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBACzBtN,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAgG,GAAA,IAAAQ,EAAA1X,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAoG,EAAAnB,WAAAQ,WAAAW,EAAAnB,WAAAQ,UAA4C,GAErD/W,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,0BAIJzJ,EAAAsN,wBAAAtN,GAEJA,EAAAiS,qBAAA,GAAA0F,EAAA,mBAiCA3X,EAAAqN,yBAAA,eAAArN,CAAqB,UAArBA,CAAqB,YAKTA,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAqBrN,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAC3BtN,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAgG,GAAA,IAAAU,EAAA5X,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAsG,EAAArB,WAAAsB,QAAAD,EAAArB,WAAAsB,OAAsC,GAE/C7X,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,0BAKJzJ,EAAAsN,wBAAAtN,GAEJA,EAAAiS,qBAAA,GAAA6F,EAAA,mBAkBJ9X,EAAAsN,wBAAA,6CAnQItN,EAAA+Q,qBAAA,YAAAsB,EAAA7B,MAgBsBxQ,EAAAwN,oBAAA,IAAAxN,EAAAoU,4BAAA/B,EAAAkE,WAAAa,QAAA,6BAOdpX,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAsB,EAAAkE,WAAAa,QAAA,eAIKpX,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAuB,EAAAtS,EAAA8V,sBAAA,MAAAzD,EAAA6D,YAAA,KAAA5D,EAAAnN,QAAA,GAoDOnF,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,UAAAsB,EAAA7B,KAAAhP,MAAAqQ,KAAA7R,CAA2B,iBAAAA,EAAA0R,0BAAA,GAAAC,IAY3B3R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAsB,EAAA7B,MAAA,MAAA6B,EAAA7B,KAAAhP,MAAA,KAAA6Q,EAAA7B,KAAAhP,MAAAqQ,KAAA7R,CAA0B,MAAAqS,EAAA0F,cAOzB/X,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsB,EAAAE,eAMPvS,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsB,EAAA2F,qBASQhY,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAsB,EAAA4F,gBAkDAjY,EAAAwN,oBAAA,IAAAxN,EAAAoU,4BAAA/B,EAAAkE,WAAAQ,UAAA,6BAOd/W,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAsB,EAAAkE,WAAAQ,UAAA,eAQc/W,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsB,EAAA4E,cAsCVjX,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAA4E,aAAA,aASUjX,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAAkE,WAAAsB,OAAA,6BAOd7X,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAsB,EAAAkE,WAAAsB,OAAA,eAGI7X,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsB,EAAA7B,KAAAhP,MAAAqQ,KAAA7R,CAAwB,WAAAqS,EAAA7B,KAAAhP,MAAAsQ,UAMd9R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAsB,EAAA6F,WAAA,EAuBrBxY,8BAA4B,eAA5ByY,EAA4B,SAAAxX,GAAAC,EAAAuX,EAAAxX,GAAA,IAAAG,EAAAC,EAAAoX,GA2DrC,SAAAA,EACY9H,EACArP,EACAoX,EACAnX,IAAyB,IAAAG,EAAAvB,SAAAC,KAAAqY,IAEjC/W,EAAAN,EAAAO,KAAAvB,OALQuQ,WACAjP,EAAAJ,YACAI,EAAAgX,UACAhX,EAAAH,QA9DIG,EAAAoP,KAAOpP,EAAKiP,SAASG,KAE9BpP,EAAAmV,WAAsC,GAE7BnV,EAAA4U,SAAW5U,EAAKH,KAAKoX,gBACrBjX,EAAA8U,UAAY9U,EAAKH,KAAKqX,cAAclX,CA4DpD,CAACxB,SAAAuY,EAAA,EAAA5W,IAAA,eAAAkE,IA1DD,WACI,QACM3F,KAAKkB,UAAUyE,IAAI,kCACnB3F,KAAKkB,UAAUyE,IAAI,0BAE7B,GAAC,CAAAlE,IAAA,aAAAkE,IAED,WACI,QAAS3F,KAAKkB,UAAUyE,IAAI,wBAChC,GAAC,CAAAlE,IAAA,iBAAAkE,IAED,WACI,QAAS3F,KAAKkB,UAAUyE,IAAI,4BAChC,GAAC,CAAAlE,IAAA,eAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,4BAA8B,GAC5D,GAAC,CAAAlE,IAAA,sBAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,iCAC9B,GAAC,CAAAlE,IAAA,gBAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,2BAC9B,GAAC,CAAAlE,IAAA,eAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,0BAC9B,GAAC,CAAAlE,IAAA,oBAAAC,MAEM,WAAiB,IAAAyD,EAAAnF,KACpByY,EAAiDzY,KAAK0Q,KAAKhP,MAA7BqQ,GAAI0G,EAAJ1G,KAAMC,GAAQyG,EAARzG,SAC9B0G,GAAM1Y,KAAKsY,QAAQrD,KAAKQ,EAAAkD,+BAAgC,CAC1D7V,KAAM,CACF8V,MAHSH,EAAT/B,UAIA/B,KAJoB8D,EAATI,YAILA,EAAarY,EAAAsG,eACnBiL,QACAC,eAGR0G,GAAII,cAAc3F,UAAU,SAAC4F,IACpBA,IACL5T,EAAKuL,KAAKe,WAAW,CACjBM,KAAM2G,GAAIM,kBAAkBjH,KAC5B2E,UAAWgC,GAAIM,kBAAkBJ,MAAMK,WACvCjH,SAAU0G,GAAIM,kBAAkBhH,UAExC,EACJ,GAAC,CAAAvQ,IAAA,cAAAC,MAWM,SAAYwX,GACflZ,KAAKmB,KAAK+U,SAAWgD,EACrBlZ,KAAKmB,KAAKgY,aAAaD,EAAIzF,GAC/B,KAAC4E,CAAA,CAvEoC,CAAQ7X,EAAAiI,cAApC4P,SAA4B,mBAAApY,iBAA5BoY,GAA2BnY,EAAAwI,4BAAAC,EAAA4M,kBAAArV,EAAAwI,4BAAAG,EAAAD,iBAAA1I,EAAAwI,4BAAAK,EAAAqQ,WAAAlZ,EAAAwI,4BAAAO,EAAAH,qBAAA,EAA3BuP,EAA4B,UAAAnY,EAAA,kCAA5BmY,EAA2BlP,UAAA,2BAAAC,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,uvDAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GA3QhCvJ,EAAAiS,qBAAA,EAAAkH,EAAA,oBAEKnZ,EAAA+Q,qBAAA,OAAAvH,EAAAgH,4fAuQG,CAAClQ,EAAA8Y,mCAEJjB,CAA4B,wJCzRzCva,EAAA,yGA2Ca8B,iCAA8B,eAA9BP,EAA8BS,EAGvC,SAAAT,EAAoBkR,GAA0BxQ,EAAAC,KAAAX,GAA1BW,KAAAuQ,WAFJvQ,KAAAoU,aAAepU,KAAKuQ,SAAS6D,YAEI,GAHxC/U,SAA8B,mBAAAY,iBAA9BZ,GAA8Ba,EAAAwI,4BAAAC,EAAA4M,kBAAA,EAA9BlW,EAA8B,UAAAa,EAAA,kCAA9Bb,EAA8B8J,UAAA,8BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,0PAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAtCnCvJ,EAAAqN,yBAAA,UAAArN,CAEC,UACwBA,EAAAuN,iBAAA,wBAAkBvN,EAAAsN,yBACvCtN,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,OACIrN,EAAAuN,iBAAA,gCACAvN,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,GAEDvN,EAAAsN,yBACFtN,EAAAuN,iBAAA,4FAOJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAOIrN,EAAAuN,iBAAA,oBACJvN,EAAAsN,wBAAAtN,UAnBOA,EAAAwN,oBAAA,GAAAxN,EAAAoU,6BAAA,MAAA5K,EAAA0K,aAAA,KAAA1K,EAAA0K,aAAArO,YAAA,MAAA2D,EAAA0K,cAAA,MAAA1K,EAAA0K,aAAAmF,OAAA,KAAA7P,EAAA0K,aAAAmF,OAAA5D,eAGHzV,EAAAwN,oBAAA,GAAAxN,EAAAqU,6BAAA,yCAAArU,EAAAsU,sBAAA,UAAA9K,EAAA0K,aAAA,KAAA1K,EAAA0K,aAAArC,KAAA,uBAAA7R,EAAAsU,sBAAA,WAAA9K,EAAA0K,aAAA,KAAA1K,EAAA0K,aAAArC,KAAA,mBAAA7R,EAAAsU,sBAAA,aAAA9K,EAAA0K,aAAA,KAAA1K,EAAA0K,aAAArC,MAAA,UAAArI,EAAA0K,aAAA,KAAA1K,EAAA0K,aAAApC,UAAA,sBAYA9R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA/Q,EAAA0R,0BAAA,GAAAC,+LAgBHxS,CAA8B,oIC3C3C,IAAAmB,EAAA1C,EAAA,OACA8L,EAAA9L,EAAA,OACAD,EAAAC,EAAA,OACAkM,EAAAlM,EAAA,OACAmM,EAAAnM,EAAA,MAIAC,EAAAD,EAAA,OAEAyM,EAAAzM,EAAA,OACA8M,EAAA9M,EAAA,OACAK,EAAAL,EAAA,OACA0b,EAAA1b,EAAA,OACA2b,EAAA3b,EAAA,kBAOM4b,YAAkB,CACpB,CACIhb,KAAM,OACNC,UAAWZ,EAAAyB,sBAgCNI,aAAU,eAAV8L,EAAU5L,EAAA,SAAA4L,IAAA3L,EAAAC,KAAA0L,EAAA,GAAVA,SAAU,mBAAAzL,iBAAVyL,EAAU,EAAVA,EAAU,UAAAxL,EAAA,iCAAVwL,MAAU,UAAAxL,EAAA,qCAffM,EAAAmZ,aACA9b,EAAAsC,aAAayZ,SAASF,GACtB9O,EAAAe,sBACA/B,EAAAiC,YACAjC,EAAAwC,oBACAnC,EAAA6B,oBACA7B,EAAA4P,iBACAtP,EAAA4B,iBACAsN,EAAAK,qBACA7P,EAAA6B,oBACA9B,EAAA+B,kBACAyN,EAAAO,sBACA5b,EAAAgR,oBAGKzD,CAAU,mJCxDvB5N,EAAA,OACAA,EAAA,OADA,IAGAkc,EAAAlc,EAAA,6DAOa8B,4BAAyB,eAAzBT,EAAyB,WAWlC,SAAAA,EAAoB8a,EAAkCzJ,GAAezQ,EAAAC,KAAAb,GAAjDa,KAAAia,SAAkCja,KAAAwQ,SAAkB,CAAC1Q,SAAAX,EAAA,EAAAsC,IAAA,OAAAkE,IAVzE,WACI,OAAO3F,KAAKia,OAAOvJ,IACvB,GAAC,CAAAjP,IAAA,WAAAC,MAUD,WAAQ,IAAAwY,EAAAC,EAAAC,EAAAC,EAAAC,EACJta,KAAK+F,SAAmC,QAA3BmU,EAAGla,KAAKia,OAAO7F,oBAAY,IAAA8F,OAAA,EAAxBA,EAA0BnU,SAC1C/F,KAAK+R,QAAOiI,EAAAO,IAA2B,QAAzBJ,EAACna,KAAKia,OAAO7F,oBAAY,IAAA+F,OAAA,EAAxBA,EAA0BpI,MACzC/R,KAAKwa,eAAcR,EAAAO,IACf,IAAIE,KAA6B,QAAzBL,EAACpa,KAAKia,OAAO7F,oBAAY,IAAAgG,OAAA,EAAxBA,EAA0BrI,MAAM2I,mBACrC,QACA,CACIC,KAAM,UACNC,OAAQ,UACRC,QAAQ,KAIpB7a,KAAKgS,SAAmC,QAA3BqI,EAAGra,KAAKia,OAAO7F,oBAAY,IAAAiG,OAAA,EAAxBA,EAA0BrI,SAC1ChS,KAAK8a,aAAYd,EAAAO,IACb,IAAIE,MACwB,QAAxBH,EAAAta,KAAKia,OAAO7F,oBAAY,IAAAkG,OAAA,EAAxBA,EAA0BvI,MAAuB,GAAhB/R,KAAKgS,SAAgB,KACxD0I,mBAAmB,QAAS,CAC1BC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGpB,GAAC,CAAApZ,IAAA,aAAAC,MACD,WACI1B,KAAKwQ,QAAQK,SAAS,CAAC,eAC3B,KAAC1R,CAAA,CAvCiC,GAAzBA,SAAyB,mBAAAc,iBAAzBd,GAAyBe,EAAAwI,4BAAAC,EAAA4M,kBAAArV,EAAAwI,4BAAAG,EAAAwE,QAAA,EAAzBlO,EAAyB,UAAAe,EAAA,kCAAzBf,EAAyBgK,UAAA,wBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,gkBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICXtCvJ,EAAAqN,yBAAA,UAAArN,CAAwE,cAAxEA,CAAwE,UAAxEA,CAAwE,UAAxEA,CAAwE,YASpDA,EAAAuN,iBAAA,yBAAkBvN,EAAAsN,wBAAAtN,GAG1BA,EAAAqN,yBAAA,SACIrN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,yBAEAtN,EAAAqN,yBAAA,UAAArN,CAAmD,YAE1CA,EAAAuN,iBAAA,+HAMLvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,WAAArN,CAAoC,eAI5BA,EAAA8Q,qBAAA,0BAAStH,EAAAqR,YAAY,GAGrB7a,EAAAqN,yBAAA,cAAsBrN,EAAAuN,iBAAA,kBAAWvN,EAAAsN,wBAAAtN,kBAfhCA,EAAAwN,oBAAA,IAAAxN,EAAA8a,6BAAA,yBAAAtR,EAAA3D,SAAA,yCAAA7F,EAAAsU,sBAAA,KAAAtU,EAAA8V,sBAAA,KAAAtM,EAAAqI,MAAA,uBAAA7R,EAAA8V,sBAAA,KAAAtM,EAAA8Q,aAAA,MAAAta,EAAA8V,sBAAA,MAAAtM,EAAAoR,WAAA,2DDPR3b,CAAyB,qLEVtC,IAAA6a,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,UAEAA,EAAA,4BAKa8B,wBAAqB,eAArBqb,EAAqB,WAiC9B,SAAAA,EAAoBhB,GAAwBla,EAAAC,KAAAib,GAAxBjb,KAAAia,SAhCbja,KAAAkb,QAA+Blb,KAAKia,OAAOkB,iBAE3Cnb,KAAAob,uBACH,IAAIpB,EAAAqB,iBAAyB,GAEjCrb,KAAAsb,mBAA2C,IAAItB,EAAAqB,gBAAqB,MACpErb,KAAAub,mBACIvb,KAAKsb,mBAAmBE,eAK5Bxb,KAAAyb,UAAkC,IAAIzB,EAAAqB,gBAAqB,MAC3Drb,KAAA0b,UAA6B1b,KAAKyb,UAAUD,eAQ5Cxb,KAAA2b,cAAuB,CACnB,CAAEhI,KAAM,wBAAyBF,GAAI,UAAW/R,OAAO,GACvD,CAAEiS,KAAM,mBAAoBF,GAAI,YAAa/R,OAAO,GACpD,CAAEiS,KAAM,2BAA4BF,GAAI,WAAY/R,OAAO,GAC3D,CAAEiS,KAAM,aAAcF,GAAI,UAAW/R,OAAO,GAC5C,CAAEiS,KAAM,aAAcF,GAAI,aAAc/R,OAAO,GAC/C,CAAEiS,KAAM,WAAYF,GAAI,WAAY/R,OAAO,GAC3C,CAAEiS,KAAM,YAAaF,GAAI,YAAa/R,OAAO,GAC7C,CAAEiS,KAAM,QAASF,GAAI,QAAS/R,OAAO,IAIrC1B,KAAKyb,UAAUjZ,KAAKxC,KAAK2b,cAC7B,CAAC7b,SAAAmb,EAAA,EAAAxZ,IAAA,oBAAAkE,IA1BD,WACI,OAAO3F,KAAKsb,mBAAmBrC,UACnC,GAAC,CAAAxX,IAAA,WAAAkE,IAOD,WACI,OAAO3F,KAAKyb,UAAUxC,UAC1B,EAAC2C,IALD,SAAaC,GACT7b,KAAKyb,UAAUjZ,KAAKqZ,EACxB,GAAC,CAAApa,IAAA,sBAAAC,OAAAoa,EAAAna,EAAAC,IAAAC,KAoBD,SAAAC,IAAA,IAAAia,EAAA,OAAAna,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OAAAxC,KAAKub,mBAAqBvb,KAAK0b,UAAUvY,QACrC7C,EAAA0b,KAAI,SAACC,GAAG,OAAKA,EAAIC,OAAO,SAACC,GAAI,OAAmB,GAAdA,EAAKza,KAAa,EAAC,IACvDY,EAAAE,KAAA,EACIxC,KAAKub,mBAAmBpY,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,OAChC,QAAvByY,EAAA/b,KAAKub,0BAAkB,IAAAQ,GAAvBA,EAAyB5I,UAAUnT,KAAKsb,oBAAoB,wBAAAhZ,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAC/D,SAAAqc,IAAA,OAAAP,EAAA9W,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,cAAAC,MAAA,eAAA4a,EAAA3a,EAAAC,IAAAC,KACD,SAAA0D,IAAA,IAAAgX,EAAAC,EAAAlb,EAAAtB,KAAA,OAAA4B,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,EACUxC,KAAKub,mBAAmBpY,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,OAAAmC,SAAAjD,KAAA,EAEtBxC,KAAKyc,qBAClCzc,KAAK0c,mBACR,OAFKF,SAAkB/W,EAAAvB,KAIxBlE,KAAK2c,gBAAkB3c,KAAKkb,QAAQ/X,QAChC7C,EAAA0b,KAAI,SAACY,GAAe,OAChBA,EAAOV,OAAO,SAACW,GACX,OAAOvb,EAAKwb,eAAeD,EAAME,cAAc9W,SAC3CuW,EAER,EAAE,IAER/W,EAAAjD,KAAA,EACwB,QADxB+Z,EACIvc,KAAK2c,uBAAe,IAAAJ,OAAA,EAApBA,EAAsBpZ,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,OACrDtD,KAAKob,uBAAuB5Y,MAAK,GAAM,wBAAAiD,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAC1C,gBAAAgd,IAAA,OAAAV,EAAAtX,MAAAhF,KAAAiF,UAAA,EAnBA,IAmBA,CAAAxD,IAAA,iBAAAC,MAED,SAAeub,GACX,OAAOA,GAAOC,OAAOnI,MACzB,GAAC,CAAAtT,IAAA,uBAAAC,MAAA,eAAAyb,EAAAxb,EAAAC,IAAAC,KAED,SAAAwE,EAA2B4W,GAAY,OAAArb,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAAAiE,SAAAjE,KAAA,EACRya,GAAOjB,IAAI,SAACG,GAAI,OAAKA,EAAK1I,EAAE,GAAC,OAApD2J,OAAc3W,EAAA9C,OAAA,SACX3D,KAAK8c,eADMrW,EAAAvC,OACwB,wBAAAuC,EAAA3B,OAAA,EAAAuB,EAAArG,KAAA,IAC7C,gBAAAyc,EAAAY,GAAA,OAAAF,EAAAnY,MAAAhF,KAAAiF,UAAA,EALA,IAKA,CAAAxD,IAAA,cAAAC,MAED,WAAW,IAAA4b,EACPtd,KAAKsb,mBAAmB9Y,KAAK,MACX,QAAlB8a,EAAAtd,KAAK2b,qBAAa,IAAA2B,GAAlBA,EAAoBtB,IAAI,SAACH,GAAO,OAAMA,EAAQna,OAAQ,CAAK,GAC3D1B,KAAKyb,UAAUjZ,KAAKxC,KAAK2b,eACzB3b,KAAKob,uBAAuB5Y,MAAK,EACrC,GAAC,CAAAf,IAAA,YAAAC,MAED,WAAS,IAAA6b,EACY,QAAjBA,EAAAvd,KAAKwd,oBAAY,IAAAD,GAAjBA,EAAmBE,aACvB,KAACxC,EAjEA,IAAAa,CAiEA,CAlF6B,GAArBb,SAAqB,mBAAAhb,iBAArBgb,GAAqB/a,EAAAwd,mBAAA/U,EAAA4M,kBAAA,EAArB0F,EAAqB,WAAA/a,EAAA,oCAArB+a,EAAqB0C,QAArB1C,EAAqB2C,UAAAC,WAFlB,SAEH5C,CAAqB,8ICPlC,IAAAxB,EAAA3b,EAAA,UAIAA,EAAA,OACAA,EAAA,OACAA,EAAA,mNCqBoBoC,EAAAqN,yBAAA,cAIIrN,EAAAuN,iBAAA,gBACJvN,EAAAsN,mDAeQtN,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAA6M,GAEA5d,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAmQ,EAAAnI,cAAAmI,EAAAnK,KAAA,2GAjBZzT,EAAAqN,yBAAA,sBAAArN,CAMC,mBAIOA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAa,GAAA,IAAAC,EAAAhS,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAAU,EAAA4D,YAAA3E,GAAmB,iCAGpCjR,EAAAiS,qBAAA,EAAA4L,EAAA,mDAMJ7d,EAAAsN,wBAAAtN,EAAa,4CAVTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAArE,EAAAuE,UAAAhW,CAA4B,iBAAAA,EAAA0R,0BAAA,EAAAoF,IAKR9W,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAArE,EAAAyE,WAAA,+DAqEhClW,EAAAqN,yBAAA,QAAArN,CAA+C,WAA/CA,CAA+C,UAEhCA,EAAAuN,iBAAA,GAAkBvN,EAAAsN,yBACzBtN,EAAAqN,yBAAA,qBACIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAA6M,EAAA9d,EAAAkR,wBAAAwE,GAAA,OAAa1V,EAAAsR,sBAAbwM,EAAAC,UAAavc,MAAAyP,EACnC,EADsBjR,CAA2B,oBAAAA,EAAAkR,wBAAAwE,GAAA,IAAAU,EAAApW,EAAAqR,wBAAA,UAGjBrR,EAAAsR,sBAAA8E,EAAA+F,sBAAqB,GAClCnc,EAAAsN,wBAAAtN,IAAe,2BANTA,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAuQ,EAAAvK,KAAA,IAEHzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAiN,EAAAxc,MAAAxB,CAA2B,iBAAAA,EAAA0R,0BAAA,EAAAoF,GAAA,+DA1HnD9W,EAAAqN,yBAAA,WAAArN,CAAsC,cAAtCA,CAAsC,UAAtCA,CAAsC,UAAtCA,CAAsC,cAQCA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+M,GAAA,IAAAC,EAAAle,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA4M,EAAAC,aAAY,GACxCne,EAAAqN,yBAAA,gBAEKrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAIdA,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,oBAAavN,EAAAsN,wBAAAtN,OAK7BA,EAAAqN,yBAAA,cAAArN,CAAqE,WAArEA,CAAqE,aAInCA,EAAAuN,iBAAA,cAAOvN,EAAAsN,yBAEjCtN,EAAAqN,yBAAA,aACIrN,EAAAiS,qBAAA,GAAAmM,EAAA,+CAOApe,EAAAiS,qBAAA,GAAAoM,EAAA,wDAsBAre,EAAAqN,yBAAA,YAAArN,CAA2B,eAEnBA,EAAAuN,iBAAA,aACJvN,EAAAsN,yBACAtN,EAAAyJ,oBAAA,sBAKAzJ,EAAAqN,yBAAA,YAAArN,CAA4C,YAA5CA,CAA4C,eAKhCA,EAAAuN,iBAAA,oBACJvN,EAAAsN,yBAEAtN,EAAAqN,yBAAA,sBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA+M,GAAA,IAAAvH,EAAA1W,EAAAqR,0BAAA,OAE7BrR,EAAAsR,sBAAAoF,EAAAlG,KAAAe,WAAA,CAAAM,KAAAZ,IACL,GAC+BjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAAgD,eAIxCA,EAAAuN,iBAAA,kBACJvN,EAAAsN,yBACAtN,EAAAyJ,oBAAA,0BAOJzJ,EAAAsN,wBAAAtN,WAOpBA,EAAAqN,yBAAA,eAAArN,CAAqE,WAArEA,CAAqE,aAInCA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,YAAArN,CAAgC,WACtBA,EAAAuN,iBAAA,gCAAyBvN,EAAAsN,yBAC/BtN,EAAAyJ,oBAAA,sBACJzJ,EAAAsN,wBAAAtN,KAIRA,EAAAqN,yBAAA,gBAAArN,CAA+C,YAA/CA,CAA+C,aAEbA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBAEpCtN,EAAAiS,qBAAA,GAAAqM,EAAA,6CAWJte,EAAAsN,wBAAAtN,GAGJA,EAAAqN,yBAAA,gBAAArN,CAEC,gBAKOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+M,GAAA,IAAAM,EAAAve,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAiN,EAAAC,eAAc,GAGvBxe,EAAAqN,yBAAA,cAAerN,EAAAuN,iBAAA,oBAAavN,EAAAsN,wBAAAtN,MAAO,+CA9I5BA,EAAA+Q,qBAAA,YAAAsB,EAAA7B,MA8BExQ,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,eAAA0N,EAAAze,EAAA8V,sBAAA,MAAAzD,EAAA6D,YAAA,KAAAuI,EAAAtZ,QAAA,GAUAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAkF,EAAAjW,EAAA8V,sBAAA,MAAAzD,EAAA6D,YAAA,KAAAD,EAAA9Q,QAAA,GAsBGnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsB,EAAAqM,SAaQ1e,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAsB,EAAA7B,KAAA,KAAA6B,EAAA7B,KAAAhP,MAAAqQ,KAAA7R,CAA4B,iBAAAA,EAAA0R,0BAAA,GAAAoF,IAc5B9W,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAsB,EAAA7B,KAAA,KAAA6B,EAAA7B,KAAAhP,MAAAqQ,KAAA7R,CAAyB,UAAzBA,CAAyB,SAAzBA,CAAyB,WA6BpBA,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,MAAAzD,EAAAmJ,WAAA,EDvG5B9b,uBAAoB,eAApBif,EAAoB,WAQ7B,SAAAA,EAC0C/b,EAC9Bgc,EACAC,EACA9E,EACA9Y,GAAyB,IAAAG,EAAAtB,KAAAD,EAAAC,KAAA6e,GAJK7e,KAAA8C,OAC9B9C,KAAA8e,kBACA9e,KAAA+e,yBACA/e,KAAAia,SACAja,KAAAmB,OAZHnB,KAAAoW,UAAYpW,KAAKmB,KAAKqX,cACtBxY,KAAAkW,SAAWlW,KAAKmB,KAAKoX,gBAC9BvY,KAAA4e,QAAgB,IAAInE,KAGJza,KAAA8V,YAAc,SAACkJ,GAAC,OAAK1d,EAAKH,KAAK+U,SAAW8I,CAAC,CAQxD,CAAClf,SAAA+e,EAAA,EAAApd,IAAA,WAAAC,MAEJ,WACI1B,KAAK0b,UAAY1b,KAAK+e,uBAAuBrD,SACjD,GAAC,CAAAja,IAAA,OAAAkE,IAED,WACI,OAAO3F,KAAKia,OAAOvJ,IACvB,GAAC,CAAAjP,IAAA,eAAAC,MAED,WACI1B,KAAK8e,gBAAgBG,QAAQjf,KAAK0Q,MAClC1Q,KAAK+e,uBAAuB/B,aAChC,GAAC,CAAAvb,IAAA,sBAAAC,MAED,WACI1B,KAAK+e,uBAAuB1C,qBAChC,GAAC,CAAA5a,IAAA,aAAAC,MAED,WACI1B,KAAK8e,gBAAgBG,SACzB,KAACJ,CAAA,CAnC4B,GAApBA,SAAoB,mBAAA5e,iBAApB4e,GAAoB3e,EAAAwI,4BASjB+Q,EAAAyF,uBAAqBhf,EAAAwI,4BAAAC,EAAAwW,mBAAAjf,EAAAwI,4BAAAG,EAAAoS,uBAAA/a,EAAAwI,4BAAAK,EAAAwM,kBAAArV,EAAAwI,4BAAAO,EAAAH,qBAAA,EATxB+V,EAAoB,UAAA3e,EAAA,kCAApB2e,EAAoB1V,UAAA,yBAAAiW,MAAAvN,EAAAvI,MAAA,EAAAC,KAAA,EAAA+D,OAAA,wwDAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IChBjCvJ,EAAAqN,yBAAA,WACIrN,EAAAiS,qBAAA,EAAAkN,EAAA,gBAkJJnf,EAAAsN,gCAlJWtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAgH,yTDeEmO,CAAoB,gJEhBjC,IAAA5U,EAAAnM,EAAA,UACAA,EAAA,sCAOa8B,yBAAsB,eAAtB0f,EAAsBxf,EALnC,SAAAwf,IAAA,IAAAhe,EAAAtB,KAAAD,EAAAC,KAAAsf,GAOoBtf,KAAAuf,UAAoB,EACnBvf,KAAAwf,eAAiB,IAAIvV,EAAAwV,aAE7Bzf,KAAA0f,eAAiB,kBAAMpe,EAAKke,eAAeG,MAAMre,EAAKie,SAAS,IAL/DD,SAAsB,mBAAArf,iBAAtBqf,EAAsB,EAAtBA,EAAsB,UAAApf,EAAA,kCAAtBof,EAAsBnW,UAAA,sBAAAyW,OAAA,CAAA/C,MAAA,QAAA0C,SAAA,YAAAM,QAAA,CAAAL,eAAA,kBAAAlW,MAAA,GAAAC,KAAA,EAAA+D,OAAA,iOAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICRnCvJ,EAAAqN,yBAAA,cAKIrN,EAAA8Q,qBAAA,0BAAStH,EAAAgW,gBAAgB,GAEzBxf,EAAAqN,yBAAA,UAAArN,CAAyD,gBAC3BA,EAAAuN,iBAAA,kBAAYvN,EAAAsN,yBACtCtN,EAAAqN,yBAAA,SACKrN,EAAAuN,iBAAA,GACuCvN,EAAAsN,wBAAAtN,GAGhDA,EAAAqN,yBAAA,UAAArN,CAAyD,gBAC3BA,EAAAuN,iBAAA,WAAKvN,EAAAsN,yBAC/BtN,EAAAqN,yBAAA,SAAKrN,EAAAuN,iBAAA,IAAiCvN,EAAAsN,wBAAAtN,YAb1CA,EAAA4f,sBAAA,aAAApW,EAAA6V,SAAArf,CAA6B,aAAAwJ,EAAA6V,UAOpBrf,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,UAAArW,EAAAmT,OAAA,MAAAnT,EAAAmT,MAAA3F,MAAA,KAAAxN,EAAAmT,MAAA3F,MAAAvB,gBAAA,MAAAjM,EAAAmT,OAAA,MAAAnT,EAAAmT,MAAA3F,MAAA,KAAAxN,EAAAmT,MAAA3F,MAAAvD,MAAA,YAAAjK,EAAAmT,MAAA,KAAAnT,EAAAmT,MAAAlH,gBAAA,MAAAjM,EAAAmT,MAAA,KAAAnT,EAAAmT,MAAAlJ,MAAA,IAMAzT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAmT,MAAA,KAAAnT,EAAAmT,MAAAmD,WAAA,4DDRAV,CAAsB,8PEPnCxhB,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MAHA,IAKAkc,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,OACAmiB,EAAAniB,EAAA,OAKA0C,GAJA1C,EAAA,OACAA,EAAA,OAEAA,EAAA,MACAA,EAAA,WAEAA,EAAA,gPCWwBoC,EAAAqN,yBAAA,UACIrN,EAAAuN,iBAAA,iCAEJvN,EAAAsN,kEAFItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,KAAAzN,EAAA8V,sBAAA,IAAAzD,EAAAgJ,oBAAAlW,OAAA,+EAmEAnF,EAAAqN,yBAAA,wBAIIrN,EAAA8Q,qBAAA,0BAAAG,IAAA,IAAA+O,GAAAhgB,EAAAkR,wBAAA+M,GAAAF,UAAAG,GAAAle,EAAAqR,wBAAA,UAE1BrR,EAAAsR,sBAAA4M,GAAA+B,gBAAAD,GAAA/O,IACJ,GAE0BjR,EAAAsN,wBAAA,8DAPItN,EAAA+Q,qBAAA,QAAAiP,GAAAhgB,CAAe,WAAAkgB,GAAAC,WAAAH,GAAAzM,IAAA,8BAHvBvT,EAAAqN,yBAAA,SACIrN,EAAAiS,qBAAA,EAAAmO,EAAA,wDAUJpgB,EAAAsN,mEAT0BtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAuK,EAAArF,SAAA,8BA+BVhb,EAAAqN,yBAAA,mBAKKrN,EAAAuN,iBAAA,GAAevN,EAAAsN,mDADhBtN,EAAA+Q,qBAAA,QAAAuP,GACCtgB,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAkM,EAAAtJ,MAAA,kEAnBjBhX,EAAAqN,yBAAA,QAAArN,CAA8C,sBAA9CA,CAA8C,mBAMlCA,EAAA8Q,qBAAA,yBAAAG,IAAAjR,EAAAkR,wBAAAqP,GAAA,IAAAjJ,GAAAtX,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAAgG,GAAAkJ,eAAAvP,GAAA,EAAAjR,CAA4B,yBAAAiR,IAAAjR,EAAAkR,wBAAAqP,GAAA,IAAA3I,GAAA5X,EAAAqR,wBAAA,UAGnDrR,EAAAsR,sBAAAsG,GAAA6I,oBAAAxP,IACf,GACsCjR,EAAAqN,yBAAA,iDACKrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,yBAEftN,EAAAiS,qBAAA,EAAAyO,EAAA,mDAOJ1gB,EAAAsN,wBAAAtN,IAAa,8CAfTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA2F,GAAA8J,gBAKYxgB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA8V,sBAAA,IAAAY,GAAAiK,aAMzB3gB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAY,GAAAiK,YAAA,8BAcS3gB,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,wGAQJzJ,EAAAsN,mFAPQtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAA6P,EAAA,KAAAA,EAAAlN,OAAA1T,CAAmB,SAAAA,EAAA8V,sBAAA,IAAA+K,GAAAC,aAAnB9gB,CAAmB,WAAAA,EAAA8V,sBAAA,IAAA+K,GAAAE,eAAnB/gB,CAAmB,UAAAA,EAAA8V,sBAAA,IAAA+K,GAAAG,cAAA,8BAN/BhhB,EAAAqN,yBAAA,SACIrN,EAAAiS,qBAAA,EAAAgP,EAAA,eAaJjhB,EAAAsN,mEAZwBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAmQ,EAAAV,eAAA,8BAexBxgB,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,wGAQJzJ,EAAAsN,mEAPQtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAoQ,EAAAX,eAAA,KAAAW,EAAAX,eAAA9M,OAAA1T,CAA8B,SAAAA,EAAA8V,sBAAA,IAAAqL,EAAAL,aAA9B9gB,CAA8B,WAAAA,EAAA8V,sBAAA,IAAAqL,EAAAJ,eAA9B/gB,CAA8B,UAAAA,EAAA8V,sBAAA,IAAAqL,EAAAH,cAAA,8BA3B1ChhB,EAAAqN,yBAAA,YAKIrN,EAAAiS,qBAAA,EAAAmP,EAAA,cAiBAphB,EAAAiS,qBAAA,EAAAoP,EAAA,eAaJrhB,EAAAsN,mEA9BUtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAwN,EAAAiC,eAAA,KAAAjC,EAAAiC,eAAArb,QAkBDnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAwN,EAAAiC,gBAAAjC,EAAAiC,eAAArb,QAAA,8BAvDbnF,EAAAqN,yBAAA,YAOIrN,EAAAiS,qBAAA,EAAAqP,EAAA,4CAyBAthB,EAAAiS,qBAAA,EAAAsP,EAAA,cAoCJvhB,EAAAsN,sEA7DUtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAyQ,GAAAxhB,EAAA8V,sBAAA,IAAAH,EAAAgL,aAAA,KAAAa,GAAArc,QAAA,GA0BDnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA4E,EAAA6K,eAAA,+BAhDbxgB,EAAAyhB,kCAAA,GAGIzhB,EAAAiS,qBAAA,EAAAyP,EAAA,cAYA1hB,EAAAiS,qBAAA,EAAA0P,EAAA,4CAsEA3hB,EAAAqN,yBAAA,UACIrN,EAAAuN,iBAAA,oCACJvN,EAAAsN,yBACJtN,EAAA4hB,+EArFU5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAA8Q,EAAAC,YAaD9hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAA8Q,EAAAC,aAAA,OAAArD,GAAAze,EAAA8V,sBAAA,IAAA+L,EAAAd,gBAAA,KAAAtC,GAAAtZ,QAAA,gCAjBbnF,EAAAyhB,kCAAA,GACIzhB,EAAAiS,qBAAA,EAAA8P,GAAA,qDAyFJ/hB,EAAA4hB,6GAxFS5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAyQ,GAAAxhB,EAAA8V,sBAAA,IAAAC,EAAAiF,UAAA,KAAAwG,GAAArc,QAAA,EAAAnF,CAAqC,WAAAgiB,GAAA,4BA2F1ChiB,EAAAqN,yBAAA,YAGIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,oCAA8BvN,EAAAsN,wBAAAtN,WADpBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,0CAKjB/Q,EAAAqN,yBAAA,WAAArN,CAEC,OAEOA,EAAAuN,iBAAA,mEAEJvN,EAAAsN,wBAAAtN,qEAQZA,EAAAqN,yBAAA,QAAArN,CAAwC,eAIhCA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+Q,GAAA,IAAAC,GAAAliB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA4Q,GAAAC,kBAAiB,GAG1BniB,EAAAqN,yBAAA,aAAerN,EAAAuN,iBAAA,eAASvN,EAAAsN,wBAAAtN,IAAO,EDvKtCN,qBAAmB,eAAnBJ,GAAmB,SAAAqB,IAAAC,EAAAtB,GAAAqB,IAAA,IAuB3BE,GAvB2BC,EAAAC,EAAAzB,IA6D5B,SAAAA,GACY8iB,GACAnhB,GACAohB,GACAtI,GACA8E,GACAyD,GACAC,GACAjS,IAAe,IAAAlP,GAAAvB,SAAAC,KAAAR,KAEvB8B,GAAAN,EAAAO,KAAAvB,OATQsiB,gBACAhhB,GAAAH,QACAG,GAAAihB,WACAjhB,GAAA2Y,UACA3Y,GAAAyd,0BACAzd,GAAAkhB,eACAlhB,GAAAmhB,uBACAnhB,GAAAkP,WAhEZlP,GAAAohB,gBAA2B,GAC3BphB,GAAAqhB,sBAA0C3I,EAAAO,KAAG,GAM7CjZ,GAAAshB,cAAkD,IAAI5I,EAAAqB,gBAEpD,MACF/Z,GAAA4f,aAAyC,KACzC5f,GAAA0f,YAA0C,KASnC1f,GAAA+e,WAA+B,GAC/B/e,GAAAuhB,WAAsB,GACtBvhB,GAAAwhB,iBAAmB,CACtB,CAAEnP,KAAM,eAAgBjS,MAAO,GAC/B,CAAEiS,KAAM,gBAAiBjS,MAAO,GAChC,CAAEiS,KAAM,kBAAmBjS,MAAO,GAClC,CAAEiS,KAAM,kBAAmBjS,MAAO,IAClC,CAAEiS,KAAM,aAAcjS,MAAO,KAGjBJ,GAAA8U,UAAY9U,GAAKH,KAAKqX,cACtBlX,GAAA4U,SAAW5U,GAAKH,KAAKoX,gBAErBjX,GAAAyhB,UAAS/I,EAAAgJ,eAAc,CACnC1hB,GAAK4U,SACL5U,GAAK2Y,OAAOgJ,UACb9f,QACC7C,EAAA4b,QAAO,SAAA5V,IAAG,QAAH4c,EAAA5c,GAAA,GAAG,EAAS,MACnBhG,EAAA0b,KAAI,SAAAmH,IAAA,IAAAC,GAAAF,EAAAC,GAAA,GAAK,OACL,CACI1P,GAAInS,GAAKH,KAAK+U,SAASzC,GACvBE,KAAM,eACTvP,OAAAif,EACE/hB,GAAKH,KAAKmiB,kBALRF,GAAA,KAK8B,IAI3B9hB,GAAAiiB,QAAUjiB,GAAK2Y,OAAOsJ,QACtBjiB,GAAA2hB,QAAU3hB,GAAK2Y,OAAOgJ,QAEtB3hB,GAAA4Z,QAA+B5Z,GAAK2Y,OAAOkB,iBAC3C7Z,GAAA8H,SAAW9H,GAAKihB,QAAQnZ,SAExB9H,GAAAwU,YAAc,SAACkJ,IAAC,OAAM1d,GAAKH,KAAK+U,SAAW8I,EAAC,EAC5C1d,GAAAyR,WAAa,SAACyQ,IAAC,OAAKliB,GAAK2Y,OAAOlH,WAAWyQ,GAAE,EAACliB,EAa9D,CAACxB,SAAAN,GAAA,EAAAiC,IAAA,OAAAkE,IAnDD,WACI,OAAO3F,KAAKia,OAAOvJ,IACvB,GAAC,CAAAjP,IAAA,WAAAC,OAAAX,GAAAY,EAAAC,IAAAC,KAmDM,SAAAC,KAAA,IAAAia,GAAA0H,GAAAte,GAAAnF,KAAA,OAAA4B,IAAAS,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OACH,OAAAxC,KAAKgiB,WAAa,WAElBhiB,KAAKub,mBACDvb,KAAK+e,uBAAuBxD,mBAChCvb,KAAKia,OAAO3E,QAAQ,QACpBtV,KAAK0jB,eAAephB,GAAAE,KAAA,EAEdxC,KAAKmB,KAAK+B,YAAYC,QAAK7C,EAAA8C,OAAM,SAACC,IAAC,QAAOA,EAAC,IAAGC,YAAW,OAAAhB,UAAAE,KAAA,EACzDxC,KAAKuiB,QAAQrf,YAAYC,QAAK7C,EAAA8C,OAAM,SAACC,IAAC,QAAOA,EAAC,IAAGC,YAAW,OAAAhB,UAAAE,KAAA,GAC5DxC,KAAKia,OAAOkB,iBAAiBhY,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,QAE5D,OAAAtD,KAAK8V,YAAY9V,KAAKmB,KAAK+U,UAC3BlW,KAAKqgB,WAAa,GAClBrgB,KAAKiT,aACD,WACuB,QADb8I,GACV/b,KAAKub,0BAAkB,IAAAQ,QAAA,EAAvBA,GAAyB5I,UAAU,SAACwQ,IAAC,OACjCxe,GAAK4N,WAAW,CAAE3J,SAAUua,IAAK,IAAK,IAE5CrhB,GAAAE,KAAA,GAEIxC,KAAKwiB,YAAYoB,aAAa5jB,KAAKkb,SAAQ,QAEjD,OAAAlb,KAAK6jB,kBAAoB7jB,KAAKwiB,YAAYqB,kBAE1C7jB,KAAK6gB,WAAwC,QAA9B4C,GAAGzjB,KAAKwiB,YAAY3B,kBAAU,IAAA4C,QAAA,EAA3BA,GAA6BtgB,QAC3C7C,EAAAwjB,KAAI,SAACC,IAAI,OAAM5e,GAAKub,eAAiBqD,EAAI,IAC3CzhB,GAAAE,KAAA,GAEIxC,KAAKwiB,YAAYwB,iBAClB7gB,QAAK7C,EAAA8C,OAAM,SAACC,IAAC,QAAOA,EAAC,IACrBC,YAAW,QAEhBtD,KAAKikB,sBAELjkB,KAAK4iB,cAAcpgB,KAAKxC,KAAKwiB,YAAY0B,cACzClkB,KAAKihB,cAAgBjhB,KAAK4iB,cAAcpH,eACxCxb,KAAKkhB,aAAelhB,KAAKwiB,YAAYtB,aAAa,yBAAA5e,GAAAwC,OAAA,EAAAhD,GAAA9B,KAAA,IACrD,SAAA+E,KAAA,OAAAhE,GAAAiE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,kBAAAC,MAEM,SAAgBmb,IAAkC,IAApBsH,KAAAlf,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GACjCjF,KAAKqgB,WAAWxD,GAAMpJ,IAAM0Q,GAC5BnkB,KAAKyiB,oBAAoBpC,WAAargB,KAAKqgB,WAC3CrgB,KAAKyiB,oBAAoBtC,gBAAgBtD,GAAOsH,IAChDnkB,KAAK2iB,sBAAqB3I,EAAAO,KAAG,GAC7Bva,KAAKyiB,oBAAoB2B,oBAAoBvH,GACjD,GAAC,CAAApb,IAAA,aAAAC,MAED,WACI1B,KAAKqkB,eAAiBrkB,KAAKsiB,aAAarN,KAAKgL,EAAApB,qBAAsB,CAC/D/b,KAAM9C,KAAKoW,WAEnB,GAAC,CAAA3U,IAAA,kBAAAC,MAED,WACI1B,KAAKyiB,oBAAoB6B,eAAetkB,KAAKukB,eACjD,GAAC,CAAA9iB,IAAA,aAAAC,MAED,WACI1B,KAAK2iB,sBAAqB3I,EAAAO,KAAG,EACjC,GAAC,CAAA9Y,IAAA,eAAAC,MAED,WAAY,IAAA8iB,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GACRhlB,KAAKwa,eAAcR,EAAAO,IACf,IAAIE,KAAc,QAAV+J,GAACxkB,KAAK0Q,YAAI,IAAA8T,IAAU,QAAVC,GAATD,GAAWS,gBAAQ,IAAAR,IAAM,QAANC,GAAnBD,GAAqB1S,YAAI,IAAA2S,QAAhB,EAATA,GAA2BhjB,OAAOgZ,mBACvC,QACA,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,KAGtD7a,KAAKklB,iBAA4B,QAAZP,GAAG3kB,KAAK0Q,YAAI,IAAAiU,IAAU,QAAVC,GAATD,GAAWM,gBAAQ,IAAAL,IAAU,QAAVC,GAAnBD,GAAqB5S,gBAAQ,IAAA6S,QAApB,EAATA,GAA+BnjB,MACvD,IAAMyjB,IACO,QAATL,GAAA9kB,KAAK0Q,YAAI,IAAAoU,IAAU,QAAVC,GAATD,GAAWG,gBAAQ,IAAAF,IAAM,QAANC,GAAnBD,GAAqBhT,YAAI,IAAAiT,QAAhB,EAATA,GAA2BtjB,OACH,GAAxB1B,KAAKklB,iBAAwB,IACjCllB,KAAK8a,aAAYd,EAAAO,IACb,IAAIE,KAAK0K,IAAKzK,mBAAmB,QAAS,CACtCC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGpB,GAAC,CAAApZ,IAAA,sBAAAC,MAED,SAAoB0jB,IAAC,IAAAC,GACjBrlB,KAAK0gB,eAAiB0E,GACE,QAApBC,GAACrlB,KAAK0gB,sBAAc,IAAA2E,IAAnBA,GAAqBhgB,QACtBrF,KAAKikB,qBAEb,GAAC,CAAAxiB,IAAA,sBAAAC,MAED,WAAmB,IAAA8E,GAAAxG,KACfA,KAAK6D,QACD,OACA,WACI2C,GAAK8e,iBACL9e,GAAK+e,eACT,EACA,KAER,GAAC,CAAA9jB,IAAA,iBAAAC,MAED,WACI1B,KAAKihB,cAAgBjhB,KAAKwiB,YAAYvB,aAC1C,GAAC,CAAAxf,IAAA,gBAAAC,MAED,WACI1B,KAAKghB,eAAchH,EAAAO,IAAG,CAACva,KAAKwiB,YAAYgD,WAC5C,GAAC,CAAA/jB,IAAA,aAAAC,MAED,WACI1B,KAAKwQ,QAAQK,SAAS,CAAC,iBACvB7Q,KAAK+e,uBAAuB0G,aAChC,KAACjmB,EAAA,CAzL2B,CAAQgB,EAAAiI,cAA3BjJ,UAAmB,mBAAAS,iBAAnBT,IAAkBU,EAAAwI,4BAAAC,EAAA6M,gBAAAtV,EAAAwI,4BAAAG,EAAAC,qBAAA5I,EAAAwI,4BAAAK,EAAA2c,eAAAxlB,EAAAwI,4BAAAO,EAAAsM,kBAAArV,EAAAwI,4BAAAid,EAAA1K,uBAAA/a,EAAAwI,4BAAAkd,EAAAC,YAAA3lB,EAAAwI,4BAAAod,EAAAC,oBAAA7lB,EAAAwI,4BAAAsd,EAAA3Y,QAAA,EAAlB7N,GAAmB,UAAAU,EAAA,kCAAnBV,GAAkB2J,UAAA,iBAAAC,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,q0EAAA9D,SAAA,SAAAC,EAAAC,OAAA,EAAAD,IC5C/BvJ,EAAAqN,yBAAA,UAAArN,CAA6E,cAA7EA,CAA6E,UAA7EA,CAA6E,UAA7EA,CAA6E,cAIrDA,EAAA8Q,qBAAA,0BAAStH,GAAA2U,YAAY,GACzBne,EAAAqN,yBAAA,gBAEKrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAIdA,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,iBAAUvN,EAAAsN,wBAAAtN,GAIlBA,EAAAqN,yBAAA,UAAArN,CAA6D,WAA7DA,CAA6D,eAKjDA,EAAA8Q,qBAAA,0BAAStH,GAAAuc,YAAY,GAGrB/lB,EAAAqN,yBAAA,WAAMrN,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAEZtN,EAAAiS,qBAAA,GAAA+T,EAAA,8CAIJhmB,EAAAsN,wBAAAtN,GAGJA,EAAAqN,yBAAA,YAAArN,CAAyB,iCAGjBA,EAAA8Q,qBAAA,yBAAAG,IAAA,OAAAzH,GAAAsY,WAAA7Q,EAAA,EAAAjR,CAAwB,2BACdwJ,GAAAyc,YAAY,GAGtBjmB,EAAAqN,yBAAA,0BAAArN,CAGK,cACIA,EAAAuN,iBAAA,UAAGvN,EAAAsN,wBAAAtN,GAGZA,EAAAqN,yBAAA,0BAAArN,CAGK,cACIA,EAAAuN,iBAAA,WAAIvN,EAAAsN,wBAAAtN,SAOzBA,EAAAyJ,oBAAA,iBAqBAzJ,EAAAqN,yBAAA,gBAAArN,CAA6C,YAA7CA,CAA6C,cAECA,EAAAuN,iBAAA,eAAOvN,EAAAsN,yBAC7CtN,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,mCAAkDvN,EAAAsN,wBAAAtN,KAK9DA,EAAAqN,yBAAA,aACIrN,EAAAiS,qBAAA,GAAAiU,EAAA,sDA4FAlmB,EAAAiS,qBAAA,GAAAkU,GAAA,0BAAAnmB,EAAAomB,kCAQApmB,EAAAiS,qBAAA,GAAAoU,GAAA,0BAAArmB,EAAAomB,kCAUJpmB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,iBAGIrN,EAAAiS,qBAAA,GAAAqU,GAAA,6CAUJtmB,EAAAsN,wBAAAtN,oDA5LuBA,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,cAAAyQ,GAAAxhB,EAAA8V,sBAAA,KAAAtM,GAAA6R,qBAAA,KAAAmG,GAAArc,QAUPnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,GAAAsY,YA+CA9hB,EAAAwN,oBAAA,IAAAxN,EAAAyN,6BAAA,YAAAwI,GAAAjW,EAAA8V,sBAAA,KAAAtM,GAAAwR,UAAA,KAAA/E,GAAA9Q,SAAA,oBAMOnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA8V,sBAAA,MAAAtM,GAAA6Z,SAAArjB,CAA0B,WAAAumB,IAmHvCvmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA/Q,EAAA8V,sBAAA,MAAAtM,GAAAiZ,oBAAA,2xBDhKLnjB,EAAmB,mOE3ChC,IAAAwa,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,OAGAK,EAAAL,EAAA,OAEA0C,EAAA1C,EAAA,OAEA4oB,GADA5oB,EAAA,OACAA,EAAA,UACAA,EAAA,qCAkBa8B,aAAW,eAAXimB,EAAW,SAAAhlB,GAAAC,EAAA+kB,EAAAhlB,GAAA,IAwDnB8lB,EAxDmB3lB,EAAAC,EAAA4kB,GA8DpB,SAAAA,EACYvD,EACAG,GAAuC,IAAAnhB,EAAAvB,SAAAC,KAAA6lB,IAE/CvkB,EAAAN,EAAAO,KAAAvB,OAHQsiB,eACAhhB,EAAAmhB,sBA9DLnhB,EAAAkkB,UAA0B,GAGzBlkB,EAAAshB,cACJ,IAAI5I,EAAAqB,gBAAiC,IAClC/Z,EAAA2f,cACH3f,EAAKshB,cAAcpH,eAYfla,EAAAslB,YACJ,IAAI5M,EAAAqB,iBAAyB,GACxB/Z,EAAAulB,YAAmCvlB,EAAKslB,YAAYpL,eAErDla,EAAAwlB,iBACJ,IAAI9M,EAAAqB,iBAAyB,GACxB/Z,EAAA0iB,iBACL1iB,EAAKwlB,iBAAiBtL,eAE1Bla,EAAAylB,gBACIzlB,EAAKmhB,oBAAoBsE,gBAGrBzlB,EAAA0lB,kBACJ,IAAIhN,EAAAqB,gBAA6B,IAErC/Z,EAAAuiB,kBACIviB,EAAK0lB,kBAAkBxL,eAWnBla,EAAA2lB,WAA0C,IAAIjN,EAAAqB,gBAClD,IAGJ/Z,EAAAuf,WAA8Bvf,EAAK2lB,WAAWzL,eAAela,CAe7D,CAACxB,SAAA+lB,EAAA,EAAApkB,IAAA,eAAAkE,IAzDD,WACI,OAAO3F,KAAK4iB,cAAc3J,UAC9B,EAAC2C,IAED,SAAiBxS,GACbpJ,KAAK4iB,cAAcpgB,KAAK4G,EAC5B,GAAC,CAAA3H,IAAA,mBAAAkE,IA2BD,WACI,OAAO3F,KAAKgnB,kBAAkB/N,UAClC,EAAC2C,IAND,SAAqBiB,GACjB7c,KAAKgnB,kBAAkBxkB,KAAKqa,EAChC,GAAC,CAAApb,IAAA,YAAAkE,IAiBD,WACI,OAAO3F,KAAKinB,WAAWhO,UAC3B,EAAC2C,IAND,SAAcI,GACVhc,KAAKinB,WAAWzkB,KAAKwZ,EACzB,GAAC,CAAAva,IAAA,eAAAC,OAAAilB,EAAAhlB,EAAAC,IAAAC,KAaD,SAAAC,EAAmBqZ,GAAqC,IAAA+L,EAAA/hB,EAAAnF,KAAA,OAAA4B,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EAC9C2Y,GAAkBhY,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,OAEjD6X,UAAkBhI,UACd,SAACyJ,GAAM,OACFzX,EAAKgiB,iBAAmBvK,GAAQZ,IAAI,SAACa,GAAK,MAAM,CAC7CpJ,GAAIoJ,EAAMpJ,GACVE,KAAMkJ,EAAMlJ,KACZC,OAAQiJ,EAAMjJ,OACdsD,MAAO2F,EAAM3F,MAChB,EAAE,GACT5U,EAAAE,KAAA,EAC0B,QAD1B0kB,EACIlnB,KAAK6jB,yBAAiB,IAAAqD,OAAA,EAAtBA,EAAwB/jB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,QAAOA,CAAC,IAAGC,YAAW,OAAAhB,SAAAE,KAAA,EAC3DxC,KAAKonB,UAAS,OAAA9kB,SAAAE,KAAA,EACdxC,KAAK6D,QACP,OACA,WACIsB,EAAKmgB,gBACT,EACA,KACH,OAAAhjB,SAAAE,KAAA,GAEKxC,KAAKulB,gBAAe,QAE1BvlB,KAAKkhB,aAAe/F,GAAkBhY,QAClC7C,EAAA0b,KAAI,SAACY,GAAe,OAChBA,EAAOZ,IACH,SAACa,GAAY,MACR,CACGpJ,GAAIoJ,EAAMjJ,OACVyT,OAAQ,QACRC,SAAU,WACNniB,EAAKoiB,aAAa1K,EACtB,EACY,EACvB,IAEP,yBAAAva,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACL,SAAA4jB,EAAAvG,GAAA,OAAAsJ,EAAA3hB,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,UAAAC,MAAA,eAAA8lB,EAAA7lB,EAAAC,IAAAC,KAED,SAAA0D,IAAA,IAAAkiB,EAAAC,EAAA,OAAA9lB,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACIxC,KAAK4mB,YAAYpkB,MAAK,GACtBxC,KAAK6gB,WAAmC,QAAzB4G,EAAGznB,KAAK6jB,yBAAiB,IAAA4D,OAAA,EAAtBA,EAAwBtkB,QACtC7C,EAAA0b,KAAI,SAACY,GAAmB,OACpBA,EAAOZ,IAAI,SAACa,GAAgB,MAAM,CAC9BjJ,OAAQiJ,EAAM3F,MAAMtD,OACpBsD,MAAO2F,EAAM3F,MAAMvD,KACtB,EAAE,IAIX3T,KAAK6gB,WAA4B,QAAlB6G,EAAG1nB,KAAK6gB,kBAAU,IAAA6G,OAAA,EAAfA,EAAiBvkB,QAC/B7C,EAAA0b,KAAI,SAAC2L,GAAoB,OAAAtE,EAClB,IAAIuE,IAAID,EAAS3L,IAAI,SAAC2H,GAAC,MAAK,CAACA,EAAE/P,OAAQ+P,EAAE,IAAGkE,SAAQ,IAI/D7nB,KAAK4mB,YAAYpkB,MAAK,GAAM,wBAAAiD,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAC/B,gBAAAonB,IAAA,OAAAI,EAAAxiB,MAAAhF,KAAAiF,UAAA,EApBA,IAoBA,CAAAxD,IAAA,iBAAAC,MAEM,WAEH,IAAIomB,EADJ9nB,KAAK8mB,iBAAiBtkB,MAAK,GAE3BxC,KAAK6jB,kBAAkB1Q,UAAU,SAACyJ,GAAM,OACpCA,EACOkL,EAAQlL,GAAQZ,IAAI,SAACa,GAAK,MAAM,CAC7B9W,SAAU8W,EAAMjJ,OAChBmU,QAAS5pB,EAAA6pB,gBACTllB,KAAM,CAAE6Q,KAAMkJ,EAAMlJ,MACpBsU,QAAS,GACTC,KAAM,IACT,GACD,EAAE,GAEZloB,KAAKkkB,aAAe4D,EACpB9nB,KAAK8mB,iBAAiBtkB,MAAK,EAC/B,GAAC,CAAAf,IAAA,gBAAAC,MAEM,WAIH1B,KAAKwlB,UAHwB,CAC7B2C,SAAmB,CAAEC,QAAS,QAC9BD,SAAmB,CAAEC,QAAS,QAElC,GAAC,CAAA3mB,IAAA,eAAAC,MACD,SAAamb,GACc7c,KAAKsiB,aAAarN,KAAKyR,EAAA2B,kBAAmB,CAC7DC,WAAY,2BACZxlB,KAAM+Z,IAGV7c,KAAKyiB,oBAAoBtC,gBAAgBtD,GAAO,EACpD,KAACgJ,CAAA,CAhKmB,CAAQrlB,EAAAiI,cAAnBod,SAAW,mBAAA5lB,iBAAX4lB,GAAU3lB,EAAAwd,mBAAA/U,EAAA6M,gBAAAtV,EAAAwd,mBAAA7U,EAAAkd,oBAAA,EAAVF,EAAW,WAAA3lB,EAAA,oCAAX2lB,EAAUlI,QAAVkI,EAAUjI,UAAAC,WAFP,SAEHgI,CAAW,oLC3BxB,IAAArlB,EAAA1C,EAAA,OAIAyqB,GAHAzqB,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,uPCFIoC,EAAAqN,yBAAA,WAAArN,CAAsC,cAAtCA,CAAsC,UAAtCA,CAAsC,YAOiBA,EAAAuN,iBAAA,gBAASvN,EAAAsN,yBAEpDtN,EAAAqN,yBAAA,UAAArN,CAA2B,UAA3BA,CAA2B,UAIbA,EAAAuN,iBAAA,OAACvN,EAAAsN,wBAAAtN,GAEXA,EAAAqN,yBAAA,WAAiCrN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,GAG5CA,EAAAqN,yBAAA,WAAArN,CAA2B,eACeA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBAChDtN,EAAAqN,yBAAA,wBACIrN,EAAAyJ,oBAAA,eAMJzJ,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,WAAArN,CAA2B,eACeA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBAC3CtN,EAAAyJ,oBAAA,sBAKJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAA2C,YAA3CA,CAA2C,eAG/BA,EAAAuN,iBAAA,oBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAqV,GAAA,IAAAxQ,EAAA/V,EAAAqR,0BAAA,OAAiBrR,EAAAsR,sBAAAyE,EAAAvF,KAAAe,WAAA,CAAAM,KAAAZ,IAAiC,GAGrDjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAAyC,eAEjCA,EAAAuN,iBAAA,kBACJvN,EAAAsN,yBACAtN,EAAAyJ,oBAAA,0BAQJzJ,EAAAsN,wBAAAtN,OAKZA,EAAAqN,yBAAA,gBAAArN,CAEC,WAFDA,CAEC,WAFDA,CAEC,WAFDA,CAEC,WAQqBA,EAAAuN,iBAAA,QAACvN,EAAAsN,wBAAAtN,GAEXA,EAAAqN,yBAAA,YAAiCrN,EAAAuN,iBAAA,gBAASvN,EAAAsN,wBAAAtN,GAG9CA,EAAAqN,yBAAA,WAAArN,CAA2B,eAEnBA,EAAAuN,iBAAA,sBACJvN,EAAAsN,yBAEAtN,EAAAqN,yBAAA,2BAIIrN,EAAA8Q,qBAAA,sBAAA9Q,EAAAkR,wBAAAqV,GAAA,IAAA3U,EAAA5R,EAAAqR,0BAAA,OAAYrR,EAAAsR,sBAAAM,EAAA0W,mBAAkB,GACjCtoB,EAAAsN,wBAAAtN,OAKbA,EAAAqN,yBAAA,gBAAArN,CAAgE,gBAKxDA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqV,GAAA,IAAAnV,EAAApR,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAF,EAAAmX,YAAW,GAGpBvoB,EAAAqN,yBAAA,cAAsBrN,EAAAuN,iBAAA,gBAASvN,EAAAsN,wBAAAtN,GAEnCA,EAAAqN,yBAAA,gBAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqV,GAAA,IAAA3P,EAAA5W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAsF,EAAArG,YAAW,GAGpBvQ,EAAAqN,yBAAA,cAAsBrN,EAAAuN,iBAAA,iBAAUvN,EAAAsN,wBAAAtN,MAAO,6CAhHhCA,EAAA+Q,qBAAA,YAAAsB,EAAA7B,MAgCCxQ,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,OAAAsB,EAAAmW,UAWIxoB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAsB,EAAA7B,KAAAhP,MAAAqQ,KAAA7R,CAA2B,iBAAAA,EAAA0R,0BAAA,EAAAC,IAW3B3R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAA0X,EAAApW,EAAA7B,KAAA/K,IAAA,cAAAgjB,EAAAjnB,MAAAxB,CAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,WAmCpCA,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,uBD1EXrR,uBAAoB,eAApBV,EAAoB,WAc7B,SAAAA,EAC8B0pB,EAClBxb,EACA6M,EACA8E,GAA6C,IAAAzd,EAAAtB,KAAAD,EAAAC,KAAAd,GAH3Bc,KAAA4oB,YAClB5oB,KAAAoN,SACApN,KAAAia,SACAja,KAAA+e,yBAjBL/e,KAAA6oB,aAAc,EACd7oB,KAAA8oB,aAAc,EAErB9oB,KAAA0oB,SAAiB,IAAIjO,KAMLza,KAAAyQ,UAAY,WACxBnP,EAAK2Y,OAAOxJ,WAChB,CAOG,CAAC3Q,SAAAZ,EAAA,EAAAuC,IAAA,OAAAkE,IAbJ,WACI,OAAO3F,KAAKia,OAAOvJ,IACvB,GAAC,CAAAjP,IAAA,WAAAC,MAaD,WACI1B,KAAKia,OAAO8O,UACZ/oB,KAAK+e,uBAAuB0G,aAChC,GAAC,CAAAhkB,IAAA,YAAAC,OAAAsnB,EAAArnB,EAAAC,IAAAC,KAED,SAAAC,IAAA,IAAAwE,EAAA,OAAA1E,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEoF,GADhFxC,KAAK0Q,KAAKuY,mBACLjpB,KAAK0Q,KAAKhP,MAAMiT,MAAM3U,KAAK0Q,KAAKe,WAAW,CAAEkD,KAAmB,QAAfrO,KAAEiiB,EAAAzhB,sBAAa,IAAAR,OAAA,EAAbA,EAAeU,QAClEhH,KAAK0Q,KAAKkE,MAAK,CAAAtS,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,iBAAArB,SAAAE,KAAA,EACdxC,KAAKia,OAAOiP,YAAW,OAC7BlpB,KAAKoN,OAAOyD,SAAS,CAAC,mBAAmB,wBAAAvO,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAC5C,SAAAyoB,IAAA,OAAAO,EAAAhkB,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,mBAAAC,MAED,WACIiB,OAAOsS,KAAK,sBAChB,KAAC/V,EAZA,IAAA8pB,CAYA,CApC4B,GAApB9pB,SAAoB,mBAAAe,iBAApBf,GAAoBgB,EAAAwI,4BAejBlI,EAAA2oB,UAAQjpB,EAAAwI,4BAAAC,EAAA0E,QAAAnN,EAAAwI,4BAAAG,EAAA0M,kBAAArV,EAAAwI,4BAAAK,EAAAkS,uBAAA,EAfX/b,EAAoB,UAAAgB,EAAA,kCAApBhB,EAAoBiK,UAAA,mBAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,wlDAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IClBjCvJ,EAAAqN,yBAAA,WAGIrN,EAAAiS,qBAAA,EAAAiX,EAAA,gBAoHJlpB,EAAAsN,gCApHWtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAgH,wbDeExR,CAAoB,iLEjBjCpB,EAAA,WACAkc,EAAAlc,EAAA,OAKAurB,GAJAvrB,EAAA,OACAA,EAAA,OACAA,EAAA,OAEAA,EAAA,QACAwrB,EAAAxrB,EAAA,UACAA,EAAA,wEAKa8B,qBAAkB,eAAlBmmB,EAAkB,WAoB3B,SAAAA,EACYzD,EACAlV,EACA6M,EACAsI,EACAgH,GAAsB,IAAAC,EAAAC,EAAAnoB,EAAAtB,KAAAD,EAAAC,KAAA+lB,GAJtB/lB,KAAAsiB,eACAtiB,KAAAoN,SACApN,KAAAia,SACAja,KAAAuiB,UACAviB,KAAAupB,cAvBLvpB,KAAAqgB,WAA+B,GAC/BrgB,KAAA6iB,WAAsB,GAE7B7iB,KAAA0pB,gBAA0C,IAAI1P,EAAAqB,gBAAuB,MACrErb,KAAA+mB,gBAAqC/mB,KAAK0pB,gBAAgBlO,eAqBtDxb,KAAKqgB,WAAa,KACgB,QAAhBmJ,EAAAxpB,KAAKia,OAAOvJ,YAAI,IAAA8Y,GAAkB,QAAlBC,EAAhBD,EAAkB7jB,IAAI,oBAAY,IAAA8jB,OAAlB,EAAhBA,EAAoC/nB,QAAS,IACrDioB,QAAQ,SAACtmB,GAAC,OAAM/B,EAAK+e,WAAWhd,EAAEoQ,KAAM,CAAI,GACtDzT,KAAK6iB,WAAa7iB,KAAKuiB,QAAQrG,OAAO,SAAC0N,GAAC,OAAKtoB,EAAK+e,WAAWuJ,EAAEnW,GAAG,EACtE,CAAC3T,SAAAimB,EAAA,EAAAtkB,IAAA,iBAAAkE,IAvBD,WACI,OAAO3F,KAAK0pB,gBAAgBzQ,UAChC,EAAC2C,IAED,SAAmBiB,GACf7c,KAAK0pB,gBAAgBlnB,KAAKqa,EAC9B,GAAC,CAAApb,IAAA,OAAAkE,IAED,WACI,OAAO3F,KAAKia,OAAOvJ,IACvB,GAAC,CAAAjP,IAAA,iBAAAC,OAAAmoB,EAAAloB,EAeD,eAAAwD,EAAAnF,KAAqB6c,EAAK5X,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAGjF,KAAKukB,eAAc,OAAA3iB,IAAAC,KAAA,SAAAC,IAAA,IAAAgoB,EAAA,OAAAloB,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACtCsnB,SAAmB3kB,EAAKmd,aAAarN,KAAKoU,EAAAU,qBAAsB,CAClEjnB,KAAM+Z,IACRva,EAAAE,KAAA,EAEIsnB,EACDzU,iBACAlC,UAAU,SAAC6W,GAAa,OACrBA,EAAgB7kB,EAAK8kB,gBAAgBD,GAAiB,IAAI,GAC7D,wBAAA1nB,EAAAwC,OAAA,EAAAhD,EAAA,EATuCF,EASvC,GACR,SAAA0iB,IAAA,OAAAuF,EAAA7kB,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,kBAAAC,MAED,SAAgBmb,GACRA,GACoB7c,KAAKsiB,aAAarN,KAAKqU,EAAAY,qBAAsB,CAC7DpnB,KAAM+Z,GAGlB,GAAC,CAAApb,IAAA,sBAAAC,MAED,SAAoBmb,GACZA,IAAO7c,KAAKukB,eAAiB1H,EACrC,GAAC,CAAApb,IAAA,kBAAAC,MAED,SAAgBmb,GAAkC,IAApBsH,IAAAlf,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GAC1BjF,KAAKqgB,WAAa,GAClBrgB,KAAKqgB,WAAWxD,EAAMpJ,IAAM0Q,CAChC,GAAC,CAAA1iB,IAAA,WAAAC,MAAA,eAAAyoB,EAAAxoB,EAAAC,IAAAC,KAED,SAAA0D,EAAesX,GAAM,IAAAuN,EAAAxN,EAAApW,EAAAxG,KAAA,OAAA4B,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACX4nB,SAAUC,OAAOC,KAAKtqB,KAAKqgB,YAAYnE,OAAO,SAAAzI,GAAE,OAAIjN,EAAK6Z,WAAW5M,EAAG,GAAChO,EAAAjD,KAAA,EACzDwB,QAAQumB,IAAIH,EAAQpO,IAAI,SAAAvI,GAAE,OAAIjN,EAAK+iB,YAAYiB,UAAU/W,EAAG,IAAE,OACnFzT,KAAK0Q,KAAKe,WAAW,CAAEwF,UADjB2F,EAAMnX,EAAAvB,KAC8BqV,OAAQqD,EAAO,KACzD5c,KAAK6iB,WAAa7iB,KAAKuiB,QAAQrG,OAAO,SAAC0N,GAAC,OAAKpjB,EAAK6Z,WAAWuJ,EAAEnW,GAAG,GAClEzT,KAAKyqB,WAAW,wBAAAhlB,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IACnB,gBAAA0qB,EAAArN,GAAA,OAAA8M,EAAAnlB,MAAAhF,KAAAiF,UAAA,EARA,IAQA,CAAAxD,IAAA,WAAAC,MAAA,eAAAipB,EAAAhpB,EAAAC,IAAAC,KAED,SAAAwE,IAAA,OAAAzE,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAAAiE,SAAAjE,KAAA,EACUxC,KAAKia,OAAOwQ,WAAUjmB,MAAO,SAAComB,GAAG,OAAKnoB,QAAQ0D,MAAMykB,EAAI,GAAC,OAC3D5qB,KAAKia,OAAO7F,cACZpU,KAAKoN,OAAOyD,SAAS,CAAC,qBAAqB,wBAAApK,EAAA3B,OAAA,EAAAuB,EAAArG,KAAA,IAClD,gBAAAyqB,IAAA,OAAAE,EAAA3lB,MAAAhF,KAAAiF,UAAA,EANA,MAMA8gB,EAxDA,IAAA8D,CAwDA,CA1E0B,GAAlB9D,SAAkB,mBAAA9lB,iBAAlB8lB,GAAkB7lB,EAAAwd,mBAAA/U,EAAA6M,gBAAAtV,EAAAwd,mBAAA7U,EAAAwE,QAAAnN,EAAAwd,mBAAA3U,EAAAwM,kBAAArV,EAAAwd,mBAAAzU,EAAAyc,eAAAxlB,EAAAwd,mBAAAiI,EAAAra,WAAA,EAAlBya,EAAkB,WAAA7lB,EAAA,oCAAlB6lB,EAAkBpI,QAAlBoI,EAAkBnI,UAAAC,WAFf,SAEHkI,CAAkB,oLCb/B,IAAAtM,EAAA3b,EAAA,UAKAA,EAAA,OACAA,EAAA,oHC4CYoC,EAAAqN,yBAAA,WAAArN,CAGC,UAHDA,CAGC,iBAGYA,EAAAuN,iBAAA,YAAMvN,EAAAsN,wBAAAtN,GAGfA,EAAAqN,yBAAA,UAAArN,CAA2B,aACFA,EAAAuN,iBAAA,GAAqBvN,EAAAsN,wBAAAtN,6BAArBA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA,MAAAuW,EAAA,KAAAA,EAAA7jB,MAAA,ED7C5BpH,uBAAoB,eAApBsqB,EAAoB,WAc7B,SAAAA,EAC0CpnB,EAC9BgoB,EACA7Q,EACAwI,GAAuC1iB,EAAAC,KAAAkqB,GAHTlqB,KAAA8C,OAC9B9C,KAAA8qB,kBACA9qB,KAAAia,SACAja,KAAAyiB,sBAXZziB,KAAA+qB,oBAA8B,EAKvB/qB,KAAAujB,QAAUvjB,KAAKia,OAAOsJ,OAO1B,CAACzjB,SAAAoqB,EAAA,EAAAzoB,IAAA,OAAAkE,IAVJ,WACI,OAAO3F,KAAKia,OAAOvJ,IACvB,GAAC,CAAAjP,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAUD,SAAAC,IAAA,IAAA0iB,EAAAC,EAAAE,EAAAC,EAAAE,EAAAC,EAAAiG,EAAAC,EAAAC,EAAA,OAAAtpB,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACIxC,KAAKmrB,UAAqB,QAAZ3G,EAAGxkB,KAAK0Q,YAAI,IAAA8T,GAAU,QAAVC,EAATD,EAAWS,gBAAQ,IAAAR,OAAV,EAATA,EAAqB1S,KAAKrQ,MAC3C1B,KAAKorB,WAAa,IAAI3Q,KAAKza,KAAKmrB,WAAWzQ,mBAAmB,QAAS,CACnEC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAENqQ,EAAmC,QAApBvG,EAAW3kB,KAAK0Q,YAAI,IAAAiU,GAAU,QAAVC,EAATD,EAAWM,gBAAQ,IAAAL,OAAV,EAATA,EAAqB5S,SAAStQ,MAE9D1B,KAAKqrB,SAAW,IAAI5Q,KADRza,KAAKmrB,UAA8B,GAAlBD,EAAuB,KACtBxQ,mBAAmB,QAAS,CACtDC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAEZ7a,KAAK0W,UAAqB,QAAZoO,EAAG9kB,KAAK0Q,YAAI,IAAAoU,GAAU,QAAVC,EAATD,EAAWG,gBAAQ,IAAAF,OAAV,EAATA,EAAqBrO,UAAUhV,MAChD1B,KAAK6c,MAAQ7c,KAAK8C,KAClB9C,KAAKwB,MAAiB,QAAZwpB,EAAGhrB,KAAK0Q,YAAI,IAAAsa,GAAU,QAAVC,EAATD,EAAW/F,gBAAQ,IAAAgG,OAAV,EAATA,EAAqBzpB,MAAME,MAAM,wBAAAY,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACjD,SAAA+E,IAAA,OAAAhE,EAAAiE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,aAAAC,MAED,WACI1B,KAAK8qB,gBAAgB7L,QAAQ,SACjC,GAAC,CAAAxd,IAAA,iBAAAC,MAED,WACI1B,KAAK+qB,oBAAqB,EAC1B/qB,KAAKyiB,oBAAoBiI,SAAS1qB,KAAK6c,MAC3C,KAACqN,EApCA,IAAAnpB,CAoCA,CA/C4B,GAApBmpB,SAAoB,mBAAAjqB,iBAApBiqB,GAAoBhqB,EAAAwI,4BAejB+Q,EAAAyF,uBAAqBhf,EAAAwI,4BAAAC,EAAAwW,mBAAAjf,EAAAwI,4BAAAG,EAAA0M,kBAAArV,EAAAwI,4BAAAK,EAAAgd,oBAAA,EAfxBmE,EAAoB,UAAAhqB,EAAA,kCAApBgqB,EAAoB/gB,UAAA,mBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,4mCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IChBjCvJ,EAAAqN,yBAAA,UAAArN,CAEC,cAFDA,CAEC,UAFDA,CAEC,cAGkCA,EAAA8Q,qBAAA,0BAAStH,EAAA2U,YAAY,GACxCne,EAAAqN,yBAAA,gBAEKrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAGdA,EAAAqN,yBAAA,YAAyCrN,EAAAuN,iBAAA,2BAAoBvN,EAAAsN,wBAAAtN,KAIrEA,EAAAqN,yBAAA,cAAArN,CAA4E,UAA5EA,CAA4E,aAE5CA,EAAAyJ,oBAAA,YAA8BzJ,EAAAsN,wBAAAtN,GAE1DA,EAAAqN,yBAAA,WAAArN,CAA2B,cAElBA,EAAAuN,iBAAA,IACLvN,EAAAsN,yBAEAtN,EAAAqN,yBAAA,YAAArN,CAA0D,kBAEjDA,EAAAuN,iBAAA,qBAAcvN,EAAAsN,yBAEnBtN,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,kCACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA0D,kBAEjDA,EAAAuN,iBAAA,eAAQvN,EAAAsN,yBAEbtN,EAAAqN,yBAAA,cAAmBrN,EAAAuN,iBAAA,IAAgCvN,EAAAsN,wBAAAtN,OAK/DA,EAAAqN,yBAAA,eAAArN,CAA4E,WAA5EA,CAA4E,aAE5CA,EAAAyJ,oBAAA,YAA8BzJ,EAAAsN,wBAAAtN,GAG1DA,EAAAqN,yBAAA,WAAArN,CAA2B,cAElBA,EAAAuN,iBAAA,iBACLvN,EAAAsN,yBAEAtN,EAAAiS,qBAAA,GAAAmZ,EAAA,cAcAprB,EAAAqN,yBAAA,YAAArN,CAAmE,WAAnEA,CAAmE,kBAGtDA,EAAAuN,iBAAA,aAAMvN,EAAAsN,wBAAAtN,GAGfA,EAAAqN,yBAAA,WAAArN,CAA2B,WACjBA,EAAAuN,iBAAA,IAAoCvN,EAAAsN,wBAAAtN,SAM1DA,EAAAqN,yBAAA,gBAAArN,CAAmD,WAAnDA,CAAmD,aAEnBA,EAAAyJ,oBAAA,YAA8BzJ,EAAAsN,wBAAAtN,GAE1DA,EAAAqN,yBAAA,WAAArN,CAA2B,cAC8BA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAE3DtN,EAAAqN,yBAAA,YAAArN,CAA0D,kBAEjDA,EAAAuN,iBAAA,mBAAYvN,EAAAsN,yBAEjBtN,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA0D,kBAEjDA,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBAETtN,EAAAqN,yBAAA,cAAoBrN,EAAAuN,iBAAA,IAAwBvN,EAAAsN,wBAAAtN,OAKxDA,EAAAqN,yBAAA,YAAArN,CAEC,gBAGOA,EAAA8Q,qBAAA,0BAAStH,EAAA6hB,gBAAgB,GAIzBrrB,EAAAqN,yBAAA,cAAerN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,cA1FjBA,EAAAwN,oBAAA,IAAAxN,EAAAyN,6BAAA,GAAAjE,EAAAlI,MAAA,KAQGtB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAsU,sBAAA,KAAA9K,EAAAyhB,UAAA,qBAOejrB,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,GAAArW,EAAA0hB,WAAA,KAAA1hB,EAAA2hB,SAAA,IAiBEnrB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgN,WAmBXxW,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA,MAAA5K,EAAAgH,MAAA,MAAAhH,EAAAgH,KAAAuU,UAAA,MAAAvb,EAAAgH,KAAAuU,SAAAuG,QAAA,KAAA9hB,EAAAgH,KAAAuU,SAAAuG,QAAA9pB,OAkBNxB,EAAAwN,oBAAA,IAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAmT,MAAA,KAAAnT,EAAAmT,MAAAlJ,KAAA,KAOgBzT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAmT,OAAA,MAAAnT,EAAAmT,MAAA3F,MAAA,KAAAxN,EAAAmT,MAAA3F,MAAAvD,KAAA,IAWxBzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAvH,EAAAqhB,kGD5FCb,CAAoB,8IEfjC,IAAAzQ,EAAA3b,EAAA,iGCAIoC,EAAAqN,yBAAA,gBAIIrN,EAAAyJ,oBAAA,YAQJzJ,EAAAsN,iEANQtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,SAAAsB,EAAAsK,MAAA4O,OAAA,GAAAvrB,CAA0B,mBAAAqS,EAAAsK,MAAAlH,cAAApD,EAAAsK,MAAAlJ,MAAA,wBAa1BzT,EAAAqN,yBAAA,cAAArN,CAKC,aAC4BA,EAAAuN,iBAAA,qBAAevN,EAAAsN,wBAAAtN,0BAG5CA,EAAAqN,yBAAA,cAAArN,CAKC,aAC4BA,EAAAuN,iBAAA,wBAAkBvN,EAAAsN,wBAAAtN,0BAkC3CA,EAAAqN,yBAAA,QAAArN,CAA6B,iBAEpBA,EAAAuN,iBAAA,cAAQvN,EAAAsN,wBAAAtN,0BAGjBA,EAAAqN,yBAAA,QAAArN,CAAiC,iBAExBA,EAAAuN,iBAAA,wBAAkBvN,EAAAsN,wBAAAtN,0BAG3BA,EAAAqN,yBAAA,QAAArN,CAA+B,iBAEtBA,EAAAuN,iBAAA,mBAAavN,EAAAsN,wBAAAtN,0BAGtBA,EAAAqN,yBAAA,QAAArN,CAAkC,iBAEzBA,EAAAuN,iBAAA,+BAAyBvN,EAAAsN,wBAAAtN,0BAGlCA,EAAAqN,yBAAA,QAAArN,CAAgC,iBAEvBA,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,0BAGbA,EAAAqN,yBAAA,QAAArN,CAA4B,iBAEnBA,EAAAuN,iBAAA,gCAA0BvN,EAAAsN,wBAAAtN,6BAhC3CA,EAAAqN,yBAAA,WAAArN,CAGC,YAEOA,EAAAiS,qBAAA,EAAAuZ,EAAA,cAKAxrB,EAAAiS,qBAAA,EAAAwZ,EAAA,cAKAzrB,EAAAiS,qBAAA,EAAAyZ,EAAA,cAKA1rB,EAAAiS,qBAAA,EAAA0Z,EAAA,cAKA3rB,EAAAiS,qBAAA,EAAA2Z,EAAA,cAKA5rB,EAAAiS,qBAAA,EAAA4Z,EAAA,cAKJ7rB,EAAAsN,yBAEAtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAAtN,2BAnCKA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,WAAA+a,GACK9rB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,wBAKA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,4BAKA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,0BAKA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,6BAKA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,2BAKA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,uBAQN/Q,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAqe,EAAA,+BA5CZ9rB,EAAAqN,yBAAA,eAAArN,CAGC,aAC0CA,EAAAuN,iBAAA,qBAAevN,EAAAsN,yBAEtDtN,EAAAiS,qBAAA,EAAA8Z,EAAA,eAyCJ/rB,EAAAsN,iEAxC6BtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAa,EAAA+K,MAAA,KAAA/K,EAAA+K,MAAAE,aAAA,+DA4CzB7c,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAuF,GAAA,IAAAC,EAAA1W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAoF,EAAAsV,OAAM,GAEfhsB,EAAAqN,yBAAA,aAA6BrN,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,EAAO,+DAE5CA,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAgG,GAAA,IAAAC,EAAAnX,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA6F,EAAA6U,OAAM,GAEfhsB,EAAAqN,yBAAA,aAAyBrN,EAAAuN,iBAAA,aAAOvN,EAAAsN,wBAAAtN,EAAO,ED/GtCN,uBAAoB,eAApBmqB,EAAoB,WAI7B,SAAAA,EAC0CjnB,EAC9BgoB,GAAwD/qB,EAAAC,KAAA+pB,GAD1B/pB,KAAA8C,OAC9B9C,KAAA8qB,kBAJZ9qB,KAAAmsB,YAAsB,CAKnB,CAACrsB,SAAAiqB,EAAA,EAAAtoB,IAAA,WAAAC,MAEJ,WACI1B,KAAK6c,MAAQ7c,KAAK8C,IACtB,GAAC,CAAArB,IAAA,aAAAC,MAED,WACI1B,KAAKmsB,YAAcnsB,KAAKmsB,UAC5B,GAAC,CAAA1qB,IAAA,OAAAC,MAED,WAEQ1B,KAAK8qB,gBAAgB7L,QADrBjf,KAAKmsB,WACwBnsB,KAAK6c,MAEL,KAErC,KAACkN,CAAA,CAvB4B,GAApBA,SAAoB,mBAAA9pB,iBAApB8pB,GAAoB7pB,EAAAwI,4BAKjB+Q,EAAAyF,uBAAqBhf,EAAAwI,4BAAAC,EAAAwW,mBAAA,EALxB4K,EAAoB,UAAA7pB,EAAA,kCAApB6pB,EAAoB5gB,UAAA,2BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,ghEAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICdjCvJ,EAAAqN,yBAAA,WACIrN,EAAAiS,qBAAA,EAAAia,EAAA,iBAaAlsB,EAAAqN,yBAAA,cAAArN,CAEC,YACyCA,EAAAuN,iBAAA,GAAiBvN,EAAAsN,yBAEvDtN,EAAAqN,yBAAA,WAAKrN,EAAA8Q,qBAAA,0BAAStH,EAAA2iB,YAAY,GACtBnsB,EAAAiS,qBAAA,EAAAma,EAAA,gBASApsB,EAAAiS,qBAAA,EAAAoa,EAAA,gBAQJrsB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,cAAArN,CAEC,YACqCA,EAAAuN,iBAAA,cAAOvN,EAAAsN,yBACzCtN,EAAAqN,yBAAA,WAAArN,CAAqD,kBAE5CA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAEXtN,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,IAA4BvN,EAAAsN,wBAAAtN,GAGpCA,EAAAqN,yBAAA,YAAArN,CAAqD,kBACGA,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBACxDtN,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,IAAuDvN,EAAAsN,wBAAAtN,KAInEA,EAAAiS,qBAAA,GAAAqa,EAAA,kBAgDAtsB,EAAAqN,yBAAA,aAGIrN,EAAAiS,qBAAA,GAAAsa,EAAA,iBASAvsB,EAAAiS,qBAAA,GAAAua,EAAA,iBASJxsB,EAAAsN,wBAAAtN,UA5HKA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAvH,EAAAmT,OAAA,MAAAnT,EAAAmT,MAAA4O,OAAA,KAAA/hB,EAAAmT,MAAA4O,OAAApmB,QAAA,GAcqCnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAmT,MAAA,KAAAnT,EAAAmT,MAAAlJ,KAAA,IAI7BzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAyiB,YASAjsB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAyiB,YAkBDjsB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAmT,MAAA,KAAAnT,EAAAmT,MAAAmD,SAAA,WAMA9f,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,UAAArW,EAAAmT,OAAA,MAAAnT,EAAAmT,MAAA3F,MAAA,KAAAxN,EAAAmT,MAAA3F,MAAAvD,KAAA,WAAAjK,EAAAmT,OAAA,MAAAnT,EAAAmT,MAAA3F,MAAA,KAAAxN,EAAAmT,MAAA3F,MAAAjD,UAAA,IAMP/T,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAvH,EAAAmT,MAAA,KAAAnT,EAAAmT,MAAAE,aAAA1X,QAAA,GAkDInF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAAyiB,YASAjsB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAyiB,8HDzGApC,CAAoB,0IEbjC,IAAAtQ,EAAA3b,EAAA,UAKAA,EAAA,wGCOgBoC,EAAAyJ,oBAAA,mDAGIzJ,EAAA+Q,qBAAA,SAAAsB,EAAAsK,MAAA4O,OAAA,2BAOJvrB,EAAAqN,yBAAA,QAAArN,CAAwC,iBAG/BA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,IDbjBN,oBAAiB,eAAjByoB,EAAiB,WAE1B,SAAAA,EAC0CvlB,EAC9BgoB,EACArI,GAAuC1iB,EAAAC,KAAAqoB,GAFTroB,KAAA8C,OAC9B9C,KAAA8qB,kBACA9qB,KAAAyiB,qBACT,CAAC3iB,SAAAuoB,EAAA,EAAA5mB,IAAA,WAAAC,MAEJ,WACI1B,KAAK6c,MAAQ7c,KAAK8C,IACtB,GAAC,CAAArB,IAAA,iBAAAC,MAED,WACI1B,KAAKyiB,oBAAoB6B,eAAetkB,KAAK6c,MACjD,GAAC,CAAApb,IAAA,SAAAC,MAED,WACI1B,KAAK8qB,gBAAgB7L,QAAQ,KACjC,KAACoJ,CAAA,CAlByB,GAAjBA,SAAiB,mBAAApoB,iBAAjBooB,GAAiBnoB,EAAAwI,4BAGd+Q,EAAAyF,uBAAqBhf,EAAAwI,4BAAAC,EAAAwW,mBAAAjf,EAAAwI,4BAAAG,EAAAkd,oBAAA,EAHxBsC,EAAiB,UAAAnoB,EAAA,kCAAjBmoB,EAAiBlf,UAAA,wBAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,2oCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICb9BvJ,EAAAqN,yBAAA,UAAArN,CAEC,WAGOA,EAAA8Q,qBAAA,0BAAStH,EAAA4a,gBAAgB,GAEzBpkB,EAAAqN,yBAAA,UAAArN,CAEC,WAIOA,EAAAiS,qBAAA,EAAAwa,EAAA,aAUAzsB,EAAAiS,qBAAA,EAAAya,EAAA,aAMJ1sB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAgC,YAExBA,EAAAuN,iBAAA,GAAiBvN,EAAAsN,yBAGrBtN,EAAAqN,yBAAA,UAAArN,CAA4D,iBAGnDA,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBAETtN,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,IAC6BvN,EAAAsN,wBAAAtN,GAIrCA,EAAAqN,yBAAA,WAAArN,CAA4D,iBAGnDA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAEXtN,EAAAqN,yBAAA,cAA6BrN,EAAAuN,iBAAA,IAAqBvN,EAAAsN,wBAAAtN,WAMtEA,EAAAqN,yBAAA,YAAArN,CAEC,gBAIOA,EAAA8Q,qBAAA,0BAAStH,EAAAmjB,QAAQ,GAGjB3sB,EAAAqN,yBAAA,cAA6BrN,EAAAuN,iBAAA,WAAIvN,EAAAsN,wBAAAtN,YAnDpBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAvH,EAAAmT,OAAA,MAAAnT,EAAAmT,MAAA4O,OAAA,KAAA/hB,EAAAmT,MAAA4O,OAAApmB,QAAA,GAQCnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAvH,EAAAmT,OAAA,MAAAnT,EAAAmT,MAAA4O,OAAA,KAAA/hB,EAAAmT,MAAA4O,OAAApmB,SASFnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAmT,MAAA,KAAAnT,EAAAmT,MAAAlJ,KAAA,IASIzT,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,UAAArW,EAAAmT,OAAA,MAAAnT,EAAAmT,MAAA3F,MAAA,KAAAxN,EAAAmT,MAAA3F,MAAAvD,KAAA,WAAAjK,EAAAmT,OAAA,MAAAnT,EAAAmT,MAAA3F,MAAA,KAAAxN,EAAAmT,MAAA3F,MAAAjD,UAAA,IAUyB/T,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAmT,MAAA,KAAAnT,EAAAmT,MAAAmD,SAAA,kFDtCpCqI,CAAiB,yLEZ9B,IAAA7nB,EAAA1C,EAAA,OACAkR,EAAAlR,EAAA,UAEAA,EAAA,gGAmBwBoC,EAAAyJ,oBAAA,oEAEIzJ,EAAA+Q,qBAAA,QAAA6b,EAAA,0BAGA5sB,EAAAyJ,oBAAA,sEAAczJ,EAAA+Q,qBAAA,UAAA6b,EAAA,2BARtB5sB,EAAAyhB,kCAAA,GAGIzhB,EAAAiS,qBAAA,EAAA4a,EAAA,oBAIA7sB,EAAAiS,qBAAA,EAAA6a,EAAA,yBAAA9sB,EAAAomB,kCAGJpmB,EAAA4hB,sHANS5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAiB,EAAA+a,QAAAH,GAAA5sB,CAAqB,WAAAgtB,EAAA,2BAPlChtB,EAAAyhB,kCAAA,GAGIzhB,EAAAiS,qBAAA,EAAAgb,EAAA,oDAWJjtB,EAAA4hB,2EAVyB5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAc,EAAAsW,SAAAltB,CAAoB,eAAA4W,EAAAuW,UAAA,2BARjDntB,EAAAqN,yBAAA,WAIIrN,EAAAiS,qBAAA,EAAAmb,EAAA,oDAeJptB,EAAAsN,gGAdStN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAyQ,EAAAxhB,EAAA8V,sBAAA,IAAAzD,EAAA6a,UAAA,KAAA1L,EAAArc,OAAAnF,CAAiC,WAAAqtB,EAAA,wBAiB1CrtB,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,4BAAsBvN,EAAAsN,wBAAAtN,UADZA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,sCAKjB/Q,EAAAqN,yBAAA,WAAArN,CAGC,OACMA,EAAAuN,iBAAA,uBAAiBvN,EAAAsN,wBAAAtN,IAMvBN,4BAA0B,eAA1BH,EAA0B,SAAAoB,GAAAC,EAAArB,EAAAoB,GAAA,IAAAG,EAAAC,EAAAxB,GAKnC,SAAAA,EAAoB+tB,GAA+B,IAAAlsB,EAAAvB,SAAAC,KAAAP,IAC/C6B,EAAAN,EAAAO,KAAAvB,OADgBwtB,YAJblsB,EAAAmsB,QAAOjtB,EAAAsG,eACExF,EAAAosB,SAAWpsB,EAAKksB,UAAUjK,QAC1BjiB,EAAA8rB,QAAU9rB,EAAKksB,UAAUG,kBAAkBrsB,CAI3D,CAACxB,SAAAL,EAAA,EAAAgC,IAAA,WAAAC,MAEM,WACH1B,KAAKwtB,UAAUI,WAAW,QAAQ,GAClC5tB,KAAKwtB,UAAUI,WAAW,WAAW,GACrC5tB,KAAKiT,aAAa,OAAQjT,KAAKwtB,UAAUK,eAC7C,GAAC,CAAApsB,IAAA,UAAAC,MAEM,SAAQya,GACX,OAAOA,aAAgBnN,EAAA8e,aAC3B,GAAC,CAAArsB,IAAA,YAAAC,MAEM,SAAU2B,EAAW8Y,GACxB,OAAOA,GAAM1I,EACjB,KAAChU,CAAA,CArBkC,CAAQe,EAAAiI,cAAlChJ,SAA0B,mBAAAQ,iBAA1BR,GAAyBS,EAAAwI,4BAAAC,EAAAolB,sBAAA,EAAzBtuB,EAA0B,UAAAS,EAAA,kCAA1BT,EAAyB0J,UAAA,gCAAAC,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,gsBAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA7C9BvJ,EAAAqN,yBAAA,UAAArN,CAA+D,UAEvDA,EAAAuN,iBAAA,qBACJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAA6b,EAAA,2CAoBJ9tB,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAA8b,EAAA,yBAAA/tB,EAAAomB,kCASApmB,EAAAiS,qBAAA,EAAA+b,EAAA,yBAAAhuB,EAAAomB,yEA5BSpmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA8V,sBAAA,IAAAtM,EAAAgkB,UAAAxtB,CAA2B,WAAAiuB,EAAA,kHAuC/B1uB,CAA0B,yFCtD1BG,cAAc,CACvBuN,YAAY,mCCDhBlD,EAAAnM,EAAA,OAGAswB,EAAAtwB,EAAA,OACAA,EAAA,OAEIoP,YAAYC,eACZlD,EAAAokB,kBAGJC,EAAAC,kBACKC,gBAAgBJ,EAAAhjB,WAAU5G,MACpB,SAAComB,GAAG,OAAKnoB,QAAQ0D,MAAMykB,EAAI,gRCXtC9sB,EAAA,OACAA,EAAA,OADA,IAEA0C,EAAA1C,EAAA,OAMAkR,EAAAlR,EAAA,OAMA+M,GADA/M,EAAA,MACAA,EAAA,uMAKQoC,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAa,GAAA,IAAAC,EAAAhS,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAU,EAAA+M,UAAS,GAElB/e,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,EAAW,uBAI1BA,EAAAyJ,oBAAA,6CAUIzJ,EAAAqN,yBAAA,UAAArN,CAGC,cACaA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,WAAUrN,EAAAuN,iBAAA,GAA0BvN,EAAAsN,wBAAAtN,2CAA1BA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA3C,EAAA8c,qBAAA,2BA8BNvuB,EAAAqN,yBAAA,aAAArN,CAA+C,WAA/CA,CAA+C,iBAEhBA,EAAAuN,iBAAA,cAAQvN,EAAAsN,yBAC/BtN,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAAtN,2BADIA,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA+gB,EAAA/a,MAAA+a,EAAA1nB,MAAA,+BAhBxB9G,EAAAqN,yBAAA,eAAArN,CAIC,gBACuCA,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACxCtN,EAAAqN,yBAAA,UAAArN,CAA+B,QAC3BA,EAAAyuB,iBAAA,MAGAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAmB,yBAEXA,EAAAiS,qBAAA,EAAAyc,EAAA,mBAMJ1uB,EAAAsN,wBAAAtN,+CATJA,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAA/c,EAAAgd,MAAApY,UAAArR,OAAAnF,CAAK4R,EAAAgd,MAAApY,UAAArR,QAALnF,EAAA6uB,sBAAA,GAGmC7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAa,EAAAgd,MAAApY,UAAA,2BAcnCxW,EAAAyhB,kCAAA,GACIzhB,EAAAqN,yBAAA,UAAArN,CAAyC,cAC3BA,EAAAuN,iBAAA,kBAAYvN,EAAAsN,yBACtBtN,EAAAqN,yBAAA,SACIrN,EAAAuN,iBAAA,GAEJvN,EAAAsN,wBAAAtN,GAERA,EAAA4hB,yFAJY5hB,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,WAAAzJ,EAAAY,MAAA,KAAAZ,EAAAY,MAAAvB,gBAAA,MAAAW,EAAAY,MAAA,KAAAZ,EAAAY,MAAAvD,MAAA,KAAAqb,EAAArZ,cAAAqZ,EAAArb,KAAA,+BARpBzT,EAAAqN,yBAAA,eAAArN,CAA8D,gBACtBA,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACxCtN,EAAAqN,yBAAA,UAAArN,CAA+B,QAC3BA,EAAAyuB,iBAAA,MAAoBzuB,EAAAsN,yBACpBtN,EAAAiS,qBAAA,EAAA8c,EAAA,uBASA/uB,EAAAqN,yBAAA,UAAArN,CAAyC,cAC3BA,EAAAuN,iBAAA,WAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,UAAKrN,EAAAuN,iBAAA,IAAcvN,EAAAsN,wBAAAtN,+CAXKA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAK,EAAAwd,MAAA7X,WAWnB/W,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAhD,EAAAvL,SAAA,+DAKb7F,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8d,GAAA,IAAA1Y,EAAAtW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAgF,EAAAiU,WAAU,GANvBvqB,EAAAyuB,iBAAA,MAUAzuB,EAAAsN,wBAAA,EAkCC5N,8BAA4B,eAA5BsV,EAA4B,SAAArU,GAAAC,EAAAoU,EAAArU,GAAA,IAyDpCE,EAzDoCC,EAAAC,EAAAiU,GA2DrC,SAAAA,EACwBia,EACZC,EACAjuB,EACAooB,EACAjR,EACApX,IAA0B,IAAAI,EAAAvB,SAAAC,KAAAkV,IAElC5T,EAAAN,EAAAO,KAAAvB,OAPoBmvB,aACZ7tB,EAAA8tB,cACA9tB,EAAAH,OACAG,EAAAioB,cACAjoB,EAAAgX,UACAhX,EAAAJ,aAhEII,EAAA8T,YAAsB,EAEtB9T,EAAAiiB,QAAUjiB,EAAK8tB,YAAY7L,QAE3BjiB,EAAAmpB,SAAQ9oB,EAAAC,IAAAC,KAAG,SAAAC,KAAA,OAAAF,IAAAS,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,UAClBlB,EAAKub,MAAK,CAAAva,GAAAE,KAAA,QAAAF,UAAAE,KAAA,KACUhC,EAAA6uB,kBACjB,CACI7tB,MAAO,8BACPumB,QACI,2DACJuH,KAAM,CAAEvH,QAAS,oBAErBzmB,EAAKgX,SACR,OARW,GASU,SATVhW,GAAA4B,KASDqrB,OAAiB,CAAAjtB,GAAAE,KAAA,eAAAF,GAAAqB,OAAA,iBAAArB,UAAAE,KAAA,EAE1BlB,EAAK8tB,YAAY3E,WAAUjmB,MAAO,SAACnB,IACrC,QAAA7C,EAAAqU,aAAYxR,IACNA,EACV,GAAE,OACF/B,EAAK2d,SAAQ,GAAM,wBAAA3c,GAAAwC,OAAA,EAAAhD,GAAA,IAEPR,EAAAkuB,WAAa,kBAAMluB,EAAK8tB,YAAYK,gBAAgB,EACpDnuB,EAAA2d,QAAU,SAACmG,IAAE,IAAAsK,GAAA,OAAoB,QAApBA,GAAKpuB,EAAK6tB,kBAAU,IAAAO,QAAA,EAAfA,GAAiBzQ,QAAQmG,GAAE,EAErD9jB,EAAAquB,OAASruB,EAAKwtB,MAAM7X,UAAU,GAAG3V,CAyCzC,CAACxB,SAAAoV,EAAA,EAAAzT,IAAA,cAAAkE,IAvCD,WACI,OAAO3F,KAAKkB,UAAU0uB,WAC1B,GAAC,CAAAnuB,IAAA,uBAAAkE,IAED,WACI,SAAOqJ,EAAA6gB,kBAAgBC,IAAA,GAChB9vB,KAAK8uB,MAAMiB,YAAU,IACxBC,MAAOhwB,KAAK8uB,MAAM/c,MAAQ/R,KAAK8uB,MAAMiB,WAAWC,QAExD,GAAC,CAAAvuB,IAAA,QAAAkE,IAED,WACI,OAAO3F,KAAKovB,YAAY1e,KAAKhP,KACjC,GAAC,CAAAD,IAAA,QAAAkE,IAED,WACI,OAAO3F,KAAK2vB,MAChB,GAAC,CAAAluB,IAAA,QAAAkE,IAED,WACI,OAAO3F,KAAKmB,KAAK8uB,YAAYjwB,KAAK6c,MAAM9I,MAC5C,GAAC,CAAAtS,IAAA,WAAAkE,IAED,WAAmB,IAAAR,EAAAnF,KACTkW,EAAWlW,KAAKmB,KAAKiV,UAAU8Z,KAAK,SAAC7sB,GAAC,OACxC8B,EAAK0X,MAAM9I,MAAM9N,SAAS5C,EAAEoQ,GAAG,GAEnC,OAAOyC,GAAUia,SAAWja,GAAUP,cAAgBO,GAAUvC,IACpE,GAAC,CAAAlS,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAaM,SAAA0D,IAAA,OAAA3D,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,EAEQxC,KAAKupB,YAAYiB,UAAUxqB,KAAK8uB,MAAM7X,UAAU,GAAGjQ,OAAM,UAAAvB,EAAAlB,GAAAkB,EAAAvB,KAAAuB,EAAAlB,GAAA,CAAAkB,EAAAjD,KAAA,QAAAiD,EAAAlB,GAChEvE,KAAK2vB,OAAM,OAFf3vB,KAAK2vB,OAAMlqB,EAAAlB,GAAA,wBAAAkB,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAGd,SAAA+E,IAAA,OAAAhE,EAAAiE,MAAAhF,KAAAiF,UAAA,MAAAiQ,CAAA,CA1EoC,CAAQ1U,EAAAiI,cAApCyM,SAA4B,mBAAAjV,iBAA5BiV,GAA2BhV,EAAAwI,4BAAAC,EAAAwW,kBAAA,GAAAjf,EAAAwI,4BAAAG,EAAA0M,kBAAArV,EAAAwI,4BAAAK,EAAAD,qBAAA5I,EAAAwI,4BAAAO,EAAAqC,WAAApL,EAAAwI,4BAAAid,EAAAvM,WAAAlZ,EAAAwI,4BAAAkd,EAAAhd,iBAAA,EAA3BsM,EAA4B,UAAAhV,EAAA,kCAA5BgV,EAA2B/L,UAAA,2BAAAyW,OAAA,CAAAxK,WAAA,cAAAhM,SAAA,CAAAlJ,EAAAkwB,6BAFzB,CAACvlB,EAAAS,YAAUpL,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,eAAA+iB,aAtHLC,UAAAC,MAAAC,EAAA,0GAyC4BF,UAAAG,MAAAD,EAAA,o7BADxBF,UAAAI,MAAAF,EAAA,6GACL,gBAA6BG,6KAkBxBL,UAAAM,MAAAJ,EAAA,oKAyBZF,UAAAO,MAAAL,EAAA,yHA9FLtwB,EAAAiS,qBAAA,EAAA2e,EAAA,gBASA5wB,EAAAqN,yBAAA,aAAArN,CAAuD,QACnDA,EAAAyuB,iBAAA,KAAgCzuB,EAAAsN,yBAChCtN,EAAAiS,qBAAA,EAAA4e,EAAA,mDACJ7wB,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAAArN,CAA4C,gBACJA,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACxCtN,EAAAqN,yBAAA,UAAArN,CAA+B,SACvBA,EAAAuN,iBAAA,IAAsCvN,EAAAsN,yBAC1CtN,EAAAqN,yBAAA,WAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,YAAUrN,EAAAuN,iBAAA,kCAAmCvN,EAAAsN,wBAAAtN,GAEjDA,EAAAiS,qBAAA,GAAA6e,EAAA,aAOA9wB,EAAAqN,yBAAA,WAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,eAAQvN,EAAAsN,yBAClBtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,gEAQJvN,EAAAsN,wBAAAtN,OAIZA,EAAAiS,qBAAA,GAAA8e,EAAA,mBAuBA/wB,EAAAiS,qBAAA,GAAA+e,EAAA,mBAmBAhxB,EAAAqN,yBAAA,gBACIrN,EAAAiS,qBAAA,GAAAgf,EAAA,gDAqBJjxB,EAAAsN,gCAvGKtN,EAAA+Q,qBAAA,OAAAvH,EAAA0L,YAO2BlV,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA/Q,EAAA8V,sBAAA,IAAAtM,EAAA6Z,UAKpBrjB,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA5K,EAAAolB,MAAAttB,OAAA,mBAGUtB,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAApU,EAAAsU,sBAAA,MAAA9K,EAAAolB,MAAA/c,KAAA,aAIT7R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAolB,MAAAiB,WAAA,KAAArmB,EAAAolB,MAAAiB,WAAAqB,SAQGlxB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAAolB,MAAAuC,QAAA,UAAAnxB,EAAAsU,sBAAA,MAAA9K,EAAAolB,MAAA/c,KAAArI,EAAAkmB,aAAA,MAAA1vB,EAAAsU,sBAAA,MAAA9K,EAAAolB,MAAA/c,KAAA,GAAArI,EAAAolB,MAAA9c,SAAA,IAAAtI,EAAAkmB,YAAA,aAeX1vB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAolB,MAAApY,UAAArR,QAoBwCnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAmT,MAAA,KAAAnT,EAAAmT,MAAApJ,IAyBpCvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA8V,sBAAA,MAAAtM,EAAA6Z,mcAuCJrO,CAA4B,mRCrJzC,IAAAnG,EAAAjR,EAAA,OAMA0C,EAAA1C,EAAA,OAMAkR,EAAAlR,EAAA,OAMAwzB,GADAxzB,EAAA,MACAA,EAAA,QACAyC,EAAAzC,EAAA,MACAyzB,EAAAzzB,EAAA,OACAkc,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,kDAea8B,uBAAqB,eAArBmuB,EAAqB,SAAAltB,GAAAC,EAAAitB,EAAAltB,GAAA,IAsR7B2wB,EAtR6BxwB,EAAAC,EAAA8sB,GAqO9B,SAAAA,EACY7sB,EACAC,EACAswB,GAAwB,IAAAnwB,EAAAvB,SAAAC,KAAA+tB,IAEhCzsB,EAAAN,EAAAO,KAAAvB,OAJQkB,YACAI,EAAAH,OACAG,EAAAmwB,WAvOJnwB,EAAAowB,MAAQ,IAAI1X,EAAAqB,gBAAgB,GAC5B/Z,EAAAqwB,WAAa,IAAI3X,EAAAqB,gBAA8B,OAC/C/Z,EAAAswB,SAAW,IAAI5X,EAAAqB,iBAAgB,GAC/B/Z,EAAAuwB,SAAW,IAAI7X,EAAAqB,gBAAgB,CACnCyW,YAAa,CAAC,QAAS,OAAQ,UAAW,UAAW,YAEjDxwB,EAAAywB,MAAQ,IAAI/X,EAAAqB,gBAAgBZ,KAAKuX,OACjC1wB,EAAA2wB,WAAUjY,EAAAgJ,eAAc,CAAC1hB,EAAKywB,MAAOzwB,EAAKowB,QAAQvuB,QACtD7C,EAAA4xB,cAAa,MAAG,EAChB5xB,EAAAwjB,KAAI,SAACzgB,GAAC,OAAK/B,EAAKswB,SAASpvB,MAAK,EAAK,IAG/BlB,EAAA6wB,SAAqB,GAErB7wB,EAAA8wB,gBACJ9wB,EAAKH,KAAKoX,gBAAgBpV,QACtB7C,EAAA4b,QAAO,SAAC7Y,GAAC,QAAOA,CAAC,MACjB/C,EAAA+xB,yBAAwB,OAAI,EAC5B/xB,EAAA4xB,cAAa,MAAG,EAChB5xB,EAAAwjB,KAAI,SAACzgB,GAAC,OAAK/B,EAAKgxB,UAAU,QAAQ,MAClChyB,EAAAiyB,WAAU,SAAAjsB,GAAW,IAARmN,EAAEnN,EAAFmN,GACTnS,SAAKswB,SAASpvB,MAAK,IAAI,EAChB8uB,EAAAkB,sBAAqB/e,EAChC,IAAC,EACDnT,EAAAmyB,sBAAqB,SAAArqB,EAAA+a,GAAU,OAAVD,EAAA9a,EAAA,GAAI,KAAA8a,EAAAC,EAAA,GAAM,EAAe,MAC9C7iB,EAAAiyB,WAAU,SAACnf,GACP9R,SAAKswB,SAASpvB,MAAK,IAAK,EACjBwX,EAAAgJ,gBACF5P,GAAQ,IAAI4I,IAAI,SAACa,GACd,IAAM6V,KAAUnyB,EAAAoyB,WAAU9V,EAAMpJ,GAAI,YAAYif,QAC5C,YAEEE,EAAMF,EAAQG,SAAS1vB,QACzB7C,EAAA0b,KAAI,SAAC8W,GAAU,OACVA,GAAc,IAAI9W,IACf,SAAC+W,GAAC,OACE,IAAI/jB,EAAA8e,cAAagC,IAAA,GACViD,GAAC,IACJ9b,UAAW8b,EAAErc,UAAUwF,OACnB,SAAC7Y,GAAC,OACEA,EAAE2D,QAAU6V,EAAM7V,OAClB3D,EAAE2vB,QAAQ,GAElBzZ,OAAQsD,IACV,EACT,MAELvc,EAAA2yB,YAAW,SAAC5vB,GAAC,SAAK2W,EAAAO,IAAG,GAAG,IAE5B,OAAKjZ,EAAK4xB,gBAAe,QAAA9uB,OAASyY,EAAMpJ,MACpCnS,EAAK2R,aAAY,QAAA7O,OACLyY,EAAMpJ,IACdif,EAAQS,QAGTP,CACX,GAER,IAAC,EACDtyB,EAAA0b,KAAI,SAAC3Y,GAAC,SAAK7C,EAAA4yB,SAAuB/vB,EAAE,MACpC/C,EAAA+yB,aAAY,IAGJ/xB,EAAAgyB,aAAYtZ,EAAAgJ,eAAc,CACtC1hB,EAAK8wB,gBACL9wB,EAAK2wB,UACN9uB,QACC7C,EAAA0b,KAAI,SAAAuX,GAAgB,IAAAC,EAAAtQ,EAAAqQ,EAAA,GAAdlwB,EAACmwB,EAAA,GAAGzhB,EAAHmR,EAAAsQ,EAAA,MAAO,GACJ/F,KAAOjtB,EAAAsG,eACb,OAAOzD,EAAE6Y,OACL,SAAC7Y,GAAC,SACEkuB,EAAAkC,WAAUpwB,EAAE0O,KAAMA,KACjB1O,EAAEsR,KAAK+e,gBAAkBjG,EAAKzmB,MAAM0sB,eACjCrwB,EAAEqT,UAAUwZ,KACR,SAACyD,GAAC,OACEA,EAAE3sB,MAAM0sB,gBACRjG,EAAKzmB,MAAM0sB,aAAa,GAC9B,EAElB,IAGYpyB,EAAAsyB,WAA0CtyB,EAAK2wB,QAAQ9uB,QACnE7C,EAAAiyB,WAAU,SAAAsB,GAAW,IAAT9hB,EAASmR,EAAA2Q,EAAA,GAAL,GACNC,EAAQ,CACVC,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWliB,IACrCmiB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAASpiB,KAErC,OAAOzQ,EAAKJ,UAAUyE,IAAI,4BAAyB,EAC7CoJ,EAAAqlB,eAAatE,IAAA,GAAMgE,GAAK,IAAE9gB,KAAM,UAAU7P,QACtC7C,EAAA0b,KAAI,SAAC3Y,GAAC,OAAKA,EAAE2Y,IAAI,SAAC+W,GAAC,SAAK/jB,EAAAqlB,6BAA4BtB,EAAE,EAAC,MACvDzyB,EAAA2yB,YAAW,SAAC5vB,GAAC,SAAK2W,EAAAO,IAAG,GAAG,KAAC,EAE7BvL,EAAAslB,aAAWxE,EAAA,GAAMgE,IAAS3wB,QAAK7C,EAAA2yB,YAAW,SAAC5vB,GAAC,SAAK2W,EAAAO,IAAG,GAAG,GACjE,IAAC,EACDja,EAAA+yB,aAAY,IAGA/xB,EAAAizB,UAASva,EAAAgJ,eAAc,CAAC1hB,EAAKqwB,aAAaxuB,QACtD7C,EAAAiyB,WAAU,SAAAiC,GAAG,MAAa,QAAhBtR,EAAAsR,EAAA,GAAG,GAAqBlzB,EAAKsyB,WAAatyB,EAAKgyB,SAAS,IAAC,EACnEhzB,EAAAwjB,KAAI,kBAAMxiB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAKswB,SAASpvB,MAAK,EAAM,EAAC,MACtElC,EAAA+yB,aAAY,IAGA/xB,EAAAmzB,SAAkCnzB,EAAK2wB,QAAQ9uB,QAC3D7C,EAAAiyB,WAAU,SAAAmC,GAAA,IAAE3iB,EAAFmR,EAAAwR,EAAA,GAAM,YACZ3lB,EAAAqlB,eAAc,CACVL,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWliB,IACrCmiB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAASpiB,IACjCiB,KAAM,YACP7P,QAAK7C,EAAA2yB,YAAW,SAAC5vB,GAAC,SAAK2W,EAAAO,IAAG,GAAG,GAAE,MAEtCja,EAAAwjB,KAAI,kBAAMxiB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAKswB,SAASpvB,MAAK,EAAM,EAAC,MACtElC,EAAA+yB,aAAY,IAGA/xB,EAAAqzB,MAA+BrzB,EAAK2wB,QAAQ9uB,QACxD7C,EAAAiyB,WAAU,SAAAqC,GAAA,IAAE7iB,EAAFmR,EAAA0R,EAAA,GAAM,YACZ7lB,EAAAqlB,eAAc,CACVL,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWliB,IACrCmiB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAASpiB,IACjC8iB,qBAAqB,EACrB7hB,KAAM,SACP7P,QAAK7C,EAAA2yB,YAAW,SAAC5vB,GAAC,SAAK2W,EAAAO,IAAG,GAAG,GAAE,MAEtCja,EAAAwjB,KAAI,kBAAMxiB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAKswB,SAASpvB,MAAK,EAAM,EAAC,MACtElC,EAAA+yB,aAAY,IAGA/xB,EAAAwzB,QAAiCxzB,EAAK2wB,QAAQ9uB,QAC1D7C,EAAAiyB,WAAU,SAAAwC,GAAA,IAAEhjB,EAAFmR,EAAA6R,EAAA,GAAM,YACZhmB,EAAAqlB,eAAc,CACVL,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWliB,IACrCmiB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAASpiB,IACjCiB,KAAM,YACP7P,QAAK7C,EAAA2yB,YAAW,SAAC5vB,GAAC,SAAK2W,EAAAO,IAAG,GAAG,GAAE,MAEtCja,EAAAwjB,KAAI,kBAAMxiB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAKswB,SAASpvB,MAAK,EAAM,EAAC,MACtElC,EAAA+yB,aAAY,IAGA/xB,EAAA0zB,WAAiChb,EAAAgJ,eAAc,CAC3D1hB,EAAKH,KAAKoX,gBAAgBpV,QACtB7C,EAAA4b,QAAO,SAAC7Y,GAAC,QAAOA,CAAC,MACjB/C,EAAA+xB,yBAAwB,OAE5B/wB,EAAKmwB,SAASwD,WACf9xB,QACC7C,EAAA4xB,cAAa,MAAG,EAChB5xB,EAAAiyB,WAAS,eAAA2C,EAAAvzB,EAAC,SAAAwzB,GAAA,IAAWH,EAAX9R,EAAAiS,EAAA,GAAkB,UAAAvzB,IAAAC,KAAA,SAAAC,IAAA,IAAAszB,EAAAC,EAAA,OAAAzzB,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACsB,GAAxC4yB,EAAY9zB,EAAKH,KAAKuxB,QAAQ,WACtB,CAAApwB,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAAS,CAAC,GAAIqxB,IAAQ,OAC9BK,YAAM90B,EAAAoyB,WAAUyC,EAAW,mBAAkB9yB,EAAAE,KAAA,EAC1B6yB,EACpBC,QAAQ,2BAA0B9wB,MAC5B,SAACnB,GAAC,MAAK,EAAE,GAAC,OAFfkyB,OAAUjzB,EAAAqB,OAAA,SAGT,CAHSrB,EAAA4B,KAGI8wB,IAAQ,wBAAA1yB,EAAAwC,OAAA,EAAAhD,EAAA,EAPJF,EAOI,GAC/B,gBAAAyb,GAAA,OAAA6X,EAAAlwB,MAAAhF,KAAAiF,UAAA,EARQ,KAQR,EACD3E,EAAA0b,KAAI,SAAAwZ,GAA0B,IAAAC,EAAAvS,EAAAsS,EAAA,GAAZR,EAAOS,EAAA,GACrB,OADYA,EAAA,GAEPzZ,IAAI,SAAC+W,GAAK,IAAA2C,EACDC,EAAUX,EAAqB9E,KACjC,SAAC7sB,GAAC,OAAKA,EAAEoQ,KAAOsf,EAAE6C,SAAS,GAE/B,OAAKD,GAAY5C,EAAE7b,OAAU6b,EAAE7c,UAC/B6c,EAAE7b,MAAQ6b,EAAE7b,OAASye,GAAQE,SAC7B9C,EAAE7c,SACE6c,EAAE7c,WACuC,QAD/Bwf,EACVp0B,EAAKH,KAAK8uB,YAAY,CAAC0F,GAAQE,kBAAU,IAAAH,OAAA,EAAzCA,EAA2CzhB,WACxC,IAAIlF,EAAA+mB,QAAQ,CACf/jB,QAAMwf,EAAA0C,YAAWxZ,KAAKuX,OAAO+D,UAC7B/jB,SAAU,KACVxQ,MAAO,iBACPqS,YAAakf,EAAEiD,YACfliB,aAAc,SACdud,SAAS,EACTngB,SAAUykB,EAAO/hB,OACjBF,WAAYqf,EAAEiD,YACdjiB,MAAO,CAACgf,EAAE7c,SAAU6c,EAAE7b,OACtB+e,eAAgB,CACZriB,OAAQmf,EAAE6C,cAhB+B,IAmBrD,GACC1Z,OAAO,SAACC,GAAI,OAAKA,CAAI,EAC9B,IAAC,EACD7b,EAAA2yB,YAAW,SAAC7N,GACR3iB,eAAQ0D,MAAMif,IAAC,EACRpL,EAAAO,IAAG,GACd,IAAC,EACDja,EAAAwjB,KAAI,kBAAMxiB,EAAKuC,QAAQ,cAAe,kBAAMvC,EAAKswB,SAASpvB,MAAK,EAAM,EAAC,MACtElC,EAAA+yB,aAAY,IAIA/xB,EAAA40B,YAAWlc,EAAAgJ,eAAc,CACrC1hB,EAAKizB,OACLjzB,EAAKmzB,SACLnzB,EAAKqzB,MACLrzB,EAAKwzB,QACLxzB,EAAK0zB,UACN7xB,QACC7C,EAAA0b,KAAI,SAAAma,GAAA,IAAAC,EAAAlT,EAAAiT,EAAA,GAAKxS,EAACyS,EAAA,GAAErd,EAACqd,EAAA,GAAEC,EAACD,EAAA,GAAEE,EAACF,EAAA,SACf,GAAAhyB,OAAAif,EADG+S,EAAA,IACE/S,EAAKM,GAACN,EAAKtK,GAACsK,EAAKgT,GAAChT,EAAKiT,IAAGpZ,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAE5hB,KAAOiN,EAAEjN,IAAI,EAAC,IAItDzQ,EAAAqsB,qBAAoB3T,EAAAgJ,eAAc,CAC9C1hB,EAAK40B,SACL50B,EAAKuwB,WACN1uB,QACC7C,EAAA0b,KAAI,SAAAua,GAAA,IAAAC,EAAAtT,EAAAqT,EAAA,GAAQE,EAAOD,EAAA,UAATA,EAAA,GACDta,OACD,SAAC7Y,GAAC,IAAAqzB,EAAAC,EAAA,OACIr1B,EAAK6wB,SAASlsB,SAAS5C,EAAEoQ,KACvBpQ,aAAa2L,EAAA8e,gBACN,MAAP2I,GAAoB,QAAbC,EAAPD,EAAS3E,mBAAW,IAAA4E,OAAb,EAAPA,EAAsBzwB,SAAS,YAC5B,MAAPwwB,GAAoB,QAAbE,EAAPF,EAAS3E,mBAAW,IAAA6E,OAAb,EAAPA,EAAsB1wB,SAAU5C,EAAUyQ,cAAa,EAC9D,IAIOxS,EAAAm1B,QAAUn1B,EAAKuwB,SAASrW,eAExBla,EAAAyQ,KAAOzQ,EAAKywB,MAAMvW,eAElBla,EAAAiiB,QAAUjiB,EAAKswB,SAASpW,eAQpCla,EAAK2R,aACD,YACA3R,EAAKH,KAAKoX,gBAAgBpF,UAAU,kBAChC7R,EAAKqwB,WAAWnvB,KACZlB,EAAKJ,UAAUyE,IAAI,8BACb,KACA,MACT,IAGTrE,EAAK6wB,SAAW1tB,KAAKmyB,MACjBvyB,eAAe6D,QAAQ,2BAA6B,MACtD5G,CACN,CAACxB,SAAAiuB,EAAA,EAAAtsB,IAAA,cAAAC,MAEM,WACH1B,KAAK0xB,MAAMlvB,KAAKiY,KAAKuX,MACzB,GAAC,CAAAvwB,IAAA,eAAAC,MAEM,WAA8B,IAAAyD,EAAAnF,KACjC,OAAAA,KAAK62B,SAAS,OAAQ,kBAAM1xB,EAAKusB,MAAMlvB,KAAKiY,KAAKuX,MAAM,EADlC/sB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,KAEjB,kBAAME,EAAK2xB,aAAa,CACnC,GAAC,CAAAr1B,IAAA,cAAAC,MAEM,WACH1B,KAAK+2B,cAAc,OACvB,GAAC,CAAAt1B,IAAA,UAAAC,MAEM,SAAQqQ,GACX/R,KAAK+xB,MAAMvvB,KAAKuP,EACpB,GAAC,CAAAtQ,IAAA,aAAAC,MAEM,SAAWya,GACdnc,KAAKg3B,aAAa7a,EAAK1I,IACvBzT,KAAK0xB,MAAMlvB,KAAKiY,KAAKuX,MACzB,GAAC,CAAAvwB,IAAA,eAAAC,MAEM,SAAa+R,GAChBzT,KAAKmyB,SAAS8E,KAAKxjB,GACnBpP,eAAeC,QACX,yBACAG,KAAKC,UAAU1E,KAAKmyB,UAE5B,GAAC,CAAA1wB,IAAA,aAAAC,OAAA8vB,EAAA7vB,EAEM,SAAiBgS,GAAY,IAAAnN,EAAAxG,KAAEk3B,EAAAjyB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAAsB,OAAArD,IAAAC,KAAA,SAAA0D,IAAA,IAAAkxB,EAAA3E,EAAA,OAAAlwB,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAClDi0B,EAAUjwB,EAAKqrB,SAAS5Y,YAAc,CAAE6Y,YAAa,KACnDA,EAAgB2E,EAAhB3E,eACYA,EAAY7rB,SAAS0N,IAASujB,GAC9C1wB,EAAKqrB,SAASrvB,KAAIstB,IAAA,GACX2G,GAAO,IACV3E,YAAaA,EAAY5V,OAAO,SAAC7Y,GAAC,OAAKA,IAAMsQ,CAAI,MAGrDnN,EAAKqrB,SAASrvB,KAAIstB,IAAA,GACX2G,GAAO,IACV3E,YAAW,GAAA1tB,OAAAif,EAAMyO,GAAW,CAAEne,OAErC,wBAAAlO,EAAAX,OAAA,EAAAS,EAAA,EAbuD3D,EAavD,GACJ,SAAAgsB,EAAAuJ,GAAA,OAAA3F,EAAAxsB,MAAAhF,KAAAiF,UAAA,MAAA8oB,CAAA,CAtS6B,CAAQvtB,EAAAiI,cAA7BslB,SAAqB,mBAAA9tB,iBAArB8tB,GAAoB7tB,EAAAwd,mBAAA/U,EAAAC,iBAAA1I,EAAAwd,mBAAA7U,EAAAC,qBAAA5I,EAAAwd,mBAAA3U,EAAAquB,gBAAA,EAApBrJ,EAAqB,WAAA7tB,EAAA,oCAArB6tB,EAAoBpQ,QAApBoQ,EAAoBnQ,UAAAC,WAFjB,SAEHkQ,CAAqB,qFCtClCsJ,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,MAAA8B,yOCFA,IAAA23B,EAAAz5B,EAAA,OACA05B,EAAA15B,EAAA,kBAEM25B,EAAiC,GAEjCC,EAAoB,IAAIH,EAAAI,WAE9B,SAAgBC,EAAqBC,GAA6B,IACtBC,EADsBC,EAAAC,EACrCH,GAAe,QAAAI,EAAA,WAAE,IAA/BC,EAAUJ,EAAAp2B,MACZ+1B,EAAiBvH,KAAK,SAAA5pB,GAAK,OAAAA,EAAFmN,KAAgBykB,EAAWzkB,EAAE,IACvDgkB,EAAiBR,KAAKiB,IAF9B,IAAAH,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MAAAH,GAIC,OAAArN,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACL,CANAz4B,uBAAAg4B,EAWah4B,iBAAc,eAAd04B,EAAc,oBAAAA,IAAAv4B,EAAAC,KAAAs4B,EAAA,CAAAx4B,SAAAw4B,EAAA,EAAA72B,IAAA,YAAAC,OACvB62B,EAAA52B,EAAAC,IAAAC,KAIO,SAAAC,EAAgB02B,GAAgB,IAAAC,EAAAC,EAAA,OAAA92B,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAC9Bg2B,EAAQ,CAAAl2B,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAAS+zB,GAAiB,OAC6B,KAAhEe,EAAchB,EAAiBvH,KAAK,SAAA9nB,GAAK,OAAAA,EAAFqL,KAAgB+kB,CAAQ,IACpD,CAAAl2B,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,SAAS80B,GAAW,OAAAn2B,SAAAE,KAAA,KACfg1B,EAAAmB,gBAAeH,GAC9Bl1B,YAAWkB,MACL,SAACnB,GAAC,OAAK,IAAI,GAAC,OAFZ,KAALq1B,EAAKp2B,EAAA4B,MAGF,CAAA5B,EAAAE,KAAA,SACLi2B,SAAW3I,EAAA,GAAQ4I,GACnBjB,EAAiBR,KAAKwB,GAAan2B,EAAAqB,OAAA,SAC5B80B,GAAW,eAAAn2B,EAAAqB,OAAA,SAEf+zB,GAAiB,yBAAAp1B,EAAAwC,OAAA,EAAAhD,EAAA,IAC3B,SAAA0oB,EAAAnN,GAAA,OAAAkb,EAAAvzB,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,uBAAAC,MAEM,SAAqBm2B,GACxBD,EAAqBC,EACzB,KAACS,EArBD,IAAAC,CAqBC,CAtBsB,GAAdD,SAAc,mBAAAr4B,iBAAdq4B,EAAc,EAAdA,EAAc,WAAAp4B,EAAA,+CAAdo4B,EAAcM,MAAA,IAAdN,CAAc,mOCpB3B,IAAAruB,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OAIA+6B,GAHA/6B,EAAA,OACAA,EAAA,OAEAA,EAAA,WAEAA,EAAA,6HAgBoBoC,EAAAyJ,oBAAA,6DAGIzJ,EAAA+Q,qBAAA,SAAA6nB,EAAArN,OAAA,0BAIAvrB,EAAAyJ,oBAAA,yEAfZzJ,EAAAqN,yBAAA,UAAArN,CAIC,WAIOA,EAAAiS,qBAAA,EAAA4mB,EAAA,aAMA74B,EAAAiS,qBAAA,EAAA6mB,EAAA,yBAAA94B,EAAAomB,kCAMJpmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAkB,WAEVA,EAAAuN,iBAAA,oEAIJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,OAAsCzuB,EAAAsN,yBACtCtN,EAAAqN,yBAAA,YAAArN,CAEC,gBAMOA,EAAA8Q,qBAAA,uBAAA8nB,EAAA54B,EAAAkR,wBAAAa,GAAAgM,UAAA/L,EAAAhS,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAU,EAAA+mB,eAAAH,GAAqB,GAE9B54B,EAAAqN,yBAAA,aAAArN,EAAAg5B,sBAAA,OACIh5B,EAAAyJ,oBAAA,eAEJzJ,EAAAi5B,sBAAAj5B,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,uBAAA8nB,EAAA54B,EAAAkR,wBAAAa,GAAAgM,UAAAsC,EAAArgB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA+O,EAAA6Y,iBAAAN,GAAuB,GAEhC54B,EAAAqN,yBAAA,aAAArN,EAAAg5B,sBAAA,OACIh5B,EAAAyJ,oBAAA,eAEJzJ,EAAAi5B,sBAAAj5B,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,uBAAA8nB,EAAA54B,EAAAkR,wBAAAa,GAAAgM,UAAApI,EAAA3V,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAqE,EAAAwjB,gBAAAP,GAAsB,GAE/B54B,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,wFA5DRA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA6nB,EAAArN,OAAA,KAAAqN,EAAArN,OAAApmB,OAAAnF,CAA4B,WAAAqtB,GAa7BrtB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,YAAAwI,EAAAjW,EAAA8V,sBAAA,IAAA9V,EAAA8V,sBAAA,IAAA8iB,EAAArlB,MAAA,KAAA0C,EAAAxC,OAAA,kBAKkCzT,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAiK,EAAAQ,QAAAp5B,EAAA6uB,sBAAA,IAmCtC7uB,EAAAwN,oBAAA,IAAAxN,EAAA4f,sBAAA,gBAAAvN,EAAAgnB,UAAAtzB,SAAA6yB,EAAArlB,KAGUvT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAAgnB,UAAAtzB,SAAA6yB,EAAArlB,IAAA,+BAxE9B,IAAM+lB,EAAuB,GAwGhB55B,0BAAuB,eAAvB65B,EAAuB,WAchC,SAAAA,EACYv4B,EACAoX,EACA2B,GAAyB,IAAA3Y,EAAAtB,KAAAD,EAAAC,KAAAy5B,GAFzBz5B,KAAAkB,YACAlB,KAAAsY,UACAtY,KAAAia,SAhBIja,KAAA+R,KAAO0I,KAAKuX,MACZhyB,KAAAgS,SAAW,GACpBhS,KAAA05B,MAAsB,GACtB15B,KAAA25B,UAAW,EAIX35B,KAAAuf,SAAyB,GAsChBvf,KAAA45B,iBAAmB,SAACC,GAA6B,OAC5Dv4B,EAAKw4B,UAAYD,CAAE,EACR75B,KAAA+5B,kBAAoB,SAACF,GAA6B,OAC7Dv4B,EAAK04B,SAAWH,CAAE,EACP75B,KAAAi6B,iBAAmB,SAACrQ,GAAU,OAAMtoB,EAAKq4B,SAAW/P,CAAC,CAhClE,CAAC9pB,SAAA25B,EAAA,EAAAh4B,IAAA,YAAAkE,IARJ,WACI,OAAO3F,KAAKkB,UAAUyE,IAAc,qBAAuB6zB,CAC/D,GAAC,CAAA/3B,IAAA,cAAAC,MAQM,SAAYw4B,IACXA,EAAQnoB,MAAQmoB,EAAQloB,WACxBhS,KAAKia,OAAOlH,WAAW,CACnBhB,KAAM/R,KAAK+R,KACXC,SAAUhS,KAAKgS,UAG3B,GAEA,CAAAvQ,IAAA,WAAAC,MAIO,SAASy4B,GACZn6B,KAAK05B,MAAQS,EACTn6B,KAAK85B,WAAW95B,KAAK85B,UAAU95B,KAAK05B,MAC5C,GAEA,CAAAj4B,IAAA,aAAAC,MAIO,SAAWA,GACd1B,KAAK05B,MAAQh4B,GAAS,EAC1B,GAAC,CAAAD,IAAA,mBAAAC,MAQM,SAAiB04B,GACpB,IAAMC,EAAer6B,KAAK05B,MAAMxd,OAAO,SAAC7Y,GAAC,OAAKA,EAAEoQ,KAAO2mB,EAAM3mB,EAAE,GAC/DzT,KAAKs6B,SAASD,EAClB,GAAC,CAAA54B,IAAA,iBAAAC,MAEM,SAAe04B,GAAkB,IAAAj1B,EAAAnF,KAC9B0Y,EAAM1Y,KAAKsY,QAAQrD,KAAK4jB,EAAA0B,0BAA2B,CACrDz3B,KAAM9C,KAAK05B,QAEfhhB,EAAII,cAAc3F,UAAU,SAACumB,GACpBA,IAAOA,EAAQhhB,EAAIM,kBAAkBuG,UAC1Cma,EAAQA,EAAM1d,IAAI,SAACG,GAAI,OAAA2T,EAAA,GAAW3T,EAAI,GAAK,IACnB2b,EADmBC,EAAAC,EACxB0B,GAAK,IAAxB,IAAA3B,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MAA0B,KAAfjc,EAAI2b,EAAAp2B,MACXya,EAAKpE,OAASoE,EAAKpE,OAAOyiB,MAAM,EAAGre,EAAKmd,OAAM,CACjD,OAAA1O,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACDlzB,EAAKm1B,SAASZ,EAClB,EACJ,GAAC,CAAAj4B,IAAA,kBAAAC,MAEM,SAAgB04B,GACnB,IAAMK,EAAWz6B,KAAKu5B,UAChBmB,GAAaD,EAASx0B,SAASm0B,EAAM3mB,IAEvCzT,KAAKkB,UAAUy5B,gBAAgB,mBAD/BD,EACiD,GAAAt2B,OAAAif,EAC1CoX,GAAQ,CACXL,EAAM3mB,KAKNgnB,EAASve,OAAO,SAAC7Y,GAAC,OAAKA,IAAM+2B,EAAM3mB,EAAE,GAGjD,KAACgmB,CAAA,CArF+B,GAAvBA,SAAuB,mBAAAx5B,iBAAvBw5B,GAAuBv5B,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAuQ,WAAAlZ,EAAAwI,4BAAAK,EAAA6xB,mBAAA,EAAvBnB,EAAuB,UAAAv5B,EAAA,kCAAvBu5B,EAAuBtwB,UAAA,uBAAAyW,OAAA,CAAA7N,KAAA,OAAAC,SAAA,YAAA5I,SAAA,CAAAlJ,EAAAkwB,6BATrB,CACP,CACI1jB,QAAS9C,EAAAixB,kBAETC,eAAa7wB,EAAA8wB,YAAW,kBAAMtB,CAAuB,GACrDuB,OAAO,KAEd96B,EAAA+6B,gCAAA3xB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,ipBApEyBgjB,UAAAC,MAAAC,EAAA,mTAYEF,UAAAG,MAAAD,EAAA,2JAAc,oFAYdF,UAAAI,MAAAF,EAAA,6JAAe,6OArDvCtwB,EAAAqN,yBAAA,WACIrN,EAAAiS,qBAAA,EAAA+oB,EAAA,eAyEJh7B,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,0BAAStH,EAAAuvB,gBAAgB,GAEzB/4B,EAAAqN,yBAAA,UAAArN,CAAwD,cAC1CA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,eAASvN,EAAAsN,wBAAAtN,YAjFGA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgwB,OA4EtBx5B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,WAAAvH,EAAAiwB,qIAmBCF,CAAuB,+ICjHpC,IAAAxvB,EAAAnM,EAAA,UAOAA,EAAA,8IAMQoC,EAAAyhB,kCAAA,GACIzhB,EAAAqN,yBAAA,eACIrN,EAAAyJ,oBAAA,sBAIAzJ,EAAAqN,yBAAA,cAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8Q,GAAA,IAAApQ,EAAA5R,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAM,EAAA9J,MAAA2X,OAAY,GAGrBzf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,GAExBA,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8Q,GAAA,IAAApL,EAAA5W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAsF,EAAAqkB,UAAAxb,OAAgB,GAGzBzf,EAAAqN,yBAAA,cACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,UAAArN,CAAsD,eAAtDA,CAAsD,SAAtDA,CAAsD,WAItCA,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,QAAGrN,EAAAuN,iBAAA,IAAwCvN,EAAAsN,wBAAAtN,GAE/CA,EAAAqN,yBAAA,kBACIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA8Q,GAAA,IAAAhQ,EAAAhS,EAAAqR,0BAAA,OAAarR,EAAAsR,sBAAAU,EAAAiK,KAAAmd,OAAAnoB,EAC/B,EADkBjR,CAAyB,yBAAAiR,GAAAjR,EAAAkR,wBAAA8Q,GAAA,IAAAH,EAAA7hB,EAAAqR,0BAAA,OACRrR,EAAAsR,sBAAAuQ,EAAAqZ,YAAAzb,KAAAxO,GAAwB,GAG5CjR,EAAAsN,wBAAAtN,GAELA,EAAAyJ,oBAAA,SACAzJ,EAAAqN,yBAAA,gBAAArN,CAAmC,YACCA,EAAAuN,iBAAA,cAAOvN,EAAAsN,yBACvCtN,EAAAqN,yBAAA,YAAArN,CAAyC,QAClCA,EAAAuN,iBAAA,IAA0CvN,EAAAsN,wBAAAtN,OAIzDA,EAAAqN,yBAAA,YAAArN,CAA2D,gBAOnDA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8Q,GAAA,IAAA3B,EAAArgB,EAAAqR,0BAAAgP,SAAA8a,QAAA9a,EAAA8a,OAA2Bn7B,EAAAsR,sBAAA+O,EAAA+a,aAAA3b,KAAAY,EAAA8a,QAAyB,GAEpDn7B,EAAAqN,yBAAA,YAAArN,CAA8C,kBAEtCA,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IAGJvN,EAAAsN,wBAAAtN,OAIhBA,EAAA4hB,iCAAA,2CAtEY5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,SAAAsB,EAAA4J,KAAAsP,QAgBAvrB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,cAAAvN,EAAAgpB,IAAAr7B,CAAyB,gBAAAqS,EAAAgpB,KAMrBr7B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAAgpB,IAAA,kCAQIr7B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAA4J,KAAAxI,KAAA,KAEDzT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAA4E,EAAA4J,KAAApE,OAAA,KAAAxF,EAAA4J,KAAApE,OAAA1S,SAAA,gBAGHnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAsB,EAAA4J,KAAAmd,OAAAp5B,CAAyB,QAAzBA,CAAyB,aAAAqS,EAAA4J,KAAApE,OAAA,KAAAxF,EAAA4J,KAAApE,OAAA1S,SAAA,GAUtBnF,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAA4J,KAAAtI,aAAA,kBASP3T,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,UAAAvN,EAAA8oB,QAMQn7B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAA8oB,OAAA,oBAGAn7B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAA8oB,OAAA,iEAShBn7B,EAAAqN,yBAAA,WAAArN,CAGC,UAEOA,EAAAuN,iBAAA,4CACJvN,EAAAsN,wBAAAtN,IAiBHN,wBAAqB,eAArB47B,EAAqB,WArGlC,SAAAA,IAAAz7B,EAAAC,KAAAw7B,GAuGoBx7B,KAAAq7B,QAAkB,EAClBr7B,KAAAu7B,KAAe,EAEdv7B,KAAAm7B,UAAY,IAAIlxB,EAAAwV,aAChBzf,KAAAs7B,aAAe,IAAIrxB,EAAAwV,aACnBzf,KAAAo7B,YAAc,IAAInxB,EAAAwV,aAClBzf,KAAAgI,MAAQ,IAAIiC,EAAAwV,aAWhC3f,SAAA07B,EAAA,EAAA/5B,IAAA,WAAAC,MATU,WACC1B,KAAKmc,OAASnc,KAAKmc,KAAKmd,SAAQt5B,KAAKmc,KAAKmd,OAAS,EAC3D,GAAC,CAAA73B,IAAA,cAAAC,MAEM,SAAYw4B,GACXA,EAAQ/d,MAAQnc,KAAKmc,OAChBnc,KAAKmc,KAAKmd,SAAQt5B,KAAKmc,KAAKmd,OAAS,GAElD,KAACkC,CAAA,CAlB6B,GAArBA,SAAqB,mBAAAv7B,iBAArBu7B,EAAqB,EAArBA,EAAqB,UAAAt7B,EAAA,kCAArBs7B,EAAqBryB,UAAA,oBAAAyW,OAAA,CAAAzD,KAAA,OAAAkf,OAAA,SAAAE,IAAA,OAAA1b,QAAA,CAAAsb,UAAA,YAAAG,aAAA,eAAAF,YAAA,cAAApzB,MAAA,SAAAoB,SAAA,CAAAlJ,EAAA+6B,gCAAA3xB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,86BAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAlG1BvJ,EAAAiS,qBAAA,EAAAspB,EAAA,wBA0EAv7B,EAAAiS,qBAAA,EAAAupB,EAAA,yBAAAx7B,EAAAomB,yEA1EepmB,EAAA+Q,qBAAA,OAAAvH,EAAAyS,KAAAjc,CAAY,WAAAiuB,EAAA,mUAkGtBqN,CAAqB,qKCxGrB57B,+BAA4B,eAA5B+7B,EAA4B77B,EAAA,SAAA67B,IAAA57B,EAAAC,KAAA27B,EAAA,GAA5BA,SAA4B,mBAAA17B,iBAA5B07B,EAA4B,EAA5BA,EAA4B,UAAAz7B,EAAA,kCAA5By7B,EAA4BxyB,UAAA,4BAAAG,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,GAAA,IAA5BiyB,CAA4B,8JCA5B/7B,wBAAqB,eAArBg8B,EAAqB97B,EAAA,SAAA87B,IAAA77B,EAAAC,KAAA47B,EAAA,GAArBA,SAAqB,mBAAA37B,iBAArB27B,EAAqB,EAArBA,EAAqB,UAAA17B,EAAA,kCAArB07B,EAAqBzyB,UAAA,oBAAAG,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,GAAA,IAArBkyB,CAAqB,kLCPlC,IAAA3xB,EAAAnM,EAAA,OASAkc,GAFAlc,EAAA,MAEAA,EAAA,QACAwC,EAAAxC,EAAA,2GA+BgCoC,EAAAqN,yBAAA,WAAArN,CAGC,aAEOA,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAAtN,qDADIA,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAkuB,EAAAvC,QAAA,gCAGRp5B,EAAAyJ,oBAAA,6DAOIzJ,EAAA+Q,qBAAA,SAAA4qB,EAAApQ,OAAA,0BAGAvrB,EAAAyJ,oBAAA,yEAhChBzJ,EAAAqN,yBAAA,SAAArN,CAKC,eAIOA,EAAA8Q,qBAAA,uBAAA6qB,EAAA37B,EAAAkR,wBAAAuF,GAAAsH,UAAArH,EAAA1W,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAoF,EAAAklB,YAAAD,GAAkB,GAE3B37B,EAAAqN,yBAAA,YAGIrN,EAAAiS,qBAAA,EAAA4pB,EAAA,cAQA77B,EAAAiS,qBAAA,EAAA6pB,EAAA,cASA97B,EAAAiS,qBAAA,EAAA8pB,EAAA,0BAAA/7B,EAAAomB,kCAMJpmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAwC,WAAxCA,CAAwC,SAI3BA,EAAAuN,iBAAA,IAA2BvN,EAAAsN,yBAChCtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAEC,QAEOA,EAAAuN,iBAAA,IAEJvN,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,uBAAA6qB,EAAA37B,EAAAkR,wBAAAuF,GAAAsH,UAAA5G,EAAAnX,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA6F,EAAA8jB,UAAAxb,KAAAkc,GAAqB,GAE9B37B,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,uFArDJA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAiB,EAAAqN,SAAAtZ,SAAA41B,EAAApoB,KAQAvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA4qB,EAAApQ,OAAA,KAAAoQ,EAAApQ,OAAApmB,OAAAnF,CAGb,WAAA0V,GAeiB1V,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAunB,EAAAloB,MAAA,SAEDzT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAkuB,EAAAK,SAAA,KAOAh8B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAAkuB,EAAA9jB,OAAA,KAAA8jB,EAAA9jB,OAAA1S,SAAA,mBAWZnF,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,gBAAA5N,EAAAiqB,YAAAN,EAAApoB,KAGUvT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAApC,EAAAiqB,YAAAN,EAAApoB,IAAA,wDArEtBvT,EAAAqN,yBAAA,UAIIrN,EAAAiS,qBAAA,EAAAiqB,EAAA,2CAwEJl8B,EAAAsN,kEAtE0BtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAc,EAAAiB,QAAA,2BAP9B7X,EAAAyhB,kCAAA,GACIzhB,EAAAiS,qBAAA,EAAAkqB,EAAA,0CA6EJn8B,EAAA4hB,yGA3ES5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAyQ,EAAAxhB,EAAA8V,sBAAA,IAAAzD,EAAAwF,SAAA,KAAA2J,EAAArc,OAAAnF,CAAgC,WAAAiuB,EAAA,wBA8EzCjuB,EAAAqN,yBAAA,WAAArN,CAGC,UAEOA,EAAAuN,iBAAA,4DACJvN,EAAAsN,wBAAAtN,0BAIJA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,UAAsBrN,EAAAuN,iBAAA,iCAA2BvN,EAAAsN,wBAAAtN,UADpCA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAchBrR,qBAAkB,eAAlB08B,EAAkB,WA0B3B,SAAAA,EAAoBC,GAA+B,IAAAj7B,EAAAtB,KAAAD,EAAAC,KAAAs8B,GAA/Bt8B,KAAAu8B,eAzBJv8B,KAAAuf,SAAmB,GACnBvf,KAAAu5B,UAAsB,GACtBv5B,KAAAw8B,eAA+B,GAC9Bx8B,KAAAm7B,UAAY,IAAIlxB,EAAAwV,aAChBzf,KAAAy8B,SAAW,IAAIxyB,EAAAwV,aAEhBzf,KAAA08B,OAAS,IAAI1iB,EAAAqB,gBAAwC,IAErDrb,KAAAujB,QAAUvjB,KAAKu8B,aAAahZ,QAC5BvjB,KAAA+X,UAASiC,EAAAgJ,eAAc,CACnChjB,KAAK08B,OACL18B,KAAKu8B,aAAaI,kBACnBx5B,QACC7C,EAAA0b,KAAI,SAAA1V,GAAqB,IACIwxB,EADJ1vB,EAAA8a,EAAA5c,EAAA,GAAnBo2B,EAAMt0B,EAAA,GAAE2P,EAAM3P,EAAA,GAAA2vB,EAAAC,EACGjgB,GAAM,QAAAkgB,EAAA,WAAE,IAAhB9b,EAAI2b,EAAAp2B,MACXya,EAAKmd,OAASoD,EAAOvgB,EAAK1I,KAAO,EACjC,IAAM8L,EAAWje,EAAKk7B,eAAetM,KACjC,SAAC6C,GAAC,OAAKA,EAAEtf,KAAO0I,EAAK1I,EAAE,GAEvB8L,IAAUA,EAASxH,OAASoE,EAAKpE,SALzC,IAAAggB,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MAAAH,GAMC,OAAArN,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACD,OAAOtgB,CACX,GAGkD,CAACjY,SAAAw8B,EAAA,EAAA76B,IAAA,cAAAC,MAEhD,SAAYw4B,GAAsB,IAAA0C,EACrC,GAAI1C,EAAQsC,gBAAqC,QAAvBI,EAAI58B,KAAKw8B,sBAAc,IAAAI,GAAnBA,EAAqBv3B,OAAQ,CACvD,IACsCw3B,EADhCH,EAAS,GAAGI,EAAA9E,EACCh4B,KAAKw8B,gBAAc,IAAtC,IAAAM,EAAAlT,MAAAiT,EAAAC,EAAA3E,KAAAC,MAAwC,KAA7Bjc,EAAI0gB,EAAAn7B,MACXg7B,EAAOvgB,EAAK1I,IAAM0I,EAAKmd,OAC1B,OAAA1O,GAAAkS,EAAA1X,EAAAwF,EAAA,SAAAkS,EAAAzE,GAAA,CACDr4B,KAAK08B,OAAOl6B,KAAKk6B,EAAM,CAE/B,GAAC,CAAAj7B,IAAA,cAAAC,MAEM,SAAYwP,GACf,OAAOlR,KAAKu5B,UAAUtzB,SAASiL,EACnC,GAAC,CAAAzP,IAAA,cAAAC,MAEM,SAAY04B,GACfp6B,KAAKy8B,SAAS9c,KAAKya,EACvB,KAACkC,CAAA,CA5C0B,GAAlBA,SAAkB,mBAAAr8B,iBAAlBq8B,GAAkBp8B,EAAAwI,4BAAAC,EAAAiyB,mBAAA,EAAlB0B,EAAkB,UAAAp8B,EAAA,kCAAlBo8B,EAAkBnzB,UAAA,iBAAAyW,OAAA,CAAAL,SAAA,WAAAga,UAAA,YAAAiD,eAAA,kBAAA3c,QAAA,CAAAsb,UAAA,YAAAsB,SAAA,YAAArzB,SAAA,CAAAlJ,EAAA+6B,gCAAA3xB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,s1DAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IApHvBvJ,EAAAqN,yBAAA,UAAArN,CAEC,UAC8BA,EAAAuN,iBAAA,aAAOvN,EAAAsN,yBAClCtN,EAAAqN,yBAAA,SACIrN,EAAAuN,iBAAA,iCACJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAA4qB,EAAA,oDA+EJ78B,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAA6qB,EAAA,yBAAA98B,EAAAomB,kCAUApmB,EAAAiS,qBAAA,GAAA8qB,EAAA,yBAAA/8B,EAAAomB,4EA5FQpmB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,YAAA+T,EAAAxhB,EAAA8V,sBAAA,IAAAtM,EAAAqO,SAAA,KAAA2J,EAAArc,SAAA,uBAEWnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA8V,sBAAA,IAAAtM,EAAA6Z,SAAArjB,CAA0B,WAAAqtB,EAAA,+PA6GxC+O,CAAkB,sKClI/B,IAAAtuB,EAAAlQ,EAAA,UACAA,EAAA,OACAA,EAAA,gLAsDgBoC,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqV,GAAA,IAAAxQ,EAAA/V,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAyE,EAAAinB,UAAqB,KAAI,GAEzBh9B,EAAAuN,iBAAA,YACJvN,EAAAsN,wBAAA,EA7DhB,IAAMgsB,EAAuB,GAiHhB55B,4BAAyB,eAAzB26B,EAAyB,WAoBlC,SAAAA,EACYr5B,EACyBi8B,GAAoBp9B,EAAAC,KAAAu6B,GAD7Cv6B,KAAAkB,YACyBlB,KAAAm9B,SArB9Bn9B,KAAAk9B,UAA+B,KAC/Bl9B,KAAAuf,SAAQ8D,EAAsBrjB,KAAKm9B,QAAU,GAqBjD,CAACr9B,SAAAy6B,EAAA,EAAA94B,IAAA,YAAAkE,IAnBJ,WACI,OAAO3F,KAAKkB,UAAUyE,IAAc,qBAAuB6zB,CAC/D,GAAC,CAAA/3B,IAAA,eAAAkE,IAED,WACI,OAAO3F,KAAKuf,SAASvD,IAAI,SAAC3Y,GAAC,OAAKA,EAAEoQ,EAAE,GAAEsB,KAAK,IAC/C,GAAC,CAAAtT,IAAA,QAAAkE,IAED,WACI,OAAO3F,KAAKuf,SAAS6d,OAAO,SAACn9B,EAAG8yB,GAAM,OAAK9yB,EAAI8yB,EAAEuG,MAAM,EAAE,EAC7D,GAAC,CAAA73B,IAAA,aAAAC,MAEM,SAAW+R,GACd,OAAOA,GAAMzT,KAAKq9B,aAAap3B,SAASwN,EAC5C,GAAC,CAAAhS,IAAA,cAAAC,MAOM,SAAYg3B,EAAmB4E,GAClC,IAAMlqB,EAAOpT,KAAKuf,SAASrD,OAAO,SAAC7Y,GAAC,OAAKA,EAAEoQ,KAAOilB,EAAMjlB,EAAE,GACtD6pB,GAAOlqB,EAAK6jB,KAAKyB,GACrB14B,KAAKuf,SAAQ8D,EAAOjQ,EACxB,GAAC,CAAA3R,IAAA,sBAAAC,MAEM,SAAoB67B,GAAa,IAAAj8B,EAAAtB,KACpC,GAAKA,KAAKk9B,UACV,KAAM/gB,EAAOnc,KAAKuf,SAAS2Q,KAAK,SAAC7sB,GAAC,OAAKA,EAAEoQ,KAAOnS,EAAK47B,UAAUzpB,EAAE,GAC7D0I,IAAMA,EAAKmd,OAASiE,GACxBphB,EAAKpE,OAAS/X,KAAKk9B,UAAUnlB,OACjC,GAAC,CAAAtW,IAAA,kBAAAC,MAEM,SAAgB04B,GACnB,IAAMK,EAAWz6B,KAAKu5B,UAChBmB,GAAaD,EAASx0B,SAASm0B,EAAM3mB,IAEvCzT,KAAKkB,UAAUy5B,gBAAgB,mBAD/BD,EACiD,GAAAt2B,OAAAif,EAC1CoX,GAAQ,CACXL,EAAM3mB,KAKNgnB,EAASve,OAAO,SAAC7Y,GAAC,OAAKA,IAAM+2B,EAAM3mB,EAAE,GAGjD,KAAC8mB,CAAA,CApDiC,GAAzBA,SAAyB,mBAAAt6B,iBAAzBs6B,GAAyBr6B,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAsBtBsF,EAAAwvB,iBAAe,EAtBlBjD,EAAyB,UAAAr6B,EAAA,kCAAzBq6B,EAAyBpxB,UAAA,yBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,uqDAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA5G9BvJ,EAAAqN,yBAAA,UAAArN,CAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAEnBA,EAAAqN,yBAAA,QAAIrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,GAElBA,EAAAqN,yBAAA,YAGIrN,EAAAyJ,oBAAA,qBACAzJ,EAAAqN,yBAAA,WAGIrN,EAAAyJ,oBAAA,8BAGAzJ,EAAAqN,yBAAA,mBAIIrN,EAAA8Q,qBAAA,qBAAAG,GAAA,OAAazH,EAAA2vB,gBAAAloB,EAAuB,EAApCjR,CAAqC,oBAAAiR,GAAA,OAAAzH,EAAAwzB,UAAA/rB,CAAA,GAGxCjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,sBAMIrN,EAAA8Q,qBAAA,wBAAAG,GAAA,OAAgBzH,EAAA+zB,YAAA/zB,EAAAwzB,UAAA/rB,EAA+B,EAA/CjR,CAAgD,uBAAAiR,GAAA,OACjCzH,EAAAg0B,oBAAAvsB,EAA2B,EAD1CjR,CAAgD,8BAMnCwJ,EAAA2vB,gBAAA3vB,EAAAwzB,UAA2B,EANxCh9B,CAAgD,0BAAAwJ,EAAAwzB,UAO3B,IAAI,GAC5Bh9B,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,eAGIrN,EAAAiS,qBAAA,GAAAwrB,EAAA,iBAUAz9B,EAAAqN,yBAAA,gBAQIrN,EAAAuN,iBAAA,kBACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBAQqCA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,aAA4BrN,EAAAuN,iBAAA,mBAAYvN,EAAAsN,wBAAAtN,KAGhDA,EAAAqN,yBAAA,WAA8BrN,EAAAuN,iBAAA,IAA0BvN,EAAAsN,yBACxDtN,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,0BAAStH,EAAA+zB,YAAA/zB,EAAAwzB,WAAwBxzB,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IAA0B,GAE3DvT,EAAAqN,yBAAA,YAAArN,CAA+B,kBAEvBA,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,wBAAAtN,gBAhFAA,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,WAAAvH,EAAA2zB,aAAAn9B,CAAyB,YAAAwJ,EAAA6vB,UAAzBr5B,CAAyB,iBAAAwJ,EAAA6V,UAW7Brf,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,UAAApW,EAAAwzB,UAAAh9B,CAA2B,UAAAwJ,EAAAwzB,WAF3Bh9B,EAAA+Q,qBAAA,OAAAvH,EAAAwzB,UAAAh9B,CAAmB,SAAAwJ,EAAA2zB,aAAAp3B,UAAA,MAAAyD,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,KAAA,IAAnBvT,CAAmB,QAAAwJ,EAAAwzB,WAAAxzB,EAAA6vB,UAAAtzB,UAAA,MAAAyD,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,KAAA,KAuBlBvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAwzB,WAUDh9B,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,OAAApW,EAAAwzB,WADAh9B,EAAA+Q,qBAAA,mBAAAvH,EAAA6V,UAaArf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAvH,EAAA6V,UAQ0Brf,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,GAAAjE,EAAA6zB,MAAA,mBAK1Br9B,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,UAAApW,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,KADAvT,EAAA+Q,qBAAA,YAAAvH,EAAAwzB,WAMQh9B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IAAA,oBAGAvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IAAA,uNAaf8mB,CAAyB,gLCrHtC,IAAAvgB,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,OAQA05B,EAAA15B,EAAA,OACA+/B,EAAA//B,EAAA,OACAyzB,EAAAzzB,EAAA,OASAggC,EAAAhgC,EAAA,SACAA,EAAA,0BAYa8B,oBAAiB,eAAjBg7B,EAAiB,WA+E1B,SAAAA,EAAoBz5B,GAAyB,IAAAG,EAAAtB,KAAAD,EAAAC,KAAA46B,GAAzB56B,KAAAmB,OA9EZnB,KAAA+9B,SAAW,IAAI/jB,EAAAqB,gBAA8B,CAAEtJ,KAAM0I,KAAKuX,QAC1DhyB,KAAAg+B,QAAU,IAAIhkB,EAAAqB,gBAAwB,IACtCrb,KAAA4xB,SAAW,IAAI5X,EAAAqB,gBAAwB,IAE/Brb,KAAAi+B,OAASj+B,KAAKg+B,QAAQxiB,eACtBxb,KAAAujB,QAAUvjB,KAAK4xB,SAASpW,eAExBxb,KAAAk+B,cAAalkB,EAAAO,IAAG,GAAGpX,QAC/B7C,EAAAiyB,WAAU,WACNjxB,SAAKswB,SAASpvB,KAAKlB,EAAKswB,SAAS3Y,WAAa,aAAU,EACjDue,EAAA2G,cACX,IAAC,EACD79B,EAAAwjB,KAAI,SAACzgB,GAAC,OACF/B,EAAKswB,SAASpvB,KACVlB,EAAKswB,SAAS3Y,WAAWmlB,QAAQ,cAAe,IACnD,MAEL99B,EAAA+yB,aAAY,IAGArzB,KAAAq+B,eAAiBr+B,KAAK+9B,SAAS56B,QAC3C7C,EAAA4xB,cAAa,MAAG,EAChB5xB,EAAAiyB,WAAU,SAAAjsB,GAAmB,IAAhB0N,EAAI1N,EAAJ0N,KAAMjC,EAAIzL,EAAJyL,KACfzQ,SAAKswB,SAASpvB,KAAKlB,EAAKswB,SAAS3Y,WAAa,eAAY,EACnD4kB,EAAAzJ,eAAc,CACjBrgB,MAAOC,GAAQ,GACf+f,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWliB,IACrCmiB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAASpiB,IACjCiB,KAAM,iBAEd,IAAC,EACD1S,EAAAwjB,KAAI,SAACzgB,GAAC,OACF/B,EAAKswB,SAASpvB,KACVlB,EAAKswB,SAAS3Y,WAAWmlB,QAAQ,gBAAiB,IACrD,MAEL99B,EAAA+yB,aAAY,IAGArzB,KAAAs+B,oBAAmBtkB,EAAAgJ,eAAc,CAC7ChjB,KAAK+9B,SACL/9B,KAAKmB,KAAKoX,kBACXpV,QACC7C,EAAA4xB,cAAa,MAAG,EAChB5xB,EAAAiyB,WAAU,SAAAnqB,GAA4C,IAAA+a,EAAAD,EAAA9a,EAAA,GAAAm2B,EAAApb,EAAA,GAAlCpR,EAAIwsB,EAAJxsB,KAAMC,EAAQusB,EAARvsB,SAAUwsB,EAAMD,EAANC,OAChC,SAAOhH,EAAAiH,wBACH,CACI1qB,MAHqCoP,EAAA,GAG1B1P,IAHL8qB,EAAJvqB,MAGuB,GACzB+f,gBAAcxC,EAAAyC,gBAAYzC,EAAAmN,eAAc3sB,IACxCmiB,cAAY3C,EAAAyC,gBACRzC,EAAAoN,gBAAYpN,EAAAqN,YAAW7sB,EAAMC,GAAY,MAE7CgB,KAAM,iBAEVwrB,GACFr7B,QAAK7C,EAAA2yB,YAAW,oBAAMjZ,EAAAO,IAAG,GAAmB,GAClD,IAAC,EACDja,EAAA0b,KAAI,SAAC5I,GAAI,OAAKA,EAAK8J,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAEhgB,KAAKkrB,cAAc7f,EAAErL,KAAK,EAAC,MAC/DrT,EAAAwjB,KAAI,SAACzgB,GAAC,SAAKy6B,EAAAlG,sBAAqBv0B,EAAE,MAClC/C,EAAA+yB,aAAY,IAGArzB,KAAA28B,mBAAkB3iB,EAAAgJ,eAAc,CAC5ChjB,KAAKg+B,QACLh+B,KAAKs+B,mBACNn7B,QACC7C,EAAA0b,KAAI,SAAAoH,GAAqB,IAAA0b,EAAA5b,EAAAE,EAAA,GAAXrL,EAAM+mB,EAAA,GACVlV,EADEkV,EAAA,GACSpL,cACjB,OAAO3b,EAAOmE,OACV,SAAC7Y,GAAC,IAAA07B,EAAA,OACU,QAARA,EAAA17B,EAAE0U,cAAM,IAAAgnB,OAAA,EAARA,EAAU15B,UACThC,EAAEsQ,KAAK+f,cAAcztB,SAAS2jB,IAC3BvmB,EAAEwQ,YAAY6f,cAAcztB,SAAS2jB,GAAG,EAExD,IAAC,EACDtpB,EAAA+yB,aAAY,GAGgC,CAACvzB,SAAA86B,EAAA,EAAAn5B,IAAA,YAAAC,MAE1C,SAAUA,GACb1B,KAAKg+B,QAAQx7B,KAAI,GAAA4B,OAAI1C,GACzB,GAAC,CAAAD,IAAA,aAAAC,MAEM,SAAWuhB,GACdjjB,KAAK+9B,SAASv7B,KAAIstB,IAAA,GAAM9vB,KAAK+9B,SAASr8B,OAAUuhB,GACpD,KAAC2X,CAAA,CAvFyB,GAAjBA,SAAiB,mBAAA36B,iBAAjB26B,GAAiB16B,EAAAwd,mBAAA/U,EAAAG,qBAAA,EAAjB8xB,EAAiB,WAAA16B,EAAA,oCAAjB06B,EAAiBjd,QAAjBid,EAAiBhd,UAAAC,WAFd,SAEH+c,CAAiB,iLClC9Bh7B,gBAA0BE,EAQtB,SAAAk/B,EAAYl8B,GAA6B/C,EAAAC,KAAAg/B,GAPzCh/B,KAAAyT,GAAa,GACbzT,KAAA2T,KAAe,GACf3T,KAAA6T,YAAsB,GACtB7T,KAAAi/B,mBAA8B,GAC9Bj/B,KAAAk/B,WAAqBzkB,KAAKuX,MAC1BhyB,KAAAm/B,WAAqB1kB,KAAKuX,MAGtB3H,OAAO+U,OAAOp/B,KAAM8C,EACxB,GAGJlD,qBAA+BE,EAW3B,SAAAu/B,EAAYv8B,GAAkC/C,EAAAC,KAAAq/B,GAC1ChV,OAAO+U,OAAOp/B,KAAM8C,EACxB,GAGJlD,aAAuBE,EAiBnB,SAAA63B,EAAY70B,GAA0B/C,EAAAC,KAAA23B,GAPtC33B,KAAAyrB,OAAmB,GAQfpB,OAAO+U,OAAOp/B,KAAM8C,EACxB,GAGJlD,QAAkBE,EAYd,SAAAw/B,EAAYx8B,GAAqB/C,EAAAC,KAAAs/B,GAXjCt/B,KAAAyT,GAAa,GACbzT,KAAAu/B,QAAkB,GAClBv/B,KAAA6T,YAAsB,GACtB7T,KAAAw/B,cAAwB,GACxBx/B,KAAAy/B,QAAkB,GAClBz/B,KAAA0/B,WAAqB,GACrB1/B,KAAA2/B,WAAkC,GAClC3/B,KAAA4/B,kBAA4B,GAC5B5/B,KAAAk/B,WAAqBzkB,KAAKuX,MAC1BhyB,KAAAm/B,WAAqB1kB,KAAKuX,MAGtB3H,OAAO+U,OAAOp/B,KAAM8C,EACxB,kQCjEJ,IAAA8G,EAAA9L,EAAA,OACAy5B,EAAAz5B,EAAA,OAMA0C,EAAA1C,EAAA,OAEA8B,4BAAA,SAAgBigC,IAA6D,IAAnC3D,EAAAj3B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA0B,GAChE,OAAO,IAAI2E,EAAAk2B,UAAU,CACjBrsB,GAAI,IAAI7J,EAAAm2B,YAAY7D,EAASzoB,IAC7BE,KAAM,IAAI/J,EAAAm2B,YAAY7D,EAASvoB,MAAQ,GAAI,CAAC/J,EAAAo2B,WAAWC,WACvDhB,mBAAoB,IAAIr1B,EAAAm2B,YAAY7D,EAAS+C,qBAErD,EAEAr/B,iCAAA,SAAgBsgC,IACyB,IAArCC,EAAAl7B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA4B,GAE5B,OAAO,IAAI2E,EAAAk2B,UAAU,CACjBrsB,GAAI,IAAI7J,EAAAm2B,YAAYI,EAAM1sB,IAC1B2sB,aAAc,IAAIx2B,EAAAm2B,YACdI,EAAMC,cAAiBD,EAAcE,uBAAyB,GAC9D,CAACz2B,EAAAo2B,WAAWC,WAEhBK,eAAgB,IAAI12B,EAAAm2B,YAAYI,EAAMG,gBAAkB,IACxDC,WAAY,IAAI32B,EAAAm2B,YAAYI,EAAMI,YAAc,GAChDC,cAAe,IAAI52B,EAAAm2B,YAAkC,IAAtBI,EAAMK,eAAwB,MAC7DC,4BAA6B,IAAI72B,EAAAm2B,YACO,IAApCI,EAAMM,6BACDN,EAAcO,yBACf,MAERC,0BAA2B,IAAI/2B,EAAAm2B,YACO,IAAlCI,EAAMQ,2BACDR,EAAcS,uBACf,OAGhB,EAEAhhC,yBAAA,SAAgBihC,IAA2D,IAApCnI,EAAAzzB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAoB,IAAIsyB,EAAAI,WAC3D,OAAO,IAAI/tB,EAAAk2B,UAAU,CACjBrsB,GAAI,IAAI7J,EAAAm2B,YAAYrH,EAAMjlB,IAC1BqtB,YAAa,IAAIl3B,EAAAm2B,YAAYrH,EAAMoI,aAAe,GAAI,CAClDl3B,EAAAo2B,WAAWC,WAEfxU,OAAQ,IAAI7hB,EAAAm2B,YAAYrH,EAAMjN,QAAU,IACxCsV,MAAO,IAAIn3B,EAAAm2B,YAAYrH,EAAMqI,OAAS,IACtCptB,KAAM,IAAI/J,EAAAm2B,YAAYrH,EAAM/kB,MAAQ,GAAI,CAAC/J,EAAAo2B,WAAWC,WACpDpsB,YAAa,IAAIjK,EAAAm2B,YAAYrH,EAAM7kB,aAAe,KAE1D,EAEAjU,oBAAA,SAAgBohC,IAA4C,IAA1B5G,EAAAn1B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAe,IAAIsyB,EAAA+H,MACjD,OAAO,IAAI11B,EAAAk2B,UAAU,CACjBrsB,GAAI,IAAI7J,EAAAm2B,YAAY3F,EAAM3mB,IAC1B8rB,QAAS,IAAI31B,EAAAm2B,YAAY3F,EAAMmF,SAAW,GAAI,CAAC31B,EAAAo2B,WAAWC,WAC1DpsB,YAAa,IAAIjK,EAAAm2B,YAAY3F,EAAMvmB,aAAe,IAClD2rB,cAAe,IAAI51B,EAAAm2B,YAAY3F,EAAMoF,eAAiB,IACtDC,QAAS,IAAI71B,EAAAm2B,YAAY3F,EAAMqF,SAAW,IAC1CC,WAAY,IAAI91B,EAAAm2B,YAAY3F,EAAMsF,YAAc,IAChDC,WAAY,IAAI/1B,EAAAm2B,YAAY3F,EAAMuF,YAAc,IAChDC,kBAAmB,IAAIh2B,EAAAm2B,YAAY3F,EAAMwF,oBAEjD,EAEAhgC,iBAAA,SAAgBqhC,EAAelpB,GAC3B,IAC0B+f,EADpBoJ,EAAuB,GAAGnJ,EAAAC,EACZjgB,GAAM,QAAAkgB,EAAA,WAAE,IAAjBmC,EAAKtC,EAAAp2B,MACNg3B,EAAQwI,EAAOhR,KAAK,SAAC7sB,GAAC,OAAKA,EAAEoQ,KAAQ2mB,EAAc+G,aAAa,GAClEzI,EACAA,EAAM3gB,OAAOkf,KAAKmD,GAElB8G,EAAOjK,KAAK,CACRxjB,GAAK2mB,EAAc+G,cACnBxtB,KAAOymB,EAAczmB,KACrBoE,OAAQ,CAACqiB,MARrB,IAAArC,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MAAAH,GAWC,OAAArN,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACD,QAAA+I,EAAA,EAAAC,EAAoBH,EAAME,EAAAC,EAAAh8B,OAAA+7B,IAAE,CAAvB,IAAM1I,EAAK2I,EAAAD,GACZ1I,EAAMY,OAASZ,EAAM3gB,OAAO1S,OAEhC,OAAO67B,CACX,EAEAthC,iBAAA,SAAgB0hC,EAAeJ,GAC3B,SAAO1gC,EAAA4yB,SACH8N,EAAOllB,IAAI,SAAC3Y,GAAC,OACTA,EAAE0U,OACGyiB,MAAM,EAAIn3B,EAAUi2B,QACpBtd,IAAI,SAACoe,GAAK,OAAAtK,IAAA,GAAWsK,GAAK,IAAEzmB,KAAMtQ,EAAEsQ,MAAI,EAAI,GAG7D,21BChGA,IAAApT,EAAAzC,EAAA,MACAyjC,EAAAzjC,EAAA,OACAwC,EAAAxC,EAAA,OAOAkc,EAAAlc,EAAA,OACAyzB,EAAAzzB,EAAA,OACA+/B,EAAA//B,EAAA,OAMA0jC,EAAA1jC,EAAA,OACA0C,EAAA1C,EAAA,OAGM2jC,EAAgB,iBAMtB,SAAgBC,IAAoC,IAC1CC,MAAIJ,EAAAK,eADuB38B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAE9C,SAAO1E,EAAAoF,KAAG,GAAAvB,OAAIq9B,EAAa,qBAAAr9B,OAAoBu9B,GAAI,IAAMA,GAAI,KAAMx+B,QAC/D7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAoB,GAEvC,CAEA,SAAgBw+B,EAAiB3F,GAC7B,SAAO37B,EAAAuhC,MAAI,GAAA19B,OACJq9B,EAAa,wBAChBlhC,EAAAwhC,aAAY7F,EAAU,MAAC52B,EAAW,KAAM,MAC1CnC,QAAK7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAkB,GACxC,CAEA,SAAgB2+B,EACZvuB,EACAyoB,IAEA,SAAO37B,EAAA0hC,KAAG,GAAA79B,OACHq9B,EAAa,sBAAAr9B,OAAqBqP,IAAE,EACvClT,EAAAwhC,aAAY7F,GAAU,MAAC52B,EAAW,KAAM,MAC1CnC,QAAK7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAkB,GACxC,CAsBA,SAAgB6+B,IAAgC,IACtCP,MAAIJ,EAAAK,eADmB38B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAE1C,SAAO1E,EAAAoF,KAAG,GAAAvB,OAAIq9B,EAAa,gBAAAr9B,OAAeu9B,GAAI,IAAMA,GAAI,KAAMx+B,QAC1D7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAiB,GAEpC,CAEA,SAAgB8+B,EAAcC,GAC1B,SAAO7hC,EAAAuhC,MAAI,GAAA19B,OACJq9B,EAAa,mBAChBlhC,EAAAwhC,aAAYK,EAAS,MAAC98B,EAAW,KAAM,MACzCnC,QAAK7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAe,GACrC,CAEA,SAAgBg/B,EAAiB5uB,EAAY2uB,IACzC,SAAO7hC,EAAA0hC,KAAG,GAAA79B,OACHq9B,EAAa,iBAAAr9B,OAAgBqP,IAAE,EAClClT,EAAAwhC,aAAYK,GAAS,MAAC98B,EAAW,KAAM,MACzCnC,QAAK7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAe,GACrC,CAQA,SAAgBs1B,EAAellB,GAC3B,SAAOlT,EAAAoF,KAAG,GAAAvB,OAAIq9B,EAAa,iBAAAr9B,OAAgBqP,IAAMtQ,QAC7C7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAe,GAElC,CAUA,SAAgB86B,IAA2B,IACjCwD,MAAIJ,EAAAK,eADc38B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAErC,SAAO1E,EAAAoF,KAAG,GAAAvB,OAAIq9B,EAAa,WAAAr9B,OAAUu9B,GAAI,IAAMA,GAAI,KAAMx+B,QACrD7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAY,GAE/B,CAEA,SAAgBi/B,EAASlI,GACrB,SAAO75B,EAAAuhC,MAAI,GAAA19B,OACJq9B,EAAa,cAChBlhC,EAAAwhC,aAAY3H,EAAO,MAAC90B,EAAW,KAAM,MACvCnC,QAAK7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAU,GAChC,CAEA,SAAgBk/B,EAAY9uB,EAAY2mB,IACpC,SAAO75B,EAAA0hC,KAAG,GAAA79B,OACHq9B,EAAa,YAAAr9B,OAAWqP,IAAE,EAC7BlT,EAAAwhC,aAAY3H,GAAO,MAAC90B,EAAW,KAAM,MACvCnC,QAAK7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAU,GAChC,CAuBA,SAAgBm/B,EAAgBzqB,GAC5BA,SAAOiE,IAAI,SAAC3Y,IAAM,OAAMA,GAAE89B,cAAgB99B,GAAEk8B,OAAO,IAAC,EAC7Ch/B,EAAAuhC,MAAI,GAAA19B,OACJq9B,EAAa,gBAChB1pB,EAAOiE,IAAI,SAAC3Y,IAAC,SAAK9C,EAAAwhC,aAAY1+B,GAAG,MAACiC,EAAW,KAAM,IAAI,IACzDnC,QAAK7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAY,GAClC,CAEA,SAAgBo/B,EAAmB1qB,GAC/BA,SAAOiE,IAAI,SAAC3Y,IAAM,OAAMA,GAAE89B,cAAgB99B,GAAEk8B,OAAO,IAAC,EAC7Ch/B,EAAA0hC,KAAG,GAAA79B,OACHq9B,EAAa,gBAChB1pB,EAAOiE,IAAI,SAAC3Y,IAAC,SAAK9C,EAAAwhC,aAAY1+B,GAAG,MAACiC,EAAW,KAAM,IAAI,IACzDnC,QAAK7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAY,GAClC,CAiBA,SAAgBq/B,IAAwC,IAC9Cf,MAAIJ,EAAAK,eAD2B38B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAElD,SAAO1E,EAAAoF,KAAG,GAAAvB,OACHq9B,EAAa,0BAAAr9B,OAAyBu9B,GAAI,IAAMA,GAAI,KACzDx+B,QAAK7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAyB,GAC/C,CAEA,SAAgBs/B,EAAsBxC,GAClC,SAAO5/B,EAAAuhC,MAAI,GAAA19B,OACJq9B,EAAa,6BAChBlhC,EAAAwhC,aAAY5B,EAAO,MAAC76B,EAAW,KAAM,MACvCnC,QAAK7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAuB,GAC7C,CAEA,SAAgBu/B,EACZnvB,EACA0sB,IAEA,SAAO5/B,EAAA0hC,KAAG,GAAA79B,OACHq9B,EAAa,2BAAAr9B,OAA0BqP,IAAE,EAC5ClT,EAAAwhC,aAAY5B,GAAO,MAAC76B,EAAW,KAAM,MACvCnC,QAAK7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAuB,GAC7C,CAiEA,SAAgBw/B,EACZ/O,EACA0K,IAEA1K,SAAM9gB,KAAO,mBACNgH,EAAAgJ,eAAc,CAACmb,EAAYrK,IAAK,EAAG+J,EAAAzJ,eAAcN,KAAS3wB,QAC7D7C,EAAA0b,KAAI,SAAA8iB,IAAA,IAAAvL,GAAArQ,EAAA4b,GAAA,GAAU5I,GAAQ3C,GAAA,UAAVA,GAAA,GACDrX,OACH,SAACke,IAAK,OACFoE,IAAQv4B,SAASm0B,GAAM3mB,MACtByiB,GAAShG,KAAK,SAAC4S,GAAO,OAAKA,EAAQ5xB,WAAakpB,GAAM3mB,EAAE,EAAC,EACjE,GAGb,CAuByC,SAAAsvB,aAAAphC,EAAAC,IAAAC,KAAlC,SAAAC,EAAmC2R,IAAU,OAAA7R,IAAAS,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAAAF,UAAAE,KAAA,KACzBq7B,EAAAzJ,eAAc,CACjCL,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAW,IAAIxZ,OACzCyZ,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAAS,IAAI1Z,OACrCzH,KAAM,kBACP1P,YAAW,OAJR0/B,OAAQ1gC,GAAAqB,OAAA,SAKPK,QAAQumB,IALDjoB,GAAA4B,KAOLgY,OAAO,SAAC7Y,IAAC,OAAKA,GAAE6N,WAAauC,EAAE,GAC/BuI,IAAI,SAACinB,IAAO,SAAKpF,EAAAqF,eAAcD,GAAQxvB,IAAInQ,WAAW,KAC9D,wBAAAhB,GAAAwC,OAAA,EAAAhD,EAAA,KACJkD,MAAAhF,KAAAiF,UAAA,CAEmD,SAAAk+B,eAAAxhC,EAA7C,SAAAyhC,EAAA5O,GAiBH6O,GACAC,IAAmB,IAjBjB7vB,GAAE2vB,EAAF3vB,GAAI8vB,GAAQH,EAARG,SAEFxxB,GAAIyiB,GAAJziB,KACAC,EAAQwiB,GAARxiB,SACA2C,GAAI6f,GAAJ7f,KACA6uB,GAAahP,GAAbgP,cACAC,GAAWjP,GAAXiP,YACA1vB,GAAKygB,GAALzgB,MAAK,OAAAnS,IAAAC,KAAA,SAAA0D,KAAA,IAAAwS,GAAA2rB,GAAA,OAAA9hC,IAAAS,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,OAYHuV,aAAkBvX,EAAA4yB,SACpBiQ,GAAWrnB,IAAI,SAAC3Y,IAAC,OACbA,GAAE0U,OACGyiB,MAAM,EAAIn3B,GAAUi2B,QACpBtd,IAAI,SAACoe,IAAK,OAAAtK,IAAA,GAAWsK,IAAK,IAAEzmB,KAAMtQ,GAAEsQ,MAAI,EAAI,IAExDlO,GAAAjD,KAAA,KACsBq7B,EAAAzJ,eAAc,CACjCL,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWliB,KACrCmiB,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAASpiB,KACjCiB,KAAM,gBACNhM,MAAO2N,GACPgvB,SAAUlwB,GACV8vB,cACDjgC,YAAW,OAPR4yB,OAQAwN,GARQj+B,GAAAvB,KAQYgY,OACtB,SAACC,IAAI,OACDA,GAAK8Z,eAAehiB,YAAcR,KACjCsE,GAAOmY,KAAK,SAAC7sB,IAAC,OAAKA,GAAEoQ,KAAO0I,GAAKjL,QAAQ,EAAC,GAClDzL,GAAAjD,KAAA,EACKwB,QAAQumB,IACVmZ,GAAS1nB,IAAI,SAACG,IAAI,SAAK0hB,EAAAqF,eAAc/mB,GAAK1I,IAAInQ,WAAW,IAC5D,OAAAmC,UAAAjD,KAAA,EACKwB,QAAQumB,IACVxS,GACKmE,OAAO,SAAA0nB,IAAA,IAAGnwB,GAAEmwB,GAAFnwB,GAAE,QAAkB,MAAV6vB,OAAYpT,KAAK,SAAC7sB,IAAC,OAAKA,GAAEoQ,KAAOA,EAAE,GAAC,GACxDuI,IAAI,SAACG,IAAI,SACN0hB,EAAAgG,eACI,IAAIrC,EAAA1L,QAAQ,CACR9iB,KAAM,gBACNc,aAAc,gBACd/B,QACAC,WACA6B,YAAa2vB,GACbM,WAAYnvB,GACZzD,SAAUiL,GAAK1I,GACfC,WAAayI,GAAaxI,KAC1BnS,MAAQ2a,GAAaxI,KACrBsiB,eAAgB,CAAEhiB,UAAWR,GAAIgwB,gBACjC1vB,MAAOA,IAAS,KAEpB,CAAEwvB,YAAUI,SAAUlwB,KACxBnQ,WAAW,IAExB,cAAAmC,GAAA9B,OAAA,SACMoU,IAAM,yBAAAtS,GAAAX,OAAA,EAAAS,GAAA,EAzDJ3D,EAyDI,IAChBoD,MAAAhF,KAAAiF,UAAA,CAzWDrF,uBAAA8hC,EAOA9hC,mBAAAiiC,EAOAjiC,sBAAAoiC,EAUApiC,oBAAA,SAAgBmkC,EAAkB7H,GAC9B,OAAOA,EAASzoB,GACVuuB,EAAoB9F,EAASzoB,GAAIyoB,GACjC2F,EAAiB3F,EAC3B,EAEAt8B,oBAAA,SAAgBokC,EAAkBvwB,GAC9B,SAAOlT,EAAAoF,KAAG,GAAAvB,OAAIq9B,EAAa,sBAAAr9B,OAAqBqP,IAAMtQ,QAClD7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAkB,GAErC,EAEAzD,sBAAA,SAAgBqkC,EAAoBxwB,GAChC,SAAOlT,EAAA2jC,KAAG,GAAA9/B,OAAIq9B,EAAa,sBAAAr9B,OAAqBqP,GACpD,EAMA7T,mBAAAsiC,EAOAtiC,gBAAAuiC,EAOAviC,mBAAAyiC,EAOAziC,iBAAA,SAAgBukC,EAAe/B,GAC3B,OAAOA,EAAQ3uB,GACT4uB,EAAiBD,EAAQ3uB,GAAI2uB,GAC7BD,EAAcC,EACxB,EAEAxiC,iBAAA+4B,EAMA/4B,mBAAA,SAAgBwkC,EAAiB3wB,GAC7B,SAAOlT,EAAA2jC,KAAG,GAAA9/B,OAAIq9B,EAAa,iBAAAr9B,OAAgBqP,GAC/C,EAMA7T,cAAAu+B,EAOAv+B,WAAA0iC,EAOA1iC,cAAA2iC,EAOA3iC,YAAA,SAAgBykC,EAAUjK,GACtB,OAAOA,EAAM3mB,GACP8uB,EAAYnI,EAAM3mB,GAAEqc,IAAA,GACbsK,GAAK,IACR+G,cAAe/G,EAAMmF,WAEzB+C,EAAQxS,IAAA,GAAMsK,GAAK,IAAE+G,cAAe/G,EAAMmF,UACpD,EAEA3/B,YAAA,SAAgB0kC,EAAU7wB,GACtB,SAAOlT,EAAAoF,KAAG,GAAAvB,OAAIq9B,EAAa,YAAAr9B,OAAWqP,IAAMtQ,QAAK7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAU,GAC1E,EAEAzD,cAAA,SAAgB2kC,EAAY9wB,GACxB,SAAOlT,EAAA2jC,KAAG,GAAA9/B,OAAIq9B,EAAa,YAAAr9B,OAAWqP,GAC1C,EAMA7T,kBAAA4iC,EAQA5iC,qBAAA6iC,EAQA7iC,mBAAA,SAAgB4kC,EAAiBzsB,GAC7B,OAAW,MAANA,KAAQ1S,OACN0S,EAAO0sB,MAAM,SAACtoB,IAAI,OAAKA,IAAM1I,EAAE,GAChCgvB,EAAmB1qB,GACnByqB,EAAgBzqB,IAAM,EAHAiC,EAAAO,IAAG,GAInC,EAEA3a,qBAAA,SAAgB8kC,EAAmBta,GAC/B,SAAO7pB,EAAA2jC,KAAG,GAAA9/B,OAAIq9B,EAAa,gBAAgB,CAAEkD,KAAM,CAAEva,YACzD,EAMAxqB,2BAAA8iC,EAOA9iC,wBAAA+iC,EAOA/iC,2BAAAgjC,EAUAhjC,yBAAA,SAAgBglC,EAAuBzE,GACnC,OAAOA,EAAM1sB,GACPmvB,EAAyBzC,EAAM1sB,GAAEqc,IAAA,GAC1BqQ,GAAK,IACRE,sBAAuBF,EAAMC,gBAEjCuC,EAAqB7S,IAAA,GACdqQ,GAAK,IACRE,sBAAuBF,EAAMC,eAE3C,EAEAxgC,yBAAA,SAAgBilC,EAAuBpxB,GACnC,SAAOlT,EAAAoF,KAAG,GAAAvB,OAAIq9B,EAAa,2BAAAr9B,OAA0BqP,IAAMtQ,QACvD7C,EAAA0b,KAAI,SAAC3Y,IAAC,OAAKA,EAAuB,GAE1C,EAEAzD,2BAAA,SAAgBklC,EAAyBrxB,GACrC,SAAOlT,EAAA2jC,KAAG,GAAA9/B,OAAIq9B,EAAa,2BAAAr9B,OAA0BqP,GACzD,EAMA7T,sBAAA,SAAgBmlC,IACZ,SAAO/qB,EAAAgJ,eAAc,CAACkf,EADUj9B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,MACG9B,QAC5C7C,EAAA0b,KAAI,SAAA1V,IAAU,OAAV4c,EAAA5c,GAAA,GAAU,EAAc,GAEpC,EAEA1G,gBAAA,SAAgBolC,EAAcvxB,GAA2B,IAAfqgB,GAAA7uB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,GACnD,SAAO+U,EAAAgJ,eAAc,CACjB2V,EAAellB,GACfiuB,IACAvD,EAAWrO,IAAA,GAAMgE,IAAK,IAAEyL,QAAS9rB,EAAIwxB,MAAO,OAC5CvC,MACDv/B,QACC7C,EAAA0b,KAAI,SAAAmH,IAAmD,IAAAC,GAAAF,EAAAC,GAAA,GAAjDif,GAAOhf,GAAA,GAAcrL,GAAMqL,GAAA,GAAE8hB,EAAe9hB,GAAA,GAC9Cgf,GAAQlG,SADa9Y,GAAA,GACS8M,KAC1B,SAACgM,IAAQ,OAAKA,GAASzoB,KAAO2uB,GAAQtB,WAAW,GAErDsB,GAAQrqB,OAASA,GAAOmE,OACpB,SAACke,IAAK,OACFA,GAAMmF,UAAY6C,GAAQ3uB,IACzB2mB,GAAc+G,gBAAkBiB,GAAQ3uB,EAAE,GACjD,IACgCqkB,GADhCC,GAAAC,EACkBoK,GAAQrqB,QAAM,QAAAkgB,GAAA,WAAE,IAAAkN,GAAzB/K,GAAKtC,GAAAp2B,MACX04B,GAAcgG,aAEd,QAF0B+E,GAAID,EAAwBhV,KACnD,SAAC7sB,IAAC,OAAKA,GAAEoQ,KAAO2mB,GAAMwF,iBAAiB,UAC1C,IAAAuF,QAAA,EAF8BA,GAE5B9E,uBAHP,IAAAtI,GAAAnO,MAAAkO,GAAAC,GAAAI,KAAAC,MAAAH,IAIC,OAAArN,IAAAmN,GAAA3S,EAAAwF,GAAA,SAAAmN,GAAAM,GAAA,CACD+J,UAAQ8C,gBAAkBA,EAAgBhpB,OAAO,SAACikB,IAAK,OACnDiC,GAAQrqB,OAAOmY,KACX,SAACkK,IAAK,OAAKA,GAAMwF,oBAAsBO,GAAM1sB,EAAE,EAClD,GAEE2uB,EACX,GAER,EAEAxiC,uBAAAijC,EAgBAjjC,yBAAA,SAAgB6+B,EACZ3K,EACA0K,IAEA,SAAOxkB,EAAAgJ,eAAc,CACjBkf,IACAW,EAAqB/O,EAAO0K,MAC7Br7B,QACC7C,EAAA0b,KAAI,SAAAwX,IAAuB,IACOqJ,EADPhJ,GAAA3Q,EAAAsQ,GAAA,GAArB4R,GAAQvR,GAAA,GAAE9b,GAAM8b,GAAA,GAAAiJ,GAAA9E,EACIoN,IAAQ,QAAAC,GAAA,WAAE,IAArBjD,GAAOvF,EAAAn7B,MACd0gC,GAAQrqB,OAASA,GAAOmE,OACpB,SAACke,IAAK,OACFA,GAAMmF,UAAY6C,GAAQ3uB,IACzB2mB,GAAc+G,gBAAkBiB,GAAQ3uB,EAAE,IAJvD,IAAAqpB,GAAAlT,MAAAiT,EAAAC,GAAA3E,KAAAC,MAAAiN,IAMC,OAAAza,IAAAkS,GAAA1X,EAAAwF,GAAA,SAAAkS,GAAAzE,GAAA,CACD,OAAO+M,EACX,GAER,EAEAxlC,sBAFC,SAEqB0lC,EAAmBjoB,GAAA,OAAA0lB,EAAA/9B,MAAAhF,KAAAiF,UAAA,EAazCrF,iCAFC,SAEqB2lC,EAA8BpO,EAAAqO,GAAAC,GAAAC,IAAA,OAAAvC,GAAAn+B,MAAAhF,KAAAiF,UAAA,mJCjUpDzE,EAAA1C,EAAA,OACAK,EAAAL,EAAA,OACAyM,EAAAzM,EAAA,OACA8L,EAAA9L,EAAA,UAEAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,iBAEAu5B,EAAAC,aAAAx5B,EAAA,OAAA8B,GAuBaA,eAAY,eAAZsM,EAAYpM,EAAA,SAAAoM,IAAAnM,EAAAC,KAAAkM,EAAA,GAAZA,SAAY,mBAAAjM,iBAAZiM,EAAY,EAAZA,EAAY,UAAAhM,EAAA,iCAAZgM,MAAY,UAAAhM,EAAA,qCARjBM,EAAAmZ,aACApP,EAAA4B,iBACAvC,EAAAiC,YACAjC,EAAAwC,oBACAjO,EAAAgR,oBAIKjD,CAAY,qFCrCzBmrB,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,mLCVA,IAAAqK,EAAAnM,EAAA,OAGA0C,GAFA1C,EAAA,OACAA,EAAA,OACAA,EAAA,QACAyzB,EAAAzzB,EAAA,OAGA6nC,GADA7nC,EAAA,OACAA,EAAA,QACA8nC,EAAA9nC,EAAA,UACAA,EAAA,4GAMYoC,EAAAqN,yBAAA,YAA2BrN,EAAAuN,iBAAA,GAAgBvN,EAAAsN,kEAAhBtN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,GAAA2D,EAAAu0B,IAAA,mCAD/B3lC,EAAAqN,yBAAA,UACIrN,EAAAiS,qBAAA,EAAA2zB,EAAA,cACA5lC,EAAAuN,iBAAA,gCACAvN,EAAAqN,yBAAA,YAA2BrN,EAAAuN,iBAAA,gCAAiCvN,EAAAsN,wBAAAtN,2CAFrDA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsB,EAAAwzB,UACP7lC,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAsU,sBAAA,UAAAjC,EAAAuwB,QAAA,KAAAvwB,EAAAuwB,QAAA/wB,KAAAQ,EAAAqd,aAAA,KAC2B1vB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAsU,sBAAA,UAAAjC,EAAAuwB,QAAA,KAAAvwB,EAAAuwB,QAAA/wB,KAAA,oCA+Df7R,EAAAqN,yBAAA,cAAkDrN,EAAAuN,iBAAA,GAEhDvN,EAAAsN,kEAFgDtN,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAwC,EAAA9D,KAAA,2BAOtD9S,EAAAqN,yBAAA,WAAArN,CAAqD,cACvCA,EAAAuN,iBAAA,WAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,YAA2BrN,EAAAuN,iBAAA,GAAcvN,EAAAsN,wBAAAtN,4CAAdA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAApC,EAAAnM,SAAA,wBAQnC7F,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,iBACJvN,EAAAsN,uJAnFRtN,EAAAqN,yBAAA,SAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8b,GAAA,IAAA3M,EAAArgB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA+O,EAAAylB,cAAa,GAGtB9lC,EAAAqN,yBAAA,UAAArN,CAEC,UAC4BA,EAAAuN,iBAAA,GAAoBvN,EAAAsN,yBAC7CtN,EAAAqN,yBAAA,WAAArN,CAA4B,WAA5BA,CAA4B,WAA5BA,CAA4B,cA+BZA,EAAAuN,iBAAA,GASJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,IAAYvN,EAAAsN,wBAAAtN,KAGtCA,EAAAqN,yBAAA,YAAArN,CAEC,aAEOA,EAAAiS,qBAAA,GAAA8zB,EAAA,mBAGA/lC,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAiS,qBAAA,GAAA+zB,EAAA,cAIJhmC,EAAAsN,yBACAtN,EAAAqN,yBAAA,kBAGIrN,EAAAuN,iBAAA,sBACJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAAg0B,EAAA,cAMJjmC,EAAAsN,wBAAAtN,EAAM,wEAjFNA,EAAA+Q,qBAAA,aAAA/Q,EAAA0R,0BAAA,GAAAC,GAAA3R,CAAqB,cAAAA,EAAAkmC,0BAAA,GAAApvB,EAAA,MAAAf,EAAA6sB,QAAA,KAAA7sB,EAAA6sB,QAAArvB,KAQQvT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA,MAAA2B,EAAA6sB,QAAA,KAAA7sB,EAAA6sB,QAAAthC,OAIjBtB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,gBAAA7J,EAAA6sB,QAAAuD,SAAA,oBAAApwB,EAAA6sB,QAAA,KAAA7sB,EAAA6sB,QAAAwD,QAAApmC,CAEC,iBAAA+V,EAAA6sB,QAAAuD,SAAA,qBAAApwB,EAAA6sB,QAAA,KAAA7sB,EAAA6sB,QAAAwD,QAFDpmC,CAEC,cAAA+V,EAAA6sB,QAAAuD,SAAA,oBAAApwB,EAAA6sB,QAAA,KAAA7sB,EAAA6sB,QAAAwD,QAFDpmC,CAEC,cAAA+V,EAAA6sB,QAAAuD,SAWGnmC,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,cAAA7J,EAAA6sB,QAAAuD,SAAA,oBAAApwB,EAAA6sB,QAAA,KAAA7sB,EAAA6sB,QAAAwD,QAAApmC,CAGC,gBAAA+V,EAAA6sB,QAAAuD,SAAA,qBAAApwB,EAAA6sB,QAAA,KAAA7sB,EAAA6sB,QAAAwD,QAHDpmC,CAGC,YAAA+V,EAAA6sB,QAAAuD,SAAA,oBAAApwB,EAAA6sB,QAAA,KAAA7sB,EAAA6sB,QAAAwD,QAHDpmC,CAGC,mBAAA+V,EAAA6sB,QAAAuD,SAYGnmC,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAsI,EAAA6sB,QAAAuD,QAAA,qCAAApwB,EAAA6sB,QAAA,KAAA7sB,EAAA6sB,QAAAwD,QAAA,4BAAArwB,EAAA6sB,QAAA,KAAA7sB,EAAA6sB,QAAAwD,QAAA,uBAWUpmC,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA2B,EAAAswB,QAOPrmC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAgF,EAAAjD,KAAA9S,CAAuB,WAAAumB,GAI9BvmB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAAsI,EAAA6sB,QAAA,KAAA7sB,EAAA6sB,QAAAjvB,eAAA,MAAAoC,EAAA6sB,QAAA,KAAA7sB,EAAA6sB,QAAA5xB,UAAA,KAG6BhR,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgF,EAAAlQ,UAYpC7F,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAgF,EAAAuwB,iBAAA,uBAOTtmC,EAAAyJ,oBAAA,YAaC/J,uBAAqB,eAArB6mC,EAAqB,SAAAC,GAAA5lC,EAAA2lC,EAAAC,GAAA,IAAA1lC,EAAAC,EAAAwlC,GAkB9B,SAAAA,EACYnuB,EACAquB,EACAxlC,EACAD,GAA0B,IAAAI,EAAAvB,SAAAC,KAAAymC,IAElCnlC,EAAAN,EAAAO,KAAAvB,OALQsY,UACAhX,EAAAqlC,SACArlC,EAAAH,OACAG,EAAAJ,YApBII,EAAAykC,UAAoB,EACnBzkC,EAAAslC,KAAO,IAAI38B,EAAAwV,aACXne,EAAAulC,OAAS,IAAI58B,EAAAwV,aACbne,EAAA6jB,IAAM,IAAIlb,EAAAwV,aAAene,CAoB1C,CAACxB,SAAA2mC,EAAA,EAAAhlC,IAAA,mBAAAkE,IAlBD,WAA2B,IAAAmhC,EAAAxgC,EACvB,OACgB,QAAZwgC,EAAA9mC,KAAK8iC,eAAO,IAAAgE,OAAA,EAAZA,EAAchD,WAAWpQ,kBACZ,QADyBptB,KACtC9F,EAAAsG,sBAAa,IAAAR,OAAA,EAAbA,EAAeU,MAAM0sB,cAE7B,GAAC,CAAAjyB,IAAA,cAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAU0uB,WAC1B,GAAC,CAAAnuB,IAAA,WAAAC,MAWM,WAAQ,IAAAyD,EAAAnF,KACXA,KAAKiT,aACD,cACAjT,KAAK2mC,OAAOI,cAAc5zB,UAAU,SAAC6zB,GAAM,IAAAC,EAAA,OACvCD,EAAOE,IAAI,aACC,QAAZD,EAAA9hC,EAAK29B,eAAO,IAAAmE,OAAA,EAAZA,EAAcxzB,MAAOuzB,EAAOrhC,IAAI,SAC1BR,EAAK6gC,cACL,EAAE,GAGpB,GAAC,CAAAvkC,IAAA,OAAAkE,IAED,WAAe,IAAAwhC,EAAAC,EACX,MAA2B,UAAX,QAAZD,EAAAnnC,KAAK8iC,eAAO,IAAAqE,OAAA,EAAZA,EAAcn0B,MAAwB,OACf,aAAX,QAAZo0B,EAAApnC,KAAK8iC,eAAO,IAAAsE,OAAA,EAAZA,EAAcp0B,MAA2B,YACtC,MACX,GAAC,CAAAvR,IAAA,MAAAkE,IAED,WAAc,IAAA0hC,EACJt1B,GAAmB,QAAZs1B,EAAArnC,KAAK8iC,eAAO,IAAAuE,OAAA,EAAZA,EAAct1B,OAAQ0I,KAAKuX,MAClCsV,KAAW/V,EAAAkC,WAAUhZ,KAAKuX,MAAOjgB,GACvC,SAAA3N,OAAUkjC,EAAW,WAAU/V,EAAAgW,QAAOx1B,EAAM,QAChD,GAAC,CAAAtQ,IAAA,WAAAkE,IAED,WAAmB,IAAA6hC,EACTtwB,EAAQlX,KAAKmB,KAAK8uB,aAAwB,QAAZuX,EAAAxnC,KAAK8iC,eAAO,IAAA0E,OAAA,EAAZA,EAAczzB,QAAS,IAC3D,SAAA3P,OAAU8S,GAAOvB,cAAgBuB,GAAOvD,MAAQ,GACpD,GAAC,CAAAlS,IAAA,SAAAkE,IAED,WAAiB,IAAA8hC,EAAAC,EAAAC,EACb,GAAgB,QAAhBF,EAAIznC,KAAK8iC,eAAO,IAAA2E,GAAZA,EAAcG,WAAY,MAAO,UACrC,IAAM5X,GAAoB,QAAZ0X,EAAA1nC,KAAK8iC,eAAO,IAAA4E,OAAA,EAAZA,EAAc31B,OAAQ0I,KAAKuX,MACnChgB,GAAuB,QAAZ21B,EAAA3nC,KAAK8iC,eAAO,IAAA6E,OAAA,EAAZA,EAAc31B,WAAY,GACrCmT,KAAMoM,EAAAqN,YAAW5O,EAAOhe,GACxB61B,KAAMtW,EAAAuW,gBAAe,CACvBC,MAAOC,KAAKC,MAAMj2B,EAAW,IAC7Bk2B,QAASl2B,EAAW,KAEnBosB,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,SAAAh6B,UAAUmtB,EAAAgW,QAAOvX,EAAOhwB,KAAK4vB,aAAY,OAAAxrB,UAAMmtB,EAAAgW,QAC3CpiB,EACAnlB,KAAK4vB,aACR,MAAAxrB,OAAKyjC,EAAG,IACb,GAAC,CAAApmC,IAAA,cAAAC,MAEM,WAAW,IAAA8E,EAAAxG,KACTA,KAAK8iC,SACV9iC,KAAK6D,QAAQ,OAAQ,WACjB,IAAM6U,EAAMlS,EAAK8R,QAAQrD,KAAK0wB,EAAAwC,6BAA8B,CACxDrlC,KAAM0D,EAAKs8B,UAEft8B,EAAKyM,aACD,OACAyF,EAAIM,kBAAkB4tB,KAAKzzB,UAAU,kBAAM3M,EAAKogC,KAAKjnB,MAAM,IAE/DnZ,EAAKyM,aACD,SACAyF,EAAIM,kBAAkB6tB,OAAO1zB,UAAU,kBAAM3M,EAAKqgC,OAAOlnB,MAAM,IAEnEnZ,EAAKyM,aACD,MACAyF,EAAIM,kBAAkBmM,IAAIhS,UAAU,kBAAM3M,EAAK2e,IAAIxF,MAAM,GAEjE,EACJ,KAAC8mB,CAAA,CA5F6B,CAAQb,EAAAn9B,cAA7Bg+B,SAAqB,mBAAAxmC,iBAArBwmC,GAAoBvmC,EAAAwI,4BAAAC,EAAAyQ,WAAAlZ,EAAAwI,4BAAAG,EAAAu/B,gBAAAloC,EAAAwI,4BAAAK,EAAAD,qBAAA5I,EAAAwI,4BAAAO,EAAAL,iBAAA,EAApB69B,EAAqB,UAAAvmC,EAAA,kCAArBumC,EAAoBt9B,UAAA,mBAAAyW,OAAA,CAAAkjB,QAAA,UAAAiD,SAAA,YAAAlmB,QAAA,CAAA+mB,KAAA,OAAAC,OAAA,SAAA1hB,IAAA,OAAA/b,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,4vCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAzGzBvJ,EAAAiS,qBAAA,EAAAk2B,EAAA,YAKAnoC,EAAAiS,qBAAA,EAAAm2B,EAAA,aAsFApoC,EAAAiS,qBAAA,EAAAo2B,EAAA,yBAAAroC,EAAAomB,yCA3FoCpmB,EAAA+Q,qBAAA,OAAAvH,EAAAo5B,SAW/B5iC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAo5B,mNA8FA2D,CAAqB,uNCvHlC,IAAAx8B,EAAAnM,EAAA,OACAkQ,EAAAlQ,EAAA,OACA0C,EAAA1C,EAAA,OACAyzB,EAAAzzB,EAAA,OAEA0qC,EAAA1qC,EAAA,OACA2qC,EAAA3qC,EAAA,OAGA+/B,GAFA//B,EAAA,OACAA,EAAA,OACAA,EAAA,oJAWgBoC,EAAAyJ,oBAAA,qCAIAzJ,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,uBAIJzJ,EAAAsN,iEAHQtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAgF,EAAA6sB,SAAA,MAAA7sB,EAAA6sB,QAAA7M,eAAA,KAAAhgB,EAAA6sB,QAAA7M,eAAAxK,OAAA,2BA8EIvrB,EAAAqN,yBAAA,WAAArN,CAGC,cACaA,EAAAuN,iBAAA,GAERvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,GAKJvN,EAAAsN,wBAAAtN,4CATUA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAiM,EAAAuiB,QAAA4F,WAAA,qBAINxoC,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4S,EAAAuiB,QAAA4F,WAAA,mDAQJxoC,EAAAyJ,oBAAA,yBAEIzJ,EAAA+Q,qBAAA,4EA/BZ/Q,EAAAqN,yBAAA,eAWIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAiF,GAAA,IAAAC,EAAApW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA8E,EAAAqyB,kBAAiB,GAE1BzoC,EAAAiS,qBAAA,EAAAy2B,EAAA,cAeA1oC,EAAAiS,qBAAA,EAAA02B,EAAA,0BAAA3oC,EAAAomB,kCAMJpmB,EAAAsN,wBAAA,yEA9BItN,EAAA4f,sBAAA,eAAAiC,EAAA+gB,QAAA4F,YACAxoC,EAAA+Q,qBAAA,WAAA8Q,EAAA+mB,aAUK5oC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA8Q,EAAA+mB,YAAA5oC,CAAoB,WAAAgtB,EAAA,2BApBjChtB,EAAAqN,yBAAA,YAKIrN,EAAAiS,qBAAA,EAAA42B,EAAA,iBAmCA7oC,EAAAqN,yBAAA,cAAArN,CAKC,cACaA,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,2EAnCnBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAU,EAAAq3B,eAAA,aAAAr3B,EAAAmxB,QAAAxF,OAAA,gBAAA3rB,EAAAmxB,QAAAxF,QAgCDp9B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,oBAAAiR,EAAA,4FA6CRhiB,EAAAyJ,oBAAA,+DAGIzJ,EAAA+Q,qBAAA,YAAAa,EAAAoF,MAAA,KAAApF,EAAAoF,MAAAtD,OAAA1T,CAAqB,WAAA4R,EAAA1I,SAArBlJ,CAAqB,UAAAA,EAAA0R,0BAAA,EAAAq3B,GAAA,+DAyBjC/oC,EAAAqN,yBAAA,eAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8d,GAAA,IAAA1Y,EAAAtW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAgF,EAAAqwB,OAAAlnB,OAAa,GAEtBzf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,SAAArN,EAAAyuB,iBAAA,MAAwBzuB,EAAAsN,wBAAAtN,EAAM,+DAElCA,EAAAqN,yBAAA,eAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA83B,GAAA,IAAAzqB,EAAAve,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAiN,EAAA0G,IAAAxF,OAAU,GAEnBzf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,SAAArN,EAAAyuB,iBAAA,MAAqBzuB,EAAAsN,wBAAAtN,EAAM,EAM9BN,+BAA4B,eAA5BuoC,EAA4B,WA0CrC,SAAAA,EACqCgB,EACzBjoC,EACAC,EACAmX,GAAkB,IAAAwuB,EAAA/mC,EAAAC,KAAAmoC,GAHOnoC,KAAAmpC,WACzBnpC,KAAAkB,YACAlB,KAAAmB,OACAnB,KAAAsY,UA7CKtY,KAAA4mC,KAAO,IAAI38B,EAAAwV,aACXzf,KAAA6mC,OAAS,IAAI58B,EAAAwV,aACbzf,KAAAmlB,IAAM,IAAIlb,EAAAwV,aACXzf,KAAA8iC,QAAU9iC,KAAKmpC,SACxBnpC,KAAAopC,UAAW,EACXppC,KAAA8oC,aAAc,EACL9oC,KAAAoJ,SAAW,CACvB,CACIrD,SAAsB,QAAd+gC,EAAE9mC,KAAK8iC,eAAO,IAAAgE,OAAA,EAAZA,EAAc51B,SACxB6W,QAAS0gB,EAAAzgB,iBAqCd,CAACloB,SAAAqoC,EAAA,EAAA1mC,IAAA,QAAAkE,IAjCJ,WAAgB,IAAAwhC,EACZ,OAAOnnC,KAAKmB,KAAK8uB,aAAwB,QAAZkX,EAAAnnC,KAAK8iC,eAAO,IAAAqE,OAAA,EAAZA,EAAcpzB,QAAS,GACxD,GAAC,CAAAtS,IAAA,WAAAkE,IAED,WAAmB,IAAArE,EAAAtB,KACf,OAAOA,KAAKmB,KAAKiV,UAAU8Z,KAAK,SAAChX,GAAG,IAAAkuB,EAAA,QACnB,QAAZA,EAAA9lC,EAAKwhC,eAAO,IAAAsE,OAAA,EAAZA,EAAcrzB,QAAS,IAAI9N,SAASiT,EAAIzF,GAAG,EAEpD,GAAC,CAAAhS,IAAA,eAAAkE,IAED,WAAuB,IAAA0hC,EACnB,OAAOrnC,KAAKkB,UAAUyE,IAAG,OAAAvB,QACF,QAAZijC,EAAArnC,KAAK8iC,eAAO,IAAAuE,OAAA,EAAZA,EAAcr0B,OAAQ,WAAU,iBAE/C,GAAC,CAAAvR,IAAA,iBAAAkE,IAED,WAAyB,IAAA6hC,EAAAC,EAAAC,EACf2B,EAAK5uB,KAAKuX,MACVhC,EAAsC,KAAlB,QAAZwX,EAAAxnC,KAAK8iC,eAAO,IAAA0E,OAAA,EAAZA,EAAc8B,eACtBnkB,GAAkC,KAAhB,QAAZsiB,EAAAznC,KAAK8iC,eAAO,IAAA2E,OAAA,EAAZA,EAAc8B,aAC1B,OAAgB,QAAhB7B,EAAI1nC,KAAK8iC,eAAO,IAAA4E,GAAZA,EAAcrW,QAAgBrB,GAASqZ,EACpCrZ,GAASqZ,GAAMA,GAAMlkB,EAChC,GAAC,CAAA1jB,IAAA,cAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAU0uB,WAC1B,GAAC,CAAAnuB,IAAA,SAAAkE,IASD,WAAiB,IAAAgiC,EAAA6B,EAAAC,EACb,GAAgB,QAAhB9B,EAAI3nC,KAAK8iC,eAAO,IAAA6E,GAAZA,EAAcC,WAAY,MAAO,UACrC,IAAM5X,GAAoB,QAAZwZ,EAAAxpC,KAAK8iC,eAAO,IAAA0G,OAAA,EAAZA,EAAcz3B,OAAQ0I,KAAKuX,MACnChgB,GAAuB,QAAZy3B,EAAAzpC,KAAK8iC,eAAO,IAAA2G,OAAA,EAAZA,EAAcz3B,WAAY,GACrCmT,MAAMoM,EAAAqN,YAAW5O,EAAOhe,GACxB61B,KAAMtW,EAAAuW,gBAAe,CACvBC,MAAOC,KAAKC,MAAMj2B,EAAW,IAC7Bk2B,QAASl2B,EAAW,KAEnBosB,QAAQ,QAAS,MACjBA,QAAQ,UAAW,OACxB,SAAAh6B,UAAUmtB,EAAAgW,QAAOvX,EAAOhwB,KAAK4vB,aAAY,OAAAxrB,UAAMmtB,EAAAgW,QAC3CpiB,GACAnlB,KAAK4vB,aACR,MAAAxrB,OAAKyjC,EAAG,IACb,GAAC,CAAApmC,IAAA,kBAAAC,OAAAgoC,EAAA/nC,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAqD,EAAAnF,KAAA,OAAA4B,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAAAxC,KAAK8oC,aAAc,EAAKxmC,EAAAE,KAAA,KAClBq7B,EAAA8L,gBAAe3pC,KAAK8iC,QAAQrvB,IAAKzT,KAAK8iC,QAAQ4F,YAC/CplC,YAAWkB,MACL,SAACnB,IACJ,QAAA7C,EAAAqU,aAAY,6BACZ1P,EAAK2jC,aAAc,EACbzlC,EACV,GAAE,OACLrD,KAAK8iC,QAAgB4F,YAAc1oC,KAAK8iC,QAAQ4F,cACjDloC,EAAAopC,eAAa,gBAAAxlC,OAELpE,KAAK8iC,QAAQ4F,WAAa,aAAe,kBAGjD1oC,KAAK8oC,aAAc,EAAM,wBAAAxmC,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAC5B,SAAA2oC,IAAA,OAAAe,EAAA1kC,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,eAAAC,MAEM,WAAY,IAAA8E,EAAAxG,KACfA,KAAKopC,UAAW,EACJppC,KAAKsY,QAAQrD,KAAKuzB,EAAAqB,wBAAyB,CACnDC,SAAU,OACVC,UAAW,OACXjnC,KAAM,CACFqZ,KAAM,CACF1I,GAAIzT,KAAKmpC,SAASj4B,SAClByC,KAAM3T,KAAKmpC,SAASz1B,WACpBE,OACI5T,KAAKmpC,SAASlT,eAAeriB,QAC7B5T,KAAK8iC,QAAQ5xB,SACjBgG,MAAOlX,KAAKkX,UAIpB4B,cAAc3F,UAAU,kBAAO3M,EAAK4iC,UAAW,CAAK,EAC5D,KAACjB,EArCA,IAAAuB,CAqCA,CArGoC,GAA5BvB,SAA4B,mBAAAloC,iBAA5BkoC,GAA4BjoC,EAAAwI,4BA2CzBsF,EAAAwvB,iBAAet9B,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAC,qBAAA5I,EAAAwI,4BAAAK,EAAAqQ,WAAA,EA3ClB+uB,EAA4B,UAAAjoC,EAAA,kCAA5BioC,EAA4Bh/B,UAAA,4BAAA0W,QAAA,CAAA+mB,KAAA,OAAAC,OAAA,SAAA1hB,IAAA,OAAA7b,MAAA,GAAAC,KAAA,GAAA+D,OAAA,ssCAnF+BgjB,UAAAC,MAAAC,EAAA,srBA2D9CF,UAAAG,MAAAD,EAAA,2+BASAF,UAAAI,MAAAF,EAAA,+FASAF,UAAAM,MAAAJ,EAAA,0HA/MlBtwB,EAAAqN,yBAAA,UAAArN,CAEC,WAIOA,EAAAiS,qBAAA,EAAA63B,EAAA,aAIA9pC,EAAAiS,qBAAA,EAAA83B,EAAA,aASA/pC,EAAAqN,yBAAA,UAKIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAyD,UAAzDA,CAAyD,UAAzDA,CAAyD,UAAzDA,CAAyD,eAmCrCA,EAAAuN,iBAAA,IASJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,IAAYvN,EAAAsN,wBAAAtN,KAGtCA,EAAAiS,qBAAA,GAAA+3B,EAAA,cAiDJhqC,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAAwC,YAAxCA,CAAwC,YAIhCA,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAA8C,eAChCA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,UAAKrN,EAAAuN,iBAAA,kCAA4CvN,EAAAsN,wBAAAtN,GAErDA,EAAAqN,yBAAA,YAAArN,CAA8C,eAChCA,EAAAuN,iBAAA,eAAQvN,EAAAsN,yBAClBtN,EAAAqN,yBAAA,UAAKrN,EAAAuN,iBAAA,IAAYvN,EAAAsN,wBAAAtN,GAErBA,EAAAqN,yBAAA,YAAArN,CAA8C,eAChCA,EAAAuN,iBAAA,UAAGvN,EAAAsN,yBACbtN,EAAAqN,yBAAA,UACIrN,EAAAuN,iBAAA,IAEJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA8C,eAChCA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,UACIrN,EAAAuN,iBAAA,IAIJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,gBAGIrN,EAAA8Q,qBAAA,0BAAStH,EAAAygC,cAAc,GAEvBjqC,EAAAiS,qBAAA,GAAAi4B,EAAA,0BAOJlqC,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAKC,eACaA,EAAAuN,iBAAA,YAAKvN,EAAAsN,wBAAAtN,KAGvBA,EAAAqN,yBAAA,oBAAArN,CAA6C,gBAKrCA,EAAA8Q,qBAAA,0BAAStH,EAAAk9B,KAAAjnB,MAAW,GAEpBzf,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBACdtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,OAAsBzuB,EAAAsN,wBAAAtN,GAE1BA,EAAAiS,qBAAA,GAAAk4B,EAAA,iBASAnqC,EAAAiS,qBAAA,GAAAm4B,EAAA,iBASJpqC,EAAAsN,gCAzMatN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAvH,EAAAo5B,SAAA,MAAAp5B,EAAAo5B,QAAA7M,gBAAA,MAAAvsB,EAAAo5B,QAAA7M,eAAAxK,QAAA/hB,EAAAo5B,QAAA7M,eAAAxK,OAAApmB,SAIAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAo5B,SAAA,MAAAp5B,EAAAo5B,QAAA7M,gBAAA,MAAAvsB,EAAAo5B,QAAA7M,eAAAxK,OAAA,KAAA/hB,EAAAo5B,QAAA7M,eAAAxK,OAAApmB,QAUDnF,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,eAAApW,EAAAo5B,SAAA,MAAAp5B,EAAAo5B,QAAA7M,gBAAAvsB,EAAAo5B,QAAA7M,eAAAxK,SAEAvrB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAAo5B,QAAAthC,MAAA,KAMQtB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,gBAAApW,EAAAo5B,QAAAuD,SAAA,oBAAA38B,EAAAo5B,QAAA,KAAAp5B,EAAAo5B,QAAAwD,QAAApmC,CAGC,iBAAAwJ,EAAAo5B,QAAAuD,SAAA,qBAAA38B,EAAAo5B,QAAA,KAAAp5B,EAAAo5B,QAAAwD,QAHDpmC,CAGC,cAAAwJ,EAAAo5B,QAAAuD,SAAA,oBAAA38B,EAAAo5B,QAAA,KAAAp5B,EAAAo5B,QAAAwD,QAHDpmC,CAGC,cAAAwJ,EAAAo5B,QAAAuD,SAaGnmC,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,cAAApW,EAAAo5B,QAAAuD,SAAA,oBAAA38B,EAAAo5B,QAAA,KAAAp5B,EAAAo5B,QAAAwD,QAAApmC,CAGC,gBAAAwJ,EAAAo5B,QAAAuD,SAAA,qBAAA38B,EAAAo5B,QAAA,KAAAp5B,EAAAo5B,QAAAwD,QAHDpmC,CAGC,YAAAwJ,EAAAo5B,QAAAuD,SAAA,oBAAA38B,EAAAo5B,QAAA,KAAAp5B,EAAAo5B,QAAAwD,QAHDpmC,CAGC,mBAAAwJ,EAAAo5B,QAAAuD,SAYGnmC,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAAo5B,QAAAuD,QAAA,qCAAA38B,EAAAo5B,QAAA,KAAAp5B,EAAAo5B,QAAAwD,QAAA,4BAAA58B,EAAAo5B,QAAA,KAAAp5B,EAAAo5B,QAAAwD,QAAA,uBAWUpmC,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA5K,EAAA68B,QAMrBrmC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAAo5B,QAAAuD,SAyDInmC,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAApU,EAAAsU,sBAAA,MAAA9K,EAAAo5B,QAAA/wB,KAAA,oBAIA7R,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA5K,EAAA68B,QAKDrmC,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,WAAArW,EAAAwN,MAAA,KAAAxN,EAAAwN,MAAAvB,gBAAA,MAAAjM,EAAAwN,MAAA,KAAAxN,EAAAwN,MAAAvD,MAAA,KAAAjK,EAAAo5B,QAAApvB,YAAAhK,EAAAo5B,QAAA5xB,SAAA,KAOAhR,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,WAAArW,EAAAwM,SAAA,KAAAxM,EAAAwM,SAAAP,gBAAA,MAAAjM,EAAAwM,SAAA,KAAAxM,EAAAwM,SAAAvC,MAAA,UAAAjK,EAAAwM,UAAAxM,EAAAwM,SAAAia,QAAA,KAAAzmB,EAAAwM,SAAAia,QAAA,QAaHjwB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA0/B,UA6BRlpC,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6gC,gBASArqC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA6gC,mNAWJpC,CAA4B,oSClOzCrqC,EAAA,WACAD,EAAAC,EAAA,OACA0C,EAAA1C,EAAA,OAYAyC,EAAAzC,EAAA,MAMAyzB,EAAAzzB,EAAA,OACAkc,EAAAlc,EAAA,OAQAwC,EAAAxC,EAAA,OAeA0jC,GAFA1jC,EAAA,OAEAA,EAAA,QACA0sC,EAAA1sC,EAAA,OACA+/B,EAAA//B,EAAA,OACA2sC,EAAA3sC,EAAA,OACA4sC,EAAA5sC,EAAA,OAEA6sC,GADA7sC,EAAA,MACAA,EAAA,QACA05B,EAAA15B,EAAA,UACAA,EAAA,gFAIM8sC,EAAgB,CAAC,OAAQ,WAkClBhrC,qBAAmB,eAAnBmR,EAAmB,SAAAlQ,GAAAC,EAAAiQ,EAAAlQ,GAAA,IAyV3BgqC,EAzV2B7pC,EAAAC,EAAA8P,GA+N5B,SAAAA,EACYP,EACAtP,EACAC,EACAmX,EACAwyB,EACAC,GAA0B,IAAAzpC,EAAAvB,SAAAC,KAAA+Q,IAElCzP,EAAAN,EAAAO,KAAAvB,OAPQwQ,UACAlP,EAAAJ,YACAI,EAAAH,OACAG,EAAAgX,UACAhX,EAAAwpC,YACAxpC,EAAAypC,UApOJzpC,EAAA0pC,MAAQ,IAAIhxB,EAAAqB,gBAAiC,QAC7C/Z,EAAAy8B,SAAW,IAAI/jB,EAAAqB,gBAAoC,CACvDrI,KAAM,SAEF1R,EAAA6nC,SAAW,IAAInvB,EAAAqB,gBAAyB,MACxC/Z,EAAA2pC,cAAwC,GACxC3pC,EAAAswB,SAAW,IAAI5X,EAAAqB,gBAAwB,IAExC/Z,EAAA8S,aAAwB,IAAIotB,EAAA1L,QAC/BrxB,KAAKmyB,MACDvyB,eAAe6D,QAAQ,gCAAkC,OAGjD5G,EAAAiiB,QAAUjiB,EAAKswB,SAASpW,eACxBla,EAAA2hB,QAAU3hB,EAAKy8B,SAAS56B,QAAK7C,EAAA+yB,aAAY,IACzC/xB,EAAAoP,QAAO85B,EAAAU,uBAEP5pC,EAAA2V,aAAwC+C,EAAAgJ,eAAc,CAClE1hB,EAAKH,KAAKoX,gBACVjX,EAAK2hB,QAAQ9f,QAAK7C,EAAA+xB,yBAAwB,WAC3ClvB,QACC7C,EAAA4xB,cAAa,MAAG,EAChB5xB,EAAAiyB,WAAU,SAAAjsB,GAAoB,IAAA8B,EAAA8a,EAAA5c,EAAA,GAAX0M,EAAI5K,EAAA,GAAJ4K,KACf,IADW5K,EAAA,GACD,SAAO4R,EAAAO,IAAG,IACpB,OAAQvH,GACJ,IAAK,OACD1R,SAAKswB,SAASpvB,KAAI,oBACXlB,EAAK6pC,iBAAiB,SACjC,IAAK,UACD7pC,SAAKswB,SAASpvB,KAAI,6BACXlB,EAAK6pC,iBAAiB,kBACjC,IAAK,SACD7pC,SAAKswB,SAASpvB,KAAI,sBACXlB,EAAK6pC,iBAAiB,WAErC,SAAOnxB,EAAAO,IAAG,GACd,IAAC,EACDja,EAAAwjB,KAAI,kBAAMxiB,EAAKswB,SAASpvB,KAAI,GAAI,MAChClC,EAAA+yB,aAAY,IAGA/xB,EAAA8H,SAAiC9H,EAAK2V,UAAU9T,QAC5D7C,EAAA0b,KAAI,SAACgX,GACD,IACmC8E,EAD7B1kB,EAAiB,GAAG2kB,GAAAC,EACChF,GAAQ,IAAnC,IAAA+E,GAAAnO,MAAAkO,EAAAC,GAAAI,KAAAC,MAAqC,KAAxBhvB,GAAQ0uB,EAAAp2B,MAAR0H,SACTA,cAAoBgiC,OACdhiC,GAASugB,QAAQ,SAACtmB,IAAC,OAAK+P,EAAK6jB,KAAK5zB,GAAE,GAE7C,OAAAunB,IAAAmN,GAAA3S,EAAAwF,GAAA,SAAAmN,GAAAM,GAAA,CACD,SAAO73B,EAAA6qC,QAAOj4B,GAAM8J,KAAK,SAACyW,GAAG3U,IAAC,OAAK2U,GAAEkL,cAAc7f,GAAE,EACzD,IAAC,EACD1e,EAAA+yB,aAAY,IAGA/xB,EAAAgqC,aACZhqC,EAAK2hB,QAAQ9f,QACT7C,EAAAiyB,WAAU,SAAApP,GACN,SAAO5iB,EAAAgrC,cACHjqC,EAAKH,KAAK+U,SAASzC,GAAE,GAAArP,OAFZ+e,EAAJnQ,KAGE,kBACT7P,QAAK7C,EAAA2yB,YAAW,oBAAMjZ,EAAAO,IAAG,CAAEjD,QAAS,IAAK,GAC/C,IAAC,EACDhX,EAAA0b,KAAI,SAAC3Y,GAAC,OAAMA,GAAGiU,mBAAmB8zB,MAAQ/nC,EAAEiU,QAAU,EAAE,IAAC,EACzDhX,EAAA+yB,aAAY,IAGJ/xB,EAAAkqC,uBAAsBxxB,EAAAgJ,eAAc,CAChD1hB,EAAK2hB,QACL3hB,EAAK2V,UACL3V,EAAKgqC,gBACLtxB,EAAAyxB,OAAMnqC,EAAKoP,KAAK/K,IAAI,QAAQuN,gBAAc8G,EAAA0xB,OAAM,OAAK,EACrD1xB,EAAAyxB,OAAMnqC,EAAKoP,KAAK/K,IAAI,YAAYuN,gBAAc8G,EAAA0xB,OAAM,QACrDvoC,QACC7C,EAAA4b,QACI,kBACI5a,EAAKoP,KAAKi7B,cAAc55B,KAAO,GAC/BzQ,EAAKoP,KAAKi7B,cAAc35B,SAAW,CAAC,MAE5C1R,EAAA4xB,cAAa,MAAG,EAChB5xB,EAAAwjB,KAAI,SAAAV,GAAA,IAAA0b,EAAA5b,EAAAE,EAAA,GAAQ,OACR9hB,EAAKswB,SAASpvB,KAAI,YAAA4B,OADV06B,EAAA,GAAJ9rB,KAC+B,oBAAmB,MAE1D1S,EAAAiyB,WAAU,SAAAgB,GAAuC,IAAAC,EAAAtQ,EAAAqQ,EAAA,GAArCtQ,GAAOuQ,EAAA,GAAEvc,EAASuc,EAAA,GAAE8X,GAAY9X,EAAA,GACxCoY,GAAkCtqC,EAAKoP,KAAKi7B,cAA7B55B,GAAI65B,GAAJ75B,KAAMC,GAAQ45B,GAAR55B,SACrB,OADa45B,GAAPva,UAEFtf,MAAOwf,EAAA0C,YAAWliB,IAAMgkB,UACxB/jB,GAAW,SAER6rB,EAAAzJ,eAAc,CACjBL,gBAAcxC,EAAAyC,aAAYjiB,IAC1BmiB,cAAY3C,EAAAyC,gBAAYzC,EAAAqN,YAAW7sB,GAAMC,KACzCgB,KAAMiQ,GAAQjQ,KACde,MAAOkP,GAAQ4oB,UAChB1oC,QACC7C,EAAA0b,KACI,SAACka,IACG,IAAMlG,EAAQ1uB,EAAKoP,KAAKi7B,cAAc55B,KAChCoT,MAAMoM,EAAAqN,YACR5O,EACA1uB,EAAKoP,KAAKi7B,cAAc35B,UAC1B+jB,UAuCF,OAtCAz0B,EAAK2pC,cAAgB,GACrB/U,GAASvM,QACL,SAACtmB,IAAC,OACG/B,EAAK2pC,cAAc5nC,GAAE6N,UAAY7N,GAAEyoC,SAAS,GAEnC70B,EAAUiF,OAAO,SAACke,IAAS,IAAA2R,GAAAC,GAAAC,GAAAC,GAWzC,OAVyBZ,GAAapvB,OAClC,SAAC7Y,IAAC,IAAA8oC,GAAApN,GAAA,OACS,QAAPoN,GAAA9oC,GAAEq2B,aAAK,IAAAyS,QAAA,EAAPA,GAASlmC,SAASm0B,GAAM3mB,OACP,QADUsrB,GAC1B17B,GAAU0U,cAAM,IAAAgnB,QAAA,EAAhBA,GAAkB94B,SAASm0B,GAAM3mB,IAAG,GAENyc,KACnC,SAACkc,IAAI,OACApc,GAASoc,GAAKpc,OAASA,EAAQoc,GAAKjnB,KACpCA,IAAOinB,GAAKjnB,KAAOA,GAAMinB,GAAKpc,KAAM,OAI3B,QAAb+b,GAAC3R,GAAM8G,cAAM,IAAA6K,IAAZA,GAAc1mC,SACZ+0B,GAAM8G,OAAOmL,KAAK,SAACC,IAAG,SAClB9rC,EAAAsG,eAAco6B,OAAOj7B,SAASqmC,GAAI,MAEvB,IAAnBlS,GAAMmS,YACJtpB,GAAQ7Z,WACU,QADF4iC,GACd/oB,GAAQ7Z,gBAAQ,IAAA4iC,QAAA,EAAhBA,GAAkBvH,MAAM,SAACphC,IAAC,OACtB+2B,GAAMhxB,SAASnD,SAAS5C,GAAE,QAEhC4f,GAAQ4oB,SACN5oB,GAAQ4oB,WAAsB,QAAfI,GAAK7R,GAAMpmB,YAAI,IAAAi4B,QAAA,EAAVA,GAAYx4B,KAChCwP,GAAQ4oB,WACM,QADCK,GACX9R,GAAMpmB,YAAI,IAAAk4B,QAAA,EAAVA,GAAYj4B,cACnBiiB,GAAShG,KACN,SAACsc,IAAG,OACAA,GAAIt7B,WAAakpB,GAAM3mB,IACR,aAAf+4B,GAAIlG,MAAqB,EAGzC,EAEJ,KACAhmC,EAAA2yB,YAAW,SAAC5vB,IAAC,SAAK2W,EAAAO,IAAG,GAAG,IAGpC,IAAC,EACDja,EAAAwjB,KAAI,SAACzgB,GAAC,OAAK/B,EAAKswB,SAASpvB,KAAK,GAAG,MACjClC,EAAA+yB,aAAY,IAGA/xB,EAAAmrC,wBAAuBzyB,EAAAgJ,eAAc,CACjD1hB,EAAK2hB,QACL3hB,EAAKkqC,sBACNroC,QACC7C,EAAA0b,KAAI,SAAA6X,GAQA,QARwB6Y,EAAAtJ,GAAAlgB,EAAA2Q,EAAA,GAAtB5Q,EAAOmgB,GAAA,GACHlC,GAAS,GACThD,GAAa7a,EAFA+f,GAAA,IAEclmB,KAAK,SAACyW,EAAG3U,IAAC,IAAA2tB,GAAAC,GAAAC,GAAA,OACjC,QADiCF,GACvChZ,EAAE3f,YAAI,IAAA24B,IAAI,QAAJC,GAAND,GAAQl5B,UAAE,IAAAm5B,QAAJ,EAANA,GAAY/N,cAAoB,QAAPgO,GAAC7tB,GAAEhL,YAAI,IAAA64B,QAAA,EAANA,GAAQp5B,GAAG,GAEnCq5B,GAAyB,QAAfJ,EAAAzpB,EAAQ6pB,eAAO,IAAAJ,GAAfA,EAAiBrnC,OAC3B4d,EAAQ6pB,QACR,IAACtsC,EAAAsG,gBAAemxB,GAAA,WAIlB,QAFMS,GAAQ,GACV0B,GAAQ8D,GAAW6O,MAChBrU,GAAMrzB,OAASynC,GAAQznC,UAEtBqzB,GAAMrzB,QACLqzB,GAAMxI,KAAK,SAAC7sB,IAAC,IAAA2pC,GAAAC,GAAA,OAAW,QAAND,GAAA3pC,GAAE2Q,YAAI,IAAAg5B,QAAA,EAANA,GAAQv5B,OAAiB,QAAfw5B,GAAK7S,GAAMpmB,YAAI,IAAAi5B,QAAA,EAAVA,GAAYx5B,GAAE,KAIpDilB,GAAMzB,KAAKmD,IACXA,GAAQ8D,GAAW6O,MAEvB,GAAIrU,GAAMrzB,OAASynC,GAAQznC,OAAM,iBACjC67B,GAAOjK,KAAKyB,KAdTwF,GAAW74B,QAAM4yB,KAgBxB,OAAOiJ,EACX,IAqDA5/B,EAAK2R,aACD,kBACA3R,EAAKkP,QAAQ+jB,OAAOphB,UAAU,SAAC2vB,GAEvBA,aAAmBjlC,EAAAqvC,iBACjBpK,EAAQl1B,IAAI3H,SAAS,UAClB2kC,EAAc1a,KAAK,SAAC7sB,GAAC,OAAKy/B,EAAQl1B,IAAI3H,SAAS5C,EAAE,KAEtD/B,EAAKmP,WAEb,IAEJnP,EAAKH,KAAK+B,YACLC,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,OAAKA,CAAC,IACnB8P,UAAU,kBAAM7R,EAAKyR,WAAW,GAAG,GAAEzR,CAC9C,CAACxB,SAAAiR,EAAA,EAAAtP,IAAA,OAAAkE,IAjED,WACI,OAAO3F,KAAKgrC,MAAM/xB,UACtB,GAAC,CAAAxX,IAAA,UAAAkE,IAED,WACI,OAAO3F,KAAKmpC,SAASlwB,UACzB,GAAC,CAAAxX,IAAA,mBAAAC,MAEM,SAAiB+R,GACpB,OAAOzT,KAAKirC,cAAcx3B,EAC9B,GAAC,CAAAhS,IAAA,UAAAC,MAEM,WAAwC,IAAAyD,EAAAnF,KAAhC8iC,EAAA79B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,IAAIu8B,EAAA1L,QAClC91B,KAAK0Q,KAAKy8B,QACVntC,KAAK0Q,KAAKe,cACNlR,EAAAwhC,aAAWjS,IAAA,GAEAgT,GACAA,EAAQ7M,gBAEf,CAAC,UAAM3wB,EAAW,MAG1BtF,KAAKiT,aACD,cACAjT,KAAK0Q,KAAKwC,aAAaC,UAAU,WAC7B,IAAAi6B,EAA2BjoC,EAAKuL,KAAKi7B,cACrCxmC,EAAK4lC,QAAQh4B,WAAW,CAAEhB,KADdq7B,EAAJr7B,KACwBC,SADVo7B,EAARp7B,WAEd7M,EAAK+jB,WACT,IAEJlpB,KAAK6D,QAAQ,OAAQ,WACjBsB,EAAKuL,KAAKe,WAAW,CACjBM,KAAM+wB,EAAQ/wB,KACdC,SAAU8wB,EAAQ9wB,UAE1B,GACAhS,KAAKmpC,SAAS3mC,KAAK,IAAIg/B,EAAA1L,QAAQgN,IAC/B9iC,KAAK+9B,SAASv7B,KAAK,CAAEwQ,KAAMhT,KAAK+9B,SAAS9kB,WAAWjG,MACxD,GAAC,CAAAvR,IAAA,UAAAC,MA4BM,SAAQA,GACX1B,KAAKgrC,MAAMxoC,KAAKd,EACpB,GAAC,CAAAD,IAAA,aAAAC,MAEM,SAAWA,GACd1B,KAAK+9B,SAASv7B,KAAIstB,IAAA,GAAM9vB,KAAK+9B,SAAS9kB,YAAevX,GACzD,GAAC,CAAAD,IAAA,aAAAC,MAEM,SAAWma,EAAiBwxB,GAAe,IAAAC,EAC9C,GAAY,MAAPzxB,KAASxW,OACd,KAAM+D,GAAmC,QAAxBkkC,EAAAttC,KAAK+9B,SAAS9kB,kBAAU,IAAAq0B,OAAA,EAAxBA,EAA0BlkC,WAAY,GACnDikC,IAAWjkC,EAASnD,SAAS4V,IAAUzS,EAAS6tB,KAAKpb,IACpDwxB,GAAUjkC,EAASnD,SAAS4V,IAC7BzS,EAASmkC,OACLnkC,EAASokC,UAAU,SAACpoB,GAAC,OAAKA,IAAMvJ,CAAO,GACvC,GAER7b,KAAK+S,WAAW,CAAE3J,YAAU,CAChC,GAAC,CAAA3H,IAAA,YAAAC,MAEM,WACH,IAAMohC,EAAU9iC,KAAKmpC,SAASlwB,WAC9BjZ,KAAK0Q,KAAKy8B,MAAM,CAAE1f,QAAMjtB,EAAAsG,eAAe2mC,aAAWjtC,EAAAsG,iBAClD9G,KAAK0Q,KAAKe,cACNlR,EAAAwhC,aAAWjS,IAAA,GAECgT,GAAW,IACXA,GAAS7M,gBAAkB,IAEnC,CAAC,UAAM3wB,EAAW,MAG1BtF,KAAK+9B,SAASv7B,KAAK,CAAEwQ,KAAMhT,KAAK+9B,SAAS9kB,WAAWjG,MACxD,GAAC,CAAAvR,IAAA,YAAAC,MAEM,WACH2C,eAAeqpC,WAAW,wBAC1BrpC,eAAeqpC,WAAW,gCAC1B1tC,KAAK+oB,SACT,GAAC,CAAAtnB,IAAA,YAAAC,MAEM,WACH2C,eAAeC,QACX,uBACAG,KAAKC,UAASorB,IAAA,GACP9vB,KAAKmpC,SAASlwB,aAAU,EACxB1Y,EAAAwhC,aAAY/hC,KAAK0Q,KAAKi7B,eAAiB,GAAI,CAC1C,UACArmC,EACA,QAIZjB,eAAeC,QACX,+BACAG,KAAKC,UAAU1E,KAAK+9B,SAAS9kB,YAAc,IAEnD,GAAC,CAAAxX,IAAA,WAAAC,MAEM,WAAQ,IAAAisC,EACX3tC,KAAK0Q,KAAKy8B,MAAM,CAAE1f,QAAMjtB,EAAAsG,eAAe2mC,aAAWjtC,EAAAsG,iBAClD,IAAMhE,EAAO2B,KAAKmyB,MACdvyB,eAAe6D,QAAQ,yBAA2B,MAEhD46B,EAAU,IAAItB,EAAA1L,QAAQhzB,GAC5B9C,KAAKmpC,SAAS3mC,KAAKsgC,GACnB,IAAM8K,KAAertC,EAAAwhC,aAAWjS,MAAA,GAErBhtB,GACCggC,GAAW,IACXA,GAAS7M,gBAAkB,IAEnC,CAAC,UAAM3wB,EAAW,KAEtBtF,KAAK0Q,KAAKe,WAAWm8B,GACrB5tC,KAAK+S,WAAU+c,EAAA,CACX+b,QAA2B,QAApB8B,EAAE3tC,KAAKmB,KAAK+U,gBAAQ,IAAAy3B,OAAA,EAAlBA,EAAoBl6B,IAC1BhP,KAAKmyB,MACJvyB,eAAe6D,QAAQ,iCAAmC,OAGtE,GAAC,CAAAzG,IAAA,gBAAAC,MAEM,WACH2C,eAAeqpC,WAAW,+BAC1B1tC,KAAKoU,aAAe,IAAIotB,EAAA1L,OAC5B,GAAC,CAAAr0B,IAAA,uBAAAC,MAEM,WAA2C,IAAtBmsC,EAAA5oC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAExB,GADAjF,KAAK0Q,KAAKuY,mBACLjpB,KAAK0Q,KAAKkE,OAAUi5B,EACzB,KAAM/e,EAAQ,IAAI0S,EAAA1L,QAAOhG,IAAA,GAClB9vB,KAAK8iC,SACL9iC,KAAK0Q,KAAKi7B,gBAEjB3rC,KAAKsY,QAAQrD,KAAK01B,EAAAmD,0BAA2B,CAAEhrC,KAAMgsB,GAAO,CAChE,GAAC,CAAArtB,IAAA,cAAAC,OAAAmpC,EAAAlpC,EAAAC,IAAAC,KAEM,SAAAC,IAAA,IAAAmhB,EAAAvhB,EAAAqmB,EAAAzQ,EAAA,OAAA1V,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACGxC,KAAK+tC,iBAAgB,OACrB9qB,SAAUjjB,KAAK+9B,SAAS9kB,WACxBvX,EAAQ1B,KAAK0Q,KAAKi7B,cACpB5jB,EAAO,8BAAA3jB,OAAiC6e,EAAQjQ,KAAI,KAAA5O,OACpD1C,EAAMgS,WACV,SAAAtP,UAAQmtB,EAAAgW,QAAO7lC,EAAMqQ,KAAM,gBAAc3N,OACrC1C,EAAMsQ,SAAW,IACX,UAASuf,EAAAgW,QAAO7lC,EAAMqQ,KAAM,UAC5B,IAENkR,EAAQyV,QACR3Q,EAAO,GAAA3jB,OAAM2jB,EAAO,6EACvBzlB,EAAAE,KAAA,KACqBhC,EAAA6uB,kBAClB,CACI7tB,MAAK,QAAA4C,OAAU6e,EAAQjQ,MACvB+U,UACAuH,KAAM,CAAEvH,QAAS,oBAErB/nB,KAAKsY,SACR,OAPY,GAAPhB,EAAOhV,EAAA4B,KAQW,SAApBoT,GAASiY,OAAiB,CAAAjtB,EAAAE,KAAA,cAAQ,iBAAgB,QACL,GAAjD8U,EAAQiM,QAAQ,kCACZN,EAAQyV,MAAK,CAAAp2B,EAAAE,KAAA,SAAAF,SAAAE,KAAA,GACPxC,KAAKguC,mBAAkBxpC,MAAO,SAACnB,IACjC,QAAA7C,EAAAqU,aAAYpQ,KAAKC,UAAUrB,KAC3BiU,EAAQtP,QACF3E,EACV,GAAE,QAAAf,EAAAE,KAAA,iBAAAF,SAAAE,KAAA,GAEIxC,KAAKyqB,WAAUjmB,MAAO,SAACnB,IACzB,QAAA7C,EAAAqU,aAAYpQ,KAAKC,UAAUrB,KAC3BiU,EAAQtP,QACF3E,EACV,GAAE,QACNiU,EAAQtP,QAAQ,yBAAA1F,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACnB,SAAA4Q,IAAA,OAAAi6B,EAAA7lC,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,WAAAC,MAAA,eAAAipB,EAAAhpB,EAEM,eAAA6E,EAAAxG,KAAeiuC,EAAYhpC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAAQ,OAAArD,IAAAC,KAAA,SAAA0D,IAAA,IAAA2oC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,EAAA/Z,GAAAga,GAAA5K,GAAA6K,GAAAC,GAAAC,GAAAjtC,EAAAohC,GAAA8L,GAAAlnC,GAAAoM,GAAA,OAAAlS,IAAAS,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,UACjCgE,EAAKkK,KAAI,CAAAjL,GAAAjD,KAAA,aAAQ,sBAAqB,UACtCgE,EAAKkK,KAAKkE,MAAK,CAAAnP,GAAAjD,KAAA,+CAAA4B,UACwB5D,EAAAsU,kBACpCtO,EAAKkK,MACPqE,KAAK,MAAK,YAOuC,GANvDvO,EAAKkK,KAAKe,WAAW,CACjBqC,aACItN,EAAKkK,KAAKi7B,cAAc73B,cACxBtN,EAAKu3B,SAAS9kB,WAAWjG,OAE7BtR,EAAQ8E,EAAKkK,KAAKi7B,cAClB7I,GAAUt8B,EAAK2iC,SAASlwB,YAAc,IAAIuoB,EAAA1L,QACzCmY,EAAY,CAAAxoC,GAAAjD,KAAA,SAAAiD,UAAAjD,KAAA,GACPgE,EAAKqoC,uBAAsB/e,IAAA,GACxBgT,IAAYphC,GACjB8E,EAAKu3B,SAAS9kB,WAAWjG,MAC5B,YAEDxM,EAAKskC,UAAUgE,eAAc,CAAArpC,GAAAjD,KAAA,SAAAiD,UAAAjD,KAAA,GACPgE,EAAKskC,UAAUiE,YAAY,CAC7C/7B,KAAMxM,EAAKu3B,SAAS9kB,WAAWjG,KAC/Bg8B,cAAettC,EAAMgS,WACrB3B,KAAMrQ,EAAMqQ,KACZC,SAAUtQ,EAAMsQ,SAChBqf,QAAS3vB,EAAM2vB,UACjB,QANW,GAOD,OAPNud,GAAOnpC,GAAAvB,OAOR0qC,GAASK,QAAO,CAAAxpC,GAAAjD,KAAA,gBAAAiD,GAAA9B,OAAA,kBACpBjC,EAAcu0B,eAAiB,CAC5BiZ,QAASN,GACTO,WAAYP,GAAQO,YACtB,QAEN,QAAgB,QAAZjB,EAACxsC,EAAMqS,aAAK,IAAAm6B,GAAXA,EAAa7oC,SAAwC,QAAlC8oC,EAAI3nC,EAAK2iC,SAASlwB,WAAWlF,aAAK,IAAAo6B,GAA9BA,EAAgC9oC,SACxD3D,EAAMqS,MAAQvN,EAAK2iC,SAASlwB,WAAWlF,OAEvCrS,EAAM2vB,UACN3vB,EAAMqQ,QAAOwf,EAAA3V,KAAIla,EAAMqQ,KAAM,CAAEg2B,MAAO,EAAGG,QAAS,IAAKnS,UACvDr0B,EAAMsQ,SAAW,KAErBxL,EAAKorB,SAASpvB,KAAK,yBACZd,EAAMwS,cAAczO,GAAAjD,KAAA,MACNq7B,EAAAuR,aACjB,IAAI5N,EAAA1L,QAAOhG,MAAA,GACJtpB,EAAKu3B,SAAS9kB,YACdvX,GAAK,IACRmS,YAAanS,EAAMgS,YAAchS,EAAMmS,YACvCi4B,UAAqB,QAAZsC,EAAE1sC,EAAM+rB,YAAI,IAAA2gB,OAAA,EAAVA,EAAYz6B,KACvB07B,SACgB,QAAXhB,EAAC3sC,EAAM+rB,YAAI,IAAA4gB,GAAI,QAAJC,GAAVD,EAAY56B,UAAE,IAAA66B,IAAdA,GAAgBroC,SAAS,KAAyB,GAAb,MAALvE,GAAW,QAAN6sC,EAAL7sC,EAAO+rB,YAAI,IAAA8gB,OAAN,EAALA,EAAa96B,MAClC,QADyC+gB,MACtDh0B,EAAAsG,sBAAa,IAAA0tB,QAAA,EAAbA,GAAe/gB,IACnBwiB,eAAcnG,IAAA,GACLpuB,EAAcu0B,gBAAkB,IAAE,IACvCqZ,YACc,QAAVd,GAAA9sC,EAAM+rB,YAAI,IAAA+gB,QAAA,EAAVA,GAAYc,cAA2B,QAAjB1L,MAAIpjC,EAAAsG,sBAAa,IAAA88B,QAAA,EAAbA,GAAe0L,cAEjDC,UAAW/oC,EAAKtF,UAAUyE,IAAI,+BAElCjE,EAAMuS,UAAY,CAAEu7B,WAAY9tC,EAAMuS,WAAc,IAEnD3Q,YAAWkB,MACL,SAAC4gB,IACJ5e,QAAKorB,SAASpvB,KAAK,IACb4iB,IAAGjf,OAASif,EACtB,GAAE,QAtBM,GAAN1d,GAAMjC,GAAAvB,OAuBI,QAAZuqC,GAAA/sC,EAAMqW,cAAM,IAAA02B,IAAZA,GAAcppC,QAAuC,QAAjCqpC,GAAI5L,GAAQ7M,eAAele,cAAM,IAAA22B,IAA7BA,GAA+BrpC,QAAM,CAAAI,GAAAjD,KAAA,SAAAiD,UAAAjD,KAAA,MACvDg1B,EAAA+N,gCACF79B,GACA,CACIqK,KAAMrQ,EAAMqQ,KACZC,SAAUtQ,EAAMsQ,SAChB2C,KAAMjT,EAAM+tC,iBAEhB/tC,EAAMqW,OACN+qB,GAAQ7M,eAAele,QAC1BvT,MAAO,SAAC4gB,IACL5e,QAAKorB,SAASpvB,KAAK,IACb4iB,IAAGjf,OAASif,EACtB,GAAE,QAEN5e,SAAKorB,SAASpvB,KAAK,IACXsR,GAAiBpS,EAAjBoS,aACRtN,EAAKiK,YACI,QAATk+B,GAAAnoC,EAAKkK,YAAI,IAAAi+B,IAATA,GAAWl9B,WAAW,CAAEqC,kBACxBtN,EAAK4N,aAAe1M,GACpBrD,eAAeC,QACX,8BACAG,KAAKC,UAAUgD,KAEnBlB,EAAK8O,QAAQ,WAAW7P,GAAA9B,OAAA,SACjB+D,IAAM,yBAAAjC,GAAAX,OAAA,EAAAS,EAAA,EA1FyB3D,EA0FzB,GAChB,gBAAA6oB,IAAA,OAAAE,EAAA3lB,MAAAhF,KAAAiF,UAAA,EA7FA,IA6FA,CAAAxD,IAAA,mBAAAC,MAAA,eAAAguC,EAAA/tC,EAAAC,IAAAC,KAEM,SAAAwE,IAAA,IAAAspC,EAAAC,EAAA9C,EAAA95B,EAAA68B,GAAAn/B,EAAAwtB,GAAA4R,GAAA54B,GAAAD,GAAA84B,GAAAC,GAAAC,EAAAC,GAAAz8B,GAAAsf,GAAAod,GAAAC,GAAA3iB,GAAA2M,GAAAoS,GAAA6D,GAAAjpC,EAAApH,KAAA,OAAA4B,IAAAS,KAAA,SAAAoE,IAAA,cAAAA,GAAAlE,KAAAkE,GAAAjE,MAAA,OACyB,GADzBotC,EAC8B5vC,KAAK+9B,SAAS9kB,WAAvC6zB,EAAO8C,EAAP9C,QAAgB95B,EAAI48B,EAAJ58B,KAAF48B,EAALlX,MACP,CAAAjyB,GAAAjE,KAAA,aAAQ,iCAAgC,OAGjD,MAFKqtC,GAAgB/C,EAAQ5wB,OAC1B,SAAC7Y,IAAC,OAAKA,GAAE2D,WAAUxG,EAAAsG,eAAcE,KAAK,IAExB3B,QAAU,GAAC,CAAAoB,GAAAjE,KAAA,aACnB,wCAAuC,OAC3CkO,SAAO1Q,KAAK0Q,KAAKi7B,cAAallC,GAAAjE,KAAA,EACXxC,KAAKwrC,oBACzBroC,QAAK7C,EAAA8b,MAAK,IACV9Y,YAAW,OAFV46B,OAGA4R,IAHA5R,GAAUz3B,GAAAvC,MAGmBgsB,KAC/B,SAAC7sB,IAAC,OAAKA,GAAEoQ,KAAO/C,EAAKQ,UAAY7N,GAAEuQ,SAAWlD,EAAKQ,QAAQ,GAEzDgG,GAAQlX,KAAKmB,KAAK8uB,YAAY,CAAqB,QAArB0f,EAACG,GAAgB97B,YAAI,IAAA27B,OAAA,EAApBA,EAAsBl8B,KAAIhN,GAAAlC,GAAA,CAE3DurC,IAAerpC,GAAA6pC,GAAAjtB,EAAA5c,GAAAjE,KAAA,GACLxC,KAAKuwC,oBACXr5B,GAAMtD,OACNlD,EAAKQ,SACLgtB,GACA2R,GAAcxqC,QACjB,QAAAoB,UAAA+pC,GAAA/pC,GAAAvC,KAAAuC,GAAAgqC,MAAAhqC,GAAA6pC,IAAA7pC,GAAA+pC,IAPCv5B,GAASxQ,GAAAlC,GAAAH,OAAA7C,KAAAkF,GAAAlC,GAAAkC,GAAAgqC,IASTV,MAAgBvvC,EAAA6qC,QAAM,IACvB7qC,EAAAsG,gBAAa1C,OAAAif,EAAKwsB,KACnB,SACHppC,GAAAjE,KAAA,GACuBwB,QAAQumB,IAC5BwlB,GAAc/zB,IAAI,SAAC3Y,GAAGqtC,IAAG,OACrBtpC,EAAKynC,uBAAsB/e,IAAA,GAEhBpf,GAAI,IACPQ,SAAU+F,GAAUy5B,IAAK98B,QAAUqD,GAAUy5B,IAAKj9B,GAClDqwB,WAAYzgC,GAAE2D,QAElBgM,EACH,IAER,QAXKg9B,GAASvpC,GAAAvC,KAYT+rC,EAAcF,GAAc7zB,OAAO,SAAC7Y,GAAGqtC,IAAG,OAAMV,GAAUU,GAAI,GAC9DR,GAAU,GAAA9rC,UAAM5D,EAAAsG,eAAcE,MAAK,KAAA5C,UAAImtB,EAAAgW,QACzC9sB,KAAKuX,MACL,cACH,KACGve,GAAK,GACAsf,GAAI,EAAC,aAAEA,GAAIgd,GAAc1qC,QAAM,CAAAoB,GAAAjE,KAAA,YAC/BwtC,GAAUjd,IAAE,CAAAtsB,GAAAjE,KAAA,gBAAAiE,GAAA9C,OAAA,uBACX8pB,UAAOsiB,GAAchd,IACrBqH,GAAQnjB,GAAU8b,IACxB/yB,KAAK0Q,KAAKe,WAAUqe,IAAA,GACbpf,GAAI,IACPuD,UAAWR,GACXga,KAAMA,GACNqW,WAAYrW,GAAKzmB,MACjBqoC,QAAS5hB,GAAKha,GACdvC,SAAUkpB,IAAO3mB,GACjBC,WAAY0mB,GAAMzmB,KAClBE,YAAaumB,GAAMzmB,KACnBC,OAAQwmB,IAAOxmB,QAAUwmB,IAAO3mB,GAChCilB,MAAOwX,GACPn8B,MAAOqmB,GAAMpmB,QACPxT,EAAA6qC,QAAO,CACHrrC,KAAKmB,KAAKwvC,aAAal9B,GACb,QADe08B,GACzB/V,GAAMpmB,YAAI,IAAAm8B,QAAA,EAAVA,GAAYl8B,UACF,QADWm8B,GACrBhW,GAAMpmB,YAAI,IAAAo8B,QAAA,EAAVA,GAAY38B,KAEhB,CAACzT,KAAKmB,KAAKwvC,aAAal9B,OAC/BhN,GAAAjE,KAAA,GACexC,KAAKyqB,UAAS,GAAK,SAA/B+hB,GAAG/lC,GAAAvC,MACDuP,KAAOA,KAAIA,GAAK+4B,GAAI/4B,IAAG,QAxBOsf,KAAGtsB,GAAAjE,KAAA,iBA0BzCytC,EAAY5qC,WACZ7E,EAAAowC,YAAU,4DAAAxsC,OAE4B,QAF5BisC,GACsDJ,EACvDj0B,IAAI,SAAC3Y,IAAC,OAAKA,GAAEsQ,MAAQtQ,GAAE2D,KAAK,UAAC,IAAAqpC,QAAA,EAD0BA,GAEtDt7B,KAAK,MAAK,MAEvB,yBAAAtO,GAAA3B,OAAA,EAAAuB,EAAArG,KAAA,IACJ,gBAAAguC,IAAA,OAAA0B,EAAA1qC,MAAAhF,KAAAiF,UAAA,EAlFA,IAkFA,CAAAxD,IAAA,iBAAAC,MAAA,eAAAmvC,EAAAlvC,EAAAC,IAAAC,KAEO,SAAAsF,IAAA,IAAAuR,EAAAhR,EAAAgJ,EAAA,OAAA9O,IAAAS,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,WACqD,IAArDxC,KAAKkB,UAAUyE,IAAI,8BAAuC,CAAA0B,EAAA7E,KAAA,eAAA6E,EAAA1D,OAAA,iBACxD+U,SAAM1Y,KAAKsY,QAAQrD,KAAKw1B,EAAAqG,6BAA4BzpC,EAAA7E,KAAA,EACrCwB,QAAQ+sC,KAAK,CAC9Br4B,EAAIM,kBAAkB8V,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,IAAC,MAAkB,SAAbA,GAAEksB,MAAiB,IACrCjsB,YACLoV,EAAII,cAAcxV,cACpB,OALU,GAANoE,EAAML,EAAAnD,KAMW,SAAnBwD,GAAQ6nB,OAAiB,CAAAloB,EAAA7E,KAAA,aAAQ,iBAAgB,OAC/CkO,EAAOgI,EAAIM,kBAAkBtI,KAAKi7B,cAAatkC,EAAA9C,GAAA3C,IAAA0oB,KACnC5Z,GAAI,YAAArJ,EAAAipC,GAAAjpC,EAAA9C,MAAA6zB,KAAA,CAAA/wB,EAAA7E,KAAA,SAAR,IACNkO,EADMrJ,EAAAipC,GAAA5uC,OACG,CAAA2F,EAAA7E,KAAA,cAAQ,2BAA0B,QAAA6E,EAAA7E,KAAA,iBAEnDkW,EAAI1Q,QAAQ,yBAAAX,EAAAvC,OAAA,EAAAqC,EAAAnH,KAAA,IACf,gBAAA+tC,IAAA,OAAA8C,EAAA7rC,MAAAhF,KAAAiF,UAAA,EAjBA,IAmBD,CAAAxD,IAAA,yBAAAC,MAAA,eAAAsvC,EAAArvC,EACQ,SAAA+yB,EAEJ1hB,GAAiB,IAAAi+B,EAAAjxC,KADfyT,EAAEihB,EAAFjhB,GAAIvC,EAAQwjB,EAARxjB,SAAUa,EAAI2iB,EAAJ3iB,KAAMC,EAAQ0iB,EAAR1iB,SAAU8xB,GAAUpP,EAAVoP,WAAU,OAAAliC,IAAAC,KAAA,SAAAqvC,IAAA,IAAAC,GAAAjb,GAAAkb,GAAAxc,GAAAyc,GAAA,OAAAzvC,IAAAS,KAAA,SAAAivC,GAAA,cAAAA,EAAA/uC,KAAA+uC,EAAA9uC,MAAA,UAGrCshC,GAAU,CAAAwN,EAAA9uC,KAAA,aAAQ,mCAAkC,OAAA8uC,SAAA9uC,KAAA,KAClCq7B,EAAAzJ,eAAc,CACjCL,gBAAcxC,EAAAyC,aAAYjiB,GAC1BmiB,cAAY3C,EAAAyC,aAAYjiB,EAAkB,GAAXC,EAAgB,KAC/CgB,SACD1P,YAAW,OAJA,KAAR4yB,GAAQob,EAAAptC,MAKDgsB,KAAK,SAAC7sB,IAAC,OAAKA,GAAE6N,WAAaA,GAAYuC,IAAOpQ,GAAEoQ,EAAE,GAAC,CAAA69B,EAAA9uC,KAAA,aACxD0O,EAASjL,SAAS,KAAI,CAAAqrC,EAAA9uC,KAAA,iBAAA4B,OACb8M,EAAQ,gEAAA9M,OAER8M,EAAQ,kDAI6C,MADhEkgC,GAC2D,QAD3CD,GAClBF,EAAK/vC,UAAUyE,IAAG,6BAAAvB,OAA8B4O,EAAI,kBAAS,IAAAm+B,MAAI,GAE9C,GACnBjb,GAASha,OACL,SAAC7Y,IAAC,IAAAkuC,GAAA,OACEluC,GAAEygC,cAAgBA,KAA2B,QAAjByN,MAAI/wC,EAAAsG,sBAAa,IAAAyqC,QAAA,EAAbA,GAAevqC,SAClC,aAAb3D,GAAEijC,QACFjjC,GAAEoQ,KAAOA,CAAE,GACjBpO,QAAU+rC,IAAgB,CAAAE,EAAA9uC,KAAA,SAEtB6uC,SAAUvN,MAA4B,QAAlBlP,MAAKp0B,EAAAsG,sBAAa,IAAA8tB,QAAA,EAAbA,GAAe5tB,OAAK,GAAA5C,OAC1CitC,GAAU,MAAQvN,GAAU,aAAA1/B,OACjCitC,GAAU,OAAS,MACvB,OAAAjtC,OAAM4O,EAAI,0BAAAs+B,EAAA3tC,OAAA,UAEP,GAAI,yBAAA2tC,EAAAxsC,OAAA,EAAAosC,EAAA,EAhC+BtvC,EAgC/B,GACd,gBAAAitC,EAAAxxB,EAAA8Z,GAAA,OAAA6Z,EAAAhsC,MAAAhF,KAAAiF,UAAA,EAnCD,IAmCC,CAAAxD,IAAA,mBAAAC,MAEM,SAAiBsR,GACpB,SAAOzS,EAAAixC,mBAAkBxxC,KAAKmB,KAAK+U,SAASzC,GAAI,CAC5CE,KAAMX,IACP7P,QACC7C,EAAA0b,KAAI,SAAClZ,GAAI,SACLtC,EAAA4yB,SACItwB,EAAKkZ,IAAI,SAAC3Y,GAAC,IAAAouC,EAAAC,EAAA,QACL,MAADruC,GAAiB,QAAhBouC,EAADpuC,EAAGsuC,SAAS3+B,UAAK,IAAAy+B,OAAhB,EAADA,EAAmBn6B,mBAAmB8zB,MACjB,QADsBsG,EACtCruC,EAAEsuC,SAAS3+B,UAAK,IAAA0+B,OAAA,EAAhBA,EAAkBp6B,QAClB,IACJ0E,IAAI,SAACjD,GAAC,IAAA64B,EAAA,MACc,YAAjB5+B,EAA0B8c,IAAA,GAEd/W,GAAC,IACJtF,GAAIsF,EAAEtF,IAAMsF,EAAEnF,OACdI,KAAM3Q,EAAE2Q,QAEH,QAAT49B,EAAA74B,EAAEic,eAAO,IAAA4c,OAAA,EAATA,EAAW51B,IAAI,SAAC3Y,GAAC,OAAAysB,IAAA,GACVzsB,GAAC,IACJwuC,QAAS94B,EAAEtF,GACXO,KAAM3Q,EAAE2Q,MAAI,KACT,EAAE,EAClB,GAER,GAGb,GAAC,CAAAvS,IAAA,sBAAAC,MAAA,eAAAowC,EAAAnwC,EAAAC,IAAAC,KAEO,SAAAkwC,EACJC,EACAv+B,EACAwD,EACAsmB,GAAa,IAAA0U,EAAA/T,EAAAmH,GAAAtS,EAAA,OAAAnxB,IAAAS,KAAA,SAAA6vC,IAAA,cAAAA,GAAA3vC,KAAA2vC,GAAA1vC,MAAA,OAEPyvC,EAAmB,GACrB/T,EAAajnB,EAAUiF,OACvB,SAAC7Y,IAAC,OAAKA,GAAEoQ,KAAOA,GAAMpQ,GAAEuQ,SAAWH,CAAE,GACxC4xB,GAAAzjC,IAAAC,KAAA,SAAAwjC,KAAA,IAAAlpB,GAAA,OAAAva,IAAAS,KAAA,SAAA8vC,IAAA,cAAAA,GAAA5vC,KAAA4vC,GAAA3vC,MAAA,OAAA2vC,UAAA3vC,KAAA,KAEsBkoC,EAAA0H,mBACfJ,EACAv+B,EACAyqB,EAAWliB,IAAI,SAAC3Y,GAAC,OAAKA,EAAEuQ,QAAUvQ,EAAEoQ,EAAE,IACzC,QAJK0I,GAAIg2B,GAAAjuC,QAMN+tC,EAAiBhb,KACbhgB,EAAUiZ,KAAK,SAAC7sB,GAAC,OAAKA,EAAEoQ,KAAO0I,IAAQ9Y,EAAEuQ,SAAWuI,EAAI,IAE5D+hB,EAAaA,EAAWhiB,OACpB,SAAC7Y,GAAC,OAAKA,EAAEoQ,KAAO0I,IAAQ9Y,EAAEuQ,SAAWuI,EAAI,IAEhD,wBAAAg2B,GAAArtC,OAAA,EAAAugC,GAAA,GAbItS,EAAI,EAAC,YAAEA,EAAIwK,GAAK,CAAA2U,GAAA1vC,KAAA,eAAA0vC,GAAAG,cAAAhN,KAAA,eAAEtS,IAAGmf,GAAA1vC,KAAA,sBAAA0vC,GAAAvuC,OAAA,SAevBsuC,GAAgB,yBAAAC,GAAAptC,OAAA,EAAAitC,EAAA,IAC1B,gBAAAxB,EAAA/K,EAAAC,EAAAC,EAAA4M,GAAA,OAAAR,EAAA9sC,MAAAhF,KAAAiF,UAAA,EA5BA,MA4BA8L,CAAA,CA9pB2B,CAAQvQ,EAAAiI,cAA3BsI,SAAmB,mBAAA9Q,iBAAnB8Q,GAAkB7Q,EAAAwd,mBAAA/U,EAAA0E,QAAAnN,EAAAwd,mBAAA7U,EAAAD,iBAAA1I,EAAAwd,mBAAA3U,EAAAD,qBAAA5I,EAAAwd,mBAAAzU,EAAAmQ,WAAAlZ,EAAAwd,mBAAAiI,EAAA4sB,iBAAAryC,EAAAwd,mBAAAkI,EAAAgV,mBAAA,EAAlB7pB,EAAmB,WAAA7Q,EAAA,oCAAnB6Q,EAAkB4M,QAAlB5M,EAAkB6M,UAAAC,WAFf,SAEH9M,CAAmB,4KC1FhC,IAAA/C,EAAAlQ,EAAA,OAEA00C,GADA10C,EAAA,OACAA,EAAA,WAKAA,EAAA,2FAqDa8B,4BAAyB,eAAzBkuC,EAAyBhuC,EASlC,SAAAguC,EACqC2E,EACzBvxC,GAA0BnB,EAAAC,KAAA8tC,GADD9tC,KAAAyyC,SACzBzyC,KAAAkB,YAVIlB,KAAA0yC,gBAAeF,EAAAG,+BAC3B3yC,KAAKyyC,QAEOzyC,KAAA4yC,eAAcJ,EAAAK,4BAC1B7yC,KAAKyyC,QAEOzyC,KAAA8yC,aAAYN,EAAAO,0BAAyB/yC,KAAKyyC,OAKvD,GAZM3E,SAAyB,mBAAA7tC,iBAAzB6tC,GAAyB5tC,EAAAwI,4BAUtBsF,EAAAwvB,iBAAet9B,EAAAwI,4BAAAC,EAAAC,iBAAA,EAVlBklC,EAAyB,UAAA5tC,EAAA,kCAAzB4tC,EAAyB3kC,UAAA,yBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,wTArCXgjB,UAAAC,MAAAC,EAAA,0IAWAF,UAAAG,MAAAD,EAAA,wHAWAF,UAAAI,MAAAF,EAAA,mMAjCnBtwB,EAAAqN,yBAAA,WAA6BrN,EAAAuN,iBAAA,gCAA0BvN,EAAAsN,yBACvDtN,EAAAqN,yBAAA,UAAArN,CAA+D,0CASvDA,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAA4BzuB,EAAAsN,wBAAAtN,GAEhCA,EAAAqN,yBAAA,0CAQIrN,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,WAAArN,EAAAyuB,iBAAA,MAAoCzuB,EAAAsN,wBAAAtN,GAExCA,EAAAqN,yBAAA,wCAQIrN,EAAAqN,yBAAA,iBAA0BrN,EAAAuN,iBAAA,eAAQvN,EAAAsN,yBAClCtN,EAAAqN,yBAAA,WAAArN,EAAAyuB,iBAAA,MAA6BzuB,EAAAsN,wBAAAtN,KAGrCA,EAAAqN,yBAAA,cAAArN,CAA6D,eAC/CA,EAAAuN,iBAAA,YAAKvN,EAAAsN,wBAAAtN,UA/BXA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA/Q,EAAAsU,sBAAA,IAAA9K,EAAAgpC,aAAA,OAAAxyC,EAAA8yC,yBAWA9yC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA/Q,EAAAsU,sBAAA,IAAA9K,EAAAkpC,YAAA,OAAA1yC,EAAA8yC,yBAWA9yC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA/Q,EAAAsU,sBAAA,KAAA9K,EAAAopC,UAAA,OAAA5yC,EAAA8yC,qPAoBHlF,CAAyB,oJC7DtC,IAAAttC,EAAA1C,EAAA,OAEAyzB,EAAAzzB,EAAA,OAsBMm1C,EAAkB,CAAC,OAAQ,YAAa,YAAa,SAAU,WAcrErzC,UAAoB,WAmFhB,SAAAk2B,IAA+C,IAAAod,EAAAC,EAAAC,EAAAC,EAAAC,EAAnCxwC,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiC,GAyEzC,QAAWxD,KAzEgC1B,EAAAC,KAAA81B,GAC3C91B,KAAKyT,GAAK3Q,EAAK2Q,IAAM,GACrBzT,KAAKiU,UAAYnR,EAAKmR,WAAa,GACnCjU,KAAKkR,SAAWpO,EAAKoO,UAAY,GACjClR,KAAK0T,WACD5Q,EAAK4Q,aACc,QADJw/B,EACfpwC,EAAKmzB,sBAAc,IAAAid,OAAA,EAAnBA,EAAqBx/B,cACF,QADYy/B,EAC/BrwC,EAAKmzB,sBAAc,IAAAkd,OAAA,EAAnBA,EAAqBx/B,OACrB7Q,EAAK+Q,aACL,GACJ7T,KAAK+T,MAAQjR,EAAKiR,OAAS,GAC3B/T,KAAKspC,cACDtB,KAAKC,MAAMnlC,EAAKiP,KAAO,MACvBjP,EAAKwmC,kBACL/X,EAAAyC,gBACIzC,EAAAgiB,0BAAsBhiB,EAAAqN,YAAWnkB,KAAKuX,MAAO,GAAI,CAC7CwhB,UAAW,KAGvBxzC,KAAKupC,YACDvB,KAAKC,MAAMnlC,EAAKiP,KAAO,KAAwB,GAAhBjP,EAAKkP,UACpClP,EAAKymC,gBACLhY,EAAAyC,gBACIzC,EAAAqN,YAAgC,IAArB5+B,KAAKspC,cAAsBxmC,EAAKkP,UAAY,KAE/DhS,KAAK8T,aAAehR,EAAKgR,cAAgB,IACzC9T,KAAKgT,KAAOlQ,EAAKkQ,MAAQlQ,EAAKgR,cAAgB,UAC9C9T,KAAK+R,KAAOjP,EAAKiP,MAA6B,IAArB/R,KAAKspC,eAAwB7uB,KAAKuX,MAC3DhyB,KAAKgS,SACDlP,EAAKkP,UACLg2B,KAAKyL,OACDliB,EAAAmiB,qBACyB,IAArB1zC,KAAKspC,cACc,IAAnBtpC,KAAKupC,eAGb,GACJvpC,KAAK2zC,SACD7wC,EAAK6wC,UAAYC,KAAKC,iBAAiBC,kBAAkBC,SAC7D/zC,KAAK8jC,WAAahhC,EAAKghC,YAAc,GACrC9jC,KAAKqvC,QAAUvsC,EAAKusC,SAAW,GAC/BrvC,KAAK8rC,UAAYhpC,EAAKgpC,WAAa,GACnC9rC,KAAKwB,MACS,QADJ4xC,EACNtwC,EAAKtB,aAAK,IAAA4xC,IACTpzC,KAAK8T,aACA,GAAA1P,UAAG5D,EAAAwzC,uBAAsBh0C,KAAK8T,cAAa,YAAWmgC,OACtD,GACVj0C,KAAK6T,YAAc/Q,EAAK+Q,aAAe,GACvC7T,KAAK0oC,aAAe5lC,EAAK4lC,WACzB1oC,KAAKk0C,WAAapxC,EAAKoxC,SACvBl0C,KAAKuvC,WAAazsC,EAAKysC,SACvBvvC,KAAKm0C,UAAYrxC,EAAKqxC,QACtBn0C,KAAKo0C,aAAetxC,EAAKsxC,cAAgB,GACzCp0C,KAAKq0C,eAAiBvxC,EAAKuxC,gBAAkB,GAC7Cr0C,KAAKyvC,gBAAkB3sC,EAAK2sC,iBAAmB,GAC/CzvC,KAAKs0C,YAAcxxC,EAAKwxC,aAAe,GACvCt0C,KAAKu0C,eAAiBzxC,EAAKyxC,gBAAkB,GAC7Cv0C,KAAKw0C,cAAgB1xC,EAAK0xC,eAAiB,GAC3Cx0C,KAAKi2B,eAAiBnzB,EAAKmzB,gBAAkB,GAC7Cj2B,KAAKy0C,SAA8B,QAApBpB,EAACvwC,EAAKmzB,sBAAc,IAAAod,IAAnBA,EAAqBoB,QACrCz0C,KAAK2jC,SAAW7gC,EAAK6gC,SACrB3jC,KAAK0W,UAAY5T,EAAK4T,WAAa5T,EAAKgqC,SAAW,GACnD9sC,KAAKqxB,QAAsB,QAAfiiB,EAAGxwC,EAAKuuB,eAAO,IAAAiiB,IAAItzC,KAAKgS,UAAY,IAChDhS,KAAK00C,eAAiB5xC,EAAK4xC,eAC3B10C,KAAK20C,aAAe7xC,EAAK6xC,cAAgB,KACzC30C,KAAKsmC,OACDtmC,KAAK00C,eAAiB,EAChB,QACA10C,KAAKk0C,SACL,WACAl0C,KAAKuvC,SACL,WACA,YACQzsC,IACRrB,KAAOzB,QAAUizC,EAAgBhtC,SAASxE,IAAQqB,EAAKrB,KACzDzB,KAAKi2B,eAAex0B,GAChBqB,EAAKrB,IAAQzB,KAAKi2B,eAAex0B,GAGjD,CAAC3B,SAAAg2B,EAAA,EAAAr0B,IAAA,QAAAkE,IA1FD,WACI,OAAO3F,KAAKi2B,eAAeyC,OAAS,EACxC,GAAC,CAAAj3B,IAAA,aAAAkE,IAED,WACI,OACI3F,KAAKqxB,SACJ,IAAI5W,KAAKza,KAAK+R,MAAM6iC,YAAc,IAAM50C,KAAKgS,SAAW,GAEjE,GAAC,CAAAvQ,IAAA,SAAAC,MAmFM,WACH,IAAMoB,EAAIgtB,EAAA,GAAQ9vB,MAClB,OAAKA,KAAKyT,WAAW3Q,EAAK2Q,UACnB3Q,EAAKiP,YACLjP,EAAKkP,YACZxR,EAAAq0C,mBAAkB/xC,GACXA,CACX,GAAC,CAAArB,IAAA,WAAAkE,IAED,WACI,OAAO3F,KAAK6T,WAChB,GAEA,CAAApS,IAAA,WAAAkE,IACA,WACI,SAAO4rB,EAAAkC,WAAUzzB,KAAK+R,KAAM,IAAI0I,KACpC,GAEA,CAAAhZ,IAAA,UAAAkE,IACA,WACI,IAAMqqB,EAAQ,IAAIvV,KACZ0K,EAAMnlB,KAAKqxB,WACXE,EAAAujB,UAAS90C,KAAK+R,KAAM,KAAE,EACtBwf,EAAAqN,YAAW5+B,KAAK+R,KAAM/R,KAAKgS,UAC3B+iC,EAEF,KADC/0C,KAAK00C,gBAAkB10C,KAAKi2B,eAAeye,gBAAkB,GAE9DrpB,EAAWlG,EAAI6vB,UACnB,SAAID,GAAet6B,KAAKuX,MAAQ+iB,KAAoB,EAC7CxjB,EAAA0jB,SAAQjlB,EAAO,IAAIvV,KAAK4Q,GACnC,GAEA,CAAA5pB,IAAA,QAAAkE,IACA,WAMI,IAAMqsB,EAAM,IAAIvX,KACV1I,EAAO/R,KAAK+R,KAClB,SAAIwf,EAAA2jB,UAASljB,KAAKT,EAAA4jB,KAAIpjC,EAAM,CAAEm2B,SAAS,MAAgB,YACnD3W,EAAA2jB,UAASljB,EAAKjgB,GAAc,cAC5Bwf,EAAA2jB,UAASljB,KAAKT,EAAA4jB,KAAIpjC,EAAM,CAAEm2B,QAAS,MAAe,aAClD3W,EAAA2jB,UAASljB,KAAKT,EAAA4jB,KAAIpjC,EAAM,CAAEm2B,QAASloC,KAAKgS,YACjC,cACJ,MACX,KAAC8jB,CAAA,CAnNe,oOCtCpB,IAAAlsB,EAAA9L,EAAA,OACA0C,EAAA1C,EAAA,OAEAs3C,EAAAt3C,EAAA,MACAu3C,EAAAv3C,EAAA,OAMA0jC,EAAA1jC,EAAA,OACAyzB,EAAAzzB,EAAA,OAqHuC,SAAAw3C,aAAA3zC,EAAhC,SACHqwC,EACAuD,GAA2B,IAC3BC,EAAAvwC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,GAAE,OAAArD,IAAAC,KAAA,SAAAC,IAAA,IAAA2zC,EAAAhiC,EAAAiiC,EAAAC,EAAAC,EAAAC,EAAA9d,EAAAD,EAAAxkB,EAAAhN,EAAAwvC,EAAAC,EAAAh9B,EAAA,OAAAnX,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEjBizC,SAAUO,SAASC,cAAc,QAC/BC,MAAMC,SAAW,WACzBV,EAAQS,MAAME,IAAM,UACpBX,EAAQS,MAAMzuC,MAAQ,SACtBguC,EAAQS,MAAM1uC,OAAS,SACvBwuC,SAASrR,KAAK0R,YAAYZ,GAASnzC,EAAAE,KAAA,KAClB6yC,EAAAiB,cAAa,CAC1B1oC,IAAKokC,EACLyD,YACF,OACIC,KAASL,EAAAkB,WAJT9iC,EAAEnR,EAAA4B,MAKFyxC,GAAgC,iBAAhBJ,EAChBG,EAAOc,SAASjB,GAChBA,IAAgB,CAAEO,EAAG,GAAKC,EAAG,IAC/BH,EAAO,GACPC,EAAU,GAAE9d,EAAAC,EACGwd,GAAQ,IAA3B,IAAAzd,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MACY0d,GADGxvC,EACMovC,EAAOc,SADjBljC,EAAIwkB,EAAAp2B,QAC+B,CAAEo0C,EAAG,EAAGC,EAAG,IAA7CD,EAAGC,EAACzvC,EAADyvC,GACLh9B,EAAIivB,KAAKyO,MACVX,EAAIH,EAAMG,IAAMA,EAAIH,EAAMG,IAAMC,EAAIJ,EAAMI,IAAMA,EAAIJ,EAAMI,KAEvDH,IACJA,EAAO78B,EACP88B,EAAUviC,EAEjB,OAAAsX,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACD2d,gBAASrR,KAAK+R,YAAYjB,IAAO,EACjCJ,EAAAsB,cAAaljC,GAAInR,EAAAqB,OAAA,SACVkyC,GAAO,yBAAAvzC,EAAAwC,OAAA,EAAAhD,EAAA,EA9BSF,EA8BT,GACjB0zC,EAAAtwC,MAAAhF,KAAAiF,UAAA,CApIDrF,sBAAA,SAAgBsrC,IAAoD,IAAA0L,EAAAlI,EAAAmI,EAAAC,EAAAC,EAAhCjU,EAAA79B,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,IAAIu8B,EAAA1L,QACjDplB,EAAO,IAAI9G,EAAAk2B,UAAU,CACvBrsB,GAAI,IAAI7J,EAAAm2B,YAAY+C,EAAQrvB,IAAM,IAClCQ,UAAW,IAAIrK,EAAAm2B,YAAY+C,EAAQ7uB,WAAa,IAChDlC,KAAM,IAAInI,EAAAm2B,YAAY+C,EAAQ/wB,KAAM,CAACnI,EAAAo2B,WAAWC,WAChD5O,QAAS,IAAIznB,EAAAm2B,YAA2B,QAAhB6W,EAAC9T,EAAQzR,eAAO,IAAAulB,MACxCjjC,KAAM,IAAI/J,EAAAm2B,YACN+C,EAAQ7M,eAAetiB,MAAQmvB,EAAQpvB,YAAc,IAEzD1B,SAAU,IAAIpI,EAAAm2B,YAAY+C,EAAQ9wB,SAAU,CAACojC,EAAA4B,cAC7CljC,aAAc,IAAIlK,EAAAm2B,YAAY+C,EAAQhvB,cACtCC,MAAO,IAAInK,EAAAm2B,YAAY+C,EAAQ/uB,OAC/BvS,MAAO,IAAIoI,EAAAm2B,YAAY+C,EAAQthC,OAC/BqS,YAAa,IAAIjK,EAAAm2B,YAAY+C,EAAQjvB,aACrCK,cAAe,IAAItK,EAAAm2B,YAAY,MAC/B9oB,UAAW,IAAIrN,EAAAm2B,YAAY,IAC3BkX,QAAS,IAAIrtC,EAAAm2B,YAAY,IACzB7uB,SAAU,IAAItH,EAAAm2B,YAAY+C,EAAQ5xB,SAAU,CAACtH,EAAAo2B,WAAWC,WACxDvsB,WAAY,IAAI9J,EAAAm2B,YAAY+C,EAAQjvB,aACpCkE,OAAQ,IAAInO,EAAAm2B,aAAkC,QAAtB2O,EAAA5L,EAAQ7M,sBAAc,IAAAyY,OAAA,EAAtBA,EAAwB32B,SAAU,IAC1DrB,UAAW,IAAI9M,EAAAm2B,YAAY+C,EAAQpsB,WAAa,IAChD9C,OAAQ,IAAIhK,EAAAm2B,YAAkC,QAAvB8W,EAAC/T,EAAQ7M,sBAAc,IAAA4gB,OAAA,EAAtBA,EAAwBjjC,QAChD6Z,KAAM,IAAI7jB,EAAAm2B,eAAYv/B,EAAAsG,gBACtBuoC,QAAS,IAAIzlC,EAAAm2B,YAAY+C,EAAQuM,SACjC3W,MAAO,IAAI9uB,EAAAm2B,YAAY+C,EAAQpK,OAC/BoL,WAAY,IAAIl6B,EAAAm2B,YAAY+C,EAAQgB,YACpC2J,UAAW,IAAI7jC,EAAAm2B,eAAYv/B,EAAAsG,gBAC3BstC,aAAc,IAAIxqC,EAAAm2B,YAAY+C,EAAQsR,cACtC3E,gBAAiB,IAAI7lC,EAAAm2B,YAAY+C,EAAQ2M,iBACzC/9B,mBAAoB,IAAI9H,EAAAm2B,aACE,QAAtB+W,EAAAhU,EAAQ7M,sBAAc,IAAA6gB,OAAA,EAAtBA,EAAwBI,oBACE,QADcH,EACpCjU,EAAQ7M,sBAAc,IAAA8gB,OAAA,EAAtBA,EAAwBrlC,uBAGhCylC,EAAgBzmC,EAAKhP,MAAMqQ,KAC3BqlC,EAAoB1mC,EAAKhP,MAAMsQ,SAC/BqlC,EAAmB3mC,EAAKhP,MAAM2vB,QAClC3gB,SAAKwC,aAAaC,UAAU,SAACwQ,GAAK,IAAA2zB,EAcqBC,EAE5CC,EAfD/pB,EAAO9J,EAAE8J,KACTgqB,EAAS9zB,EAAE8pB,cAAajtC,EAAAsG,gBAC9B2wC,GAAUhqB,IACJ/c,EAAKe,WACD,CACI49B,QAAS5hB,GAAMha,IAAMgkC,GAAQhkC,GAC7BqwB,WAAYrW,GAAMzmB,OAASywC,GAAQhkC,GACnC2gC,aAAcqD,GAAQhkC,GACtBg8B,gBAAiBgI,GAAQzwC,OAE7B,CAAE0wC,WAAW,IAGnBhnC,EAAKhP,MAAMqQ,KAAO0I,KAAKuX,OAASthB,EAAKhP,MAAM+R,GAC3B,QAAhB8jC,EAAA7mC,EAAK/K,IAAI,eAAO,IAAA4xC,GAAhBA,EAAkBI,QAAQ,CAAED,WAAW,IAEvB,QAAhBF,EAAA9mC,EAAK/K,IAAI,eAAO,IAAA6xC,GAAhBA,EAAkBnK,OAAO,CAAEqK,WAAW,IAEpC,YAAa/zB,IACfwzB,EAAgBxzB,EAAE5R,MAAQolC,EAC1BC,EAAoBzzB,EAAE3R,UAAYolC,GAEtCC,EAA4B,QAAZC,EAAG3zB,EAAE0N,eAAO,IAAAimB,IAAID,CACpC,GACA3mC,EAAKuU,SAAShO,UAAU/D,aAAaC,UAAU,SAAC8D,GAAS,OA/E7D,SAAS5D,EAAgB3C,EAAiBsiB,GAAa,IAAA4kB,EAAAC,EACnD,IAAK7kB,EAAU,OAAOtiB,EAAKe,WAAW,CAAEP,cAAU5L,IAClDoL,EAAKe,WACD,CACIP,SAAU8hB,EAASvf,GACnBC,WAAYsf,EAASrf,KACrBC,OAAQof,EAASpf,QAAUof,EAASvf,GACpCI,YAAamf,EAASrf,KACtBI,MAAOif,EAAShf,KACV,CAAc,QAAd4jC,EAAC5kB,EAAShf,YAAI,IAAA4jC,OAAA,EAAbA,EAAe3jC,UAAwB,QAAf4jC,EAAE7kB,EAAShf,YAAI,IAAA6jC,OAAA,EAAbA,EAAepkC,IAC1C,GACNS,cAAe8e,GAEnB,CAAE0kB,WAAW,GAErB,CAiEQrkC,CAAgB3C,GAAOuG,GAAa,IAAI,GAAG,GAE/CvG,EAAKuU,SAASlT,KAAKmB,aAAaC,UAAU,SAACpB,GACnCA,EAAO0I,KAAKuX,OAASthB,EAAKhP,MAAM+R,IACpC/C,EAAKe,WACD,CACIM,QAAMwf,EAAAgiB,uBAAsB94B,KAAKuX,MAAO,CACpCwhB,UAAW,EACXsE,eAAgB,SACjB/hB,WAEP,CAAE2hB,WAAW,GAErB,GACAhnC,EAAKuU,SAASoM,QAAQne,aAAaC,UAAU,SAACke,GACtCA,GAEA+lB,EAAoB1mC,EAAKhP,MAAMsQ,SAC/BtB,EAAKe,WAAW,CACZM,QAAMwf,EAAAwmB,aAASxmB,EAAAymB,YAHnBb,EAAgBzmC,EAAKhP,MAAMqQ,KAGkB,GAAI,GAAGgkB,UAChD/jB,SAAU,MAEdtB,EAAKuU,SAASjT,SAAS2lC,WAChBN,IAAqBhmB,IAC5B3gB,EAAKuU,SAASjT,SAASq7B,SACvB38B,EAAKe,WAAW,CACZM,KAAMi2B,KAAKiQ,IAAIx9B,KAAKuX,MAAQ,EAAGmlB,GAC/BnlC,SAAUolC,IAGtB,GACsB,YAAlBtU,EAAQxF,OAAqB5sB,EAAK/K,IAAI,QAAQgyC,UAC3CjnC,CACX,EAEA9Q,oBAFC,SAEqBwyC,EAAiB/0B,EAAA8Z,GAAA,OAAAme,EAAAtwC,MAAAhF,KAAAiF,UAAA,EAoCvCrF,8BAAA,SAAgBs4C,EAA4BppB,GAAoB,IAAAqpB,EAAAC,EAAAC,EAC5D,OAAO,IAAI7W,EAAA1L,QAAQ,CACfriB,GAAIqb,EAAMrb,GACVqwB,WAAYhV,EAAMna,KAClBzD,SAAsB,QAAdinC,EAAErpB,EAAMvV,cAAM,IAAA4+B,OAAA,EAAZA,EAAc1kC,GACxBC,YAAwB,QAAZ0kC,EAAAtpB,EAAMvV,cAAM,IAAA6+B,OAAA,EAAZA,EAAcziC,gBAA4B,QAAhB0iC,EAAIvpB,EAAMvV,cAAM,IAAA8+B,OAAA,EAAZA,EAAc1kC,MACxDG,aAAc,OACdy7B,SAA2B,aAAjBzgB,EAAMwX,OAChBrQ,eAAcnG,EAAA,GACPhB,IAGf,yYChLA,IAAAvuB,EAAAzC,EAAA,MACAkc,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,OAEAyjC,EAAAzjC,EAAA,OACA0jC,EAAA1jC,EAAA,OACAw6C,EAAAx6C,EAAA,OACAyzB,EAAAzzB,EAAA,OA2BMy6C,EAAiB,yBAMvB,SAAgBnkB,EAAcuN,GAC1B,IAAM7N,KAAQyN,EAAAK,eAAcD,GAC5B,SAAOphC,EAAAoF,KAAG,GAAAvB,OAAIm0C,GAAiBn0C,OAAG0vB,EAAQ,IAAMA,EAAQ,KAAM3wB,QAC1D7C,EAAA0b,KAAI,SAAC5I,GAAI,OAAKA,EAAK4I,IAAI,SAACG,GAAI,OAAK,IAAIqlB,EAAA1L,QAAQ3Z,EAAK,EAAC,MACnD7b,EAAA2yB,YAAW,SAAC5vB,GAAC,SAAK2W,EAAAO,IAAG,GAAG,GAEhC,CAyDA,SAAgBspB,EACZ/gC,EACA6+B,GAEA,IAAM7N,KAAQyN,EAAAK,eAAcD,GAC5B,SAAOphC,EAAAuhC,MAAI,GAAA19B,OAAIm0C,GAAiBn0C,OAAG0vB,EAAQ,IAAMA,EAAQ,IAAMhxB,GAAMK,QACjE7C,EAAA0b,KAAI,SAACG,GAAI,OAAK,IAAIqlB,EAAA1L,QAAQ3Z,EAAK,GAEvC,CAQA,SAAgBq8B,EACZ/kC,EACA3Q,GAGA,OAAmB,WAFnBmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA0B,SAEG1E,EAAAk4C,MAAQl4C,EAAA0hC,KAAG,GAAA79B,OACjCm0C,EAAiB,KAAAn0C,OAAIs0C,mBAAmBjlC,IAC3C3Q,GACFK,QAAK7C,EAAA0b,KAAI,SAACG,GAAI,OAAK,IAAIqlB,EAAA1L,QAAQ3Z,EAAK,GAC1C,CAxFAvc,gBAAAw0B,EAYAx0B,qBAAA,SAAgB+4C,EAAmBhX,GAC/B,SAAOphC,EAAAuzB,OAAe,CAClB8kB,aAAcjX,EACd9H,GAAI,SAAC1d,GAAI,OAAK,IAAIqlB,EAAA1L,QAAQ3Z,EAAK,EAC/B08B,SAAUN,EACV75C,KAAM,IAEd,EAMAkB,mBAAA,SAAgBk5C,EACZnX,GAEA,SAAOphC,EAAAuzB,OAAe,CAClB8kB,aAAcjX,EACd9H,GAAI,SAAC1d,GAAI,OAAK,IAAIqlB,EAAA1L,QAAQ3Z,EAAK,EAC/B08B,SAAUN,EACV75C,KAAM,KACPyE,QACC7C,EAAAiyB,WAAS,eAAAjsB,EAAA3E,EAAC,SAAAyG,GAAA,IAAStF,EAAIsF,EAAJtF,KAAMN,EAAI4F,EAAJ5F,KAAI,OAAAZ,IAAAC,KAAA,SAAAC,IAAA,IAAAsR,EAAA2lC,EAAA,OAAAn3C,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrB4Q,EAAIiQ,EAAOvgB,GAAI,WACZN,EAAI,CAAAF,EAAAE,KAAA,SAAAF,SAAAE,KAAA,EACYA,IAAOc,YAAW,OACrCR,GADMi2C,EAAIz2C,EAAA4B,MACEpB,KACZN,EAAOu2C,EAAKv2C,KACZ4Q,EAAI,GAAAhP,OAAAif,EAAOjQ,GAAIiQ,EAAKvgB,IAAMR,EAAAE,KAAA,uBAAAF,EAAAqB,OAAA,SAEvByP,GAAI,yBAAA9Q,EAAAwC,OAAA,EAAAhD,EAAA,EARcF,EAQd,GACd,gBAAAyb,GAAA,OAAA/W,EAAAtB,MAAAhF,KAAAiF,UAAA,EATQ,KASR,EACD3E,EAAA2yB,YAAW,SAAC5vB,GAAC,SAAK2W,EAAAO,IAAG,GAAG,GAEhC,EAOA3a,cAAA,SAAgBo5C,EAAYvlC,GACxB,SAAOlT,EAAAoF,KAAG,GAAAvB,OAAIm0C,EAAiB,KAAAn0C,OAAIs0C,mBAAmBjlC,KAAOtQ,QACzD7C,EAAA0b,KAAI,SAACG,GAAI,OAAK,IAAIqlB,EAAA1L,QAAQ3Z,EAAK,GAEvC,EAMAvc,gBAAAikC,EAgBAjkC,gBAAA44C,EAgBa54C,cAAc,SACvBkD,EACA6+B,GAAiE,OAC/D7+B,EAAK2Q,GAAK+kC,EAAc11C,EAAK2Q,GAAI3Q,GAAQ+gC,EAAc/gC,EAAM6+B,EAAE,EAOrE/hC,gBAAA,SAAgBsjC,EAAczvB,GAC1B,SAAOlT,EAAA2jC,KAAG,GAAA9/B,OAAIm0C,EAAiB,KAAAn0C,OAAIs0C,mBAAmBjlC,IAAO,CACzDwlC,cAAe,QAEvB,EAOAr5C,iBAAA,SAAgBs5C,EAAezlC,GAC3B,SAAOlT,EAAAuhC,MAAI,GAAA19B,OACJm0C,EAAiB,KAAAn0C,OAAIs0C,mBAAmBjlC,GAAG,YAC9C,IACFtQ,QAAK7C,EAAA0b,KAAI,SAACG,GAAI,OAAK,IAAIqlB,EAAA1L,QAAQ3Z,EAAK,GAC1C,EAOAvc,gBAAA,SAAgBu5C,EAAc1lC,GAC1B,SAAOlT,EAAAuhC,MAAI,GAAA19B,OACJm0C,EAAiB,KAAAn0C,OAAIs0C,mBAAmBjlC,GAAG,WAC9C,IACFtQ,QAAK7C,EAAA0b,KAAI,SAACG,GAAI,OAAK,IAAIqlB,EAAA1L,QAAQ3Z,EAAK,GAC1C,EAOAvc,iBAAA,SAAgB+pC,EAAel2B,EAAY6pB,GACvC,IAAMxJ,KAAQyN,EAAAK,eAAc,CAAEtE,UAC9B,SAAO/8B,EAAAuhC,MAAI,GAAA19B,OACJm0C,EAAiB,KAAAn0C,OAAIs0C,mBAAmBjlC,GAAG,cAAArP,OAAa0vB,GAC3D,IACF3wB,QAAK7C,EAAA0b,KAAI,SAACG,GAAI,OAAK,IAAIqlB,EAAA1L,QAAQ3Z,EAAK,GAC1C,EAOAvc,yBAAA,SAAgBw5C,EACZ3lC,EACAzM,EACAs2B,GAEA,IAAMxJ,KAAQyN,EAAAK,eAAc,CAAEtE,UAC9B,SAAO/8B,EAAAuhC,MAAI,GAAA19B,OACJm0C,EAAiB,KAAAn0C,OAAIs0C,mBACpBjlC,GACH,YAAArP,OAAWs0C,mBAAmB1xC,GAAM,cAAA5C,OAAa0vB,GAClD,IACF3wB,QAAK7C,EAAA0b,KAAI,SAACG,GAAI,OAAK,IAAIm8B,EAAAe,UAAUl9B,EAAK,GAC5C,EAOAvc,4BAAA,SAAgB05C,EACZlvB,EACA4F,EACAhe,EACAwsB,GAGA,OAAOpK,EAAc,CACjBphB,KAHJ/N,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAoB,OAIhB8uB,gBAAcxC,EAAAyC,aAAYhE,GAC1BkE,cAAY3C,EAAAyC,gBAAYzC,EAAAqN,YAAW5O,EAAOhe,MAC3C7O,QACC7C,EAAA0b,KAAI,SAAC3Y,GAAC,OACF+mB,EAAQpO,IACJ,SAACvI,GAAE,OACEpQ,EAAE6sB,KACC,SAAClR,GAAC,OAAKA,EAAE9N,WAAauC,KAAQ+qB,GAAUA,IAAWxf,EAAEvL,GAAG,EAC3D,EACR,GAGb,EAEA7T,sBAAA,SAAgB25C,EACZ9lC,EACAuc,EACAhe,EACAwsB,GAGA,OAAOpK,EAAc,CACjBphB,KAHJ/N,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAoB,OAIhB8uB,gBAAcxC,EAAAyC,aAAYhE,GAC1BkE,cAAY3C,EAAAyC,gBAAYzC,EAAAqN,YAAW5O,EAAOhe,MAC3C7O,QACC7C,EAAA0b,KACI,SAAC3Y,GAAC,OAEE,IADAA,EAAE6Y,OAAO,SAAC7Y,GAAC,OAAKA,EAAE6N,WAAauC,GAAMpQ,EAAEoQ,KAAO+qB,CAAM,GAAEn5B,MACrD,GAGjB,4IC7PA,IAAA7E,EAAA1C,EAAA,OAEA8L,EAAA9L,EAAA,OACAgQ,EAAAhQ,EAAA,OACAwQ,EAAAxQ,EAAA,MAEAiQ,EAAAjQ,EAAA,OACAkQ,EAAAlQ,EAAA,OACAmQ,EAAAnQ,EAAA,OACAoQ,EAAApQ,EAAA,OACAqQ,EAAArQ,EAAA,OACA2Q,EAAA3Q,EAAA,MAEA07C,EAAA17C,EAAA,OACA27C,EAAA37C,EAAA,OAwBA+P,GAtBA/P,EAAA,OACAA,EAAA,OAEAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAmM,EAAAnM,EAAA,MAEA0Q,GADA1Q,EAAA,OACAA,EAAA,WACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,iBA0Da8B,uBAAoB,eAApBqP,EAAoBnP,EAAA,SAAAmP,KAAAlP,EAAAC,KAAAiP,GAAA,GAApBA,SAAoB,mBAAAhP,iBAApBgP,EAAoB,EAApBA,EAAoB,UAAA/O,EAAA,iCAApB+O,MAAoB,UAAA/O,EAAA,sCAHlB,CAAC0J,EAAAwC,qBAAoBb,QAAA,CAjB5B/K,EAAAmZ,aACA/P,EAAAiC,YACAjC,EAAAwC,oBACAqC,EAAA4B,eACAnC,EAAAuB,eACAxB,EAAAsB,mBACAxB,EAAAsB,oBACAvB,EAAAsB,gBACApB,EAAAsB,gBACAnB,EAAAuB,yBACApB,EAAA0B,kBACAnC,EAAA+B,sBACA6pC,EAAAttC,iBACAqtC,EAAArqC,iBACAlF,EAAA6F,gBACAtB,EAAA4B,oBAKKnB,CAAoB,kLCzGjC,IAAAhF,EAAAnM,EAAA,OACAkQ,EAAAlQ,EAAA,UAEAA,EAAA,oJAqBYoC,EAAAqN,yBAAA,aAAArN,CAA+C,SACjBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,iEAK/BA,EAAAqN,yBAAA,WAAArN,CAAqD,WACjDA,EAAAyuB,iBAAA,MAAgBzuB,EAAAsN,yBAChBtN,EAAAqN,yBAAA,4BACIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA8b,GAAA,IAAA3M,EAAArgB,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA+O,EAAA5L,KAAAxD,EAAA,GACHjR,EAAAsN,wBAAAtN,EAAsB,4CADnBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAK,EAAAqD,KAAA,2BAKJzU,EAAAqN,yBAAA,SACIrN,EAAAuN,iBAAA,gCACJvN,EAAAsN,kEADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAsU,sBAAA,IAAAsC,EAAA/E,KAAA,iFAEJ7R,EAAAqN,yBAAA,qBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAsoC,GAAA,IAAAt5B,EAAAlgB,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA4O,EAAArO,KAAAZ,EAAA,GACHjR,EAAAsN,wBAAA,4CADGtN,EAAA+Q,qBAAA,UAAAiB,EAAAH,KAAA,+DAGR7R,EAAAqN,yBAAA,WAAArN,CAA4D,WACxDA,EAAAyuB,iBAAA,MAAkBzuB,EAAAsN,yBAClBtN,EAAAqN,yBAAA,sBAAArN,CAAqC,cAG7BA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA+M,GAAA,IAAAC,EAAAle,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA4M,EAAAmR,OAAApe,EAAA,GAFJjR,EAAAsN,wBAAAtN,IAIE,4CAFEA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA8Q,EAAAwN,OAAA,+DAvBpBrvB,EAAAyhB,kCAAA,GACIzhB,EAAAqN,yBAAA,YACIrN,EAAAiS,qBAAA,EAAAwnC,EAAA,aAMAz5C,EAAAqN,yBAAA,UAAArN,CAAuB,WACnBA,EAAAyuB,iBAAA,MAAgBzuB,EAAAsN,yBAChBtN,EAAAiS,qBAAA,EAAAynC,EAAA,cAGA15C,EAAAiS,qBAAA,EAAA0nC,EAAA,uBAIJ35C,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAA2nC,EAAA,cAUA55C,EAAAqN,yBAAA,OAAArN,EAAAyuB,iBAAA,OAIAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAAqD,gBAC3BA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAuF,GAAA,IAAAC,EAAA1W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAoF,EAAAmjC,UAAS,GAAxC75C,EAAAyuB,iBAAA,OAAsDzuB,EAAAsN,wBAAAtN,GAE9DA,EAAA4hB,iCAAA,2CAnCyC5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgF,EAAA+jC,cAQvB95C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAgF,EAAAgkC,cAID/5C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgF,EAAAgkC,cAI+B/5C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAgF,EAAAikC,aAcxCh6C,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAA,IAAA5Y,EAAA0e,MAAAtvB,OAAA,OAAAnF,CAAI+V,EAAAkkC,UAAJj6C,EAAI,MAAA+V,EAAAiB,MAAA,KAAAjB,EAAAiB,MAAAvB,gBAAA,MAAAM,EAAAiB,MAAA,KAAAjB,EAAAiB,MAAAvD,OAAJzT,EAAA6uB,sBAAA,8BAOJ7uB,EAAAqN,yBAAA,aACIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,GAAavN,EAAAsN,wBAAAtN,2CADHA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eACV/Q,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAxC,EAAAyR,QAAA,EAaN3jB,4BAAyB,eAAzBw6C,EAAyB,WA4BlC,SAAAA,EACqCC,EACzBn5C,GAA0BnB,EAAAC,KAAAo6C,GADDp6C,KAAAq6C,QACzBr6C,KAAAkB,YA7BKlB,KAAA8uB,MAAQ,IAAI7kB,EAAAwV,aAEbzf,KAAA20B,MAAQ30B,KAAKq6C,MAAM1lB,OAAS,GAErC30B,KAAA+R,KAAO/R,KAAKq6C,MAAMtoC,KAClB/R,KAAA2U,KAAO3U,KAAKq6C,MAAM1lC,KAET3U,KAAAi6C,aAAej6C,KAAKq6C,MAAMJ,aAEnCj6C,KAAAuvB,OAASvvB,KAAKq6C,MAAM9qB,OAEXvvB,KAAAkX,MAAQlX,KAAKq6C,MAAMnjC,KAmBhC,CAACpX,SAAAs6C,EAAA,EAAA34C,IAAA,YAAAkE,IAfJ,WACI,OAAO3F,KAAK20B,MAAM3Y,IAAI,SAAC3Y,GAAC,OAAKA,EAAEsQ,IAAI,GAAEoB,KAAK,KAC9C,GAAC,CAAAtT,IAAA,cAAAkE,IAED,WACI,QAAS3F,KAAKkB,UAAUyE,IAAI,wBAChC,GAAC,CAAAlE,IAAA,eAAAkE,IAED,WACI,QAAS3F,KAAKkB,UAAUyE,IAAI,gCAChC,GAAC,CAAAlE,IAAA,UAAAC,MAOM,WACH1B,KAAKujB,QAAU,6BACfvjB,KAAK8uB,MAAMnP,KAAK,CAAE4P,OAAQ,QAC9B,KAAC6qB,CAAA,CApCiC,GAAzBA,SAAyB,mBAAAn6C,iBAAzBm6C,GAAyBl6C,EAAAwI,4BA6BtBsF,EAAAwvB,iBAAet9B,EAAAwI,4BAAAC,EAAAC,iBAAA,EA7BlBwxC,EAAyB,UAAAl6C,EAAA,kCAAzBk6C,EAAyBjxC,UAAA,wCAAA0W,QAAA,CAAAiP,MAAA,SAAAxlB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,kBA5DjBgjB,UAAAC,MAAAC,EAAA,mUAeWF,UAAAG,MAAAD,EAAA,2LAmBRF,UAAAI,MAAAF,EAAA,kKACK,gBACT,gBACA,sGAI2CF,UAAAM,MAAAJ,EAAA,wHAhC/BF,UAAAO,MAAAL,EAAA,4JAgBAF,UAAAgqB,MAAA9pB,EAAA,oTA1BxBtwB,EAAAqN,yBAAA,WAAArN,CAAQ,QACJA,EAAAyuB,iBAAA,KAAwBzuB,EAAAsN,yBACxBtN,EAAAyJ,oBAAA,WACAzJ,EAAAiS,qBAAA,EAAAooC,EAAA,gBAGJr6C,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAqoC,EAAA,uBAsCAt6C,EAAAiS,qBAAA,EAAAsoC,EAAA,yBAAAv6C,EAAAomB,yEA1CmCpmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,SAIpBrjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,QAAArjB,CAAgB,WAAAumB,EAAA,uXAsD1B2zB,CAAyB,4LClFtC,IAAAnwC,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OAKA48C,GAJA58C,EAAA,OAEAA,EAAA,OAEAA,EAAA,iOAmBwBoC,EAAAqN,yBAAA,qBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAAwpC,EAAAz6C,EAAAkR,wBAAA8b,GAAAjP,UAAAsC,EAAArgB,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAA+O,EAAAq6B,WAAAD,EAAAxpC,GAAuB,GAGxCjR,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAA,0DALItN,EAAA+Q,qBAAA,WAAAiB,EAAAwK,mBAAAxc,EAAA0R,0BAAA,EAAAipC,IAAA50C,SAAA00C,GAAAz6C,CAAmD,iBAAAA,EAAA0R,0BAAA,EAAAkpC,IAInD56C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAgtC,EAAA,+BATZz6C,EAAAqN,yBAAA,WAAArN,CAAoD,cAC7BA,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACvBtN,EAAAqN,yBAAA,YACIrN,EAAAiS,qBAAA,EAAA4oC,EAAA,uBAQJ76C,EAAAsN,wBAAAtN,4CAPwBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAU,EAAAvI,SAAA,0BAYxBlJ,EAAAyJ,oBAAA,6DAGIzJ,EAAA+Q,qBAAA,SAAA+pC,EAAAvvB,OAAA,0BAIAvrB,EAAAyJ,oBAAA,yEA5BZzJ,EAAAqN,yBAAA,WAKIrN,EAAAiS,qBAAA,EAAA8oC,EAAA,aAaA/6C,EAAAqN,yBAAA,WAGIrN,EAAAiS,qBAAA,EAAA+oC,EAAA,cAMAh7C,EAAAiS,qBAAA,EAAAgpC,EAAA,0BAAAj7C,EAAAomB,kCAMJpmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAA4B,YAEpBA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAiD,kBACbA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACrCtN,EAAAqN,yBAAA,QAAGrN,EAAAuN,iBAAA,IAAgDvN,EAAAsN,wBAAAtN,GAEvDA,EAAAqN,yBAAA,YAAArN,CAEC,gBAMOA,EAAA8Q,qBAAA,uBAAAgqC,EAAA96C,EAAAkR,wBAAAiF,GAAA4H,UAAA3H,EAAApW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8E,EAAA8kC,gBAAAJ,GAAqB,GAE9B96C,EAAAqN,yBAAA,aAAArN,EAAAg5B,sBAAA,OACIh5B,EAAAyJ,oBAAA,eAEJzJ,EAAAi5B,sBAAAj5B,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,uBAAAgqC,EAAA96C,EAAAkR,wBAAAiF,GAAA4H,UAAAzH,EAAAtW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAgF,EAAA6kC,eAAAL,GAAoB,GAE7B96C,EAAAqN,yBAAA,aAAArN,EAAAg5B,sBAAA,OACIh5B,EAAAyJ,oBAAA,eAEJzJ,EAAAi5B,sBAAAj5B,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,uBAAAgqC,EAAA96C,EAAAkR,wBAAAiF,GAAA4H,UAAArH,EAAA1W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAoF,EAAAyiB,gBAAA2hB,GAAqB,GAE9B96C,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,sFA9EXA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAsB,EAAAnJ,SAAA,KAAAmJ,EAAAnJ,SAAA/D,QAkBGnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA+pC,EAAAvvB,OAAA,KAAAuvB,EAAAvvB,OAAApmB,OAAAnF,CAA2B,WAAAgiB,GAa5BhiB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAqtC,EAAArnC,MAAAqnC,EAAAvnC,IAAAunC,EAAApnC,QAAA,YAIG1T,EAAAwN,oBAAA,GAAAxN,EAAAoU,6BAAA,MAAA0mC,EAAAhnC,KAAA,KAAAgnC,EAAAhnC,KAAA2B,gBAAA,MAAAqlC,EAAAhnC,KAAA,KAAAgnC,EAAAhnC,KAAAL,OAoCPzT,EAAAwN,oBAAA,IAAAxN,EAAA4f,sBAAA,gBAAAvN,EAAAgnB,UAAAtzB,SAAA,MAAA+0C,EAAA,KAAAA,EAAAvnC,KAGUvT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAAgnB,UAAAtzB,SAAA,MAAA+0C,EAAA,KAAAA,EAAAvnC,IAAA,+BArF9B,IAAM+lB,EAAuB,GAsHhB55B,yBAAsB,eAAtB07C,EAAsB,WAc/B,SAAAA,EACYp6C,EACAoX,GAAkB,IAAAhX,EAAAtB,KAAAD,EAAAC,KAAAs7C,GADlBt7C,KAAAkB,YACAlB,KAAAsY,UAfItY,KAAAoJ,SAAqB,GAC9BpJ,KAAAu7C,UAAY,EACZv7C,KAAA05B,MAAwB,GACxB15B,KAAA25B,UAAW,EACX35B,KAAA0c,kBAA8B,GAoDrB1c,KAAA45B,iBAAmB,SAACC,GAA+B,OAC9Dv4B,EAAKw4B,UAAYD,CAAE,EAER75B,KAAA+5B,kBAAoB,SAACF,GAA+B,OAC/Dv4B,EAAK04B,SAAWH,CAAE,EACP75B,KAAAi6B,iBAAmB,SAACrQ,GAAU,OAAMtoB,EAAKq4B,SAAW/P,CAAC,CA7ClE,CAEH9pB,SAAAw7C,EAAA,EAAA75C,IAAA,YAAAkE,IATA,WACI,OAAO3F,KAAKkB,UAAUyE,IAAc+0C,EAAAc,eAAiBhiB,CACzD,GAAC,CAAA/3B,IAAA,kBAAAC,MAQM,WAAe,IAAAyD,EAAAnF,KACZ0Y,EAAM1Y,KAAKsY,QAAQrD,KAAKylC,EAAAe,yBAA0B,CACpD34C,KAAM,CACF42B,MAAO15B,KAAK05B,MACZzW,QAAS,CAAEjD,SAAUhgB,KAAKu7C,cAGlC7iC,EAAII,cAAc3F,UAAU,SAACumB,GACpBA,IAAOA,EAAQhhB,EAAIM,kBAAkBuG,UAC1Cpa,EAAKm1B,SAASZ,EAClB,EACJ,GAEA,CAAAj4B,IAAA,iBAAAC,MACO,SAAemb,GAClB7c,KAAKs6B,SAASt6B,KAAK05B,MAAMxd,OAAO,SAAC7Y,GAAC,OAAKA,EAAEoQ,KAAOoJ,EAAMpJ,EAAE,GAC5D,GAEA,CAAAhS,IAAA,WAAAC,MAIO,SAASy4B,GACZn6B,KAAK05B,MAAQS,EACTn6B,KAAK85B,WAAW95B,KAAK85B,UAAU95B,KAAK05B,MAC5C,GAGA,CAAAj4B,IAAA,aAAAC,MAIO,SAAWA,GACd1B,KAAK05B,MAAQh4B,GAAS,EAC1B,GAAC,CAAAD,IAAA,kBAAAC,MAUM,SAAgBmb,GACnB,GAAU,MAALA,KAAOpJ,GACZ,KAAMgnB,EAAWz6B,KAAKu5B,UAChBmB,GAAaD,EAASx0B,SAAS4W,EAAMpJ,IAEvCzT,KAAKkB,UAAUy5B,gBAAgB+f,EAAAc,aAD/B9gB,EAC2C,GAAAt2B,OAAAif,EACpCoX,GAAQ,CACX5d,EAAMpJ,KAKNgnB,EAASve,OAAO,SAAC7Y,GAAC,OAAKA,IAAMwZ,EAAMpJ,EAAE,GAAC,CAGlD,KAAC6nC,CAAA,CA/E8B,GAAtBA,SAAsB,mBAAAr7C,iBAAtBq7C,GAAsBp7C,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAuQ,WAAA,EAAtBkiC,EAAsB,UAAAp7C,EAAA,kCAAtBo7C,EAAsBnyC,UAAA,sBAAAyW,OAAA,CAAAxW,SAAA,YAAAA,SAAA,CAAAlJ,EAAAkwB,6BARpB,CACP,CACI1jB,QAAS9C,EAAAixB,kBACTC,eAAa7wB,EAAA8wB,YAAW,kBAAMugB,CAAsB,GACpDtgB,OAAO,MAEd1xB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,8SAdsBgjB,UAAAC,MAAAC,EAAA,m0BA3CKF,UAAAG,MAAAD,EAAA,2JAAc,uFAYdF,UAAAI,MAAAF,EAAA,6JAAe,0dAlEvCtwB,EAAAqN,yBAAA,WACIrN,EAAAiS,qBAAA,EAAAupC,EAAA,cAsFJx7C,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAKIrN,EAAA8Q,qBAAA,0BAAStH,EAAA0xC,iBAAiB,GAE1Bl7C,EAAAqN,yBAAA,UAAArN,CAAwD,cAC1CA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAAmBzuB,EAAAsN,wBAAAtN,KAG3BA,EAAAqN,yBAAA,WACIrN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,gCAlGyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgwB,+IA6GpB4hB,CAAsB,oLCjInC,IAAArxC,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,UACAA,EAAA,mIAKQoC,EAAAqN,yBAAA,UAAArN,CAAwD,UACpDA,EAAAyuB,iBAAA,KAAmDzuB,EAAAsN,yBACnDtN,EAAAqN,yBAAA,WAAArN,CAAqC,UAArCA,CAAqC,WAE7BA,EAAAg5B,sBAAA,KAESh5B,EAAAyJ,oBAAA,UACTzJ,EAAAi5B,sBAAAj5B,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAAArN,CAGC,wBACoCA,EAAAuN,iBAAA,UAAGvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,yBAAkCrN,EAAAuN,iBAAA,SAAEvN,EAAAsN,wBAAAtN,KAG5CA,EAAAqN,yBAAA,WAAArN,CAAgC,YAC5BA,EAAAg5B,sBAAA,OAEah5B,EAAAyJ,oBAAA,WACbzJ,EAAAi5B,sBAAAj5B,EAAAsN,yBACAtN,EAAAqN,yBAAA,wBAAArN,CAA4D,yBACvBA,EAAAuN,iBAAA,UAAGvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,yBAAkCrN,EAAAuN,iBAAA,SAAEvN,EAAAsN,wBAAAtN,KAG5CA,EAAAqN,yBAAA,YAAArN,CAA2B,YACvBA,EAAAg5B,sBAAA,OAEah5B,EAAAyJ,oBAAA,WACbzJ,EAAAi5B,sBAAAj5B,EAAAsN,yBACAtN,EAAAqN,yBAAA,wBAAArN,CAGC,yBACoCA,EAAAuN,iBAAA,UAAGvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,yBAAkCrN,EAAAuN,iBAAA,SAAEvN,EAAAsN,wBAAAtN,OAIhDA,EAAAqN,yBAAA,eAAArN,CAAqD,gBAC3BA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8Q,GAAA,IAAApQ,EAAA5R,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAM,EAAA6pC,SAAQ,GAAvCz7C,EAAAyuB,iBAAA,OAAoDzuB,EAAAsN,wBAAAtN,GAExDA,EAAAqN,yBAAA,eAAArN,CAA8C,WAChBA,EAAAuN,iBAAA,YAAKvN,EAAAsN,wBAAAtN,IAAI,2CA1CrBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAsB,EAAA7B,MAUYxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YACA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YASA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YACA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAYA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YACA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mCAY9B/Q,EAAAqN,yBAAA,YAAArN,CAAoC,UAChCA,EAAAyuB,iBAAA,MAKAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAAArN,CAA8C,UAChBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,MAoBtCN,8BAA2B,eAA3BkxC,EAA2B,WA/ExC,SAAAA,IAAA/wC,EAAAC,KAAA8wC,GAgFqB9wC,KAAA8uB,MAAQ,IAAI7kB,EAAAwV,aAEtBzf,KAAA0Q,KAAO,IAAI9G,EAAAk2B,UAAU,CACxB8b,UAAW,IAAIhyC,EAAAm2B,aAAY,GAC3B8b,OAAQ,IAAIjyC,EAAAm2B,aAAY,GACxB+b,QAAS,IAAIlyC,EAAAm2B,aAAY,KAkBhCjgC,SAAAgxC,EAAA,EAAArvC,IAAA,SAAAC,MAdU,WAAM,IAAAJ,EAAAtB,KACTA,KAAK0Q,KAAKuY,mBAENoB,OAAOC,KAAKtqB,KAAK0Q,KAAKhP,OAAOwuB,KACzB,SAACzuB,GAAG,OACyB,IAAzBH,EAAKoP,KAAKhP,MAAMD,IACS,SAAzBH,EAAKoP,KAAKhP,MAAMD,EAAe,GAGvCzB,KAAK+7C,SAAU,EAGnB/7C,KAAK8uB,MAAMnP,KAAK,CAAE4P,OAAQ,QAC9B,KAACuhB,CAAA,CAvBmC,GAA3BA,SAA2B,mBAAA7wC,iBAA3B6wC,EAA2B,EAA3BA,EAA2B,UAAA5wC,EAAA,kCAA3B4wC,EAA2B3nC,UAAA,0BAAA0W,QAAA,CAAAiP,MAAA,SAAAxlB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,gHA3ECgjB,UAAAC,MAAAC,EAAA,2JAGTF,UAAAG,MAAAD,EAAA,4KAEH,iBAAO,6EAWJF,UAAAI,MAAAF,EAAA,qLAEC,kBAAO,qFAQRF,UAAAM,MAAAJ,EAAA,gLAEC,kBAAO,qJAYsBF,UAAAO,MAAAL,EAAA,oNAQ1BF,UAAAgqB,MAAA9pB,EAAA,+VAjD5BtwB,EAAAiS,qBAAA,EAAA6pC,EAAA,cA+CA97C,EAAAiS,qBAAA,EAAA8pC,EAAA,yBAAA/7C,EAAAomB,yEA/CMpmB,EAAA+Q,qBAAA,QAAAvH,EAAAqyC,QAAA77C,CAAgB,WAAAiuB,EAAA,gZA4EjB2iB,CAA2B,2KCnFxC,IAAA7mC,EAAAnM,EAAA,OASA2qC,EAAA3qC,EAAA,+FA6BgBoC,EAAAyJ,oBAAA,+DACIzJ,EAAA+Q,qBAAA,SAAAa,EAAAwB,KAAAmY,OAAA,2BA6DAvrB,EAAAqN,yBAAA,WAAArN,CAGC,YACwCA,EAAAuN,iBAAA,GAAUvN,EAAAsN,wBAAAtN,2BAAVA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA4nC,EAAA,sDAV7Ch8C,EAAAqN,yBAAA,eAAArN,CAIC,WACGA,EAAAyuB,iBAAA,MAA+CzuB,EAAAsN,yBAC/CtN,EAAAiS,qBAAA,EAAAgqC,EAAA,cAMJj8C,EAAAsN,kEALyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAK,EAAAgC,KAAAlK,UAAAlJ,EAAA0R,0BAAA,EAAAwqC,GAAA,oFAMzBl8C,EAAAqN,yBAAA,gBAKIrN,EAAAyJ,oBAAA,wBAMJzJ,EAAAsN,kEAJQtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,MAAA6F,EAAAk7B,QAAA9xC,CAAe,WAAA4W,EAAA1N,SAAflJ,CAAe,UAAAA,EAAA0R,0BAAA,EAAAyqC,GAAA,+DAtF/Bn8C,EAAAyhB,kCAAA,GACIzhB,EAAAqN,yBAAA,eASIrN,EAAAiS,qBAAA,EAAAmqC,EAAA,wBAKAp8C,EAAAqN,yBAAA,cAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8b,GAAA,IAAA3M,EAAArgB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA+O,EAAAvY,MAAA2X,OAAY,GAGrBzf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,GAExBA,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8b,GAAA,IAAA9M,EAAAlgB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA4O,EAAA+a,UAAAxb,OAAgB,GAGzBzf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,GAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,UAAArN,CAEC,eAFDA,CAEC,WAGWA,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAGC,YACmCA,EAAAuN,iBAAA,cAAOvN,EAAAsN,yBACvCtN,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAAmBzuB,EAAAsN,wBAAAtN,GAEvBA,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBACdtN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,QAAGrN,EAAAuN,iBAAA,IAAgDvN,EAAAsN,wBAAAtN,KAG3DA,EAAAiS,qBAAA,GAAAoqC,EAAA,kBAaAr8C,EAAAiS,qBAAA,GAAAqqC,EAAA,kBAYJt8C,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAEC,gBAOOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8b,GAAA,IAAA5W,EAAApW,EAAAqR,0BAAA+E,SAAA+kB,QAAA/kB,EAAA+kB,OAA2Bn7B,EAAAsR,sBAAA8E,EAAAglB,aAAA3b,KAAArJ,EAAA+kB,QAAyB,GAEpDn7B,EAAAqN,yBAAA,YAAArN,CAA8C,kBACfA,EAAAuN,iBAAA,IAEzBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAGAzuB,EAAAsN,wBAAAtN,OAIhBA,EAAA4hB,iCAAA,2CA9GQ5hB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,gBAAAvN,EAAAe,KAAAmY,OAAA,KAAAlZ,EAAAe,KAAAmY,OAAApmB,OAAAnF,CAAqC,aAAAqS,EAAAe,KAAAmY,OAAA,KAAAlZ,EAAAe,KAAAmY,OAAApmB,OAArCnF,CAAqC,iBAAAqS,EAAAe,KAAAmY,QAAAlZ,EAAAe,KAAAmY,OAAApmB,QAArCnF,CAAqC,eAAAqS,EAAAe,KAAAmY,QAAAlZ,EAAAe,KAAAmY,OAAApmB,QAArCnF,CAAqC,0BAAAqS,EAAAe,KAAAmY,QAAAlZ,EAAAe,KAAAmY,OAAApmB,SAQhCnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAsB,EAAAe,KAAAmY,OAAA,KAAAlZ,EAAAe,KAAAmY,OAAApmB,QAgBDnF,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,cAAAvN,EAAAgpB,IAAAr7B,CAAyB,gBAAAqS,EAAAgpB,KAKfr7B,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAAgpB,IAAA,8BAUNr7B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAAe,KAAAqC,cAAApD,EAAAe,KAAAK,MAAApB,EAAAe,KAAAG,GAAA,KAeIvT,EAAAwN,oBAAA,IAAAxN,EAAAyN,6BAAA,IAAA4E,EAAAe,KAAAqC,cAAApD,EAAAe,KAAAK,MAAApB,EAAAe,KAAAG,GAAA,KAKDvT,EAAAwN,oBAAA,GAAAxN,EAAAoU,6BAAA,MAAA/B,EAAAe,KAAAU,KAAA,KAAAzB,EAAAe,KAAAU,KAAA2B,gBAAA,MAAApD,EAAAe,KAAAU,KAAA,KAAAzB,EAAAe,KAAAU,KAAAL,OAKNzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAsB,EAAAe,KAAAlK,SAAA,KAAAmJ,EAAAe,KAAAlK,SAAA/D,QAcAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAsB,EAAA62B,UAiBDlpC,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,UAAAvN,EAAA8oB,QAK+Bn7B,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAA8oB,OAAA,gBAM3Bn7B,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAtc,EAAA8oB,QAAAn7B,EAAA6uB,sBAAA,2BAMZ7uB,EAAAqN,yBAAA,WAAArN,CAGC,UACGA,EAAAyuB,iBAAA,MAEAzuB,EAAAsN,wBAAAtN,IAKHN,uBAAoB,eAApB68C,EAAoB,WA/IjC,SAAAA,IAAA18C,EAAAC,KAAAy8C,GAiJoBz8C,KAAAu7B,KAAe,EACfv7B,KAAAq7B,QAAkB,EAClBr7B,KAAAopC,UAAoB,EAEnBppC,KAAAgI,MAAQ,IAAIiC,EAAAwV,aACZzf,KAAAm7B,UAAY,IAAIlxB,EAAAwV,aAChBzf,KAAAs7B,aAAe,IAAIrxB,EAAAwV,aAE7Bzf,KAAAgyC,QAAU,GACVhyC,KAAAoJ,SAA4B,GAiBtCtJ,SAAA28C,EAAA,EAAAh7C,IAAA,cAAAC,MAfU,SAAYw4B,GACXA,EAAQ5mB,MAAQtT,KAAKsT,MACrBtT,KAAK08C,eAEb,GAAC,CAAAj7C,IAAA,gBAAAC,MAEO,WACJ1B,KAAKgyC,QAAUhyC,KAAKsT,KAAKU,KAAKJ,OAC9B5T,KAAKoJ,SAAW,CACZ,CACIrD,SAAU/F,KAAKsT,KAAKM,QAAU5T,KAAKsT,KAAKG,GACxCsU,QAAS0gB,EAAAzgB,iBAGrB,KAACy0B,CAAA,CA3B4B,GAApBA,SAAoB,mBAAAx8C,iBAApBw8C,EAAoB,EAApBA,EAAoB,UAAAv8C,EAAA,kCAApBu8C,EAAoBtzC,UAAA,mBAAAyW,OAAA,CAAAtM,KAAA,OAAAioB,IAAA,MAAAF,OAAA,SAAA+N,SAAA,YAAAvpB,QAAA,CAAA7X,MAAA,QAAAmzB,UAAA,YAAAG,aAAA,gBAAAlyB,SAAA,CAAAlJ,EAAA+6B,gCAAA3xB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,eAAA+iB,aA1EDC,UAAAC,MAAAC,EAAA,8FAuDJF,UAAAG,MAAAD,EAAA,81CADIF,UAAAI,MAAAF,EAAA,0FACJG,mHArC6BL,UAAAM,MAAAJ,EAAA,4iBAiDFF,UAAAO,MAAAL,EAAA,uJAxH/CtwB,EAAAiS,qBAAA,EAAAwqC,EAAA,wBAmHAz8C,EAAAiS,qBAAA,EAAAyqC,EAAA,yBAAA18C,EAAAomB,yEAnHepmB,EAAA+Q,qBAAA,OAAAvH,EAAA4J,KAAApT,CAAY,WAAAiuB,EAAA,wUA+HtBsuB,CAAoB,sNC3JjC,IAAAxyC,EAAAnM,EAAA,OAEA0C,GADA1C,EAAA,OACAA,EAAA,QAEA++C,EAAA/+C,EAAA,MAEAyzB,GADAzzB,EAAA,OACAA,EAAA,iJA0EYoC,EAAAqN,yBAAA,WAAArN,CAIC,OACMA,EAAAuN,iBAAA,GAAUvN,EAAAsN,yBACbtN,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,uBAAA8rC,EAAA58C,EAAAkR,wBAAA8Q,GAAAjE,UAAAnM,EAAA5R,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAM,EAAA8oC,WAAAkC,GAAiB,GAAM,GAEhC58C,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,IAAW,2BAR3BA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAwoC,EAAA,+DAWP58C,EAAAqN,yBAAA,WAAArN,CAAqD,UACjDA,EAAAyuB,iBAAA,MAA0BzuB,EAAAsN,yBAC1BtN,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA2rC,GAAA,IAAAjmC,EAAA5W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAsF,EAAA/D,WAAA,CAAAiqC,UAAuB,IAAQ,GAExC98C,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,IAAW,6BAMjCN,8BAA4B,eAA5Bq9C,EAA4B,SAAAp8C,GAAAC,EAAAm8C,EAAAp8C,GAAA,IAAAG,EAAAC,EAAAg8C,GAuBrC,SAAAA,EACYC,EACAjjC,EACA/Y,GAA0B,IAAAI,EAAAvB,SAAAC,KAAAi9C,IAElC37C,EAAAN,EAAAO,KAAAvB,OAJQk9C,UACA57C,EAAA2Y,SACA3Y,EAAAJ,YAzBII,EAAA67C,KAAuB,OACtB77C,EAAA87C,WAAa,IAAInzC,EAAAwV,aAClBne,EAAA2hB,QAAU3hB,EAAK2Y,OAAOgJ,QACtB3hB,EAAAyR,WAAa,SAACyQ,GAAC,OAAKliB,EAAK2Y,OAAOlH,WAAWyQ,EAAE,EAC7CliB,EAAAs5C,WAAa,SAACviB,EAAGjT,GAAC,OAAK9jB,EAAK2Y,OAAO2gC,WAAWviB,EAAGjT,EAAE,EAgBnD9jB,EAAA+7C,WAAa,kBAAM/7C,EAAK47C,QAAQjoC,KAAK4nC,EAAAS,qBAAqB,EAACh8C,CAQ3E,CAACxB,SAAAm9C,EAAA,EAAAx7C,IAAA,QAAAkE,IAtBD,WACI,OAAO3F,KAAKia,OAAOvJ,KAAKhP,MAAMqQ,IAClC,GAAC,CAAAtQ,IAAA,MAAAkE,IAED,WACI,IAAA43C,EAAoCv9C,KAAKia,OAAOvJ,KAAKhP,MAA7CqQ,EAAIwrC,EAAJxrC,KAAMC,EAAQurC,EAARvrC,SACd,OAD+BurC,EAAPlsB,SACpBA,EAAgBE,EAAA4C,UAASpiB,GACtBA,EAAkB,GAAXC,EAAgB,GAClC,GAAC,CAAAvQ,IAAA,cAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAU0uB,WAC1B,KAACqtB,CAAA,CAnBoC,CAAQz8C,EAAAiI,cAApCw0C,SAA4B,mBAAAh9C,iBAA5Bg9C,GAA2B/8C,EAAAwI,4BAAAC,EAAA6M,gBAAAtV,EAAAwI,4BAAAG,EAAAkI,oBAAA7Q,EAAAwI,4BAAAK,EAAAH,iBAAA,EAA3Bq0C,EAA4B,UAAA/8C,EAAA,kCAA5B+8C,EAA2B9zC,UAAA,2BAAAyW,OAAA,CAAAu9B,KAAA,QAAAt9B,QAAA,CAAAu9B,WAAA,cAAAh0C,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,oLAlE3BgjB,UAAAC,MAAAC,EAAA,8MAYIF,UAAAG,MAAAD,EAAA,iLAWAF,UAAAI,MAAAF,EAAA,0ZA6BUF,UAAAM,MAAAJ,EAAA,uNA/DnBtwB,EAAAqN,yBAAA,cAAArN,CAGC,cAMOA,EAAA8Q,qBAAA,0BAAStH,EAAA2zC,YAAY,GALzBn9C,EAAAyuB,iBAAA,KASAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAA+B,cAOvBA,EAAA8Q,qBAAA,mBAAAtH,SAAAyzC,KAAgB,MAAOzzC,EAAA0zC,WAAAz9B,KAAAjW,EAAAyzC,KAAqB,GANhDj9C,EAAAyuB,iBAAA,KAUAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,mBAAAtH,SAAAyzC,KAAgB,OAAQzzC,EAAA0zC,WAAAz9B,KAAAjW,EAAAyzC,KAAqB,GANjDj9C,EAAAyuB,iBAAA,KAUAzuB,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,cAAArN,CAAyD,WAE/BA,EAAAuN,iBAAA,kCAAgCvN,EAAAsN,yBACtDtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,gEAEJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAAqrC,EAAA,6CAgBAt9C,EAAAiS,qBAAA,GAAAsrC,EAAA,6CAYJv9C,EAAAsN,gCAtDYtN,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,kBAAApW,EAAAyzC,MAWAj9C,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,mBAAApW,EAAAyzC,MAUcj9C,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAApU,EAAAsU,sBAAA,KAAA9K,EAAAsmB,MAAA,eAElB9vB,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,IAAA7f,EAAAsU,sBAAA,MAAA9K,EAAAsmB,MAAAtmB,EAAAkmB,aAAA,WAAA1vB,EAAAsU,sBAAA,MAAA9K,EAAAyb,IAAAzb,EAAAkmB,aAAA,KAMiB1vB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAA0X,EAAAzoB,EAAA8V,sBAAA,MAAAtM,EAAAuZ,UAAA,KAAA0F,EAAAvf,WAAAlJ,EAAA0R,0BAAA,GAAAwqC,IAaHl8C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAysC,EAAAx9C,EAAA8V,sBAAA,MAAAtM,EAAAuZ,UAAA,KAAAy6B,EAAAV,+iBAejBC,CAA4B,sLC9GzCn/C,EAAA,OACAA,EAAA,OADA,IAEAyzB,EAAAzzB,EAAA,UAEAA,EAAA,OACAA,EAAA,kPAmBgBoC,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAa,IAAA,IAAAC,GAAAhS,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAU,GAAAlK,QAAO,GAEhB9H,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,yBAAmBvN,EAAAsN,wBAAAtN,EAAW,2BA8BhCA,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,kDAHItN,EAAA+Q,qBAAA,QAAA0sC,IAEAz9C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAgwC,GAAAhoC,cAAAgoC,GAAAhqC,KAAA,4GArBhBzT,EAAAqN,yBAAA,WAAArN,CAGC,WACGA,EAAAyuB,iBAAA,MAAoBzuB,EAAAsN,yBACpBtN,EAAAqN,yBAAA,sBAAArN,CAAoD,mBAI5CA,EAAA8Q,qBAAA,yBAAAG,IAAAjR,EAAAkR,wBAAAsoC,IAAA,IAAAt5B,GAAAlgB,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAA4O,GAAAlK,SAAA/E,GAAA,EAAAjR,CAAsB,yBAAAiR,IAAAjR,EAAAkR,wBAAAsoC,IAAA,IAAAt7B,GAAAle,EAAAqR,0BAAA,OAG9BrR,EAAAsR,sBAAA4M,GAAArL,WAAA,CAAA84B,QAAA,MAAA16B,GAAA,KAAAA,GAAAsC,KAGlB,GAE0BvT,EAAAiS,qBAAA,EAAAyrC,EAAA,mDAMJ19C,EAAAsN,wBAAAtN,IAAa,2CAdTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAgF,EAAAC,SAAAhW,CAAsB,iBAAAA,EAAA0R,0BAAA,EAAAisC,IASF39C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAC,EAAAG,WAAA,2BA0BpBlW,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,kDAHItN,EAAA+Q,qBAAA,QAAA6sC,GAAArqC,IAEAvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAmwC,GAAAnoC,cAAAmoC,GAAAnqC,KAAA,oEArBhBzT,EAAAqN,yBAAA,WAAArN,CAGC,WACUA,EAAAuN,iBAAA,WAAKvN,EAAAsN,yBACZtN,EAAAqN,yBAAA,sBAAArN,CAAqC,mBAK7BA,EAAA8Q,qBAAA,yBAAAG,IAAAjR,EAAAkR,wBAAA83B,IAAA,IAAAzqB,GAAAve,EAAAqR,0BAAA,OAERrR,EAAAsR,sBAAAiN,GAAA1L,WAAA,CAAA84B,QAAA16B,IAAAsN,GAAAvI,SAAAzC,KAGlB,iCAE0BvT,EAAAiS,qBAAA,EAAA4rC,EAAA,mDAMJ79C,EAAAsN,wBAAAtN,IAAa,8CAfTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAyQ,GAAAxhB,EAAA8V,sBAAA,IAAArE,EAAAsR,UAAA,KAAAvB,GAAAmqB,QAAA3rC,CAAsC,YAAAyR,EAAAuE,SAAtChW,CAAsC,iBAAAA,EAAA0R,0BAAA,EAAAisC,IAUlB39C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAArE,EAAAoR,QAAA,wBAmDhC7iB,EAAAqN,yBAAA,WAAArN,CAA+D,qBAC3DA,EAAAyuB,iBAAA,MAEAzuB,EAAAsN,wBAAAtN,6FA0BJA,EAAAqN,yBAAA,WAAArN,CAGC,YACwCA,EAAAuN,iBAAA,GAAUvN,EAAAsN,yBAC/CtN,EAAAqN,yBAAA,qBAIIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,IAAA6sC,GAAA99C,EAAAkR,wBAAA6sC,IAAAhgC,UAAArG,EAAA1X,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAAoG,EAAAgjC,WAAAoD,GAAA7sC,IAAwB,iCAE5CjR,EAAAsN,wBAAAtN,EAAe,8DAPqBA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA0pC,GAEjC99C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAA0N,GAAAze,EAAA8V,sBAAA,IAAAkoC,GAAAj7B,UAAA,KAAAtE,GAAAvV,WAAAlJ,EAAA0R,0BAAA,EAAAusC,IAAAl4C,SAAA+3C,GAAA99C,CAEC,iBAAAA,EAAA0R,0BAAA,EAAAisC,GAAA,2BAdb39C,EAAAqN,yBAAA,eAAArN,CAIC,UACGA,EAAAyuB,iBAAA,MAAyCzuB,EAAAsN,yBACzCtN,EAAAiS,qBAAA,EAAAisC,EAAA,4CAaJl+C,EAAAsN,kEAZyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAA1E,GAAAlI,UAAA,gEAc7BlJ,EAAAqN,yBAAA,WAAArN,CAGC,eAMOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAitC,IAAA,IAAAj9B,GAAAlhB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA4P,GAAApZ,QAAO,GALpB9H,EAAAyuB,iBAAA,MASAzuB,EAAAsN,wBAAAtN,EAAS,EAIRN,uBAAoB,eAApB09C,EAAoB,WA+C7B,SAAAA,EAEYgB,GACArkC,EACA9Y,GACAD,IAA0B,IAAAI,GAAAtB,KAAAD,EAAAC,KAAAs9C,GAH1Bt9C,KAAAs+C,eACAt+C,KAAAia,SACAja,KAAAmB,QACAnB,KAAAkB,aAnDLlB,KAAAu+C,WAAY,EACHv+C,KAAAijB,QAAUjjB,KAAKia,OAAOgJ,QACtBjjB,KAAAoJ,SAAWpJ,KAAKia,OAAO7Q,SACvBpJ,KAAAoW,UAAYpW,KAAKmB,KAAKq9C,iBACtBx+C,KAAA+iB,OAAS/iB,KAAKmB,KAAKs9C,cACnBz+C,KAAA0Q,KAAO1Q,KAAKia,OAAOvJ,KACnB1Q,KAAA0+C,gBAAentB,EAAA3V,KAAInB,KAAKuX,MAAO,CAC3C+V,MAAO,EACPG,QAAS,IACVnS,UASa/1B,KAAAgI,MAAQ,kBAAM1G,GAAKg9C,YAAYr/B,SAAS,EACxCjf,KAAA+S,WAAa,SAACyQ,IAAC,OAAKliB,GAAK2Y,OAAOlH,WAAWyQ,GAAE,EAC7CxjB,KAAA46C,WAAa,SAACviB,GAAGjT,IAAC,OAAK9jB,GAAK2Y,OAAO2gC,WAAWviB,GAAGjT,GAAE,EACnDplB,KAAA2+C,SAAW,SAACroB,IAAO,EAgC/Bt2B,KAAKu+C,YAAcv+C,KAAKs+C,WAC5B,CAACx+C,SAAAw9C,EAAA,EAAA77C,IAAA,WAAAkE,IA3CD,WACI,OAAO3F,KAAKmB,KAAK+U,QACrB,EAAC0F,IACD,SAAoB1C,GAChBlZ,KAAKmB,KAAK+U,SAAWgD,CACzB,GAAC,CAAAzX,IAAA,qBAAAkE,IAOD,WACI,QAAS3F,KAAKkB,UAAUyE,IAAI,+BAChC,GAAC,CAAAlE,IAAA,gBAAAkE,IACD,WACI,OACI3F,KAAK4+C,sBACH5+C,KAAKkB,UAAUyE,IAAI,0BAE7B,GAAC,CAAAlE,IAAA,WAAAkE,IAED,WACI,SAAO4rB,EAAA4C,aACH5C,EAAAstB,SACIpkC,KAAKuX,MACLhyB,KAAKkB,UAAUyE,IAAI,+BAAiC,IAGhE,GAAC,CAAAlE,IAAA,WAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,uBAC9B,KAAC23C,CAAA,CA7C4B,GAApBA,SAAoB,mBAAAr9C,mBAApBq9C,GAAoBp9C,EAAAwI,4BAAAC,EAAAwW,kBAAA,GAAAjf,EAAAwI,4BAAAG,EAAAkI,oBAAA7Q,EAAAwI,4BAAAK,EAAAD,qBAAA5I,EAAAwI,4BAAAO,EAAAL,iBAAA,EAApB00C,EAAoB,UAAAp9C,EAAA,kCAApBo9C,EAAoBn0C,UAAA,mBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,6RAvK2BgjB,UAAAC,MAAAC,EAAA,0SAQPF,UAAAG,MAAAD,EAAA,6KA0DrBF,UAAAI,MAAAF,EAAA,gMAYIF,UAAAM,MAAAJ,EAAA,iMAcAF,UAAAO,MAAAL,EAAA,yPAqBiBF,UAAAgqB,MAAA9pB,EAAA,oGACjC,4EAGyCF,UAAAwuB,MAAAtuB,EAAA,oGACrC,uTAxGQF,UAAAyuB,MAAAvuB,EAAA,6bA6FiCF,UAAA0uB,MAAAxuB,EAAA,uHA2BZF,UAAA2uB,MAAAzuB,EAAA,iaA2BxCF,UAAA4uB,MAAA1uB,EAAA,oJAhLLtwB,EAAAqN,yBAAA,UAAArN,CAEC,WAEOA,EAAAiS,qBAAA,EAAAgtC,EAAA,gBAUJj/C,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAA4DzuB,EAAAsN,yBAC5DtN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAGC,cAHDA,CAGC,UAEOA,EAAAyuB,iBAAA,KAA4CzuB,EAAAsN,yBAE5CtN,EAAAiS,qBAAA,GAAAitC,EAAA,6CA2BAl/C,EAAAiS,qBAAA,GAAAktC,EAAA,6CA4BAn/C,EAAAqN,yBAAA,YAAArN,CAAkC,YAC9BA,EAAAyuB,iBAAA,OAAgBzuB,EAAAsN,yBAChBtN,EAAAqN,yBAAA,sBAKIrN,EAAAuN,iBAAA,uCACJvN,EAAAsN,wBAAAtN,GAGJA,EAAAqN,yBAAA,YAAArN,CAAyC,YAAzCA,CAAyC,YAEjCA,EAAAyuB,iBAAA,OAAsBzuB,EAAAsN,yBACtBtN,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAiBzH,EAAAgH,KAAAe,WAAA,CAAAM,KAAAZ,GAAiC,GAOrDjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAA0B,YACtBA,EAAAyuB,iBAAA,OAAoBzuB,EAAAsN,yBACpBtN,EAAAyJ,oBAAA,0BAUJzJ,EAAAsN,wBAAAtN,GAGJA,EAAAiS,qBAAA,GAAAmtC,EAAA,cAKJp/C,EAAAsN,yBACAtN,EAAAqN,yBAAA,gBAAArN,CAAqC,WACjCA,EAAAyuB,iBAAA,0CAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAA+B,aAC3BA,EAAAyuB,iBAAA,0CAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAiBzH,EAAAqJ,WAAA,CAAAiqC,SAAA7rC,GAAgC,kCAGrDjR,EAAAsN,wBAAAtN,KAGRA,EAAAiS,qBAAA,GAAAotC,EAAA,iDAoBJr/C,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAAqtC,EAAA,sBA5Jat/C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA60C,WAWTr+C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAvH,EAAAgH,MAMSxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAkF,GAAAjW,EAAA8V,sBAAA,MAAAtM,EAAA0M,YAAA,KAAAD,GAAA9Q,QA2BAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAuB,GAAAtS,EAAA8V,sBAAA,MAAAtM,EAAAqZ,SAAA,KAAAvQ,GAAAnN,QAAA,GAgCGnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,KAAAvH,EAAA+1C,UAEAv/C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAA8V,sBAAA,8BASI9V,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgH,KAAAhP,MAAAqQ,KAAA7R,CAA2B,iBAAAA,EAAA0R,0BAAA,GAAAisC,GAA3B39C,CAA2B,aAAAwJ,EAAAgH,KAAAhP,MAAA2vB,QAAA3nB,EAAAg1C,aAAA,GAA3Bx+C,CAA2B,WAAAwJ,EAAAg2C,SAA3Bx/C,CAA2B,WAAAwJ,EAAAgH,KAAAhP,MAAA2vB,SAc3BnxB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAA0uC,GAAAj2C,EAAAgH,KAAA/K,IAAA,cAAAg6C,GAAAj+C,MAAAxB,CAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,UAAhCA,CAAgC,WAAAwJ,EAAAg2C,SAAhCx/C,CAAgC,QAAAwJ,EAAAgH,KAAAhP,MAAA2vB,QAAA,cAWtCnxB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA+I,eASNvS,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAA3uB,EAAA8V,sBAAA,4BAAA9V,EAAA6uB,sBAAA,IAII7uB,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAA3uB,EAAA8V,sBAAA,gCAAA9V,EAAA6uB,sBAAA,IAGI7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAA2uC,GAAA1/C,EAAA8V,sBAAA,MAAAtM,EAAAuZ,UAAA,KAAA28B,GAAA5C,SAAA98C,CAAuC,iBAAAA,EAAA0R,0BAAA,GAAAisC,IAU9C39C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAA4uC,GAAA3/C,EAAA8V,sBAAA,MAAAtM,EAAAN,WAAA,KAAAy2C,GAAAx6C,QAoBJnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA60C,sfAeAjB,CAAoB,qLC3MjC,IAAArzC,EAAAnM,EAAA,OACAkc,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,UACAA,EAAA,wGAwC4BoC,EAAAqN,yBAAA,WAAArN,CAGC,cACaA,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,4BAElBA,EAAAyJ,oBAAA,6DAIIzJ,EAAA+Q,qBAAA,SAAA6uC,EAAAr0B,OAAA,0BAGAvrB,EAAAyJ,oBAAA,yEA5BhBzJ,EAAAqN,yBAAA,UAAArN,CAKC,eAKOA,EAAA8Q,qBAAA,uBAAA8uC,EAAA5/C,EAAAkR,wBAAA8d,GAAAjR,UAAAzH,EAAAtW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAgF,EAAAupC,WAAAD,GAAgB,GAEzB5/C,EAAAqN,yBAAA,YAGIrN,EAAAiS,qBAAA,EAAA6tC,EAAA,cAMA9/C,EAAAiS,qBAAA,EAAA8tC,EAAA,cAMA//C,EAAAiS,qBAAA,EAAA+tC,EAAA,0BAAAhgD,EAAAomB,kCAMJpmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAA6C,aAErCA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAAiD,kBACbA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACrCtN,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,uBAAA8uC,EAAA5/C,EAAAkR,wBAAA8d,GAAAjR,UAAAQ,EAAAve,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAiN,EAAA0c,UAAAxb,KAAAmgC,GAAoB,GAE7B5/C,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,uFA1DjBA,EAAA4f,sBAAA,mBAAA5N,EAAAmpB,SAAAykB,EAAArsC,IAaavT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAiB,EAAAqN,SAAAtZ,SAAA65C,EAAArsC,KAMAvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA6uC,EAAAr0B,OAAA,KAAAq0B,EAAAr0B,OAAApmB,OAAAnF,CAA2B,WAAA0V,GAa5B1V,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAmyC,EAAAnsC,MAAAmsC,EAAArsC,IAAA,YAKIvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAAmyC,EAAA9rC,KAAA,KAAA8rC,EAAA9rC,KAAA2B,gBAAA,MAAAmqC,EAAA9rC,KAAA,KAAA8rC,EAAA9rC,KAAAL,OAAA,kBAcZzT,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,gBAAA5N,EAAAiqB,YAAA2jB,EAAArsC,KAGUvT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAApC,EAAAiqB,YAAA2jB,EAAArsC,IAAA,wDA9DtBvT,EAAAqN,yBAAA,UAIIrN,EAAAiS,qBAAA,EAAAguC,EAAA,4CAiEJjgD,EAAAsN,kEA/DyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAc,EAAA6d,OAAA,2BAP7Bz0B,EAAAyhB,kCAAA,GACIzhB,EAAAiS,qBAAA,EAAAiuC,EAAA,0CAsEJlgD,EAAA4hB,0GApES5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAyQ,EAAAxhB,EAAA8V,sBAAA,IAAAzD,EAAAoiB,QAAA,KAAAjT,EAAArc,OAAAnF,CAA+B,WAAAqtB,EAAA,wBAsEpCrtB,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,UAAsBrN,EAAAuN,iBAAA,gCAA0BvN,EAAAsN,wBAAAtN,UADnCA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,sCAKjB/Q,EAAAqN,yBAAA,WAAArN,CAGC,UAEOA,EAAAuN,iBAAA,0DACJvN,EAAAsN,wBAAAtN,IAKHN,oBAAiB,eAAjBygD,EAAiB,WAiB1B,SAAAA,EAAoBpmC,GAA0B,IAAA3Y,EAAAtB,KAAAD,EAAAC,KAAAqgD,GAA1BrgD,KAAAia,SAhBJja,KAAAq7B,OAAiB,GACjBr7B,KAAAuf,SAAmB,GACnBvf,KAAAu5B,UAAsB,GACrBv5B,KAAAy8B,SAAW,IAAIxyB,EAAAwV,aACfzf,KAAAm7B,UAAY,IAAIlxB,EAAAwV,aAEjBzf,KAAA20B,SAAQ3a,EAAAgJ,eAAc,CAClChjB,KAAKia,OAAOgJ,QACZjjB,KAAKia,OAAOuxB,sBACbroC,QACC7C,EAAA0b,KAAI,SAAA1V,GAAA,IAAA8B,EAAA8a,EAAA5c,EAAA,GAAI02C,EAAQ50C,EAAA,GAAR40C,SAAa,OAAA50C,EAAA,GACf8T,OAAO,SAAC6W,GAAC,OAAMiqB,GAAY17C,EAAK66B,YAAYpJ,EAAEtf,GAAG,EAAC,IAG5CzT,KAAAujB,QAAUvjB,KAAKia,OAAOsJ,OAEW,CAACzjB,SAAAugD,EAAA,EAAA5+C,IAAA,cAAAC,MAE3C,SAAY4+C,GACf,OAAOtgD,KAAKu5B,UAAUtzB,SAASq6C,EACnC,GAAC,CAAA7+C,IAAA,aAAAC,MAEM,SAAW4R,GACdtT,KAAKy8B,SAAS9c,KAAKrM,EACvB,KAAC+sC,CAAA,CAzByB,GAAjBA,SAAiB,mBAAApgD,iBAAjBogD,GAAiBngD,EAAAwI,4BAAAC,EAAAoI,oBAAA,EAAjBsvC,EAAiB,UAAAngD,EAAA,kCAAjBmgD,EAAiBl3C,UAAA,gBAAAyW,OAAA,CAAAyb,OAAA,SAAA9b,SAAA,WAAAga,UAAA,aAAA1Z,QAAA,CAAA4c,SAAA,WAAAtB,UAAA,aAAA7xB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,kCAjGKgjB,UAAAC,MAAAC,EAAA,qIACmBF,UAAAG,MAAAD,EAAA,oHAC1C,+pDAFJtwB,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAAkCzuB,EAAAsN,yBAClCtN,EAAAqN,yBAAA,SAAArN,EAAAyuB,iBAAA,mCAEAzuB,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAouC,EAAA,oDAwEArgD,EAAAiS,qBAAA,EAAAquC,EAAA,yBAAAtgD,EAAAomB,kCASApmB,EAAAiS,qBAAA,EAAAsuC,EAAA,yBAAAvgD,EAAAomB,6EAlFApmB,EAAAwN,oBAAA,GAAAxN,EAAA2uB,qBAAA,OAAAnN,EAAAxhB,EAAA8V,sBAAA,IAAAtM,EAAAirB,QAAA,KAAAjT,EAAArc,SAAA,GAAAnF,EAAA6uB,sBAAA,GACe7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAA0N,EAAAze,EAAA8V,sBAAA,IAAAtM,EAAA6Z,WAAA5E,EAAAtZ,QAAAnF,CAAkC,WAAAiuB,EAAA,uTA6F5CkyB,CAAiB,mMCpH9B,IAAAp2C,EAAAnM,EAAA,OAQA0C,EAAA1C,EAAA,OACAwC,EAAAxC,EAAA,OAGAkc,GADAlc,EAAA,OACAA,EAAA,QACA4iD,EAAA5iD,EAAA,OACA6iD,EAAA7iD,EAAA,UAEAA,EAAA,qJA8BoBoC,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAA2vC,GAEA1gD,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAizC,EAAAjrC,cAAAirC,EAAAjtC,KAAA,8CAiCX/T,mBAAiB,eAAjBihD,EAAiB,SAAAhgD,GAAAC,EAAA+/C,EAAAhgD,GAAA,IAAAG,EAAAC,EAAA4/C,GA8E1B,SAAAA,EACY5mC,EACA/Y,EACAC,GAAyB,IAAAG,EAAAvB,SAAAC,KAAA6gD,IAEjCv/C,EAAAN,EAAAO,KAAAvB,OAJQia,SACA3Y,EAAAJ,YACAI,EAAAH,OAhFIG,EAAAw/C,cAAwB,EACxBx/C,EAAA+5B,OAAS,GACR/5B,EAAAm7B,SAAW,IAAIxyB,EAAAwV,aAEhBne,EAAAqzB,MAAQrzB,EAAK2Y,OAAOuxB,oBACpBlqC,EAAAiiB,QAAUjiB,EAAK2Y,OAAOsJ,QAE/BjiB,EAAA4mB,KAAO,EACP5mB,EAAAy/C,OAAS,CAAEjL,EAAG,GAAKC,EAAG,IAGrBz0C,EAAA0/C,QAAU,IAAIhnC,EAAAqB,gBAAgB,GAEtB/Z,EAAAyhB,OAASzhB,EAAKH,KAAKs9C,cACnBn9C,EAAAyR,WAAa,SAACyQ,GAAC,OAAKliB,EAAK2Y,OAAOlH,WAAWyQ,EAAE,EAM7CliB,EAAA2/C,QAAU3/C,EAAK2Y,OAAOuxB,oBAAoBroC,QACtD7C,EAAA0b,KAAI,SAAC2Y,GAAK,OACNA,EAAM3Y,IAAI,SAAC1I,GAAI,MAAM,CACjBG,GAAIH,EAAKM,QAAUN,EAAKG,GACxB4T,OAAQ,CAAC,WAAY,WACrBC,SAAU,kBAAMhmB,EAAKy+C,WAAWzsC,EAAY,EAC/C,EAAE,IAIKhS,EAAA8H,SAAW9H,EAAK2Y,OAAOhD,UAAU9T,QAC7C7C,EAAA0b,KAAI,SAAC2Y,GACD,OAAOrzB,EAAKJ,UAAUyE,IAAI,uBACpB,GACAgvB,EAAM3Y,IAAI,SAAC1I,GAAI,MAAM,CACjBvN,SAAUuN,EAAKG,GACfsU,QAAS44B,EAAAO,yBACTC,WAAW,EACXC,UAAU,EACVt+C,KAAM,CACF2Q,GAAIH,EAAKM,QAAUN,EAAKG,GACxBG,OAAQN,EAAKK,KACbA,KAAML,EAAKK,MAAQL,EAAKM,OACxB6Z,KAAMnsB,EAAK2Y,OAAOonC,iBAAiB/tC,EAAKG,KAE5CwU,QAAS,GACZ,EACX,IAGY3mB,EAAA6mB,UAASnO,EAAAgJ,eAAc,CACnC1hB,EAAK2Y,OAAOhD,UACZ3V,EAAK2Y,OAAOuxB,oBACZlqC,EAAK0/C,UACN79C,QACC7C,EAAA0b,KAAI,SAAA1V,GAAA,IAAA8B,EAAA8a,EAAA5c,EAAA,GAASg7C,EAAUl5C,EAAA,UAAZA,EAAA,GACDg1B,OAAO,SAACjV,EAAQ7U,GAClB,IAAMiuC,EAAUjgD,EAAKJ,UAAUyE,IAAI,uBAAyB,GACtD2gC,EACFhlC,EAAK+5B,SAAW/nB,EAAKG,GACf,SACA6tC,EAAWpxB,KAAK,SAAC7sB,GAAC,OAAKA,EAAEoQ,KAAOH,EAAKG,EAAE,GACvC,OACA,OACV0U,SAAM,IAAA/jB,OAAKkP,EAAKM,QAAUN,EAAKG,KAAQ,CACnC+tC,KACe,WAAXlb,EACM,UACAib,EAAO,QAAAn9C,OAASkiC,KAChBib,EAAO,GAAAn9C,OAAIkiC,KACXoa,EAAAe,gBAAe,GAAAr9C,OAAIkiC,KAE1Bne,CACX,EAAG,GAAG,IAEZ7mB,CAQF,CAACxB,SAAA+gD,EAAA,EAAAp/C,IAAA,UAAAkE,IAnED,WAAkB,IAAA+7C,EACd,OAAiB,QAAVA,EAAA1hD,KAAKkX,aAAK,IAAAwqC,OAAA,EAAVA,EAAY9tC,SAAU,EACjC,GAAC,CAAAnS,IAAA,WAAAC,MAmEM,WAAQ,IAAAyD,EAAAnF,KACXA,KAAKiT,aACD,gBACAjT,KAAK+iB,OAAO5P,UAAU,SAAC4P,GAC+B,IAAA4+B,EAA7C5+B,EAAOmN,KAAK,SAAC7sB,GAAC,IAAAu+C,EAAA,OAAKv+C,EAAEoQ,MAAiB,QAAfmuC,EAAKz8C,EAAK+R,aAAK,IAAA0qC,OAAA,EAAVA,EAAYnuC,GAAE,KAC3CtO,EAAK+R,MAAQ6L,EAAO,GACpB5d,EAAK4N,WAAW,CAAE84B,QAAmB,QAAZ8V,EAAEx8C,EAAK+R,aAAK,IAAAyqC,OAAA,EAAVA,EAAYluC,KAE/C,IAEJzT,KAAKiT,aACD,iBACAjT,KAAKia,OAAOgJ,QAAQ9P,UAAU,SAAAgQ,GAAgB,IAAA0+B,EAAbhW,EAAO1oB,EAAP0oB,QACzBA,GAAWA,KAAsB,QAAfgW,EAAK18C,EAAK+R,aAAK,IAAA2qC,OAAA,EAAVA,EAAYpuC,MACnCtO,EAAK+R,MAAQ/R,EAAKhE,KAAK4hB,OAAOmN,KAAK,SAAC7sB,GAAC,OAAKA,EAAEoQ,KAAOo4B,CAAO,GAElE,GAER,GAAC,CAAApqC,IAAA,cAAAC,MAEM,SAAYw4B,GACXA,EAAQmB,QAAQr7B,KAAKghD,QAAQx+C,KAAKiY,KAAKuX,MAC/C,GAAC,CAAAvwB,IAAA,aAAAC,MAEM,SAAW4R,GACdtT,KAAKy8B,SAAS9c,KAAKrM,EACvB,GAAC,CAAA7R,IAAA,UAAAC,MAEM,SAAQogD,GACX9hD,KAAKkoB,KAAO8f,KAAKiQ,IAAI,GAAKjQ,KAAK+Z,IAAI,GAAID,GAC3C,GAAC,CAAArgD,IAAA,WAAAC,MAEM,WACH1B,KAAKkoB,KAAO,EACZloB,KAAK+gD,OAAS,CAAEjL,EAAG,GAAKC,EAAG,GAC/B,KAAC8K,CAAA,CAzHyB,CAAQrgD,EAAAiI,cAAzBo4C,SAAiB,mBAAA5gD,iBAAjB4gD,GAAgB3gD,EAAAwI,4BAAAC,EAAAoI,oBAAA7Q,EAAAwI,4BAAAG,EAAAD,iBAAA1I,EAAAwI,4BAAAK,EAAAD,qBAAA,EAAhB+3C,EAAiB,UAAA3gD,EAAA,kCAAjB2gD,EAAgB13C,UAAA,eAAAyW,OAAA,CAAAkhC,aAAA,eAAAzlB,OAAA,UAAAxb,QAAA,CAAA4c,SAAA,YAAArzB,SAAA,CAAAlJ,EAAAmJ,qCAAAnJ,EAAA+6B,gCAAA3xB,MAAA,GAAAC,KAAA,GAAA+D,OAAA,+oBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAhDrBvJ,EAAAqN,yBAAA,UAAArN,CAA0D,qBAA1DA,CAA0D,kBAO9CA,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAwN,MAAA/F,CAAA,EAAAjR,CAAmB,yBAAAiR,GAAA,OAEFzH,EAAAqJ,WAAA,CAAA84B,QAAA16B,EAAAsC,IAAkC,GAEnDvT,EAAAiS,qBAAA,EAAA6vC,EAAA,kDAMJ9hD,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,UAAArN,CAAoC,aAG5BA,EAAA8Q,qBAAA,sBAAAG,GAAA,OAAAzH,EAAAwe,KAAA/W,CAAA,EAAAjR,CAAe,wBAAAiR,GAAA,OAAAzH,EAAAq3C,OAAA5vC,CAAA,6FAKlBjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,WAAArN,CAGC,eACkCA,EAAA8Q,qBAAA,0BAAStH,EAAAu4C,QAAe,IAAfv4C,EAAAwe,KAAmB,GACvDhoB,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,GAErBA,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAAgCrN,EAAA8Q,qBAAA,0BAAStH,EAAAu4C,QAAAv4C,EAAAwe,MAAgB,EAAI,KAAK,GAC9DhoB,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,eAAQvN,EAAAsN,wBAAAtN,GAEtBA,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,gBAA6BrN,EAAA8Q,qBAAA,0BAAStH,EAAAw4C,UAAU,GAC5ChiD,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,YApCbA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAwN,MAAAhX,CAAmB,iBAAAA,EAAA0R,0BAAA,GAAAC,IAKC3R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAtM,EAAAqZ,SAUxB7iB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,MAAAvH,EAAAsoC,QAAA9xC,CAAe,OAAAwJ,EAAAwe,KAAfhoB,CAAe,SAAAwJ,EAAAq3C,OAAf7gD,CAAe,WAAAA,EAAA8V,sBAAA,KAAAtM,EAAAN,UAAflJ,CAAe,SAAAA,EAAA8V,sBAAA,KAAAtM,EAAAye,QAAfjoB,CAAe,UAAAA,EAAA8V,sBAAA,KAAAtM,EAAAu3C,4YA0BlBJ,CAAiB,mNClF9B,IAAA7yC,EAAAlQ,EAAA,UACAA,EAAA,OACAA,EAAA,qMAwDoBoC,EAAAqN,yBAAA,kBAKIrN,EAAA8Q,qBAAA,qBAAAG,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,0BAAA,OAAarR,EAAAsR,sBAAAF,EAAA+nB,gBAAAloB,GAAuB,EAApCjR,CAAqC,oBAAAiR,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAa,EAAAhS,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAU,EAAAgrB,UAAA/rB,EAAA,GAGxCjR,EAAAsN,wBAAA,2CANGtN,EAAA+Q,qBAAA,eAAAsB,EAAA2qB,UAAA,KAAA3qB,EAAA2qB,UAAAzpB,GAAAvT,CAAwB,WAAAqS,EAAA8qB,aAAxBn9B,CAAwB,YAAAqS,EAAAgnB,UAAA,+DAwBhCr5B,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+wC,GAAA,IAAApgC,EAAA7hB,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAuQ,EAAAmb,UAAqB,KAAI,GAN7Bh9B,EAAAyuB,iBAAA,MAUAzuB,EAAAsN,wBAAA,+DAuDJtN,EAAAqN,yBAAA,iBAIIrN,EAAA8Q,qBAAA,oBAAAG,GAAAjR,EAAAkR,wBAAAwE,GAAA,IAAAC,EAAA3V,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAqE,EAAAqnB,UAAA/rB,EAAA,GAEJjR,EAAAsN,wBAAA,2CAJItN,EAAA+Q,qBAAA,iBAAAa,EAAAorB,UAAAh9B,CAA4B,eAAA4R,EAAAorB,UAAA,KAAAprB,EAAAorB,UAAAzpB,GAAA,EA/I/B7T,eAAe,kBAuJfA,2BAAwB,eAAxB67C,EAAwB,WAajC,SAAAA,EACY2G,EACAlhD,EACAkuB,EAEAirB,GAGPt6C,EAAAC,KAAAy7C,GAPOz7C,KAAAoiD,cACApiD,KAAAkB,YACAlB,KAAAovB,cAEApvB,KAAAq6C,QAhBLr6C,KAAAuf,SAA2B,GAC3Bvf,KAAAm9C,KAAO,OAoBVn9C,KAAKuf,SAAQ8D,EAAQg3B,EAAM3gB,OAAS,IACpC15B,KAAKovB,YAAYrc,WAAWsnC,EAAMp3B,QACtC,CAACnjB,SAAA27C,EAAA,EAAAh6C,IAAA,eAAAkE,IApBD,WACI,OAAO3F,KAAKuf,SAASvD,IAAI,SAAC3Y,GAAC,OAAKA,EAAEoQ,EAAE,GAAEsB,KAAK,IAC/C,GAAC,CAAAtT,IAAA,YAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAc/F,EAAA47C,eAAiB,EACzD,GAAC,CAAA/5C,IAAA,aAAAC,MAgBM,SAAW+R,GACd,OAAOA,GAAMzT,KAAKq9B,aAAap3B,SAASwN,EAC5C,GAAC,CAAAhS,IAAA,cAAAC,MAEM,SAAYya,EAAoBmhB,GACnC,IAAMlqB,EAAOpT,KAAKuf,SAASrD,OAAO,SAAC7Y,GAAC,OAAKA,EAAEoQ,KAAO0I,EAAK1I,EAAE,GACrD6pB,GAAOlqB,EAAK6jB,KAAK9a,GACrBnc,KAAKuf,SAAWnM,GACXpT,KAAKq6C,MAAMp3B,QAAQyV,OAAS4E,GAAOt9B,KAAKoiD,YAAYp6C,MAAM,CAACmU,GACpE,GAAC,CAAA1a,IAAA,kBAAAC,MAEM,SAAgBya,GACnB,IAAMse,EAAWz6B,KAAKu5B,UAChBmB,GAAaD,EAASx0B,SAASkW,EAAK1I,IAEtCzT,KAAKkB,UAAUy5B,gBAAgB/6B,EAAA47C,aAD/B9gB,EAC2C,GAAAt2B,OAAAif,EACpCoX,GAAQ,CACXte,EAAK1I,KAKLgnB,EAASve,OAAO,SAAC7Y,GAAC,OAAKA,IAAM8Y,EAAK1I,EAAE,GAGhD,KAACgoC,CAAA,CApDgC,GAAxBA,SAAwB,mBAAAx7C,iBAAxBw7C,GAAwBv7C,EAAAwI,4BAAAC,EAAA05C,cAAAniD,EAAAwI,4BAAAG,EAAAD,iBAAA1I,EAAAwI,4BAAAK,EAAAgI,oBAAA7Q,EAAAwI,4BAiBrBsF,EAAAwvB,iBAAe,EAjBlBie,EAAwB,UAAAv7C,EAAA,kCAAxBu7C,EAAwBtyC,UAAA,wBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,wOA1IZgjB,UAAAC,MAAAC,EAAA,k4CAkFRF,UAAAG,MAAAD,EAAA,sXAgBwCF,UAAAI,MAAAF,EAAA,uHAGNF,UAAAM,MAAAJ,EAAA,kHAC/B,gGAc2BF,UAAAO,MAAAL,EAAA,oGACnB,yOA9CXF,UAAAgqB,MAAA9pB,EAAA,2LA9ETtwB,EAAAqN,yBAAA,UAAArN,CAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAEnBA,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,KAAkBzuB,EAAAsN,yBAClBtN,EAAAqN,yBAAA,UAAArN,CAA4D,cAOpDA,EAAA8Q,qBAAA,0BAAAtH,EAAAyzC,KAAgB,KAAK,GAErBj9C,EAAAuN,iBAAA,WACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,0BAAAtH,EAAAyzC,KAAgB,MAAM,GAEtBj9C,EAAAuN,iBAAA,aACJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,aAGIrN,EAAAyJ,oBAAA,qBAGAzJ,EAAAqN,yBAAA,WAAArN,CAEC,8BAGOA,EAAA8Q,qBAAA,sBAAAG,GAAA,OAAAzH,EAAAyzC,KAAAhsC,CAAA,GACHjR,EAAAsN,yBACDtN,EAAAiS,qBAAA,GAAAmwC,EAAA,oBASJpiD,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAOIrN,EAAA8Q,qBAAA,wBAAAG,GAAA,OAAgBzH,EAAA+zB,YAAA/zB,EAAAwzB,UAAA/rB,EAA8B,EAA9CjR,CAA+C,8BAElCwJ,EAAA2vB,gBAAA3vB,EAAAwzB,UAA0B,EAFvCh9B,CAA+C,0BAAAwJ,EAAAwzB,UAG1B,IAAI,GAC5Bh9B,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,gBAGIrN,EAAAiS,qBAAA,GAAAowC,EAAA,iBAWAriD,EAAAqN,yBAAA,gBAAArN,EAAAyuB,iBAAA,OAUAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBASqCA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,OAA6CzuB,EAAAsN,wBAAAtN,KAGrDA,EAAAqN,yBAAA,WAAArN,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,0BAAStH,EAAA+zB,YAAA/zB,EAAAwzB,WAAwBxzB,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IAA0B,GAE3DvT,EAAAqN,yBAAA,YAAArN,CAA+B,kBACDA,EAAAuN,iBAAA,IAExBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,OAMAzuB,EAAAsN,wBAAAtN,SAKhBA,EAAAiS,qBAAA,GAAAqwC,EAAA,0BAAAtiD,EAAAomB,0EAxHgBpmB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,kBAAApW,EAAAyzC,MAUAj9C,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,mBAAApW,EAAAyzC,MAkBAj9C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAyzC,MAGCj9C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAvH,EAAAyzC,KAAAj9C,CAAuB,WAAAumB,GAY5BvmB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,UAAApW,EAAAwzB,UAAAh9B,CAA2B,UAAAwJ,EAAAwzB,WAF3Bh9B,EAAA+Q,qBAAA,OAAAvH,EAAAwzB,UAAAh9B,CAAkB,SAAAwJ,EAAA2zB,aAAAp3B,SAAA,MAAAyD,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IAAlBvT,CAAkB,mBAAAwJ,EAAAyzC,KAAlBj9C,CAAkB,MAAAwJ,EAAAwzB,WAAAxzB,EAAA6vB,UAAAtzB,SAAA,MAAAyD,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,KAoBjBvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAwzB,WAWDh9B,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,OAAApW,EAAAwzB,WADAh9B,EAAA+Q,qBAAA,mBAAAvH,EAAA6V,UAeArf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAvH,EAAA6V,UAUJrf,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAnlB,EAAA6V,SAAAla,QAAAnF,EAAA6uB,sBAAA,IAMI7uB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,UAAApW,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,KADAvT,EAAA+Q,qBAAA,YAAAvH,EAAAwzB,WAK8Bh9B,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA5K,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IAAA,gBAS1BvT,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAnlB,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IAAA,wCAAAvT,EAAA6uB,sBAAA,8MAgBX0sB,CAAwB,+LC/JrC39C,EAAA,WACA0C,EAAA1C,EAAA,OAMAyzB,EAAAzzB,EAAA,OACAwC,EAAAxC,EAAA,OAMA+/B,GAJA//B,EAAA,OAIAA,EAAA,QACA2kD,EAAA3kD,EAAA,OACA2sC,EAAA3sC,EAAA,wCAKa8B,eAAY,eAAZ8iD,EAAY,WAIrB,SAAAA,EACYvhD,EACAmX,GAAkBvY,EAAAC,KAAA0iD,GADlB1iD,KAAAmB,OACAnB,KAAAsY,UALLtY,KAAAi6C,cAAe,EACfj6C,KAAA2iD,eAAgB,CAKpB,CAAC7iD,SAAA4iD,EAAA,EAAAjhD,IAAA,WAAAC,OAAAkhD,EAAAjhD,EAEG,SAAA2E,GAAA,IAAAhF,EAAAtB,KACH20B,EAAKruB,EAALquB,MACAhgB,EAAIrO,EAAJqO,KACA4a,EAAMjpB,EAANipB,OACA7Y,EAASpQ,EAAToQ,UACA3E,EAAIzL,EAAJyL,KAAI,OAAAnQ,IAAAC,KAAA,SAAAC,IAAA,IAAA+gD,EAAA3rC,EAAAwB,EAAAyhC,EAAAvhC,EAAA,OAAAhX,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAQAlB,EAAKqhD,eAAkBhuC,EAAI,CAAArS,EAAAE,KAAA,eAAAF,EAAAqB,OAAA,YACpBnD,EAAAqU,aAAY,8CAA4C,OAE/DF,EAAOA,MAAQnU,EAAAsG,eAAc,OAEjCyoB,SAASA,GAAU,GACbrY,EAAQ5V,EAAKH,KAAK8uB,YACpB0E,EAAM,GAAG3gB,gBAAgBo3B,MAAQzW,EAAM,GAAG3gB,KAAO,CAAc,QAAd6uC,EAACluB,EAAM,GAAG3gB,YAAI,IAAA6uC,OAAA,EAAbA,EAAepvC,KAEjEiF,EAAyBpX,EAAKgX,QAAQrD,KACtCw1B,EAAAqG,6BACHxuC,EAAAE,KAAA,GACmBwB,QAAQ+sC,KAAK,CAC7Br4B,EAAIM,kBAAkB8V,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAc,MAAkB,SAAbA,EAAEksB,MAAiB,IAClDjsB,YACLoV,EACKI,cACA3V,QAAK7C,EAAA0b,KAAI,SAAC3Y,GAAC,OAAK,IAAI,IACpBC,cACP,QARS,GAAAhB,EAAA4B,KASC,CAAA5B,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,kBACZ+U,SAAI1Q,QACJ0Q,EAAMpX,EAAKgX,QAAQrD,KAAKwtC,EAAArI,0BAA2B,CAC/Ct3C,KAAM,CACF6R,OACAggB,QACA5iB,KAAMA,EAAO,IAAI0I,KAAK1I,GAAQ,IAAI0I,KAClC8U,SACArY,QACA+iC,aAAc34C,EAAK24C,gBAExB33C,EAAAE,KAAA,GACawB,QAAQ+sC,KAAK,CACzBr4B,EAAIM,kBAAkB8V,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAc,MAAkB,SAAbA,EAAEksB,MAAiB,IAClDjsB,YACLoV,EACKI,cACA3V,QAAK7C,EAAA0b,KAAI,SAAC3Y,GAAC,OAAK,IAAI,IACpBC,cACP,QARK,GAAAhB,EAAA4B,KASK,CAAA5B,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,kBAGoC,GADhDoO,EAAO2G,EAAIM,kBAAkBjH,MAAQA,EACrCwd,EAAS7W,EAAIM,kBAAkBuW,QAAUA,EAFzC5a,EAAO+D,EAAIM,kBAAkBrE,MAAQA,EAG5B,CAAArS,EAAAE,KAAA,SACLkW,SAAI1Q,QAAQ1F,EAAAqB,OAAA,YACLnD,EAAAqU,aAAY,+CAA6C,QAEpE6D,SAAIM,kBAAkBuK,QAClB,yCAAyCjhB,EAAAE,KAAA,MACtBq7B,EAAAzJ,eAAc,CACjCphB,KAAM,OACN+gB,gBAAcxC,EAAAyC,gBAAYzC,EAAA0C,YAAWliB,GAAQ,IAAI0I,OACjDyZ,cAAY3C,EAAAyC,gBAAYzC,EAAA4C,UAASpiB,GAAQ,IAAI0I,SAC9CnX,YAAW,QAGb,GACY,OAHP62C,EALQ73C,EAAA4B,KAKagY,OACvB,SAACnD,GAAC,OAAKA,EAAE+qB,WAAWpQ,gBAAkB/e,EAAK3N,MAAM0sB,aAAa,MAE9DymB,EAAW90C,OAAM,CAAA/C,EAAAE,KAAA,SACjBkW,SAAI1Q,QAAQ1F,EAAAqB,OAAA,YACLnD,EAAAqU,aACH,oEACH,QAEL6D,SAAIM,kBAAkBuK,QAAU,kBAC1B3K,EAAK,CAAIjE,GAAIvQ,OAAAif,EAAM3M,GAAa,KAAEpU,EAAAE,KAAA,GAClCwB,QAAQumB,IAAI,CACdoK,EAAM3Y,IAAI,SAAC1I,EAAMo9B,GAAG,OAChBpvC,EAAKwhD,gBACDxvC,EACAqB,EACA5C,EAAKgkB,YAAO,IAAUtb,MAAOsb,UAC7BxG,EACA3W,EAAM83B,GACT,KAEP,QACF,SAAAlwC,EAAAopC,eAAc,4BACdlxB,EAAI1Q,QAAQ1F,EAAAqB,OAAA,UACL,GAAI,yBAAArB,EAAAwC,OAAA,EAAAhD,EAAA,EAzFPF,EAyFO,GACd,SAAAmhD,EAAA1lC,GAAA,OAAAulC,EAAA59C,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,kBAAAC,MAAA,eAAAshD,EAAArhD,EAEO,SACJ2R,EACAqB,EACA5C,EACAwd,GAAc,IAAApqB,EAAAnF,KACdijD,EAAAh+C,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,KAAI,OAAArD,IAAAC,KAAA,SAAA0D,IAAA,IAAAgO,EAAAC,EAAA0vC,EAAAC,EAAAp9C,EAAAmR,EAAAnD,EAAA65B,EAAA,OAAAhsC,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAEfuD,SAAQ,GAAA3B,OAAe,QAAfmP,EAAMD,EAAKU,YAAI,IAAAT,OAAA,EAATA,EAAWI,KAAI,KAAAvP,OAAIkP,EAAKG,IACtCyD,EAAQ/R,EAAKhE,KAAK8uB,YACpB3c,EAAKU,gBAAgBo3B,MAAQ93B,EAAKU,KAAO,CAAU,QAAVR,EAACF,EAAKU,YAAI,IAAAR,OAAA,EAATA,EAAWC,KAEnDM,EAAiB,QAATmvC,EAAA5vC,EAAKU,YAAI,IAAAkvC,GAATA,EAAWzvC,GACnB,CAAU,QAAV0vC,EAAC7vC,EAAKU,YAAI,IAAAmvC,OAAA,EAATA,EAAW1vC,GAAIyD,GAAOjD,WACvB,CAACiD,GAAOjD,WACR25B,EAAe,CACjBtE,iBAAe/X,EAAAyC,gBAAYzC,EAAA0C,YAAWliB,IACtCs9B,QAAS4T,GAAUxvC,IAAMkB,EAAKlB,GAC9Bq4B,UAAWmX,GAAUtvC,MAAQgB,EAAKhB,KAClCmwB,WAAYmf,GAAUj8C,OAAS2N,EAAK3N,MACpCuiC,YAAavB,KAAKC,SAAM1W,EAAA4C,UAASpiB,GAAMgkB,UAAY,KACnD7kB,SAAUoC,EAAKG,GACfC,WAAYJ,EAAKK,KACjBnS,MAAO+tB,EACP1b,YAAa9N,EACbgO,QACAD,aAAc,OACdmiB,eAAgB,CACZriB,OAAQN,GAAMM,QAAUN,GAAMG,GAC9BytB,OAAQ5tB,EAAK4tB,OACb+hB,SAAUA,GAAUj8C,QAE3BvB,EAAA9B,OAAA,YACMk6B,EAAAuR,aAAYxB,GAAqBtqC,aAAW,wBAAAmC,EAAAX,OAAA,EAAAS,EAAA,EA3B9B3D,EA2B8B,GACtD,gBAAAkhD,EAAA3rB,EAAAqO,EAAAC,EAAAC,GAAA,OAAAsd,EAAAh+C,MAAAhF,KAAAiF,UAAA,EAnCA,MAmCAy9C,EApIG,IAAAE,CAoIH,CA3IoB,GAAZF,SAAY,mBAAAziD,iBAAZyiD,GAAYxiD,EAAAwd,mBAAA/U,EAAAG,qBAAA5I,EAAAwd,mBAAA7U,EAAAuQ,WAAA,EAAZspC,EAAY,WAAAxiD,EAAA,oCAAZwiD,EAAY/kC,QAAZ+kC,EAAY9kC,UAAAC,WAFT,SAEH6kC,CAAY,mWCtBzB,IAAAz4C,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OACAwC,EAAAxC,EAAA,OAEA0C,EAAA1C,EAAA,OACAslD,EAAAtlD,EAAA,OACAulD,EAAAvlD,EAAA,OAIAw6C,GAHAx6C,EAAA,OACAA,EAAA,OAEAA,EAAA,wNA+BgCoC,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,oDAHItN,EAAA+Q,qBAAA,QAAAqyC,GAAA7vC,IAEAvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA21C,GAAA3tC,cAAA2tC,GAAA3vC,KAAA,iHAnBhBzT,EAAAqN,yBAAA,WAAArN,CAAyD,cACrDA,EAAAg5B,sBAAA,MACYh5B,EAAAyJ,oBAAA,UACZzJ,EAAAi5B,sBAAAj5B,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAAArN,CAAqC,mBAG7BA,EAAA8Q,qBAAA,yBAAAG,IAAAjR,EAAAkR,wBAAA8d,IAAA,IAAA1Y,GAAAtW,EAAAqR,wBAAA,UAEhCrR,EAAAsR,sBAAAgF,GAAA9F,KAAAe,WAAA,CAAAsC,MAAA,CAAA5C,MACE,GAK8BjR,EAAAiS,qBAAA,EAAAoxC,GAAA,mDAMJrjD,EAAAsN,wBAAAtN,IAAa,8CAfTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA4E,GAAAnF,KAAAhP,MAAAqS,MAAA,GAAA7T,CAA+B,iBAAAA,EAAA0R,0BAAA,EAAAisC,KAUX39C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAH,GAAAO,WAAA,mEA6DpBlW,EAAAqN,yBAAA,mBAGIrN,EAAA8Q,qBAAA,uBAAAwyC,GAAAtjD,EAAAkR,wBAAAqyC,IAAAxlC,UAAAnG,GAAA5X,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAsG,GAAA4rC,WAAAF,IAAgB,GAEzBtjD,EAAAqN,yBAAA,WAAArN,CAAyC,SAChCA,EAAAuN,iBAAA,GAAevN,EAAAsN,yBACpBtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,GAMJvN,EAAAsN,wBAAAtN,IAAM,8BAZVA,EAAA+Q,qBAAA,QAAAuyC,GAAA7vC,MAISzT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAkvC,GAAA7vC,MAEDzT,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,IAAAyjC,GAAAx8C,MAAA,IAAAw8C,GAAAvM,QAAA,KAAAuM,GAAAvM,QAAA,2EAgCZ/2C,EAAAqN,yBAAA,mBAGIrN,EAAA8Q,qBAAA,uBAAA2yC,GAAAzjD,EAAAkR,wBAAAwyC,IAAA3lC,UAAA8C,GAAA7gB,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAuP,GAAA2iC,WAAAC,IAAgB,GAEzBzjD,EAAAqN,yBAAA,WAAArN,CAAyC,SAChCA,EAAAuN,iBAAA,GAAevN,EAAAsN,yBACpBtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,GAMJvN,EAAAsN,wBAAAtN,IAAM,8BAZVA,EAAA+Q,qBAAA,QAAA0yC,GAAA38C,OAIS9G,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAqvC,GAAAhwC,MAEDzT,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,IAAA4jC,GAAA38C,MAAA,IAAA28C,GAAA1M,QAAA,KAAA0M,GAAA1M,QAAA,2EAlExB/2C,EAAAyhB,kCAAA,GACIzhB,EAAAqN,yBAAA,WAAArN,CAA2B,cACvBA,EAAAg5B,sBAAA,MACiBh5B,EAAAyJ,oBAAA,UAAczJ,EAAAi5B,sBAAAj5B,EAAAsN,yBAE/BtN,EAAAqN,yBAAA,sBAAArN,CAAqC,cAM7BA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+Q,IAAA,IAAAC,GAAAliB,EAAAqR,wBAAA,UAEjCrR,EAAAsR,sBAAA4Q,GAAAyhC,eAAAzhC,GAAA1R,KAAAhP,MAAAgS,YACD,GAR8BxT,EAAAsN,wBAAAtN,GAWJA,EAAAqN,yBAAA,8BACIrN,EAAAiS,qBAAA,EAAA2xC,EAAA,qBAiBJ5jD,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA2B,eACvBA,EAAAg5B,sBAAA,OACiBh5B,EAAAyJ,oBAAA,WACjBzJ,EAAAi5B,sBAAAj5B,EAAAsN,yBACAtN,EAAAqN,yBAAA,uBAAArN,CAAqC,eAO7BA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+Q,IAAA,IAAA4hC,GAAA7jD,EAAAqR,wBAAA,UAE/BrR,EAAAsR,sBAAAuyC,GAAAF,eAAAE,GAAArzC,KAAAhP,MAAAwP,UACH,GAT8BhR,EAAAsN,yBAWAtN,EAAAqN,yBAAA,gBAAArN,EAAAyuB,iBAAA,OAC8BzuB,EAAAsN,wBAAAtN,GAGlCA,EAAAqN,yBAAA,+BACIrN,EAAAiS,qBAAA,GAAA6xC,GAAA,qBAiBJ9jD,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA2B,eACvBA,EAAAyuB,iBAAA,OAAsCzuB,EAAAsN,yBACtCtN,EAAAqN,yBAAA,wBACIrN,EAAAyJ,oBAAA,eAMJzJ,EAAAsN,wBAAAtN,GAERA,EAAA4hB,iCAAA,2GA1EgB5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAA0F,IAKiBzW,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAmP,GAAA6jC,mBAgCjB/jD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAAmG,IAQiBlX,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAmP,GAAA6jC,kBAAA,oEAvHrC/jD,EAAAqN,yBAAA,aACIrN,EAAAiS,qBAAA,EAAA+xC,GAAA,cAwBAhkD,EAAAqN,yBAAA,WAAArN,CAA2B,cACvBA,EAAAg5B,sBAAA,MAA2Bh5B,EAAAyJ,oBAAA,UAAczJ,EAAAi5B,sBAAAj5B,EAAAsN,yBACzCtN,EAAAyJ,oBAAA,qBAIJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAyC,WAAzCA,CAAyC,cAEjCA,EAAAg5B,sBAAA,OACch5B,EAAAyJ,oBAAA,WACdzJ,EAAAi5B,sBAAAj5B,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,IAAAjR,EAAAkR,wBAAA+yC,IAAA,IAAAC,GAAAlkD,EAAAqR,wBAAA,UAE7BrR,EAAAsR,sBAAA4yC,GAAA1zC,KAAAe,WAAA,CAAAM,KAAAZ,KACD,GAG2BjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAAwC,eACpCA,EAAAg5B,sBAAA,OACah5B,EAAAyJ,oBAAA,WAAczJ,EAAAi5B,sBAAAj5B,EAAAsN,yBAE3BtN,EAAAyJ,oBAAA,0BAMJzJ,EAAAsN,wBAAAtN,GAEJA,EAAAiS,qBAAA,GAAAkyC,GAAA,uBAyFAnkD,EAAAqN,yBAAA,YAAArN,CAA2B,eACvBA,EAAAyuB,iBAAA,OAAyCzuB,EAAAsN,yBACzCtN,EAAAqN,yBAAA,wBACIrN,EAAAyJ,oBAAA,eAMJzJ,EAAAsN,wBAAAtN,IAAiB,4EA9JNA,EAAA+Q,qBAAA,YAAAsP,GAAA7P,MACaxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAsP,GAAAnK,UAAA,KAAAmK,GAAAnK,UAAA/Q,QAAA,GAsChBnF,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,UAAAsP,GAAA7P,KAAAhP,MAAAqQ,KAAA7R,CAA2B,iBAAAA,EAAA0R,0BAAA,GAAAisC,IAA3B39C,CAA2B,WAAAqgB,GAAA7P,KAAAhP,MAAA2vB,QAA3BnxB,CAA2B,WAAAqgB,GAAAm/B,UAgB3Bx/C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsP,GAAA7P,KAAAhP,MAAAqQ,KAAA7R,CAAwB,WAAAqgB,GAAAm/B,UAKrBx/C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAsP,GAAA+jC,SAAApkD,CAAiB,WAAAmR,GAAA,oEArExCnR,EAAAqN,yBAAA,UAAArN,CAGC,UAHDA,CAGC,UAIOA,EAAAyuB,iBAAA,KAAwCzuB,EAAAsN,wBAAAtN,GAE5CA,EAAAiS,qBAAA,EAAAoyC,GAAA,gBAiKArkD,EAAAqN,yBAAA,WAAArN,CAEC,eAMOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAozC,IAAA,IAAAC,GAAAvkD,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAizC,GAAAC,aAAY,GALzBxkD,EAAAyuB,iBAAA,MASAzuB,EAAAsN,wBAAAtN,IAAS,8CA7KNA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8Q,GAAArR,KAAA,+BAVfxQ,EAAAyhB,kCAAA,GACIzhB,EAAAiS,qBAAA,EAAAwyC,GAAA,2CAyLJzkD,EAAA4hB,0GAvLS5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA8V,sBAAA,IAAAzD,GAAAgR,WAAAhR,GAAAqyC,aAAA1kD,CAA2C,WAAAqtB,GAAA,+DAgMpCrtB,EAAA2kD,6BAAA,8TAMA3kD,EAAA2kD,6BAAA,sPAUI3kD,EAAA2kD,6BAAA,8TAMA3kD,EAAA2kD,6BAAA,2PA7BhB3kD,EAAAqN,yBAAA,WAAArN,CAGC,WAHDA,CAGC,WAEOA,EAAAg5B,sBAAA,MAEIh5B,EAAAiS,qBAAA,EAAA2yC,GAAA,uBAMA5kD,EAAAiS,qBAAA,EAAA4yC,GAAA,uBAKJ7kD,EAAAi5B,sBAAAj5B,EAAAsN,yBACAtN,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,OAAArN,EAAAg5B,sBAAA,MAEIh5B,EAAAqN,yBAAA,OACIrN,EAAAiS,qBAAA,GAAA6yC,GAAA,uBAMA9kD,EAAAiS,qBAAA,GAAA8yC,GAAA,uBAKJ/kD,EAAAsN,qFAKJtN,EAAAi5B,sBAAAj5B,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAEC,YAFDA,CAEC,gBAQWA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8zC,IAAA,IAAAC,GAAAjlD,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA2zC,GAAAC,SAAQ,GAJrBllD,EAAAyuB,iBAAA,OAQAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,gBAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8zC,IAAA,IAAAG,GAAAnlD,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAA6zC,GAAAnhD,MAAgB,EAAK,GAJzBhE,EAAAyuB,iBAAA,OAQAzuB,EAAAsN,wBAAAtN,MAAS,6CAzDMA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAU,GAAA2yC,UAMApkD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAU,GAAA2yC,UAUIpkD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAU,GAAA2yC,UAMApkD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAU,GAAA2yC,UAUvBpkD,EAAAwN,oBAAA,GAAAxN,EAAA2uB,qBAAA,MAAAld,GAAAuE,SAAA,KAAAvE,GAAAuE,SAAAP,gBAAA,MAAAhE,GAAAuE,SAAA,KAAAvE,GAAAuE,SAAAvC,MAAAzT,CAAIA,EAAAsU,sBAAA,WAAA7C,GAAAyC,aAAA,KAAAzC,GAAAyC,aAAArC,KAAA,cAAJ7R,CAAIA,EAAAsU,sBAAA,YAAA7C,GAAAyC,aAAA,KAAAzC,GAAAyC,aAAArC,KAAAJ,GAAAie,cAAJ1vB,EAAA6uB,sBAAA,8BA+BR7uB,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAArN,EAAAyuB,iBAAA,MAA6BzuB,EAAAsN,wBAAAtN,WADhBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,6CAKjB/Q,EAAAqN,yBAAA,WAAArN,CAA8C,cAC1CA,EAAAg5B,sBAAA,MAAuCh5B,EAAAyJ,oBAAA,UAAczJ,EAAAi5B,sBAAAj5B,EAAAsN,yBACrDtN,EAAAyJ,oBAAA,0BAIJzJ,EAAAsN,mEAN2BtN,EAAA+Q,qBAAA,YAAAiB,GAAAxB,MAInBxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAOPrR,6BAA2B,eAA3B0lD,GAA2B,SAAAzkD,IAAAC,EAAAwkD,GAAAzkD,IAAA,IA+BnCE,GA/BmCC,GAAAC,EAAAqkD,IAiCpC,SAAAA,GACY/0C,GACArP,GACAC,IAAyB,IAAAG,GAAAvB,SAAAC,KAAAslD,KAEjChkD,GAAAN,GAAAO,KAAAvB,OAJQuQ,YACAjP,GAAAJ,aACAI,GAAAH,QAnCKG,GAAA82B,KAAO,IAAInuB,EAAAwV,aAErBne,GAAA4C,MAAO,EAEE5C,GAAAiiB,QAAUjiB,GAAKiP,SAASgT,QACjCjiB,GAAAsjD,cAAe,EACNtjD,GAAA8U,UAAY9U,GAAKH,KAAKq9C,iBAC/Bl9C,GAAA8S,aAAe9S,GAAKiP,SAAS6D,aAC7B9S,GAAAikD,WAAa,EACbjkD,GAAAmzB,SAAW,GACXnzB,GAAA2iD,kBAAoB,GAAG3iD,EA4B9B,CAACxB,SAAAwlD,GAAA,EAAA7jD,IAAA,WAAAkE,IA1BD,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,gCAC9B,GAAC,CAAAlE,IAAA,WAAAkE,IAED,WACI,OAAO3F,KAAKmB,KAAK+U,QACrB,GAAC,CAAAzU,IAAA,OAAAkE,IAED,WACI,OAAO3F,KAAKuQ,SAASG,IACzB,GAAC,CAAAjP,IAAA,cAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAU0uB,WAC1B,GAAC,CAAAnuB,IAAA,WAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,uBAC9B,GAAC,CAAAlE,IAAA,WAAAC,OAAAX,GAAAY,EAAAC,IAAAC,KAUM,SAAAC,KAAA,IAAA2yB,GAAAsD,GAAAD,GAAA0tB,GAAAC,GAAAtgD,GAAAnF,KAAA,OAAA4B,IAAAS,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OACH,OAAAxC,KAAKkE,MAAO,EACZlE,KAAKuQ,SAASm1C,gBAAgBpjD,GAAAE,KAAA,EACxBxC,KAAK2lD,eAAc,OACzB3lD,KAAK0Q,KACA/K,IAAI,YACJigD,cAAc,CAACh8C,EAAAo2B,WAAWC,SAAUr2B,EAAAo2B,WAAWh5B,QAC9CytB,GAAWz0B,KAAKkB,UAAUyE,IAAI,qBAAuB,GAAEoyB,GAAAC,EAC1CvD,IAAQ,IAA3B,IAAAsD,GAAAnO,MAAAkO,GAAAC,GAAAI,KAAAC,MAAeotB,GAAA1tB,GAAAp2B,MACyBuF,MAAM,KAAIw+C,GAAAviC,EAAAsiC,GAAA,GAC9CxlD,KAAKy0B,SAASwC,KAAK,CAAEjwB,MADTy+C,GAAA,GACgB9xC,KADV8xC,GAAA,GACgBxO,QADPwO,GAAA,IAE9B,OAAA76B,IAAAmN,GAAA3S,EAAAwF,GAAA,SAAAmN,GAAAM,GAAA,CACDr4B,KAAK6jD,eAAe,IACpB7jD,KAAKiT,aACD,QACAjT,KAAK0Q,KACA/K,IAAI,YACJuN,aAAaC,UAAU,SAAC9P,IAAC,OAAK8B,GAAK0+C,eAAexgD,GAAE,IAE7DrD,KAAKiT,aACD,OACAjT,KAAK0Q,KACA/K,IAAI,cACJuN,aAAaC,UAAU,SAAC9P,IAAC,OAAK8B,GAAK0+C,eAAexgD,GAAE,IAEzDrD,KAAKskD,UACLtkD,KAAK0Q,KAAKe,WAAW,CAAEP,SAAU,wBAAyB,yBAAA5O,GAAAwC,OAAA,EAAAhD,GAAA9B,KAAA,IACjE,SAAA+E,KAAA,OAAAhE,GAAAiE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,aAAAC,MAEM,SAAWya,IACdnc,KAAK0Q,KAAKe,WAAW,CACjBP,SAAUiL,GAAKnV,MACf0M,WAAYyI,GAAKxI,KACjBsjC,QAAS96B,GAAK86B,SAEtB,GAAC,CAAAx1C,IAAA,iBAAAC,MAEM,SAAewa,IAClB,IAAM0N,IAAK1N,IAAU,IAAIwX,cACzB1zB,KAAKikD,kBAAoBjkD,KAAKy0B,SAASvY,OACnC,SAAA5V,IAAA,IAAUqN,GAAIrN,GAAJqN,KAAMsjC,GAAO3wC,GAAP2wC,QAAO,OAAf3wC,GAALU,MACO0sB,cAAcztB,SAAS2jB,KAC7BjW,GAAK+f,cAAcztB,SAAS2jB,KAC5BqtB,GAAQvjB,cAAcztB,SAAS2jB,GAAE,EAE7C,GAAC,CAAAnoB,IAAA,SAAAC,MAEM,WACH1B,KAAKo4B,KAAKzY,OACV3f,KAAKkE,MAAO,CAChB,GAAC,CAAAzC,IAAA,aAAAC,MAAA,eAAAmkD,GAAAlkD,EAAAC,IAAAC,KAEM,SAAA0D,KAAA,IAAAkT,GAAAvH,GAAAwC,GAAAujC,GAAA6O,GAAAC,GAAA,OAAAnkD,IAAAS,KAAA,SAAAoD,IAAA,cAAAA,GAAAlD,KAAAkD,GAAAjD,MAAA,OAC0B,GAA7BxC,KAAK0Q,KAAKuY,mBAELjpB,KAAK0Q,KAAKkE,SACV5U,KAAKskD,UAAatkD,KAAK0Q,KAAKhP,MAAMqW,OAAO1S,QAAO,CAAAI,GAAAjD,KAAA,eAAAiD,GAAA9B,OAAA,YAE1Cy/C,EAAAvuC,aAAW,6BAAAzQ,UAEVi/C,EAAAvuC,kBAAiB9U,KAAK0Q,MAAMqE,KAAK,OAAS,WAC9C,OACH,OAAA0D,OAEa/E,IAFb+E,GAE6CzY,KAAK0Q,KAAKhP,OAA1CgS,WAAYujC,GAAOx+B,GAAPw+B,QACxB6O,GAAe,GAAA1hD,OADb8M,GAAQuH,GAARvH,SAC2B,KAAA9M,OAAIsP,GAAU,KAAAtP,OAAI6yC,IAC/C8O,GAAe/lD,KAAKkB,UAAUyE,IAAI,qBAAuB,GAC/D3F,KAAKkB,UAAUy5B,gBAAgB,mBAAkB,GAAAv2B,OAAAif,EAC1C0iC,GAAa7pC,OAAO,SAAC7Y,IAAC,OAAMA,GAAE4C,SAASiL,GAAS,IAAC,CACpD40C,MACDrgD,GAAAjD,KAAA,EACIxC,KAAKskD,SAAWtkD,KAAKgmD,eAAiBhmD,KAAKimD,cAAa,OAC/D,OAAAjmD,KAAKoU,aAAepU,KAAKuQ,SAAS6D,aAAa3O,GAAAjD,KAAA,GACzCxC,KAAK2lD,eAAc,QACzB3lD,KAAKkE,MAAO,EAAK,yBAAAuB,GAAAX,OAAA,EAAAS,GAAAvF,KAAA,IACpB,gBAAA0kD,KAAA,OAAAmB,GAAA7gD,MAAAhF,KAAAiF,UAAA,EAzBA,IAyBA,CAAAxD,IAAA,eAAAC,MAAA,eAAAwkD,GAAAvkD,EAAAC,IAAAC,KAEO,SAAAwE,KAAA,IAAAsnC,GAAA,OAAA/rC,IAAAS,KAAA,SAAAoE,IAAA,cAAAA,GAAAlE,KAAAkE,GAAAjE,MAAA,OAAAiE,UAAAjE,KAAA,EACExC,KAAKmB,KAAK+B,YAAYC,QAAK7C,EAAA8C,OAAM,SAACC,IAAC,OAAKA,EAAC,IAAGC,YAAW,OAC7DtD,KAAKuQ,SAASwC,WAAW,CAAEC,KAAM,YACjChT,KAAK0Q,KAAKe,WAAW,CACjBqC,aAAc,UACdC,MAAO,CAAmB,QAAnB45B,GAAC3tC,KAAKmB,KAAK+U,gBAAQ,IAAAy3B,QAAA,EAAlBA,GAAoBl6B,MAE5BzT,KAAKskD,UACLtkD,KAAK0Q,KAAKe,WAAW,CAAEP,SAAU,wBAAyB,wBAAAzK,GAAA3B,OAAA,EAAAuB,GAAArG,KAAA,IACjE,gBAAA2lD,KAAA,OAAAO,GAAAlhD,MAAAhF,KAAAiF,UAAA,EAXA,IAWA,CAAAxD,IAAA,cAAAC,MAAA,eAAAykD,GAAAxkD,EAAAC,IAAAC,KAEO,SAAAsF,KAAA,IAAAzF,GAAA,OAAAE,IAAAS,KAAA,SAAAgF,IAAA,cAAAA,GAAA9E,KAAA8E,GAAA7E,MAAA,OACEd,OACN1B,KAAK0Q,KAAKe,WAAW,CACjBkC,MAFEjS,GAAQ1B,KAAK0Q,KAAKhP,OAERgS,WACZgD,UAAW,CACP,IAAI4hC,EAAA8N,KAAK,CACLzyC,KAAMjS,GAAMgS,WACZ1M,MAAOtF,GAAMwP,SACby/B,aAAcjvC,GAAMu1C,aAG7B5vC,GAAA7E,KAAA,EACGxC,KAAKuQ,SAASka,WAAUjmB,MAAO,SAAC4gB,IAClC,QAAAg+B,EAAAvuC,aAAYuQ,IACNA,EACV,GAAE,wBAAA/d,GAAAvC,OAAA,EAAAqC,GAAAnH,KAAA,IACL,gBAAAimD,KAAA,OAAAE,GAAAnhD,MAAAhF,KAAAiF,UAAA,EAlBA,IAkBA,CAAAxD,IAAA,eAAAC,MAAA,eAAA2kD,GAAA1kD,EAAAC,IAAAC,KAEO,SAAAqvC,KAAA,IAAAxY,GAAAh3B,GAAAqW,GAAA+kB,GAAAD,GAAApP,GAAAjnB,GAAAxG,KAAA,OAAA4B,IAAAS,KAAA,SAAAivC,IAAA,cAAAA,GAAA/uC,KAAA+uC,GAAA9uC,MAAA,OACJxC,KAAK4kD,cAAe,EACdlsB,GAAK,OAAAt0B,UAAUi/C,EAAAiD,cAAa,IAGlCtmD,KAAKulD,YADCxtC,IADArW,GAAQ1B,KAAK0Q,KAAKhP,OACHqW,QACI1S,OAAOy3B,GAAA9E,EACbjgB,IAAMu5B,GAAA/uC,KAAA,EAAAu6B,GAAAlT,IAAA,WAAAiT,GAAAC,GAAA3E,KAAAC,KAAA,CAAAkZ,GAAA9uC,KAAA,SAAV,IAAJirB,GAAIoP,GAAAn7B,OACDsF,MAAK,CAAAsqC,GAAA9uC,KAAA,gBAAA8uC,GAAA3tC,OAAA,uBACf,OAAA3D,KAAK0Q,KAAKe,WAAUqe,IAAA,GACbpuB,IAAK,IACRoS,aAAc,UACd5C,SAAUuc,GAAKzmB,MACf0M,WAAY+Z,GAAK9Z,KACjB8Z,QAAMjtB,EAAAsG,eACN+M,YAAa6kB,GACb/kB,KAAM8Z,GAAK9Z,KACXoE,OAAQ,GACRrB,UAAW,CACP,IAAI4hC,EAAA8N,KAAK,CACLzyC,KAAM8Z,GAAK9Z,KACX3M,MAAOymB,GAAKzmB,MACZ2pC,aAAcljB,GAAKwpB,SAAWxpB,GAAKkjB,mBAG5CW,GAAA9uC,KAAA,GACGxC,KAAKuQ,SAASka,WAAUjmB,MAAO,SAAC4gB,IAClC,QAAAg+B,EAAAvuC,aAAYuQ,IACZ5e,GAAKo+C,cAAe,EACdx/B,EACV,GAAE,QAAAksB,GAAA9uC,KAAA,gBAAA8uC,GAAA9uC,KAAA,iBAAA8uC,GAAA/uC,KAAA,GAAA+uC,GAAA/sC,GAAA+sC,GAAA9sC,MAAA,GAAAs4B,GAAA1X,EAAAksB,GAAA/sC,IAAA,QAAA+sC,UAAA/uC,KAAA,GAAAu6B,GAAAzE,IAAAiZ,GAAAiV,OAAA,YAENvmD,KAAK4kD,cAAe,EAAM,yBAAAtT,GAAAxsC,OAAA,EAAAosC,GAAAlxC,KAAA,mBAC7B,gBAAAgmD,KAAA,OAAAK,GAAArhD,MAAAhF,KAAAiF,UAAA,EAlCA,MAkCAqgD,EAAA,CAnLmC,CAAQ9kD,EAAAiI,cAAnC68C,UAA2B,mBAAArlD,mBAA3BqlD,IAA0BplD,EAAAwI,4BAAAC,EAAAoI,oBAAA7Q,EAAAwI,4BAAAG,EAAAD,iBAAA1I,EAAAwI,4BAAAK,EAAAD,qBAAA,EAA1Bw8C,GAA2B,UAAAplD,EAAA,kCAA3BolD,GAA0Bn8C,UAAA,0BAAA0W,QAAA,CAAAuY,KAAA,QAAAhvB,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,eAAA+iB,0DA9QOC,UAAAC,MAAAC,EAAA,kGA6KzBF,UAAAG,MAAAD,EAAA,wGAjJ0BF,UAAAI,MAAAF,EAAA,2HAAI,iBAAO,sBAQDF,UAAAM,MAAAJ,EAAA,iIACf,kBAAO,uBAehBF,UAAAO,MAAAL,EAAA,+HAAQ,kBAAO,uBAoGCF,UAAAgqB,MAAA9pB,EAAA,mGApJEF,UAAAwuB,MAAAtuB,EAAA,gIACf,iBAAO,sBAUEF,UAAAyuB,MAAAvuB,EAAA,mGAkDZF,UAAA0uB,MAAAxuB,EAAA,mIAAY,iBAAO,sBAmCQF,UAAA2uB,MAAAzuB,EAAA,oIACf,kBAAO,uBAefF,UAAA4uB,MAAA1uB,EAAA,6GAwBsBF,UAAAk2B,MAAAh2B,EAAA,2FA6FlCF,UAAAm2B,MAAAj2B,EAAA,mGASAF,UAAAo2B,MAAAl2B,EAAA,0GAzDqBF,UAAAq2B,MAAAn2B,EAAA,4RAEtB,mCACI,kBAIJ,0EACA,mCACI,kBAAwB,kBAG5B,mHAGIF,UAAAs2B,MAAAp2B,EAAA,0ZAEJ,iBACI,oCACI,kBAIJ,4EACA,oCACI,kBAAwB,kBAG5B,4EACJ,kBAEA,gBACA,gBACA,ojFAqCAF,UAAAu2B,MAAAr2B,EAAA,0IAKuBF,UAAAw2B,MAAAt2B,EAAA,+HAAQ,iBAAO,qGA5QtDtwB,EAAAiS,qBAAA,EAAA40C,GAAA,sBA2LA7mD,EAAAiS,qBAAA,EAAA60C,GAAA,2BAAA9mD,EAAAomB,kCAsEApmB,EAAAiS,qBAAA,EAAA80C,GAAA,yBAAA/mD,EAAAomB,kCASApmB,EAAAiS,qBAAA,EAAA+0C,GAAA,yBAAAhnD,EAAAomB,2EA1QepmB,EAAA+Q,qBAAA,QAAAvH,GAAAxF,KAAAhE,CAAa,WAAAiuB,GAAA,2aAsRvBm3B,EAA2B,gKCrSxC,IAAAr7C,EAAAnM,EAAA,OAGA4iD,GADA5iD,EAAA,OACAA,EAAA,2HAaYoC,EAAAqN,yBAAA,cAcIrN,EAAA8Q,qBAAA,uBAAAm2C,EAAAjnD,EAAAkR,wBAAAmc,GAAAtP,UAAAtM,EAAAzR,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAG,EAAAy1C,QAAAznC,KAAAwnC,GAAoB,GAE7BjnD,EAAAyJ,oBAAA,UAAAzJ,CAGO,UAHPA,CAGO,UAHPA,CAGO,WAaPA,EAAAqN,yBAAA,WAGIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,yBAEAtN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,wBAAA,yDAlCItN,EAAAmnD,sBAAA,oBAAAF,EAAAhR,SAAA,KAAAj2C,CAAkD,iBAAAinD,EAAAhR,SAAA,KAAlDj2C,CAAkD,kBAAAinD,EAAAhR,SAAA,IAAAgR,EAAAG,KAAA,MAAlDpnD,CAAkD,mBAAAqS,EAAA+zB,OAAA6gB,GAAlDjnD,CAAkD,eAAAinD,EAAAhR,SAAA,IAAAgR,EAAAG,KAAA,OADlDpnD,EAAA4f,sBAAA,aAAAvN,EAAAgN,UAAAhN,EAAAgN,WAAA4nC,EAAA1zC,IAQAvT,EAAA+Q,qBAAA,aAAAk2C,EAAAxzC,KAAAzT,CAA0B,gBAAAinD,EAAA5a,UAuBtBrsC,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAw5C,EAAAxzC,KAAA,iCAsBP/T,sBAAmB,eAAnB2nD,EAAmB,WAkB5B,SAAAA,EAAoBrmD,GAA0BnB,EAAAC,KAAAunD,GAA1BvnD,KAAAkB,YAhBJlB,KAAAwnD,YAAsC,CAClD,GAAM,OACN,EAAK,WAEOxnD,KAAAuf,SAAW,GACVvf,KAAAonD,QAAU,IAAIn9C,EAAAwV,YAWkB,CAAC3f,SAAAynD,EAAA,EAAA9lD,IAAA,UAAAkE,IATlD,WAAkB,IAAA8hD,EAE+B3vB,EADzC4vB,EAAU,EAAE3vB,EAAAC,GACc,QAATyvB,EAAAznD,KAAK2nD,YAAI,IAAAF,OAAA,EAATA,EAAWzyB,UAAW,IAAE,IAA7C,IAAA+C,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MAA+C,KAApCzC,EAAMmC,EAAAp2B,MACPo0C,EAAIngB,EAAOwgB,SAAS,GAAKxgB,EAAO2xB,KAAK,GACvCxR,EAAI4R,IAASA,EAAU5R,GAC9B,OAAAlrB,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACD,OAAOqvB,CACX,GAAC,CAAAjmD,IAAA,SAAAC,MAIM,SAAOi0B,GACV,IAAM4rB,EAAUvhD,KAAKkB,UAAUyE,IAAI,uBAAyB,GACtDjE,EAAQ1B,KAAKwnD,YAAY7xB,EAAOliB,KAAO,OAC7C,OACI8tC,EAAO,WAAAn9C,OAAY1C,KACnB6/C,EAAO,GAAAn9C,OAAI1C,KACXg/C,EAAAe,gBAAe,GAAAr9C,OAAI1C,GAE3B,KAAC6lD,CAAA,CA5B2B,GAAnBA,SAAmB,mBAAAtnD,iBAAnBsnD,GAAmBrnD,EAAAwI,4BAAAC,EAAAC,iBAAA,EAAnB2+C,EAAmB,UAAArnD,EAAA,kCAAnBqnD,EAAmBp+C,UAAA,kBAAAyW,OAAA,CAAA+nC,KAAA,OAAAH,YAAA,cAAAjoC,SAAA,YAAAM,QAAA,CAAAunC,QAAA,WAAA99C,MAAA,EAAAC,KAAA,EAAA+D,OAAA,yiCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjExBvJ,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAKIrN,EAAAiS,qBAAA,EAAAy1C,EAAA,iBAwCJ1nD,EAAAsN,gCA/CItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAAjE,EAAAi+C,KAAA,KAAAj+C,EAAAi+C,KAAAh0C,KAAA,KAIAzT,EAAAwN,oBAAA,GAAAxN,EAAAmnD,sBAAA,kCAAA39C,EAAAg+C,QAAA,SAAAxnD,CAA8D,sCAAAwJ,EAAAi+C,KAAA,KAAAj+C,EAAAi+C,KAAAngD,QAAA,UAIvCtH,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAvH,EAAAi+C,KAAA,KAAAj+C,EAAAi+C,KAAA3yB,UAAA90B,EAAA0R,0BAAA,EAAAC,sTAwDtB01C,CAAmB,8LCzEhC,IAAAt9C,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OAKA+pD,GAJA/pD,EAAA,OAEAA,EAAA,OAEAA,EAAA,iOAmBwBoC,EAAAqN,yBAAA,qBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAA22C,EAAA5nD,EAAAkR,wBAAAwE,GAAAqI,UAAApI,EAAA3V,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAAqE,EAAA+kC,WAAAkN,EAAA32C,GAAuB,GAGxCjR,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAA,0DALItN,EAAA+Q,qBAAA,WAAA8Q,EAAArF,mBAAAxc,EAAA0R,0BAAA,EAAAipC,IAAA50C,SAAA6hD,GAAA5nD,CAAmD,iBAAAA,EAAA0R,0BAAA,EAAAkpC,IAInD56C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAm6C,EAAA,+BATZ5nD,EAAAqN,yBAAA,WAAArN,CAAoD,cAC7BA,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACvBtN,EAAAqN,yBAAA,YACIrN,EAAAiS,qBAAA,EAAA41C,EAAA,uBAQJ7nD,EAAAsN,wBAAAtN,4CAPwBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAU,EAAAvI,SAAA,0BAYxBlJ,EAAAyJ,oBAAA,6DAGIzJ,EAAA+Q,qBAAA,SAAA+pC,EAAAvvB,OAAA,0BAIAvrB,EAAAyJ,oBAAA,kCAgBJzJ,EAAAqN,yBAAA,WAAArN,CAGC,iBAEQA,EAAAuN,iBAAA,gBAAUvN,EAAAsN,yBAEftN,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,2BAAqBvN,EAAAsN,wBAAAtN,iEAnDpCA,EAAAqN,yBAAA,WAKIrN,EAAAiS,qBAAA,EAAA61C,EAAA,aAaA9nD,EAAAqN,yBAAA,WAGIrN,EAAAiS,qBAAA,EAAA81C,EAAA,cAMA/nD,EAAAiS,qBAAA,EAAA+1C,EAAA,0BAAAhoD,EAAAomB,kCAMJpmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAA4B,YAEpBA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAiD,kBAExCA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBAEVtN,EAAAqN,yBAAA,QAAGrN,EAAAuN,iBAAA,IAAgDvN,EAAAsN,wBAAAtN,GAEvDA,EAAAiS,qBAAA,GAAAg2C,EAAA,cASAjoD,EAAAqN,yBAAA,YAAArN,CAEC,gBAMOA,EAAA8Q,qBAAA,uBAAAgqC,EAAA96C,EAAAkR,wBAAA+M,GAAAF,UAAAG,EAAAle,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA4M,EAAAg9B,gBAAAJ,GAAqB,GAE9B96C,EAAAqN,yBAAA,aAAArN,EAAAg5B,sBAAA,OACIh5B,EAAAyJ,oBAAA,eAEJzJ,EAAAi5B,sBAAAj5B,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,uBAAAgqC,EAAA96C,EAAAkR,wBAAA+M,GAAAF,UAAArH,EAAA1W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAoF,EAAAykC,eAAAL,GAAoB,GAE7B96C,EAAAqN,yBAAA,aAAArN,EAAAg5B,sBAAA,OACIh5B,EAAAyJ,oBAAA,eAEJzJ,EAAAi5B,sBAAAj5B,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+M,GAAA,IAAAM,EAAAve,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAiN,EAAA4a,gBAAA5a,EAAA2b,OAAsB,GAE/Bl6B,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,sFAzFXA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAsB,EAAAnJ,SAAA,KAAAmJ,EAAAnJ,SAAA/D,QAkBGnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA+pC,EAAAvvB,OAAA,KAAAuvB,EAAAvvB,OAAApmB,OAAAnF,CAA2B,WAAAgiB,GAa5BhiB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAqtC,EAAArnC,MAAA,cAMGzT,EAAAwN,oBAAA,GAAAxN,EAAAoU,6BAAA,MAAA0mC,EAAAhnC,KAAA,KAAAgnC,EAAAhnC,KAAA2B,gBAAA,MAAAqlC,EAAAhnC,KAAA,KAAAgnC,EAAAhnC,KAAAL,OAIFzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA+pC,EAAAoN,YAyCLloD,EAAAwN,oBAAA,IAAAxN,EAAA4f,sBAAA,gBAAAvN,EAAAgnB,UAAAtzB,SAAA,MAAAsM,EAAA6nB,MAAA,KAAA7nB,EAAA6nB,MAAA3mB,KAGUvT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAAgnB,UAAAtzB,SAAA,MAAAsM,EAAA6nB,MAAA,KAAA7nB,EAAA6nB,MAAA3mB,IAAA,+BAhG9B,IAAM+lB,EAAuB,GAiIhB55B,2BAAwB,eAAxByoD,EAAwB,WAcjC,SAAAA,EACYnnD,EACAoX,GAAkB,IAAAhX,EAAAtB,KAAAD,EAAAC,KAAAqoD,GADlBroD,KAAAkB,YACAlB,KAAAsY,UAfItY,KAAAoJ,SAAqB,GAC9BpJ,KAAAu7C,UAAY,EACZv7C,KAAA05B,MAAwB,GACxB15B,KAAA25B,UAAW,EACX35B,KAAA0c,kBAA8B,GAoDrB1c,KAAA45B,iBAAmB,SAACC,GAA+B,OAC9Dv4B,EAAKw4B,UAAYD,CAAE,EAER75B,KAAA+5B,kBAAoB,SAACF,GAA+B,OAC/Dv4B,EAAK04B,SAAWH,CAAE,EACP75B,KAAAi6B,iBAAmB,SAACrQ,GAAU,OAAMtoB,EAAKq4B,SAAW/P,CAAC,CA7ClE,CAEH9pB,SAAAuoD,EAAA,EAAA5mD,IAAA,YAAAkE,IATA,WACI,OAAO3F,KAAKkB,UAAUyE,IAAckiD,EAAAS,iBAAmB9uB,CAC3D,GAAC,CAAA/3B,IAAA,kBAAAC,MAQM,WAAe,IAAAyD,EAAAnF,KACZ0Y,EAAM1Y,KAAKsY,QAAQrD,KAAK4yC,EAAAU,2BAA4B,CACtDzlD,KAAM,CACF42B,MAAO15B,KAAK05B,MACZzW,QAAS,CAAEjD,SAAUhgB,KAAKu7C,cAGlC7iC,EAAII,cAAc3F,UAAU,SAACumB,GACpBA,IAAOA,EAAQhhB,EAAIM,kBAAkBuG,UAC1Cpa,EAAKm1B,SAASZ,EAClB,EACJ,GAEA,CAAAj4B,IAAA,iBAAAC,MACO,SAAemb,GAClB7c,KAAKs6B,SAASt6B,KAAK05B,MAAMxd,OAAO,SAAC7Y,GAAC,OAAKA,EAAEoQ,KAAOoJ,EAAMpJ,EAAE,GAC5D,GAEA,CAAAhS,IAAA,WAAAC,MAIO,SAASy4B,GACZn6B,KAAK05B,MAAQS,EACTn6B,KAAK85B,WAAW95B,KAAK85B,UAAU95B,KAAK05B,MAC5C,GAGA,CAAAj4B,IAAA,aAAAC,MAIO,SAAWA,GACd1B,KAAK05B,MAAQh4B,GAAS,EAC1B,GAAC,CAAAD,IAAA,kBAAAC,MAUM,SAAgBmb,GACnB,IAAM4d,EAAWz6B,KAAKu5B,UAChBmB,GAAaD,EAASx0B,SAAS4W,EAAMpJ,IAEvCzT,KAAKkB,UAAUy5B,gBAAgBktB,EAAAS,eAD/B5tB,EAC6C,GAAAt2B,OAAAif,EACtCoX,GAAQ,CACX5d,EAAMpJ,KAKNgnB,EAASve,OAAO,SAAC7Y,GAAC,OAAKA,IAAMwZ,EAAMpJ,EAAE,GAGjD,KAAC40C,CAAA,CA9EgC,GAAxBA,SAAwB,mBAAApoD,iBAAxBooD,GAAwBnoD,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAuQ,WAAA,EAAxBivC,EAAwB,UAAAnoD,EAAA,kCAAxBmoD,EAAwBl/C,UAAA,wBAAAyW,OAAA,CAAAxW,SAAA,YAAAA,SAAA,CAAAlJ,EAAAkwB,6BARtB,CACP,CACI1jB,QAAS9C,EAAAixB,kBACTC,eAAa7wB,EAAA8wB,YAAW,kBAAMstB,CAAwB,GACtDrtB,OAAO,MAEd1xB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,kTAdsBgjB,UAAAC,MAAAC,EAAA,84BA3CKF,UAAAG,MAAAD,EAAA,2JAAc,yFAYdF,UAAAI,MAAAF,EAAA,6JAAe,8dA7EvCtwB,EAAAqN,yBAAA,WACIrN,EAAAiS,qBAAA,EAAAq2C,EAAA,cAiGJtoD,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAKIrN,EAAA8Q,qBAAA,0BAAStH,EAAA0xC,iBAAiB,GAE1Bl7C,EAAAqN,yBAAA,UAAArN,CAAwD,cAC1CA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAAqBzuB,EAAAsN,wBAAAtN,KAG7BA,EAAAqN,yBAAA,WACIrN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,gCA7GyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgwB,+IAwHpB2uB,CAAwB,8MC5IrC,IAAAp+C,EAAAnM,EAAA,OACAkc,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,UACAA,EAAA,OACAA,EAAA,mHAwC4BoC,EAAAqN,yBAAA,WAAArN,CAGC,cACaA,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,4BAElBA,EAAAyJ,oBAAA,6DAOIzJ,EAAA+Q,qBAAA,SAAAw3C,EAAAh9B,OAAA,0BAGAvrB,EAAAyJ,oBAAA,yEA/BhBzJ,EAAAqN,yBAAA,UAAArN,CAKC,eAKOA,EAAA8Q,qBAAA,uBAAAy3C,EAAAvoD,EAAAkR,wBAAA8d,GAAAjR,UAAAzH,EAAAtW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAgF,EAAAkyC,iBAAAD,GAA6B,GAEtCvoD,EAAAqN,yBAAA,YAGIrN,EAAAiS,qBAAA,EAAAw2C,EAAA,cAMAzoD,EAAAiS,qBAAA,EAAAy2C,EAAA,cASA1oD,EAAAiS,qBAAA,EAAA02C,EAAA,0BAAA3oD,EAAAomB,kCAMJpmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAA6C,aAErCA,EAAAuN,iBAAA,GAKJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAAiD,kBACbA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACrCtN,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAAiD,kBAExCA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAEXtN,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,IAGJvN,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,uBAAAy3C,EAAAvoD,EAAAkR,wBAAA8d,GAAAjR,UAAAQ,EAAAve,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAiN,EAAA0c,UAAAxb,KAAA8oC,GAA2B,GAEpCvoD,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,uFA3EjBA,EAAA4f,sBAAA,mBAAA5N,EAAAmpB,SAAAotB,EAAAh1C,IAaavT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAiB,EAAAqN,SAAAtZ,SAAAwiD,EAAAh1C,KAMAvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAw3C,EAAAh9B,OAAA,KAAAg9B,EAAAh9B,OAAApmB,OAAAnF,CAGb,WAAA0V,GAaY1V,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA86C,EAAA90C,MAAA80C,EAAAh1C,IAAA,mBASIvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAA86C,EAAAz0C,KAAA,KAAAy0C,EAAAz0C,KAAA2B,gBAAA,MAAA8yC,EAAAz0C,KAAA,KAAAy0C,EAAAz0C,KAAAL,OAAA,kBAYAzT,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,IAAA0oC,EAAAzY,WAAA,QAAAyY,EAAAzzB,QAAA3vB,QAAA,iBAYZnF,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,gBAAA5N,EAAAiqB,YAAAssB,EAAAh1C,KAGUvT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAApC,EAAAiqB,YAAAssB,EAAAh1C,IAAA,wDA/EtBvT,EAAAqN,yBAAA,UAIIrN,EAAAiS,qBAAA,EAAA22C,EAAA,4CAkFJ5oD,EAAAsN,kEAhFgCtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAc,EAAAiyC,cAAA,2BAPpC7oD,EAAAyhB,kCAAA,GACIzhB,EAAAiS,qBAAA,EAAA62C,EAAA,0CAuFJ9oD,EAAA4hB,0GArFS5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAyQ,EAAAxhB,EAAA8V,sBAAA,IAAAzD,EAAAw2C,eAAA,KAAArnC,EAAArc,OAAAnF,CAAsC,WAAAqtB,EAAA,wBAuF3CrtB,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,UAAsBrN,EAAAuN,iBAAA,uCAAiCvN,EAAAsN,wBAAAtN,UAD1CA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,sCAKjB/Q,EAAAqN,yBAAA,WAAArN,CAGC,UAEOA,EAAAuN,iBAAA,kEACJvN,EAAAsN,wBAAAtN,IAKHN,0BAAuB,eAAvBqpD,EAAuB,WAiChC,SAAAA,EACYhvC,EACAwX,GAAwB,IAAAnwB,EAAAtB,KAAAD,EAAAC,KAAAipD,GADxBjpD,KAAAia,SACAja,KAAAyxB,WAlCIzxB,KAAAq7B,OAAiB,GACjBr7B,KAAAuf,SAAmB,GACnBvf,KAAAu5B,UAAsB,GACrBv5B,KAAAy8B,SAAW,IAAIxyB,EAAAwV,aACfzf,KAAAm7B,UAAY,IAAIlxB,EAAAwV,aAEjBzf,KAAA+oD,gBAAe/uC,EAAAgJ,eAAc,CACzChjB,KAAKia,OAAOgJ,QACZjjB,KAAKia,OAAOuxB,oBACZxrC,KAAKyxB,SAASy3B,iBACf/lD,QACC7C,EAAA0b,KAAI,SAAA1V,GAAqC,IAAA8B,EAAA8a,EAAA5c,EAAA,GAAjC02C,EAAQ50C,EAAA,GAAR40C,SAAY/lC,EAAS7O,EAAA,GACzB,OADgCA,EAAA,GAE3B8T,OACG,SAAC6W,GAAC,QACIiqB,GAAY17C,EAAK66B,YAAYpJ,EAAEtf,MACjCwD,EAAUiZ,KAAK,SAAC7sB,GAAM,OAAKA,EAAEwuC,UAAY9e,EAAEtf,EAAE,EAAC,GAErDuI,IAAI,SAAC2rC,GAAI,OAAA73B,IAAA,GACH63B,GAAI,IACP3X,UAAW/4B,EAAUiF,OACjB,SAAC7Y,GAAM,OAAKA,EAAEwuC,UAAY8V,EAAKl0C,EAAE,GACnCpO,OACF2vB,QAAS2yB,EAAK3yB,QAAQhZ,IAAI,SAAC3Y,GAAC,OAAAysB,IAAA,GACrBzsB,GAAC,IACJ2Q,KAAM2zC,EAAK3zC,MAAI,IAChB,EAEf,IAEYhU,KAAAujB,QAAUvjB,KAAKia,OAAOsJ,OAKnC,CAACzjB,SAAAmpD,EAAA,EAAAxnD,IAAA,cAAAC,MAEG,SAAYynD,GACf,OAAOnpD,KAAKu5B,UAAUtzB,SAASkjD,EACnC,GAAC,CAAA1nD,IAAA,mBAAAC,MAEM,SAAiB0nD,GACpBppD,KAAKy8B,SAAS9c,KAAKypC,EACvB,KAACH,CAAA,CA5C+B,GAAvBA,SAAuB,mBAAAhpD,iBAAvBgpD,GAAuB/oD,EAAAwI,4BAAAC,EAAAoI,oBAAA7Q,EAAAwI,4BAAAG,EAAAuuB,gBAAA,EAAvB6xB,EAAuB,UAAA/oD,EAAA,kCAAvB+oD,EAAuB9/C,UAAA,uBAAAyW,OAAA,CAAAyb,OAAA,SAAA9b,SAAA,WAAAga,UAAA,aAAA1Z,QAAA,CAAA4c,SAAA,WAAAtB,UAAA,aAAA7xB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,kCAlHDgjB,UAAAC,MAAAC,EAAA,qIACmBF,UAAAG,MAAAD,EAAA,oHAC1C,ytDAFJtwB,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAAkCzuB,EAAAsN,yBAClCtN,EAAAqN,yBAAA,SAAArN,EAAAyuB,iBAAA,mCAEAzuB,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAk3C,EAAA,oDAyFAnpD,EAAAiS,qBAAA,EAAAm3C,EAAA,yBAAAppD,EAAAomB,kCASApmB,EAAAiS,qBAAA,EAAAo3C,EAAA,yBAAArpD,EAAAomB,6EAnGApmB,EAAAwN,oBAAA,GAAAxN,EAAA2uB,qBAAA,OAAAnN,EAAAxhB,EAAA8V,sBAAA,IAAAtM,EAAAq/C,eAAA,KAAArnC,EAAArc,SAAA,GAAAnF,EAAA6uB,sBAAA,GACe7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAA0N,EAAAze,EAAA8V,sBAAA,IAAAtM,EAAA6Z,WAAA5E,EAAAtZ,QAAAnF,CAAkC,WAAAiuB,EAAA,8TA8G5C86B,CAAuB,wNCtIpC,IAAAh/C,EAAAnM,EAAA,OAEA0C,GADA1C,EAAA,OACAA,EAAA,QAEA0rD,EAAA1rD,EAAA,OAEAyzB,GADAzzB,EAAA,OACAA,EAAA,iJA0EYoC,EAAAqN,yBAAA,WAAArN,CAIC,OACMA,EAAAuN,iBAAA,GAAUvN,EAAAsN,yBACbtN,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,uBAAA8rC,EAAA58C,EAAAkR,wBAAA8Q,GAAAjE,UAAAnM,EAAA5R,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAM,EAAA8oC,WAAAkC,GAAiB,GAAM,GAEhC58C,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,IAAW,2BAR3BA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAwoC,EAAA,+DAWP58C,EAAAqN,yBAAA,WAAArN,CAAqD,UACjDA,EAAAyuB,iBAAA,MAA0BzuB,EAAAsN,yBAC1BtN,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA2rC,GAAA,IAAAjmC,EAAA5W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAsF,EAAA/D,WAAA,CAAAiqC,UAAuB,IAAQ,GAExC98C,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,IAAW,6BAMjCN,gCAA8B,eAA9B6pD,EAA8B,SAAA5oD,GAAAC,EAAA2oD,EAAA5oD,GAAA,IAAAG,EAAAC,EAAAwoD,GAwBvC,SAAAA,EACYvM,EACAjjC,EACA/Y,GAA0B,IAAAI,EAAAvB,SAAAC,KAAAypD,IAElCnoD,EAAAN,EAAAO,KAAAvB,OAJQk9C,UACA57C,EAAA2Y,SACA3Y,EAAAJ,YA1BII,EAAA67C,KAAuB,OACtB77C,EAAA87C,WAAa,IAAInzC,EAAAwV,aAClBne,EAAA2hB,QAAU3hB,EAAK2Y,OAAOgJ,QACtB3hB,EAAAyR,WAAa,SAACyQ,GAAC,OAAKliB,EAAK2Y,OAAOlH,WAAWyQ,EAAE,EAC7CliB,EAAAs5C,WAAa,SAACviB,EAAGjT,GAAC,OAAK9jB,EAAK2Y,OAAO2gC,WAAWviB,EAAGjT,EAAE,EAYnD9jB,EAAA+7C,WAAa,kBACzB/7C,EAAK47C,QAAQjoC,KAAKu0C,EAAAE,uBAAuB,EAACpoD,CAY9C,CAACxB,SAAA2pD,EAAA,EAAAhoD,IAAA,QAAAkE,IAvBD,WACI,OAAO3F,KAAKia,OAAOvJ,KAAKhP,MAAMqQ,IAClC,GAAC,CAAAtQ,IAAA,MAAAkE,IAED,WACI,IAAA43C,EAAoCv9C,KAAKia,OAAOvJ,KAAKhP,MAA7CqQ,EAAIwrC,EAAJxrC,KAAMC,EAAQurC,EAARvrC,SACd,OAD+BurC,EAAPlsB,SACpBA,EAAgBE,EAAA4C,UAASpiB,GACtBA,EAAkB,GAAXC,EAAgB,GAClC,GAAC,CAAAvQ,IAAA,cAAAkE,IAKD,WACI,OAAO3F,KAAKkB,UAAU0uB,WAC1B,KAAC65B,CAAA,CAtBsC,CAAQjpD,EAAAiI,cAAtCghD,SAA8B,mBAAAxpD,iBAA9BwpD,GAA6BvpD,EAAAwI,4BAAAC,EAAA6M,gBAAAtV,EAAAwI,4BAAAG,EAAAkI,oBAAA7Q,EAAAwI,4BAAAK,EAAAH,iBAAA,EAA7B6gD,EAA8B,UAAAvpD,EAAA,kCAA9BupD,EAA6BtgD,UAAA,6BAAAyW,OAAA,CAAAu9B,KAAA,QAAAt9B,QAAA,CAAAu9B,WAAA,cAAAh0C,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,sLAlE7BgjB,UAAAC,MAAAC,EAAA,gNAYIF,UAAAG,MAAAD,EAAA,mLAWAF,UAAAI,MAAAF,EAAA,4ZA6BUF,UAAAM,MAAAJ,EAAA,yNA/DnBtwB,EAAAqN,yBAAA,cAAArN,CAGC,cAMOA,EAAA8Q,qBAAA,0BAAStH,EAAA2zC,YAAY,GALzBn9C,EAAAyuB,iBAAA,KASAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAA+B,cAOvBA,EAAA8Q,qBAAA,mBAAAtH,SAAAyzC,KAAgB,MAAOzzC,EAAA0zC,WAAAz9B,KAAAjW,EAAAyzC,KAAqB,GANhDj9C,EAAAyuB,iBAAA,KAUAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,mBAAAtH,SAAAyzC,KAAgB,OAAQzzC,EAAA0zC,WAAAz9B,KAAAjW,EAAAyzC,KAAqB,GANjDj9C,EAAAyuB,iBAAA,KAUAzuB,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,cAAArN,CAAyD,WAE/BA,EAAAuN,iBAAA,kCAAgCvN,EAAAsN,yBACtDtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,gEAEJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAAw3C,EAAA,6CAgBAzpD,EAAAiS,qBAAA,GAAAy3C,EAAA,6CAYJ1pD,EAAAsN,gCAtDYtN,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,kBAAApW,EAAAyzC,MAWAj9C,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,mBAAApW,EAAAyzC,MAUcj9C,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAApU,EAAAsU,sBAAA,KAAA9K,EAAAsmB,MAAA,eAElB9vB,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,IAAA7f,EAAAsU,sBAAA,MAAA9K,EAAAsmB,MAAAtmB,EAAAkmB,aAAA,WAAA1vB,EAAAsU,sBAAA,MAAA9K,EAAAyb,IAAAzb,EAAAkmB,aAAA,KAMiB1vB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAA0X,EAAAzoB,EAAA8V,sBAAA,MAAAtM,EAAAuZ,UAAA,KAAA0F,EAAAvf,WAAAlJ,EAAA0R,0BAAA,GAAAwqC,IAaHl8C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAysC,EAAAx9C,EAAA8V,sBAAA,MAAAtM,EAAAuZ,UAAA,KAAAy6B,EAAAV,ijBAejByM,CAA8B,uLC9G3C3rD,EAAA,OACAA,EAAA,OADA,IAEAyzB,EAAAzzB,EAAA,UAEAA,EAAA,OACAA,EAAA,iPAmBgBoC,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA2rC,GAAA,IAAAjmC,GAAA5W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAsF,GAAA9O,QAAO,GAEhB9H,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,yBAAmBvN,EAAAsN,wBAAAtN,EAAW,2BA8BhCA,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAAyE,GAEAxV,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA+H,EAAAC,cAAAD,EAAA/B,KAAA,2GArBhBzT,EAAAqN,yBAAA,WAAArN,CAGC,WACGA,EAAAyuB,iBAAA,MAAoBzuB,EAAAsN,yBACpBtN,EAAAqN,yBAAA,sBAAArN,CAAoD,mBAI5CA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAwE,GAAA,IAAAC,GAAA3V,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAqE,GAAAK,SAAA/E,EAAA,EAAAjR,CAAsB,yBAAAiR,GAAAjR,EAAAkR,wBAAAwE,GAAA,IAAAU,GAAApW,EAAAqR,0BAAA,OAG9BrR,EAAAsR,sBAAA8E,GAAAvD,WAAA,CAAA84B,QAAA,MAAA16B,EAAA,KAAAA,EAAAsC,KAGlB,GAE0BvT,EAAAiS,qBAAA,EAAA03C,EAAA,mDAMJ3pD,EAAAsN,wBAAAtN,IAAa,2CAdTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAgF,EAAAC,SAAAhW,CAAsB,iBAAAA,EAAA0R,0BAAA,EAAAisC,IASF39C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAC,EAAAG,WAAA,2BA0BpBlW,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAA64C,EAAAr2C,IAEAvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAm8C,EAAAn0C,cAAAm0C,EAAAn2C,KAAA,mEArBhBzT,EAAAqN,yBAAA,WAAArN,CAGC,WACUA,EAAAuN,iBAAA,WAAKvN,EAAAsN,yBACZtN,EAAAqN,yBAAA,sBAAArN,CAAqC,mBAK7BA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAuF,GAAA,IAAAC,GAAA1W,EAAAqR,0BAAA,OAERrR,EAAAsR,sBAAAoF,GAAA7D,WAAA,CAAA84B,QAAA16B,GAAAyF,GAAAV,SAAAzC,KAGlB,GAE0BvT,EAAAiS,qBAAA,EAAA43C,EAAA,mDAMJ7pD,EAAAsN,wBAAAtN,IAAa,2CAdTA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAU,EAAAuE,SAAAhW,CAAsB,iBAAAA,EAAA0R,0BAAA,EAAAisC,IASF39C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAArE,EAAAoR,QAAA,0FAqEhC7iB,EAAAqN,yBAAA,WAAArN,CAGC,YACwCA,EAAAuN,iBAAA,GAAUvN,EAAAsN,yBAC/CtN,EAAAqN,yBAAA,qBAIIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,IAAA64C,GAAA9pD,EAAAkR,wBAAAqP,GAAAxC,UAAAzG,GAAAtX,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAAgG,GAAAojC,WAAAoP,GAAA74C,IAAwB,iCAE5CjR,EAAAsN,wBAAAtN,EAAe,6DAPqBA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA01C,GAEjC9pD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAA0N,EAAAze,EAAA8V,sBAAA,IAAAqB,GAAA4L,UAAA,KAAAtE,EAAAvV,WAAAlJ,EAAA0R,0BAAA,EAAAq4C,IAAAhkD,SAAA+jD,GAAA9pD,CAEC,iBAAAA,EAAA0R,0BAAA,EAAAisC,GAAA,2BAdb39C,EAAAqN,yBAAA,eAAArN,CAIC,UACGA,EAAAyuB,iBAAA,MAAyCzuB,EAAAsN,yBACzCtN,EAAAiS,qBAAA,EAAA+3C,EAAA,4CAaJhqD,EAAAsN,iEAZyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAlE,EAAA1I,UAAA,+DAc7BlJ,EAAAqN,yBAAA,WAAArN,CAGC,eAMOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqyC,GAAA,IAAA3rC,GAAA5X,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAsG,GAAA9P,QAAO,GALpB9H,EAAAyuB,iBAAA,MASAzuB,EAAAsN,wBAAAtN,EAAS,EAIRN,yBAAsB,eAAtB8pD,EAAsB,WA2C/B,SAAAA,EAEYpL,EACArkC,EACA9Y,GACAD,GAA0B,IAAAI,GAAAtB,KAAAD,EAAAC,KAAA0pD,GAH1B1pD,KAAAs+C,cACAt+C,KAAAia,SACAja,KAAAmB,QACAnB,KAAAkB,YA/CLlB,KAAAu+C,WAAY,EACHv+C,KAAAijB,QAAUjjB,KAAKia,OAAOgJ,QACtBjjB,KAAAoJ,SAAWpJ,KAAKia,OAAO7Q,SACvBpJ,KAAAoW,UAAYpW,KAAKmB,KAAKq9C,iBACtBx+C,KAAA+iB,OAAS/iB,KAAKmB,KAAKs9C,cACnBz+C,KAAA0Q,KAAO1Q,KAAKia,OAAOvJ,KASnB1Q,KAAAgI,MAAQ,kBAAM1G,GAAKg9C,YAAYr/B,SAAS,EACxCjf,KAAA+S,WAAa,SAACyQ,IAAC,OAAKliB,GAAK2Y,OAAOlH,WAAWyQ,GAAE,EAC7CxjB,KAAA46C,WAAa,SAACviB,GAAGjT,IAAC,OAAK9jB,GAAK2Y,OAAO2gC,WAAWviB,GAAGjT,GAAE,EACnDplB,KAAA2+C,SAAW,SAACroB,IAAO,EAgC/Bt2B,KAAKu+C,YAAcv+C,KAAKs+C,WAC5B,CAACx+C,SAAA4pD,EAAA,EAAAjoD,IAAA,WAAAkE,IA3CD,WACI,OAAO3F,KAAKmB,KAAK+U,QACrB,EAAC0F,IACD,SAAoB1C,GAChBlZ,KAAKmB,KAAK+U,SAAWgD,CACzB,GAAC,CAAAzX,IAAA,qBAAAkE,IAOD,WACI,QAAS3F,KAAKkB,UAAUyE,IAAI,iCAChC,GAAC,CAAAlE,IAAA,gBAAAkE,IACD,WACI,OACI3F,KAAK4+C,sBACH5+C,KAAKkB,UAAUyE,IAAI,4BAE7B,GAAC,CAAAlE,IAAA,WAAAkE,IAED,WACI,SAAO4rB,EAAA4C,aACH5C,EAAAstB,SACIpkC,KAAKuX,MACLhyB,KAAKkB,UAAUyE,IAAI,iCAAmC,IAGlE,GAAC,CAAAlE,IAAA,WAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,uBAC9B,KAAC+jD,CAAA,CAzC8B,GAAtBA,SAAsB,mBAAAzpD,iBAAtBypD,GAAsBxpD,EAAAwI,4BAAAC,EAAAwW,kBAAA,GAAAjf,EAAAwI,4BAAAG,EAAAkI,oBAAA7Q,EAAAwI,4BAAAK,EAAAD,qBAAA5I,EAAAwI,4BAAAO,EAAAL,iBAAA,EAAtB8gD,EAAsB,UAAAxpD,EAAA,kCAAtBwpD,EAAsBvgD,UAAA,qBAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,+RA5JyBgjB,UAAAC,MAAAC,EAAA,4SAQPF,UAAAG,MAAAD,EAAA,6KA0DrBF,UAAAI,MAAAF,EAAA,gMAYIF,UAAAM,MAAAJ,EAAA,yKAUAF,UAAAO,MAAAL,EAAA,gMAciBF,UAAAgqB,MAAA9pB,EAAA,oGACjC,4EAGyCF,UAAAwuB,MAAAtuB,EAAA,oGACrC,yTA7FQF,UAAAyuB,MAAAvuB,EAAA,wZA6GqBF,UAAA0uB,MAAAxuB,EAAA,maA2BxCF,UAAA2uB,MAAAzuB,EAAA,iJArKLtwB,EAAAqN,yBAAA,UAAArN,CAEC,WAEOA,EAAAiS,qBAAA,EAAAg4C,EAAA,gBAUJjqD,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAA8DzuB,EAAAsN,yBAC9DtN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAGC,cAHDA,CAGC,UAEOA,EAAAyuB,iBAAA,KAA4CzuB,EAAAsN,yBAE5CtN,EAAAiS,qBAAA,GAAAi4C,EAAA,6CA2BAlqD,EAAAiS,qBAAA,GAAAk4C,EAAA,6CA4BAnqD,EAAAqN,yBAAA,YAAArN,CAAkC,YAC9BA,EAAAyuB,iBAAA,OAAgBzuB,EAAAsN,yBAChBtN,EAAAqN,yBAAA,sBAKIrN,EAAAuN,iBAAA,uCACJvN,EAAAsN,wBAAAtN,GAGJA,EAAAqN,yBAAA,YAAArN,CAAyC,YAAzCA,CAAyC,YAEjCA,EAAAyuB,iBAAA,OAAsBzuB,EAAAsN,yBACtBtN,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,OAAiBzH,EAAAgH,KAAAe,WAAA,CAAAM,KAAAZ,IAAiC,GAGrDjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAA0B,YACtBA,EAAAyuB,iBAAA,OAAoBzuB,EAAAsN,yBACpBtN,EAAAyJ,oBAAA,0BASJzJ,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,gBAAArN,CAAqC,WACjCA,EAAAyuB,iBAAA,0CAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAA+B,aAC3BA,EAAAyuB,iBAAA,0CAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,OAAiBzH,EAAAqJ,WAAA,CAAAiqC,SAAA7rC,IAAgC,kCAGrDjR,EAAAsN,wBAAAtN,KAGRA,EAAAiS,qBAAA,GAAAm4C,EAAA,iDAoBJpqD,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAAo4C,EAAA,qBAjJarqD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA60C,WAWTr+C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAvH,EAAAgH,MAMSxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAkF,GAAAjW,EAAA8V,sBAAA,MAAAtM,EAAA0M,YAAA,KAAAD,GAAA9Q,QA2BAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAuB,EAAAtS,EAAA8V,sBAAA,MAAAtM,EAAAqZ,SAAA,KAAAvQ,EAAAnN,QAAA,GAgCGnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,KAAAvH,EAAA+1C,UAEAv/C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAA8V,sBAAA,8BASI9V,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgH,KAAAhP,MAAAqQ,KAAA7R,CAA2B,iBAAAA,EAAA0R,0BAAA,GAAAisC,GAA3B39C,CAA2B,WAAAwJ,EAAAg2C,UAU3Bx/C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAu5C,GAAA9gD,EAAAgH,KAAA/K,IAAA,cAAA6kD,GAAA9oD,MAAAxB,CAAgC,UAAhCA,CAAgC,SAAhCA,CAAgC,UAAhCA,CAAgC,WAAAwJ,EAAAg2C,UAa5Cx/C,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAA3uB,EAAA8V,sBAAA,4BAAA9V,EAAA6uB,sBAAA,IAII7uB,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAA3uB,EAAA8V,sBAAA,kCAAA9V,EAAA6uB,sBAAA,IAGI7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAw5C,GAAAvqD,EAAA8V,sBAAA,MAAAtM,EAAAuZ,UAAA,KAAAwnC,GAAAzN,SAAA98C,CAAuC,iBAAAA,EAAA0R,0BAAA,GAAAisC,IAU9C39C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAy5C,GAAAxqD,EAAA8V,sBAAA,MAAAtM,EAAAN,WAAA,KAAAshD,GAAArlD,QAoBJnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA60C,wfAeAmL,CAAsB,qMChMnC,IAAAz/C,EAAAnM,EAAA,OACA0C,EAAA1C,EAAA,OACAwC,EAAAxC,EAAA,OAGAkc,GADAlc,EAAA,OACAA,EAAA,QACA4iD,EAAA5iD,EAAA,OACA6sD,EAAA7sD,EAAA,6IAsCoBoC,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAA2vC,GAEA1gD,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAizC,EAAAjrC,cAAAirC,EAAAjtC,KAAA,8CAuBX/T,qBAAmB,eAAnBgrD,EAAmB,SAAA/pD,GAAAC,EAAA8pD,EAAA/pD,GAAA,IAAAG,EAAAC,EAAA2pD,GA6E5B,SAAAA,EACY3wC,EACA/Y,GAA0B,IAAAI,EAAAvB,SAAAC,KAAA4qD,IAElCtpD,EAAAN,EAAAO,KAAAvB,OAHQia,SACA3Y,EAAAJ,YA9EII,EAAAw/C,cAAwB,EACvBx/C,EAAAm7B,SAAW,IAAIxyB,EAAAwV,aAEhBne,EAAA0zB,QAAU1zB,EAAK2Y,OAAOuxB,oBACtBlqC,EAAAiiB,QAAUjiB,EAAK2Y,OAAOsJ,QAE/BjiB,EAAA4mB,KAAO,EACP5mB,EAAAy/C,OAAS,CAAEjL,EAAG,GAAKC,EAAG,IAGbz0C,EAAAyR,WAAa,SAACyQ,GAAC,OAAKliB,EAAK2Y,OAAOlH,WAAWyQ,EAAE,EAM7CliB,EAAAyhB,OAASzhB,EAAK2Y,OAAOuxB,oBAAoBroC,QACrD7C,EAAA0b,KAAI,SAACgZ,GAAO,SACRx0B,EAAA6qC,QACIrW,EAAQhZ,IAAI,SAAC2Z,GAAM,OAAKA,EAAO3hB,IAAI,GACnC,KACH,IAIO1S,EAAA2/C,QAAU3/C,EAAK2Y,OAAOuxB,oBAAoBroC,QACtD7C,EAAA0b,KAAI,SAACgZ,GAAO,OACRA,EAAQhZ,IAAI,SAAC2Z,GAAM,MAAM,CACrBliB,GAAIkiB,EAAO/hB,QAAU+hB,EAAOliB,GAC5B4T,OAAQ,CAAC,WAAY,WACrBC,SAAU,kBAAMhmB,EAAKupD,aAAal1B,EAAc,EACnD,EAAE,IAIKr0B,EAAA8H,SAAW9H,EAAK2Y,OAAOhD,UAAU9T,QAC7C7C,EAAA0b,KAAI,SAACgZ,GACD,OAAO1zB,EAAKJ,UAAUyE,IAAI,yBACpB,GACAqvB,EAAQhZ,IAAI,SAAC2Z,GAAM,MAAM,CACrB5vB,SAAU4vB,EAAOliB,GACjBsU,QAAS4iC,EAAAG,+BACT3J,WAAW,EACXC,UAAU,EACVt+C,KAAM,CACF2Q,GAAIkiB,EAAO/hB,QAAU+hB,EAAOliB,GAC5BG,OAAQ+hB,EAAOhiB,KACfA,KAAMgiB,EAAOhiB,MAAQgiB,EAAO/hB,OAC5B6Z,KAAMnsB,EAAK2Y,OAAOonC,iBAAiB1rB,EAAOliB,KAE9CwU,QAAS,GACZ,EACX,IAGY3mB,EAAA6mB,UAASnO,EAAAgJ,eAAc,CACnC1hB,EAAK2Y,OAAOhD,UACZ3V,EAAK2Y,OAAOuxB,sBACbroC,QACC7C,EAAA0b,KAAI,SAAA1V,GAAA,IAAA8B,EAAA8a,EAAA5c,EAAA,GAAWykD,EAAY3iD,EAAA,UAAdA,EAAA,GACDg1B,OAAO,SAACjV,EAAQwN,GACpB,IAAM4rB,EAAUjgD,EAAKJ,UAAUyE,IAAI,uBAAyB,GACtD2gC,EAASykB,EAAa76B,KAAK,SAAC7sB,GAAC,OAAKA,EAAEoQ,KAAOkiB,EAAOliB,EAAE,GACpD,OACA,OACN0U,SAAM,IAAA/jB,OAAKuxB,EAAO/hB,QAAU+hB,EAAOliB,KAAQ,CACvC+tC,KACID,EAAO,UAAAn9C,OAAWkiC,KAClBib,EAAO,GAAAn9C,OAAIkiC,KACXoa,EAAAe,gBAAe,GAAAr9C,OAAIkiC,KAEpBne,CACX,EAAG,GAAG,IAEZ7mB,CAOF,CAACxB,SAAA8qD,EAAA,EAAAnpD,IAAA,UAAAkE,IArED,WAAkB,IAAA+7C,EACd,OAAiB,QAAVA,EAAA1hD,KAAKkX,aAAK,IAAAwqC,OAAA,EAAVA,EAAY9tC,SAAU,EACjC,GAAC,CAAAnS,IAAA,WAAAC,MAqED,WAAQ,IAAAyD,EAAAnF,KACJA,KAAKiT,aACD,gBACAjT,KAAK+iB,OAAO5P,UAAU,SAAC4P,GACdA,EAAOmN,KAAK,SAAC7sB,GAAC,IAAAu+C,EAAA,OAAKv+C,EAAEoQ,MAAiB,QAAfmuC,EAAKz8C,EAAK+R,aAAK,IAAA0qC,OAAA,EAAVA,EAAYnuC,GAAE,KAC3CtO,EAAK+R,MAAQ6L,EAAO,GAE5B,GAER,GAAC,CAAAthB,IAAA,eAAAC,MAEM,SAAai0B,GAChB31B,KAAKy8B,SAAS9c,KAAKgW,EACvB,GAAC,CAAAl0B,IAAA,UAAAC,MAEM,SAAQogD,GACX9hD,KAAKkoB,KAAO8f,KAAKiQ,IAAI,GAAKjQ,KAAK+Z,IAAI,GAAID,GAC3C,GAAC,CAAArgD,IAAA,WAAAC,MAEM,WACH1B,KAAKkoB,KAAO,EACZloB,KAAK+gD,OAAS,CAAEjL,EAAG,GAAKC,EAAG,GAC/B,KAAC6U,CAAA,CA1G2B,CAAQpqD,EAAAiI,cAA3BmiD,SAAmB,mBAAA3qD,iBAAnB2qD,GAAkB1qD,EAAAwI,4BAAAC,EAAAoI,oBAAA7Q,EAAAwI,4BAAAG,EAAAD,iBAAA,EAAlBgiD,EAAmB,UAAA1qD,EAAA,kCAAnB0qD,EAAkBzhD,UAAA,iBAAAyW,OAAA,CAAAkhC,aAAA,gBAAAjhC,QAAA,CAAA4c,SAAA,YAAArzB,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,ooBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA/CvBvJ,EAAAqN,yBAAA,aAEIrN,EAAA8Q,qBAAA,sBAAAG,GAAA,OAAAzH,EAAAwe,KAAA/W,CAAA,EAAAjR,CAAe,wBAAAiR,GAAA,OAAAzH,EAAAq3C,OAAA5vC,CAAA,6FAKlBjR,EAAAsN,yBACDtN,EAAAqN,yBAAA,UAAArN,CAEC,qBAFDA,CAEC,kBAOWA,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAwN,MAAA/F,CAAA,GAGAjR,EAAAiS,qBAAA,EAAA64C,EAAA,kDAMJ9qD,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,UAAArN,CAGC,eACkCA,EAAA8Q,qBAAA,0BAAStH,EAAAu4C,QAAe,IAAfv4C,EAAAwe,KAAmB,GACvDhoB,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,GAErBA,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAAgCrN,EAAA8Q,qBAAA,0BAAStH,EAAAu4C,QAAAv4C,EAAAwe,MAAgB,EAAI,KAAK,GAC9DhoB,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,eAAQvN,EAAAsN,wBAAAtN,GAEtBA,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAA6BrN,EAAA8Q,qBAAA,0BAAStH,EAAAw4C,UAAU,GAC5ChiD,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,YAzCrBA,EAAA+Q,qBAAA,MAAAvH,EAAAsoC,QAAA9xC,CAAe,OAAAwJ,EAAAwe,KAAfhoB,CAAe,SAAAwJ,EAAAq3C,OAAf7gD,CAAe,WAAAA,EAAA8V,sBAAA,IAAAtM,EAAAN,UAAflJ,CAAe,SAAAA,EAAA8V,sBAAA,KAAAtM,EAAAye,QAAfjoB,CAAe,UAAAA,EAAA8V,sBAAA,KAAAtM,EAAAu3C,UAgBP/gD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAwN,MAAAhX,CAAmB,iBAAAA,EAAA0R,0BAAA,GAAAC,IAIC3R,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,KAAAtM,EAAAqZ,2XA0B3B6nC,CAAmB,uNCvEhC,IAAA58C,EAAAlQ,EAAA,UACAA,EAAA,OACAA,EAAA,sMA0DwBoC,EAAAqN,yBAAA,yBAKIrN,EAAA8Q,qBAAA,qBAAAG,GAAAjR,EAAAkR,wBAAA8b,GAAA,IAAA3M,EAAArgB,EAAAqR,wBAAA,UAAarR,EAAAsR,sBAAA+O,EAAA8Y,gBAAAloB,GAAuB,EAApCjR,CAAqC,oBAAAiR,GAAAjR,EAAAkR,wBAAA8b,GAAA,IAAA9M,EAAAlgB,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA4O,EAAAunC,KAAAx2C,EAAA,GAGxCjR,EAAAsN,wBAAA,4CANGtN,EAAA+Q,qBAAA,eAAA8Q,EAAAmb,UAAA,KAAAnb,EAAAmb,UAAAzpB,GAAAvT,CAAwB,WAAA6hB,EAAAsb,aAAxBn9B,CAAwB,YAAA6hB,EAAAwX,UAAA,2BAHhCr5B,EAAAyhB,kCAAA,GACIzhB,EAAAiS,qBAAA,EAAA84C,EAAA,2BASJ/qD,EAAA4hB,wGARS5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAsB,EAAA4qC,KAAAj9C,CAAuB,WAAAqtB,EAAA,+DAcpCrtB,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAiF,GAAA,IAAAC,EAAApW,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAA8E,EAAA4mB,UAAqB,KAAI,GAN7Bh9B,EAAAyuB,iBAAA,MAUAzuB,EAAAsN,wBAAA,+DAgCItN,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA8d,GAAA,IAAA1Y,EAAAtW,EAAAqR,0BAAAiF,SAAAmxC,KAAgB,KAAIznD,EAAAsR,sBAAAgF,EAAA0mB,UAAc,KAAI,GAEtCh9B,EAAAuN,iBAAA,cACJvN,EAAAsN,wBAAA,+DA4BRtN,EAAAqN,yBAAA,mBAGIrN,EAAA8Q,qBAAA,oBAAAG,GAAAjR,EAAAkR,wBAAA83B,GAAA,IAAAzqB,EAAAve,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAiN,EAAAye,UAAA/rB,EAAA,GAEJjR,EAAAsN,wBAAA,2CAHItN,EAAA+Q,qBAAA,iBAAAK,EAAA4rB,UAAA,+DAMJh9B,EAAAqN,yBAAA,oBAIIrN,EAAA8Q,qBAAA,mBAAAG,GAAAjR,EAAAkR,wBAAA85C,GAAA,IAAAhN,EAAAh+C,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAA0sC,EAAAhhB,UAAA/rB,EAAA,GAEJjR,EAAAsN,wBAAA,2CAJItN,EAAA+Q,qBAAA,OAAAiB,EAAAy1C,KAAAznD,CAAa,iBAAAgS,EAAAgrB,UAAA,KAAAhrB,EAAAgrB,UAAAzpB,GAAA,EA3JhB7T,iBAAiB,oBAmKjBA,6BAA0B,eAA1B2oD,EAA0B,WAcnC,SAAAA,EACYnG,EACAlhD,EACAkuB,EAEAirB,GAGPt6C,EAAAC,KAAAuoD,GAPOvoD,KAAAoiD,cACApiD,KAAAkB,YACAlB,KAAAovB,cAEApvB,KAAAq6C,QAjBLr6C,KAAAuf,SAA2B,GAC3Bvf,KAAAm9C,KAAO,OACPn9C,KAAA2nD,KAAoB,KAoBvB3nD,KAAKuf,SAAQ8D,EAAQg3B,EAAM3gB,OAAS,IACpC15B,KAAKovB,YAAYrc,WAAWsnC,EAAMp3B,QACtC,CAACnjB,SAAAyoD,EAAA,EAAA9mD,IAAA,eAAAkE,IApBD,WACI,OAAO3F,KAAKuf,SAASvD,IAAI,SAAC3Y,GAAC,OAAKA,EAAEoQ,EAAE,GAAEsB,KAAK,IAC/C,GAAC,CAAAtT,IAAA,YAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAc/F,EAAA0oD,iBAAmB,EAC3D,GAAC,CAAA7mD,IAAA,aAAAC,MAgBM,SAAW+R,GACd,OAAOA,GAAMzT,KAAKq9B,aAAap3B,SAASwN,EAC5C,GAAC,CAAAhS,IAAA,cAAAC,MAEM,SAAYya,EAAoBmhB,GACnC,IAAMlqB,EAAOpT,KAAKuf,SAASrD,OAAO,SAAC7Y,GAAC,OAAKA,EAAEoQ,KAAO0I,EAAK1I,EAAE,GACrD6pB,GAAOlqB,EAAK6jB,KAAK9a,GACrBnc,KAAKuf,SAAWnM,GACXpT,KAAKq6C,MAAMp3B,QAAQyV,OAAS4E,GAAOt9B,KAAKoiD,YAAYp6C,MAAM,CAACmU,GACpE,GAAC,CAAA1a,IAAA,kBAAAC,MAEM,SAAgBya,GACnB,IAAMse,EAAWz6B,KAAKu5B,UAChBmB,GAAaD,EAASx0B,SAASkW,EAAK1I,IAEtCzT,KAAKkB,UAAUy5B,gBAAgB/6B,EAAA0oD,eAD/B5tB,EAC6C,GAAAt2B,OAAAif,EACtCoX,GAAQ,CACXte,EAAK1I,KAKLgnB,EAASve,OAAO,SAAC7Y,GAAC,OAAKA,IAAM8Y,EAAK1I,EAAE,GAGhD,KAAC80C,CAAA,CArDkC,GAA1BA,SAA0B,mBAAAtoD,iBAA1BsoD,GAA0BroD,EAAAwI,4BAAAC,EAAA05C,cAAAniD,EAAAwI,4BAAAG,EAAAD,iBAAA1I,EAAAwI,4BAAAK,EAAAgI,oBAAA7Q,EAAAwI,4BAkBvBsF,EAAAwvB,iBAAe,EAlBlB+qB,EAA0B,UAAAroD,EAAA,kCAA1BqoD,EAA0Bp/C,UAAA,0BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,wOAtJdgjB,UAAAC,MAAAC,EAAA,8nCAwERF,UAAAG,MAAAD,EAAA,wXAgBwCF,UAAAI,MAAAF,EAAA,qIAGMF,UAAAM,MAAAJ,EAAA,oHAC3C,+LA2B+BF,UAAAO,MAAAL,EAAA,oGACnB,8XA3DfF,UAAAgqB,MAAA9pB,EAAA,uVApETtwB,EAAAqN,yBAAA,UAAArN,CAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAEnBA,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,KAAoBzuB,EAAAsN,yBACpBtN,EAAAqN,yBAAA,UAAArN,CAA4D,cAOpDA,EAAA8Q,qBAAA,0BAAAtH,EAAAyzC,KAAgB,KAAK,GAErBj9C,EAAAuN,iBAAA,WACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,0BAAAtH,EAAAyzC,KAAgB,MAAM,GAEtBj9C,EAAAuN,iBAAA,aACJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,aAGIrN,EAAAyJ,oBAAA,uBAGAzJ,EAAAqN,yBAAA,WAAArN,CAEC,gCAGOA,EAAA8Q,qBAAA,sBAAAG,GAAA,OAAAzH,EAAAyzC,KAAAhsC,CAAA,GACHjR,EAAAsN,yBACDtN,EAAAiS,qBAAA,GAAAg5C,EAAA,uBAWJjrD,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,gBAGIrN,EAAAiS,qBAAA,GAAAi5C,EAAA,iBAWAlrD,EAAAqN,yBAAA,gBAAArN,EAAAyuB,iBAAA,OAUAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBASqCA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,OAA6CzuB,EAAAsN,wBAAAtN,KAGrDA,EAAAqN,yBAAA,WAAArN,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,aACIrN,EAAAiS,qBAAA,GAAAk5C,EAAA,iBAUAnrD,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,0BACiCtH,EAAA+zB,YAAA/zB,EAAAwzB,WACvDxzB,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IACA,GACsBvT,EAAAqN,yBAAA,YAAArN,CAA+B,kBACDA,EAAAuN,iBAAA,IAExBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,OAMAzuB,EAAAsN,wBAAAtN,WAMpBA,EAAAiS,qBAAA,GAAAm5C,EAAA,0BAAAprD,EAAAomB,kCAQApmB,EAAAiS,qBAAA,GAAAo5C,EAAA,0BAAArrD,EAAAomB,0EApIgBpmB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,kBAAApW,EAAAyzC,MAUAj9C,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,mBAAApW,EAAAyzC,MAkBAj9C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAyzC,MAEWj9C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAAi+C,KAAAznD,CAAa,WAAAmR,GAqB3BnR,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAwzB,WAWDh9B,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,OAAApW,EAAAwzB,WADAh9B,EAAA+Q,qBAAA,mBAAAvH,EAAA6V,UAeArf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAvH,EAAA6V,UAUJrf,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAnlB,EAAA6V,SAAAla,QAAAnF,EAAA6uB,sBAAA,IAMS7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAi+C,MAWDznD,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,UAAApW,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,KADAvT,EAAA+Q,qBAAA,YAAAvH,EAAAwzB,WAO8Bh9B,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA5K,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IAAA,gBAS1BvT,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAnlB,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IAAA,wCAAAvT,EAAA6uB,sBAAA,yNAyBfw5B,CAA0B,0PC5KvC,IAAA/nD,EAAA1C,EAAA,OACAyC,EAAAzC,EAAA,MAOAkc,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,UAQAA,EAAA,4BA2Ba8B,iBAAc,eAAdw3B,EAAc,WA+DvB,SAAAA,EAAoBj2B,GAAyBpB,EAAAC,KAAAo3B,GAAzBp3B,KAAAmB,OA9DZnB,KAAAwrD,OAAS,IAAIxxC,EAAAqB,gBAAgB,IAC7Brb,KAAAghD,QAAU,IAAIhnC,EAAAqB,gBAAgB,GACtBrb,KAAAkpD,kBAA2ClvC,EAAAgJ,eAAc,CACrEhjB,KAAKmB,KAAKoX,gBACVvY,KAAKghD,UACN79C,QACC7C,EAAA4b,QAAO,SAAA5V,GAAK,QAAL4c,EAAA5c,EAAA,GAAK,EAAW,MACvBhG,EAAAiyB,WAAU,SAAApP,GAAA,IAAAC,EAAAF,EAAAC,EAAA,GAAK,SACX5iB,EAAAixC,mBADWpuB,EAAA,GACW3P,GAAI,CAAEE,KAAM,YAAaxQ,QAC3C7C,EAAA2yB,YAAW,oBAAMjZ,EAAAO,IAAG,IAAIha,EAAAkrD,cAAgB,GAC3C,MAELnrD,EAAA0b,KAAI,SAAC3Y,GAAsB,SACvB7C,EAAA4yB,SACI/vB,EAAE2Y,IAAI,SAAC3Y,GAAC,IAAAqoD,EAAAC,EAAA,OACc,QAAlBD,EAAAroD,EAAEsuC,SAAS3c,eAAO,IAAA02B,OAAA,EAAlBA,EAAoBp0C,mBAAmB8zB,MACf,QADoBugB,EACtCtoD,EAAEsuC,SAAS3c,eAAO,IAAA22B,OAAA,EAAlBA,EAAoBr0C,QAAQ0E,IAAI,SAAC2rC,GAAI,OAAA73B,IAAA,GAC9B63B,GAAI,IACP3zC,KAAM3Q,EAAE2Q,MAAI,GAEhB,EAAE,GAEf,MAEL1T,EAAA+yB,aAAY,IAGArzB,KAAAi1B,SAAWj1B,KAAKkpD,eAAe/lD,QAC3C7C,EAAA0b,KAAI,SAAC4vC,GACD,IAC4B9zB,EADtB9C,EAAoB,GAAG+C,EAAAC,EACV4zB,GAAS,QAAA3zB,EAAA,WAAE,IAAnB0vB,EAAI7vB,EAAAp2B,MACXszB,EAAQiC,KAAIjyB,MAAZgwB,EAAO3R,EACAskC,EAAK3yB,QAAQhZ,IACZ,SAAC3Y,GAAC,OAAAysB,IAAA,GAESzsB,GAAC,IACJwuC,QAAS8V,EAAKl0C,GACdG,OAAQ+zC,EAAK/zC,OACbiiB,SAAU8xB,EAAK3zC,KAAKP,IAAE,MAR1C,IAAAskB,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MAAAH,GAYC,OAAArN,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACD,OAAOrD,CACX,IAGYh1B,KAAA6rD,qBAAoB7xC,EAAAgJ,eAAc,CAC9ChjB,KAAKwrD,OACLxrD,KAAKi1B,WACN9xB,QACC7C,EAAA0b,KAAI,SAAA8iB,GAAA,IAAAvL,EAAArQ,EAAA4b,EAAA,GAAE5nB,EAAKqc,EAAA,GAAS,OAAAA,EAAA,GACRrX,OACJ,SAAC7Y,GAAC,QAAO6T,GAAS7T,EAAEwyB,WAAa3e,IAAU7T,EAAEkpC,QAAQ,EACxD,GAQuC,CAACzsC,SAAAs3B,EAAA,EAAA31B,IAAA,WAAAC,MAJ1C,SAASwV,GACZlX,KAAKwrD,OAAOhpD,KAAK0U,EACrB,GAAC,CAAAzV,IAAA,cAAAC,OAAAoqD,EAAAnqD,EAAAC,IAAAC,KAIM,SAAAC,EAAkBkzB,GAAqB,OAAApzB,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,KACpCjC,EAAAwrD,gBAAe/rD,KAAKmB,KAAK+U,SAASzC,GAAI,CACxCE,KAAM,UACNE,YAAa,GACbyD,QAAS0d,IACX,OACFh1B,KAAKghD,QAAQx+C,KAAKiY,KAAKuX,OAAO,wBAAA1vB,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACjC,SAAAgsD,EAAA3uC,GAAA,OAAAyuC,EAAA9mD,MAAAhF,KAAAiF,UAAA,MAAAmyB,EAXA,IAAA00B,CAWA,CAxEsB,GAAd10B,SAAc,mBAAAn3B,iBAAdm3B,GAAcl3B,EAAAwd,mBAAA/U,EAAAG,qBAAA,EAAdsuB,EAAc,WAAAl3B,EAAA,oCAAdk3B,EAAczZ,QAAdyZ,EAAcxZ,UAAAC,WAFX,SAEHuZ,CAAc,uLC7C3B,IAAAntB,EAAAnM,EAAA,OAOAK,EAAAL,EAAA,UACAA,EAAA,uGAiBgBoC,EAAAyJ,oBAAA,+DACIzJ,EAAA+Q,qBAAA,SAAAa,EAAA+K,MAAA4O,OAAA,wHAXZvrB,EAAAyhB,kCAAA,GACIzhB,EAAAqN,yBAAA,eASIrN,EAAAiS,qBAAA,EAAA85C,EAAA,wBAKA/rD,EAAAqN,yBAAA,cAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAF,EAAAtJ,MAAA2X,OAAY,GAGrBzf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,GAExBA,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAC,GAAA,IAAAa,EAAAhS,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAU,EAAAipB,UAAAxb,OAAgB,GAGzBzf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,GAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,UAAArN,CAAsD,eAAtDA,CAAsD,WAG1CA,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAyJ,oBAAA,SACAzJ,EAAAqN,yBAAA,eAAArN,CAAmC,YAC/BA,EAAAyuB,iBAAA,OAA4CzuB,EAAAsN,yBAC5CtN,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAAmCzuB,EAAAsN,wBAAAtN,GAEvCA,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,mBAAYvN,EAAAsN,yBACtBtN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,wBAAAtN,KAGRA,EAAAyJ,oBAAA,SACAzJ,EAAAqN,yBAAA,gBAAArN,CAAsC,YAClCA,EAAAyuB,iBAAA,OAAoDzuB,EAAAsN,yBACpDtN,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAAsBzuB,EAAAsN,wBAAAtN,GAE1BA,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpBtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAA0BzuB,EAAAsN,wBAAAtN,GAE9BA,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBACdtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAAkBzuB,EAAAsN,wBAAAtN,KAG1BA,EAAAqN,yBAAA,iBAIIrN,EAAAyJ,oBAAA,yBAMJzJ,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA2D,gBAMnDA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAC,GAAA,IAAA0Q,EAAA7hB,EAAAqR,0BAAAwQ,SAAAsZ,QAAAtZ,EAAAsZ,OAA2Bn7B,EAAAsR,sBAAAuQ,EAAAuZ,aAAA3b,KAAAoC,EAAAsZ,QAAyB,GAEpDn7B,EAAAqN,yBAAA,YAAArN,CAA8C,kBACfA,EAAAuN,iBAAA,IAEzBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,OAIhBA,EAAA4hB,iCAAA,2CA9GQ5hB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,gBAAAvN,EAAAsK,MAAA4O,OAAA,KAAAlZ,EAAAsK,MAAA4O,OAAApmB,OAAAnF,CAAsC,aAAAqS,EAAAsK,MAAA4O,OAAA,KAAAlZ,EAAAsK,MAAA4O,OAAApmB,OAAtCnF,CAAsC,iBAAAqS,EAAAsK,MAAA4O,QAAAlZ,EAAAsK,MAAA4O,OAAApmB,QAAtCnF,CAAsC,eAAAqS,EAAAsK,MAAA4O,QAAAlZ,EAAAsK,MAAA4O,OAAApmB,QAAtCnF,CAAsC,0BAAAqS,EAAAsK,MAAA4O,QAAAlZ,EAAAsK,MAAA4O,OAAApmB,SAQjCnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAsB,EAAAsK,MAAA4O,OAAA,KAAAlZ,EAAAsK,MAAA4O,OAAApmB,QAgBDnF,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,cAAAvN,EAAAgpB,IAAAr7B,CAAyB,gBAAAqS,EAAAgpB,KAKfr7B,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAAgpB,IAAA,8BAQNr7B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAAsK,MAAAlH,cAAApD,EAAAsK,MAAAlJ,KAAA,KAQmCzT,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAtc,EAAAsK,MAAAmD,UAAA9f,EAAA6uB,sBAAA,IAK/B7uB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAA4E,EAAA2E,MAAA,KAAA3E,EAAA2E,MAAAvB,gBAAA,MAAApD,EAAA2E,MAAA,KAAA3E,EAAA2E,MAAAvD,MAAA,KAMAzT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAA4E,EAAA2D,SAAA,KAAA3D,EAAA2D,SAAAia,WAAA,MAAA5d,EAAA2D,SAAA,KAAA3D,EAAA2D,SAAAP,gBAAA,MAAApD,EAAA2D,SAAA,KAAA3D,EAAA2D,SAAAvC,MAAA,KA8BJzT,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,MAAAsB,EAAAy/B,QAAA9xC,CAAe,WAAAqS,EAAAnJ,SAAflJ,CAAe,UAAAA,EAAA0R,0BAAA,GAAAs6C,IAUnBhsD,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,UAAAvN,EAAA8oB,QAK+Bn7B,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAA8oB,OAAA,gBAIvBn7B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAA8oB,OAAA,+DAOhBn7B,EAAAqN,yBAAA,WAAArN,CAGC,UACGA,EAAAyuB,iBAAA,MAEAzuB,EAAAsN,wBAAAtN,IAiBHN,+BAA4B,eAA5BusD,EAA4B,WAwBrC,SAAAA,EAAoBhrD,GAAyBpB,EAAAC,KAAAmsD,GAAzBnsD,KAAAmB,OAtBJnB,KAAAu7B,KAAe,EACfv7B,KAAAq7B,QAAkB,EAEjBr7B,KAAAs7B,aAAe,IAAIrxB,EAAAwV,aACnBzf,KAAAgI,MAAQ,IAAIiC,EAAAwV,aACZzf,KAAAm7B,UAAY,IAAIlxB,EAAAwV,aAE1Bzf,KAAAgyC,QAAU,GACVhyC,KAAAoJ,SAA4B,EAca,CAACtJ,SAAAqsD,EAAA,EAAA1qD,IAAA,QAAAkE,IAZjD,WAAgB,IAAAymD,EAAAC,EACZ,OAAOrsD,KAAKmB,KAAK8uB,YAAY,CAAW,QAAXm8B,EAACpsD,KAAK6c,aAAK,IAAAuvC,OAAA,EAAVA,EAAYp4C,KAAKP,OAAkB,QAAd44C,EAAIrsD,KAAK6c,aAAK,IAAAwvC,OAAA,EAAVA,EAAYr4C,KACvE,GAAC,CAAAvS,IAAA,WAAAkE,IAED,WAAmB,IAAArE,EAAAtB,KACf,OAAOA,KAAKmB,KAAKiV,UAAU8Z,KACvB,SAAC7sB,GAAC,IAAAipD,EAAAC,EAAA,OACY,QAAVD,EAAAhrD,EAAKub,aAAK,IAAAyvC,OAAA,EAAVA,EAAYt4C,KAAKP,MAAOpQ,EAAEoQ,KAChB,QAAV84C,EAAAjrD,EAAKub,aAAK,IAAA0vC,OAAA,EAAVA,EAAYv4C,KAAKC,aAAc5Q,EAAEoQ,EAAE,EAE/C,GAAC,CAAAhS,IAAA,cAAAC,MAIM,SAAYw4B,GACXA,EAAQrd,OAAS7c,KAAK6c,OACtB7c,KAAKwsD,gBAEb,GAAC,CAAA/qD,IAAA,iBAAAC,MAEO,WAAc,IAAAggD,EAAA+K,EAClBzsD,KAAKgyC,QAAoB,QAAb0P,EAAG1hD,KAAKkX,aAAK,IAAAwqC,OAAA,EAAVA,EAAY9tC,OAC3B5T,KAAKoJ,SAAW,CACZ,CACIrD,SAAoB,QAAZ0mD,EAAEzsD,KAAK6c,aAAK,IAAA4vC,OAAA,EAAVA,EAAY74C,OACtBmU,QAAS5pB,EAAA6pB,iBAGrB,KAACmkC,CAAA,CAxCoC,GAA5BA,SAA4B,mBAAAlsD,iBAA5BksD,GAA4BjsD,EAAAwI,4BAAAC,EAAAG,qBAAA,EAA5BqjD,EAA4B,UAAAjsD,EAAA,kCAA5BisD,EAA4BhjD,UAAA,4BAAAyW,OAAA,CAAA/C,MAAA,QAAA0e,IAAA,MAAAF,OAAA,UAAAxb,QAAA,CAAAyb,aAAA,eAAAtzB,MAAA,QAAAmzB,UAAA,aAAA/xB,SAAA,CAAAlJ,EAAA+6B,gCAAA3xB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,8hBA7FgBgjB,UAAAC,MAAAC,EAAA,8HAGzBF,UAAAG,MAAAD,EAAA,0JAqByBF,UAAAI,MAAAF,EAAA,gGAGzBF,UAAAM,MAAAJ,EAAA,+FAIAF,UAAAO,MAAAL,EAAA,mGAIAF,UAAAgqB,MAAA9pB,EAAA,ikBAuCuBF,UAAAwuB,MAAAtuB,EAAA,wJAxH/CtwB,EAAAiS,qBAAA,EAAAu6C,EAAA,wBAmHAxsD,EAAAiS,qBAAA,EAAAw6C,EAAA,yBAAAzsD,EAAAomB,yEAnHepmB,EAAA+Q,qBAAA,OAAAvH,EAAAmT,MAAA3c,CAAa,WAAAiuB,EAAA,gTA2IvBg+B,CAA4B,uRC1JzC,IAAAliD,EAAAnM,EAAA,OAEA0C,GADA1C,EAAA,OACAA,EAAA,QAEAwC,GADAxC,EAAA,MACAA,EAAA,QACA8uD,EAAA9uD,EAAA,UACAA,EAAA,qHAuCYoC,EAAAqN,yBAAA,YAMIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iEADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAAxM,SAAA,mEAYJ7F,EAAAqN,yBAAA,WAAArN,CAAkE,OAC3DA,EAAAuN,iBAAA,GAAUvN,EAAAsN,yBACbtN,EAAAqN,yBAAA,eAIIrN,EAAA8Q,qBAAA,uBAAA8rC,EAAA58C,EAAAkR,wBAAA8Q,GAAAjE,UAAAnM,EAAA5R,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAM,EAAA+6C,cAAA/P,GAAmB,GAE5B58C,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,IAAW,2BAP3BA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAwoC,EAAA,EAoCNl9C,sCAAoC,eAApCktD,EAAoC,SAAAjsD,GAAAC,EAAAgsD,EAAAjsD,GAAA,IAsC5CksD,EAtC4C/rD,EAAAC,EAAA6rD,GAsB7C,SAAAA,EACY5P,EACA9tB,EACAjuB,EACAD,GAA0B,IAAAI,EAAAvB,SAAAC,KAAA8sD,IAElCxrD,EAAAN,EAAAO,KAAAvB,OALQk9C,UACA57C,EAAA8tB,cACA9tB,EAAAH,OACAG,EAAAJ,YAzBII,EAAA67C,KAAuB,OACtB77C,EAAA87C,WAAa,IAAInzC,EAAAwV,aAClBne,EAAA2hB,QAAU3hB,EAAK8tB,YAAYnM,QACpC3hB,EAAAyE,SAAmB,GAWVzE,EAAA0rD,YAAc,kBAC1B1rD,EAAK47C,QAAQjoC,KAAK23C,EAAAK,6BAA6B,EAAC3rD,CAapD,CAACxB,SAAAgtD,EAAA,EAAArrD,IAAA,QAAAkE,IAvBD,WACI,OAAO3F,KAAKovB,YAAY1e,KAAKhP,MAAMqQ,IACvC,GAAC,CAAAtQ,IAAA,MAAAkE,IAED,WACI,IAAAunD,EAA2BltD,KAAKovB,YAAY1e,KAAKhP,MACjD,OADYwrD,EAAJn7C,KACiB,GADHm7C,EAARl7C,SACgB,GAClC,GAAC,CAAAvQ,IAAA,cAAAkE,IAKD,WACI,OAAO3F,KAAKkB,UAAU0uB,WAC1B,GAAC,CAAAnuB,IAAA,WAAAC,MAWM,WAAQ,IAAAyD,EAAAnF,KACXA,KAAKiT,aACD,OACAjT,KAAKijB,QAAQ9P,UAAU,SAAA7M,GAAU,OAC7BnB,EAAKgoD,gBAAgB,CADQ7mD,EAAPulC,SACS,GAG3C,GAAC,CAAApqC,IAAA,gBAAAC,OAAAqrD,EAAAprD,EAAAC,IAAAC,KAEM,SAAAC,EAAoBsrD,GAAY,IAAA1rD,EAAA,OAAAE,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACfxC,KAAKovB,YAAYnM,QAAQ9f,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,OACtEtD,KAAKovB,YAAYrc,WAAU+c,IAAA,GADrBpuB,EAAKY,EAAA4B,MAEC,IACRkF,UAAW1H,EAAM0H,UAAY,IAAI8S,OAAO,SAAC7Y,GAAC,OAAKA,IAAM+pD,CAAI,MAC1D,wBAAA9qD,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACN,SAAA6sD,EAAAxvC,GAAA,OAAA0vC,EAAA/nD,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,kBAAAC,MAEO,WAAuC,IAErCya,EADQnc,KAAKmB,KAAK8uB,YADJhrB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,KAEnBjF,KAAKmB,KAAK+U,SAChClW,KAAK+F,SAAWoW,GAAMxG,cAAgBwG,GAAMxI,MAAQ,EACxD,KAACm5C,CAAA,CApD4C,CAAQtsD,EAAAiI,cAA5CqkD,SAAoC,mBAAA7sD,iBAApC6sD,GAAmC5sD,EAAAwI,4BAAAC,EAAA6M,gBAAAtV,EAAAwI,4BAAAG,EAAAkI,oBAAA7Q,EAAAwI,4BAAAK,EAAAD,qBAAA5I,EAAAwI,4BAAAO,EAAAL,iBAAA,EAAnCkkD,EAAoC,UAAA5sD,EAAA,kCAApC4sD,EAAmC3jD,UAAA,oCAAAyW,OAAA,CAAAu9B,KAAA,QAAAt9B,QAAA,CAAAu9B,WAAA,cAAAh0C,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,GAAA+D,OAAA,kJAlFnCgjB,UAAAC,MAAAC,EAAA,uLAWIF,UAAAG,MAAAD,EAAA,0JAUAF,UAAAI,MAAAF,EAAA,oYAqBuDF,UAAAM,MAAAJ,EAAA,gHACnD,oPAlDbtwB,EAAAqN,yBAAA,cAAArN,CAAmE,cAK3DA,EAAA8Q,qBAAA,0BAAStH,EAAAsjD,aAAa,GAJ1B9sD,EAAAyuB,iBAAA,KAQAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAA+B,cAMvBA,EAAA8Q,qBAAA,mBAAAtH,SAAAyzC,KAAgB,MAAOzzC,EAAA0zC,WAAAz9B,KAAAjW,EAAAyzC,KAAqB,GALhDj9C,EAAAyuB,iBAAA,KASAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAKIrN,EAAA8Q,qBAAA,mBAAAtH,SAAAyzC,KAAgB,OAAQzzC,EAAA0zC,WAAAz9B,KAAAjW,EAAAyzC,KAAqB,GALjDj9C,EAAAyuB,iBAAA,KASAzuB,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,eACIrN,EAAAiS,qBAAA,EAAAk7C,EAAA,aAQAntD,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,kCACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,gEAEJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,sCAEAzuB,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAAm7C,EAAA,6CAWJptD,EAAAsN,gCAhDYtN,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,kBAAApW,EAAAyzC,MAUAj9C,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,mBAAApW,EAAAyzC,MAaHj9C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA3D,UAKD7F,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAsU,sBAAA,MAAA9K,EAAAsmB,MAAA,mBAGA9vB,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,IAAA7f,EAAAsU,sBAAA,MAAA9K,EAAAsmB,MAAAtmB,EAAAkmB,aAAA,WAAA1vB,EAAAsU,sBAAA,MAAA9K,EAAAyb,IAAAzb,EAAAkmB,aAAA,KAKJ1vB,EAAAwN,oBAAA,GAAAxN,EAAA2uB,qBAAA,OAAA6uB,EAAAx9C,EAAA8V,sBAAA,MAAAtM,EAAAuZ,UAAA,KAAAy6B,EAAA6P,WAAA,GAAArtD,EAAA6uB,sBAAA,IACkC7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAu8C,EAAAttD,EAAA8V,sBAAA,MAAAtM,EAAAuZ,UAAA,KAAAuqC,EAAApkD,kjBAqCjC0jD,CAAoC,wPCnGjDhvD,EAAA,OACAA,EAAA,OACAA,EAAA,MAFA,IAGAwC,EAAAxC,EAAA,UACAA,EAAA,qOAOgBoC,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAF,EAAAtJ,QAAO,GAEhB9H,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,yBAAmBvN,EAAAsN,wBAAAtN,EAAW,2BAuBhCA,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GAEJvN,EAAAsN,iDAJItN,EAAA+Q,qBAAA,QAAAw8C,EAAAh6C,IAEAvT,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,IAAA0tC,EAAAv0C,IAAA,KAAAu0C,EAAA93C,cAAA83C,EAAA95C,KAAA,2GA6DhBzT,EAAAqN,yBAAA,WAAArN,CAGC,YACwCA,EAAAuN,iBAAA,GAAUvN,EAAAsN,yBAC/CtN,EAAAqN,yBAAA,qBAGIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,IAAAu8C,GAAAxtD,EAAAkR,wBAAAwE,GAAAqI,UAAApI,GAAA3V,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAAqE,GAAA83C,cAAAD,GAAAv8C,IAA2B,iCAE/CjR,EAAAsN,wBAAAtN,EAAe,6DANqBA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAo5C,GAGjCxtD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAA0N,GAAAze,EAAA8V,sBAAA,IAAA+L,EAAAkB,WAAA,MAAAtE,GAAAvV,SAAA,KAAAuV,GAAAvV,SAAAnD,SAAAynD,GAAAxtD,CAAuD,iBAAAA,EAAA0R,0BAAA,EAAAg8C,GAAA,2BAbnE1tD,EAAAqN,yBAAA,eAAArN,CAIC,UACGA,EAAAyuB,iBAAA,MAA+CzuB,EAAAsN,yBAC/CtN,EAAAiS,qBAAA,EAAA07C,EAAA,4CAYJ3tD,EAAAsN,iEAVyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAArE,EAAAvI,UAAA,+DAY7BlJ,EAAAqN,yBAAA,WAAArN,CAGC,eAC8CA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAiF,GAAA,IAAAC,EAAApW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8E,EAAAtO,QAAO,GAA3D9H,EAAAyuB,iBAAA,MAEAzuB,EAAAsN,wBAAAtN,EAAS,EAcRN,+BAA4B,eAA5BqtD,EAA4B,WAoCrC,SAAAA,EAEY3O,EACAp9C,EACA4sD,EACA3sD,IAAyB,IAAAG,EAAAtB,KAAAD,EAAAC,KAAAitD,GAHzBjtD,KAAAs+C,cACAt+C,KAAAkB,YACAlB,KAAA8tD,QACA9tD,KAAAmB,QAxCLnB,KAAAu+C,WAAY,EACHv+C,KAAAijB,QAAUjjB,KAAK8tD,MAAM7qC,QAErBjjB,KAAA+iB,OAAS/iB,KAAKmB,KAAKs9C,cAAct7C,QAC7C7C,EAAA0b,KAAI,SAACsa,IAAK,IACawB,GADbC,GAAAC,EACY1B,IAAC,QAAA2B,GAAA,WAAE,IAAV81B,GAAGj2B,GAAAp2B,MACJwX,EAAM5X,EAAKH,KAAKiV,UAAU8Z,KAC5B,SAAC7sB,IAAC,OAAKA,GAAEoQ,KAAOs6C,GAAI95C,SAAS,GAEhC85C,GAAY70C,IAAMA,GAAKvD,cAAgBuD,GAAKvF,MAAQ,IAJzD,IAAAokB,GAAAnO,MAAAkO,GAAAC,GAAAI,KAAAC,MAAAH,IAKC,OAAArN,IAAAmN,GAAA3S,EAAAwF,GAAA,SAAAmN,GAAAM,GAAA,CACD,OAAO/B,GAAEpa,OAAO,SAAC7Y,IAAC,OAAKA,GAAE2qD,KAAK/nD,SAAS,UAAU,EACrD,IAEYjG,KAAAoJ,SAAWpJ,KAAK8tD,MAAM1kD,SAEtBpJ,KAAAgI,MAAQ,kBAAM1G,EAAKg9C,YAAYr/B,SAAS,EACxCjf,KAAA+S,WAAa,SAACyQ,IAAC,OAAKliB,EAAKwsD,MAAM/6C,WAAWyQ,GAAE,EAyBxDxjB,KAAKu+C,YAAcv+C,KAAKs+C,WAC5B,CAACx+C,SAAAmtD,EAAA,EAAAxrD,IAAA,MAAAkE,IAxBD,WACI,OAAO3F,KAAKmB,KAAK+U,QACrB,GAAC,CAAAzU,IAAA,OAAAkE,IAED,WACI,OAAO3F,KAAK8tD,MAAMp9C,IACtB,GAAC,CAAAjP,IAAA,eAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,4BAA8B,GAC5D,GAAC,CAAAlE,IAAA,WAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAI,uBAC9B,GAAC,CAAAlE,IAAA,gBAAAC,OAAAusD,EAAAtsD,EAAAC,IAAAC,KAYM,SAAAC,EAAoBsrD,GAAc9vB,GAAc,IAAA4wB,GAAA,OAAAtsD,IAAAS,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OAAAF,UAAAE,KAAA,EACxBxC,KAAKijB,QAAQ9f,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,OAC3D4qD,IAD2D5rD,GAAA4B,KAAzDkF,UACsB,IAAI8S,OAAO,SAAC7Y,IAAC,OAAK+pD,KAAS/pD,EAAC,GACtDi6B,GAAO4wB,GAASj3B,KAAKm2B,IACzBptD,KAAK+S,WAAW,CAAE3J,SAAU8kD,KAAY,wBAAA5rD,GAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAC3C,SAAA2tD,EAAAtwC,EAAA8Z,IAAA,OAAA82B,EAAAjpD,MAAAhF,KAAAiF,UAAA,MAAAgoD,EAjBA,IAAAgB,CAiBA,CAnDoC,GAA5BhB,SAA4B,mBAAAhtD,iBAA5BgtD,GAA4B/sD,EAAAwI,4BAAAC,EAAAwW,kBAAA,GAAAjf,EAAAwI,4BAAAG,EAAAD,iBAAA1I,EAAAwI,4BAAAK,EAAAgI,oBAAA7Q,EAAAwI,4BAAAO,EAAAH,qBAAA,EAA5BmkD,EAA4B,UAAA/sD,EAAA,kCAA5B+sD,EAA4B9jD,UAAA,4BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,kNAvHmBgjB,UAAAC,MAAAC,EAAA,yRAQPF,UAAAG,MAAAD,EAAA,0JAENF,UAAAI,MAAAF,EAAA,kSAqBJF,UAAAM,MAAAJ,EAAA,2HAAI,kBAAO,6DACoBF,UAAAO,MAAAL,EAAA,qMAO7CF,UAAAgqB,MAAA9pB,EAAA,iIAAU,kBAAO,qHAYjBF,UAAAwuB,MAAAtuB,EAAA,+HAAQ,kBAAO,gIAcSF,UAAAyuB,MAAAvuB,EAAA,sJAEQF,UAAA0uB,MAAAxuB,EAAA,8WAiBRF,UAAA2uB,MAAAzuB,EAAA,8VAmByBF,UAAA4uB,MAAA1uB,EAAA,0IAnHtEtwB,EAAAqN,yBAAA,UAAArN,CAAuE,WAE/DA,EAAAiS,qBAAA,EAAAg8C,EAAA,gBASJjuD,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAA6DzuB,EAAAsN,yBAC7DtN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAGC,cAHDA,CAGC,UAEOA,EAAAyuB,iBAAA,KAA4CzuB,EAAAsN,yBAC5CtN,EAAAqN,yBAAA,YAAArN,CAAgD,eAC5CA,EAAAyuB,iBAAA,OAAmCzuB,EAAAsN,yBACnCtN,EAAAqN,yBAAA,uBAAArN,CAAoD,oBAI5CA,EAAA8Q,qBAAA,yBAAAG,IAAA,OAAiBzH,EAAAqJ,WAAA,CAAAq7C,SAAAj9C,IAAgC,kCAKjDjR,EAAAiS,qBAAA,GAAAk8C,EAAA,oDAOJnuD,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,YAAArN,CAAkC,eAC9BA,EAAAg5B,sBAAA,OAA2Bh5B,EAAAyJ,oBAAA,WAAczJ,EAAAi5B,sBAAAj5B,EAAAsN,yBACzCtN,EAAAqN,yBAAA,sBAAArN,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAAyC,YAAzCA,CAAyC,eAEjCA,EAAAg5B,sBAAA,OACeh5B,EAAAyJ,oBAAA,WAAczJ,EAAAi5B,sBAAAj5B,EAAAsN,yBAE7BtN,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,OAAiBzH,EAAAgH,KAAAe,WAAA,CAAAM,KAAAZ,IAAiC,GAGrDjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,YAAArN,CAA0B,eACtBA,EAAAg5B,sBAAA,OACah5B,EAAAyJ,oBAAA,WAAczJ,EAAAi5B,sBAAAj5B,EAAAsN,yBAE3BtN,EAAAyJ,oBAAA,0BAQJzJ,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,gBAAArN,CAAqC,WACjCA,EAAAyuB,iBAAA,OAA+CzuB,EAAAsN,yBAC/CtN,EAAAqN,yBAAA,YAAArN,CAA+B,aAC3BA,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAGIrN,EAAA8Q,qBAAA,yBAAAG,IAAA,OAAiBzH,EAAAqJ,WAAA,CAAAiqC,SAAA7rC,IAAgC,kCAGrDjR,EAAAsN,wBAAAtN,KAGRA,EAAAiS,qBAAA,GAAAm8C,EAAA,iDAmBJpuD,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAAo8C,EAAA,qBAzGaruD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA60C,WAWTr+C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAvH,EAAAgH,MASgBxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAkF,EAAAjW,EAAA8V,sBAAA,MAAAtM,EAAAuZ,UAAA,KAAA9M,EAAAi4C,SAAAluD,CAAuC,iBAAAA,EAAA0R,0BAAA,GAAAg8C,GAAvC1tD,CAAuC,qBAAAwJ,EAAAwP,IAAA,KAAAxP,EAAAwP,IAAAvD,gBAAA,MAAAjM,EAAAwP,IAAA,KAAAxP,EAAAwP,IAAAvF,MAAvCzT,CAAuC,eAOnBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,MAAAtM,EAAAqZ,SAsBpB7iB,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgH,KAAAhP,MAAAqQ,KAAA7R,CAA2B,iBAAAA,EAAA0R,0BAAA,GAAAg8C,GAA3B1tD,CAA2B,WAAAwJ,EAAAg2C,UAa3Bx/C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAgH,MAAA,MAAAhH,EAAAgH,KAAAhP,MAAA,KAAAgI,EAAAgH,KAAAhP,MAAAqQ,KAAA7R,CAA0B,MAAAwJ,EAAAuO,aAA1B/X,CAA0B,WAAAwJ,EAAAg2C,UAgB9Bx/C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAAu9C,GAAAtuD,EAAA8V,sBAAA,MAAAtM,EAAAuZ,UAAA,KAAAurC,GAAAxR,SAAA98C,CAAuC,iBAAAA,EAAA0R,0BAAA,GAAAg8C,IAU9C1tD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAw9C,EAAAvuD,EAAA8V,sBAAA,MAAAtM,EAAAN,WAAA,KAAAqlD,EAAAppD,QAmBJnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA60C,yeAkBA0O,CAA4B,mMC7IzC,IAAAhjD,EAAAnM,EAAA,OAEAkc,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,UACAA,EAAA,wGA6B4BoC,EAAAqN,yBAAA,WAAArN,CAGC,cACaA,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,4BAElBA,EAAAyJ,oBAAA,6DAIIzJ,EAAA+Q,qBAAA,SAAAy9C,EAAAjjC,OAAA,0BAGAvrB,EAAAyJ,oBAAA,yEA5BhBzJ,EAAAqN,yBAAA,UAAArN,CAKC,eAKOA,EAAA8Q,qBAAA,uBAAA09C,EAAAxuD,EAAAkR,wBAAA8d,GAAAjR,UAAAzH,EAAAtW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAgF,EAAAm4C,YAAAD,GAAkB,GAE3BxuD,EAAAqN,yBAAA,YAGIrN,EAAAiS,qBAAA,EAAAy8C,EAAA,cAMA1uD,EAAAiS,qBAAA,EAAA08C,EAAA,cAMA3uD,EAAAiS,qBAAA,EAAA28C,EAAA,0BAAA5uD,EAAAomB,kCAMJpmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAuB,YAEfA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAAiD,kBACbA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACrCtN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IAOJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAAiD,kBAExCA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAEXtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAKAzuB,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,uBAAA09C,EAAAxuD,EAAAkR,wBAAA8d,GAAAjR,UAAAQ,EAAAve,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAiN,EAAA0c,UAAAxb,KAAA+uC,GAAqB,GAE9BxuD,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,uFAxEjBA,EAAA4f,sBAAA,mBAAA5N,EAAAmpB,SAAAqzB,EAAAj7C,IAcavT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAiB,EAAAqN,SAAAtZ,SAAAyoD,EAAAj7C,KAMAvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAy9C,EAAAjjC,OAAA,KAAAijC,EAAAjjC,OAAApmB,OAAAnF,CAA4B,WAAA0V,GAa7B1V,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA+gD,EAAA/6C,MAAA,qBAKIzT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA+gD,EAAA3oD,WAAA,MAAA2oD,EAAAx3C,MAAA,KAAAw3C,EAAAx3C,MAAAvB,gBAAA,MAAA+4C,EAAAx3C,MAAA,KAAAw3C,EAAAx3C,MAAAvD,QAAA,MAAA+6C,EAAA16C,KAAA,KAAA06C,EAAA16C,KAAA2B,gBAAA,MAAA+4C,EAAA16C,KAAA,KAAA06C,EAAA16C,KAAAL,MAAA,KAkBJzT,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAA6/B,EAAA1uC,SAAA,IAAA0uC,EAAA1uC,UAAA9f,EAAA6uB,sBAAA,IASR7uB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,gBAAA5N,EAAAiqB,YAAAuyB,EAAAj7C,KAGUvT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAApC,EAAAiqB,YAAAuyB,EAAAj7C,IAAA,wDA3EtBvT,EAAAqN,yBAAA,UAIIrN,EAAAiS,qBAAA,EAAA48C,EAAA,4CA8EJ7uD,EAAAsN,kEA5E0BtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAc,EAAAiB,QAAA,2BAP9B7X,EAAAyhB,kCAAA,GACIzhB,EAAAiS,qBAAA,EAAA68C,EAAA,0CAmFJ9uD,EAAA4hB,yGAjFS5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAyQ,EAAAxhB,EAAA8V,sBAAA,IAAAzD,EAAAwF,SAAA,KAAA2J,EAAArc,OAAAnF,CAAgC,WAAAiuB,EAAA,wBAmFrCjuB,EAAAqN,yBAAA,WAAArN,CAGC,UACGA,EAAAyuB,iBAAA,MAEAzuB,EAAAsN,wBAAAtN,0BAIJA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,MAAsDzuB,EAAAsN,wBAAAtN,UADzCA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAgBhBrR,4BAAyB,eAAzBqvD,EAAyB,WAiBlC,SAAAA,EAAoBnB,GAAyB,IAAAxsD,EAAAtB,KAAAD,EAAAC,KAAAivD,GAAzBjvD,KAAA8tD,QAhBJ9tD,KAAAq7B,OAAiB,GACjBr7B,KAAAuf,SAAmB,GACnBvf,KAAAu5B,UAAsB,GACrBv5B,KAAAy8B,SAAW,IAAIxyB,EAAAwV,aACfzf,KAAAm7B,UAAY,IAAIlxB,EAAAwV,aAEjBzf,KAAA+X,UAASiC,EAAAgJ,eAAc,CACnChjB,KAAK8tD,MAAM7qC,QACXjjB,KAAK8tD,MAAMtiB,sBACZroC,QACC7C,EAAA0b,KAAI,SAAA1V,GAAA,IAAA8B,EAAA8a,EAAA5c,EAAA,GAAI02C,EAAQ50C,EAAA,GAAR40C,SAAa,OAAA50C,EAAA,GACf8T,OAAO,SAAC6W,GAAC,OAAMiqB,GAAY17C,EAAK66B,YAAYpJ,EAAEtf,GAAG,EAAC,IAG5CzT,KAAAujB,QAAUvjB,KAAK8tD,MAAMvqC,OAEW,CAACzjB,SAAAmvD,EAAA,EAAAxtD,IAAA,cAAAC,MAE1C,SAAYwtD,GACf,OAAOlvD,KAAKu5B,UAAUtzB,SAASipD,EACnC,GAAC,CAAAztD,IAAA,cAAAC,MAEM,SAAYmb,GACf7c,KAAKy8B,SAAS9c,KAAK9C,EACvB,KAACoyC,CAAA,CAzBiC,GAAzBA,SAAyB,mBAAAhvD,iBAAzBgvD,GAAyB/uD,EAAAwI,4BAAAC,EAAAoI,oBAAA,EAAzBk+C,EAAyB,UAAA/uD,EAAA,kCAAzB+uD,EAAyB9lD,UAAA,yBAAAyW,OAAA,CAAAyb,OAAA,SAAA9b,SAAA,WAAAga,UAAA,aAAA1Z,QAAA,CAAA4c,SAAA,WAAAtB,UAAA,aAAA7xB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,kCAxHHgjB,UAAAC,MAAAC,EAAA,qIACmBF,UAAAG,MAAAD,EAAA,oHAC1C,4iCA6D4BF,UAAAI,MAAAF,EAAA,2GACJ,6cA8BmBF,UAAAM,MAAAJ,EAAA,6PAWZF,UAAAO,MAAAL,EAAA,6IAzGnCtwB,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAAkCzuB,EAAAsN,yBAClCtN,EAAAqN,yBAAA,SAAArN,EAAAyuB,iBAAA,mCAEAzuB,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAg9C,EAAA,oDAqFAjvD,EAAAiS,qBAAA,EAAAi9C,EAAA,yBAAAlvD,EAAAomB,kCAUApmB,EAAAiS,qBAAA,EAAAk9C,EAAA,yBAAAnvD,EAAAomB,4EAhGApmB,EAAAwN,oBAAA,GAAAxN,EAAA2uB,qBAAA,OAAAnN,EAAAxhB,EAAA8V,sBAAA,IAAAtM,EAAAqO,SAAA,KAAA2J,EAAArc,SAAA,GAAAnF,EAAA6uB,sBAAA,GACe7uB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA8V,sBAAA,IAAAtM,EAAA6Z,SAAArjB,CAA0B,WAAAqtB,EAAA,6RAoHpC0hC,CAAyB,0JChItC,IAAA9wD,EAAAL,EAAA,6DAiEgBoC,EAAAyJ,oBAAA,kCAIAzJ,EAAAqN,yBAAA,iBACIrN,EAAAuN,iBAAA,YACJvN,EAAAsN,0BAMH5N,mCAAgC,eAAhC0vD,EAAgC,WAIzC,SAAAA,EAA8CjV,GAAUt6C,EAAAC,KAAAsvD,GAAVtvD,KAAAq6C,OAAa,CAACv6C,SAAAwvD,EAAA,EAAA7tD,IAAA,WAAAkE,IAH5D,WACI,OAA+B,IAAxB3F,KAAKq6C,MAAM96B,QACtB,KAAC+vC,CAAA,CAHwC,GAAhCA,SAAgC,mBAAArvD,iBAAhCqvD,GAAgCpvD,EAAAwI,4BAIrBvK,EAAAoxD,kBAAgB,EAJ3BD,EAAgC,UAAApvD,EAAA,kCAAhCovD,EAAgCnmD,UAAA,iCAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,ohEAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAxErCvJ,EAAAqN,yBAAA,WACIrN,EAAAsvD,2BAAAtvD,EAAAqN,yBAAA,UAAArN,CAMC,SAEOA,EAAAyJ,oBAAA,YAMJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,SAAArN,CAAM,cAUEA,EAAAyJ,oBAAA,cAAAzJ,CAGE,oBAHFA,CAGE,eAHFA,CAGE,qBAHFA,CAGE,mBAHFA,CAGE,sBAHFA,CAGE,gBAHFA,CAGE,iBAyBNA,EAAAsN,wBAAAtN,KAGRA,EAAAuvD,4BAAAvvD,EAAAqN,yBAAA,aAGIrN,EAAAiS,qBAAA,GAAAu9C,EAAA,cAIAxvD,EAAAiS,qBAAA,GAAAw9C,EAAA,mBAGJzvD,EAAAsN,wBAAAtN,UALSA,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6V,UAEgDrf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAA6V,oEAQxD+vC,CAAgC,iNC9E7C,IAAArlD,EAAAnM,EAAA,OACA0C,EAAA1C,EAAA,OAGAwC,GAFAxC,EAAA,OAEAA,EAAA,QAEA8xD,EAAA9xD,EAAA,sKAKQoC,EAAAqN,yBAAA,cAKIrN,EAAA8Q,qBAAA,sBAAAG,GAAAjR,EAAAkR,wBAAAmc,GAAA,IAAA5b,EAAAzR,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAG,EAAAuW,KAAA/W,EAAA,EAAAjR,CAAe,wBAAAiR,GAAAjR,EAAAkR,wBAAAmc,GAAA,IAAAjc,EAAApR,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAF,EAAAyvC,OAAA5vC,EAAA,+DAElBjR,EAAAsN,wBAAA,2CALGtN,EAAA+Q,qBAAA,MAAAsB,EAAAy/B,QAAA9xC,CAAe,WAAAA,EAAA8V,sBAAA,IAAAzD,EAAAnJ,UAAflJ,CAAe,UAAAA,EAAA8V,sBAAA,IAAAzD,EAAA0uC,SAAf/gD,CAAe,OAAAqS,EAAA2V,KAAfhoB,CAAe,SAAAqS,EAAAwuC,OAAA,2BAeP7gD,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAA4+C,GAEA3vD,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAkiD,EAAAl6C,cAAAk6C,EAAAl8C,KAAA,MAoCX/T,iCAA+B,eAA/BkwD,EAA+B,SAAAjvD,GAAAC,EAAAgvD,EAAAjvD,GAAA,IAAAG,EAAAC,EAAA6uD,GA2CxC,SAAAA,EAAoB1gC,GAA6B,IAAA9tB,EAAAvB,SAAAC,KAAA8vD,IAC7CxuD,EAAAN,EAAAO,KAAAvB,OADgBovB,cA1CJ9tB,EAAAie,SAAqB,GACrBje,EAAAw/C,cAAwB,EACvBx/C,EAAAm7B,SAAW,IAAIxyB,EAAAwV,aAEzBne,EAAA4mB,KAAO,EACP5mB,EAAAy/C,OAAS,CAAEjL,EAAG,GAAKC,EAAG,IAErBz0C,EAAAyuD,cAAgB,SAACnmC,GAAC,OAAK,kBAAMtoB,EAAKm7B,SAAS9c,KAAKiK,EAAE,GACnDtoB,EAAA4V,MAAuB,KAMd5V,EAAAyhB,OAASzhB,EAAK8tB,YAAYjU,iBAAiBhY,QACvD7C,EAAA0b,KAAI,SAAC3Y,GAAC,SAAK7C,EAAA6qC,QAAOhoC,EAAE2Y,IAAI,SAAA1V,GAAQ,OAAAA,EAAL4Q,KAAiB,GAAE,IAGlC5V,EAAA8H,SAAW9H,EAAK8tB,YAAYjU,iBAAiBhY,QACzD7C,EAAA4xB,cAAa,MAAI,EACjB5xB,EAAA0b,KAAI,SAACsa,GAAC,OACFA,EAAEta,IAAI,SAACa,GAAK,MAAM,CACd9W,SAAU8W,EAAMjJ,OAChBmU,QAAS6nC,EAAAN,iCACTxsD,KAAIgtB,IAAA,GACGjT,GAAK,IACR0C,SAAUje,EAAKie,SAAStZ,SAAS4W,EAAMpJ,MAE9C,EAAE,IAIKnS,EAAA2/C,QAAU3/C,EAAK8tB,YAAYjU,iBAAiBhY,QACxD7C,EAAA0b,KAAI,SAACsa,GAAC,OACFA,EAAEta,IAAI,SAACa,GAAK,MAAM,CACdpJ,GAAIoJ,EAAMjJ,OACVyT,OAAQ,CAAC,WAAY,WACrBC,SAAUhmB,EAAKyuD,cAAclzC,GAChC,EAAE,IAETvb,CAIF,CAACxB,SAAAgwD,EAAA,EAAAruD,IAAA,UAAAkE,IAlCD,WAAkB,IAAA+7C,EACd,OAAiB,QAAVA,EAAA1hD,KAAKkX,aAAK,IAAAwqC,OAAA,EAAVA,EAAY9tC,SAAU,EACjC,GAAC,CAAAnS,IAAA,WAAAC,MAkCM,WAAQ,IAAAyD,EAAAnF,KACXA,KAAKiT,aACD,SACAjT,KAAKovB,YAAYjU,iBAAiBhI,UAAU,SAAC9P,IACpC8B,EAAK+R,OAAS7T,EAAEgC,SAAQF,EAAK+R,MAAQ7T,EAAE,GAAG6T,MACnD,GAER,GAAC,CAAAzV,IAAA,UAAAC,MAEM,SAAQogD,GACX9hD,KAAKkoB,KAAO8f,KAAKiQ,IAAI,GAAKjQ,KAAK+Z,IAAI,GAAID,GAC3C,GAAC,CAAArgD,IAAA,WAAAC,MAEM,WACH1B,KAAKkoB,KAAO,EACZloB,KAAK+gD,OAAS,CAAEjL,EAAG,GAAKC,EAAG,GAC/B,KAAC+Z,CAAA,CA/DuC,CAAQtvD,EAAAiI,cAAvCqnD,SAA+B,mBAAA7vD,iBAA/B6vD,GAA8B5vD,EAAAwI,4BAAAC,EAAA4M,kBAAA,EAA9Bu6C,EAA+B,UAAA5vD,EAAA,kCAA/B4vD,EAA8B3mD,UAAA,wBAAAyW,OAAA,CAAAL,SAAA,WAAAuhC,aAAA,gBAAAjhC,QAAA,CAAA4c,SAAA,YAAArzB,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,EAAA+D,OAAA,8rBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAzDnCvJ,EAAAiS,qBAAA,EAAA69C,EAAA,eAQA9vD,EAAAqN,yBAAA,UAAArN,CAEC,qBAFDA,CAEC,kBAMmBA,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAAzH,EAAAwN,MAAA/F,CAAA,GACRjR,EAAAiS,qBAAA,EAAA89C,EAAA,kDAMJ/vD,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,UAAArN,CAGC,cACkCA,EAAA8Q,qBAAA,0BAAStH,EAAAu4C,QAAe,IAAfv4C,EAAAwe,KAAmB,GACvDhoB,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,aAAOvN,EAAAsN,wBAAAtN,GAErBA,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAAgCrN,EAAA8Q,qBAAA,0BAAStH,EAAAu4C,QAAAv4C,EAAAwe,MAAgB,EAAI,KAAK,GAC9DhoB,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,eAAQvN,EAAAsN,wBAAAtN,GAEtBA,EAAAyJ,oBAAA,YACAzJ,EAAAqN,yBAAA,eAA6BrN,EAAA8Q,qBAAA,0BAAStH,EAAAw4C,UAAU,GAC5ChiD,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,cAAOvN,EAAAsN,wBAAAtN,YAtCpBA,EAAA+Q,qBAAA,QAAAvH,EAAAo3C,cAee5gD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAwN,OAEYhX,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAtM,EAAAqZ,mYAuC3B+sC,CAA+B,4NCnE5C,IAAA9hD,EAAAlQ,EAAA,UACAA,EAAA,OACAA,EAAA,sMAiCoBoC,EAAAqN,yBAAA,2BAKIrN,EAAA8Q,qBAAA,qBAAAG,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,0BAAA,OAAarR,EAAAsR,sBAAAF,EAAA+nB,gBAAAloB,GAAuB,EAApCjR,CAAqC,oBAAAiR,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAa,EAAAhS,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAU,EAAAgrB,UAAA/rB,EAAA,GAGxCjR,EAAAsN,wBAAA,2CANGtN,EAAA+Q,qBAAA,eAAAsB,EAAA2qB,UAAA,KAAA3qB,EAAA2qB,UAAAzpB,GAAAvT,CAAwB,WAAAqS,EAAA8qB,aAAxBn9B,CAAwB,YAAAqS,EAAAgnB,UAAA,+DAuBhCr5B,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+wC,GAAA,IAAApgC,EAAA7hB,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAuQ,EAAAmb,UAAqB,KAAI,GAN7Bh9B,EAAAyuB,iBAAA,MAUAzuB,EAAAsN,wBAAA,+DAqDJtN,EAAAqN,yBAAA,0BAIIrN,EAAA8Q,qBAAA,oBAAAG,GAAAjR,EAAAkR,wBAAAwE,GAAA,IAAAC,EAAA3V,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAqE,EAAAqnB,UAAA/rB,EAAA,GAEJjR,EAAAsN,wBAAA,2CAJItN,EAAA+Q,qBAAA,WAAAa,EAAAurB,aAAAn9B,CAAyB,iBAAA4R,EAAAorB,UAAA,EArH5Bt9B,kBAAkB,2BA8HlBA,mCAAgC,eAAhCswD,EAAgC,WAazC,SAAAA,EACY9N,EACAlhD,EACAkuB,EAEAirB,GAGPt6C,EAAAC,KAAAkwD,GAPOlwD,KAAAoiD,cACApiD,KAAAkB,YACAlB,KAAAovB,cAEApvB,KAAAq6C,QAhBLr6C,KAAAuf,SAA2B,GAC3Bvf,KAAAm9C,KAAO,OAoBVn9C,KAAKuf,SAAQ8D,EAAQg3B,EAAMz9B,QAAU,IACrC5c,KAAKovB,YAAYrc,WAAWsnC,EAAMp3B,QACtC,CAACnjB,SAAAowD,EAAA,EAAAzuD,IAAA,eAAAkE,IApBD,WACI,OAAO3F,KAAKuf,SAASvD,IAAI,SAAC3Y,GAAC,OAAKA,EAAEoQ,EAAE,GAAEsB,KAAK,IAC/C,GAAC,CAAAtT,IAAA,YAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAUyE,IAAc/F,EAAAuwD,kBAAoB,EAC5D,GAAC,CAAA1uD,IAAA,aAAAC,MAgBM,SAAW+R,GACd,OAAOA,GAAMzT,KAAKq9B,aAAap3B,SAASwN,EAC5C,GAAC,CAAAhS,IAAA,cAAAC,MAEM,SAAYya,EAAoBmhB,GACnC,IAAMlqB,EAAOpT,KAAKuf,SAASrD,OAAO,SAAC7Y,GAAC,OAAKA,EAAEoQ,KAAO0I,EAAK1I,EAAE,GACrD6pB,GAAOlqB,EAAK6jB,KAAK9a,GACrBnc,KAAKuf,SAAWnM,GACXpT,KAAKq6C,MAAMp3B,QAAQyV,OAAS4E,GAAOt9B,KAAKoiD,YAAYp6C,MAAM,CAACmU,GACpE,GAAC,CAAA1a,IAAA,kBAAAC,MAEM,SAAgBya,GACnB,IAAMse,EAAWz6B,KAAKu5B,UAChBmB,GAAaD,EAASx0B,SAASkW,EAAK1I,IAEtCzT,KAAKkB,UAAUy5B,gBAAgB/6B,EAAAuwD,gBAD/Bz1B,EAC8C,GAAAt2B,OAAAif,EACvCoX,GAAQ,CACXte,EAAK1I,KAKLgnB,EAASve,OAAO,SAAC7Y,GAAC,OAAKA,IAAM8Y,EAAK1I,EAAE,GAGhD,KAACy8C,CAAA,CApDwC,GAAhCA,SAAgC,mBAAAjwD,iBAAhCiwD,GAAgChwD,EAAAwI,4BAAAC,EAAA05C,cAAAniD,EAAAwI,4BAAAG,EAAAD,iBAAA1I,EAAAwI,4BAAAK,EAAAgI,oBAAA7Q,EAAAwI,4BAiB7BsF,EAAAwvB,iBAAe,EAjBlB0yB,EAAgC,UAAAhwD,EAAA,kCAAhCgwD,EAAgC/mD,UAAA,iCAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,uPAlHpBgjB,UAAAC,MAAAC,EAAA,opCA2DRF,UAAAG,MAAAD,EAAA,iWAewCF,UAAAI,MAAAF,EAAA,uHAGNF,UAAAM,MAAAJ,EAAA,iHAC/B,0RA9BHF,UAAAO,MAAAL,EAAA,6LAvDTtwB,EAAAqN,yBAAA,UAAArN,CAEC,aAFDA,CAEC,aAFDA,CAEC,cAGqBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAEnBA,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,KAA2BzuB,EAAAsN,wBAAAtN,GAE/BA,EAAAqN,yBAAA,YAGIrN,EAAAyJ,oBAAA,6BAGAzJ,EAAAqN,yBAAA,UAAArN,CAEC,sCAGOA,EAAA8Q,qBAAA,sBAAAG,GAAA,OAAAzH,EAAAyzC,KAAAhsC,CAAA,GACHjR,EAAAsN,yBACDtN,EAAAiS,qBAAA,GAAAi+C,EAAA,4BASJlwD,EAAAsN,yBACAtN,EAAAqN,yBAAA,8BAMIrN,EAAA8Q,qBAAA,wBAAAG,GAAA,OAAgBzH,EAAA+zB,YAAA/zB,EAAAwzB,UAAA/rB,EAA8B,EAA9CjR,CAA+C,8BAElCwJ,EAAA2vB,gBAAA3vB,EAAAwzB,UAA0B,EAFvCh9B,CAA+C,0BAAAwJ,EAAAwzB,UAG1B,IAAI,GAC5Bh9B,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,gBAGIrN,EAAAiS,qBAAA,GAAAk+C,EAAA,iBAWAnwD,EAAAqN,yBAAA,gBAAArN,EAAAyuB,iBAAA,OAUAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBAQqCA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,OAA6CzuB,EAAAsN,wBAAAtN,KAGrDA,EAAAqN,yBAAA,WAAArN,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,0BAAStH,EAAA+zB,YAAA/zB,EAAAwzB,WAAwBxzB,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IAA0B,GAE3DvT,EAAAqN,yBAAA,YAAArN,CAA+B,kBACDA,EAAAuN,iBAAA,IAExBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,wBAAAtN,SAKhBA,EAAAiS,qBAAA,GAAAm+C,EAAA,0BAAApwD,EAAAomB,0EAzFgBpmB,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAyzC,MAGCj9C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAvH,EAAAyzC,KAAAj9C,CAAuB,WAAAumB,GAY5BvmB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,UAAApW,EAAAwzB,UAAAh9B,CAA2B,UAAAwJ,EAAAwzB,WAF3Bh9B,EAAA+Q,qBAAA,QAAAvH,EAAAwzB,UAAAh9B,CAAmB,SAAAwJ,EAAA2zB,aAAAp3B,SAAA,MAAAyD,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IAAnBvT,CAAmB,MAAAwJ,EAAAwzB,WAAAxzB,EAAA6vB,UAAAtzB,SAAA,MAAAyD,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,KAmBlBvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAwzB,WAWDh9B,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,OAAApW,EAAAwzB,WADAh9B,EAAA+Q,qBAAA,mBAAAvH,EAAA6V,UAcArf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAvH,EAAA6V,UAUJrf,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAnlB,EAAA6V,SAAAla,QAAAnF,EAAA6uB,sBAAA,IAKI7uB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,UAAApW,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,KADAvT,EAAA+Q,qBAAA,YAAAvH,EAAAwzB,WAK8Bh9B,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA5K,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IAAA,gBAItBvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,IAAA,oRAsBfy8C,CAAgC,wMCvI7C,IAAAjmD,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OAKAyyD,GAJAzyD,EAAA,OAEAA,EAAA,OAEAA,EAAA,4GAmBoBoC,EAAAyJ,oBAAA,6DAIIzJ,EAAA+Q,qBAAA,SAAAu/C,EAAA/kC,OAAA,0BAGAvrB,EAAAyJ,oBAAA,yEAfZzJ,EAAAqN,yBAAA,UAAArN,CAIC,WAIOA,EAAAiS,qBAAA,EAAAs+C,EAAA,aAMAvwD,EAAAiS,qBAAA,EAAAu+C,EAAA,0BAAAxwD,EAAAomB,kCAMJpmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAA4B,YAEpBA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAiD,iBACbA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACrCtN,EAAAqN,yBAAA,QAAGrN,EAAAuN,iBAAA,IAAoBvN,EAAAsN,wBAAAtN,GAE3BA,EAAAqN,yBAAA,YAAArN,CAAiD,kBACbA,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBACtCtN,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,OAIAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAEC,gBAMOA,EAAA8Q,qBAAA,uBAAAw/C,EAAAtwD,EAAAkR,wBAAAa,GAAAgM,UAAA/L,EAAAhS,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAU,EAAAkpC,gBAAAoV,GAAsB,GAE/BtwD,EAAAqN,yBAAA,aAAArN,EAAAg5B,sBAAA,OACIh5B,EAAAyJ,oBAAA,eAEJzJ,EAAAi5B,sBAAAj5B,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,uBAAAw/C,EAAAtwD,EAAAkR,wBAAAa,GAAAgM,UAAAsC,EAAArgB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA+O,EAAA86B,eAAAmV,GAAqB,GAE9BtwD,EAAAqN,yBAAA,aAAArN,EAAAg5B,sBAAA,OACIh5B,EAAAyJ,oBAAA,eAEJzJ,EAAAi5B,sBAAAj5B,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAa,GAAA,IAAA4D,EAAA3V,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAqE,EAAAwjB,gBAAAxjB,EAAAukB,OAAsB,GAE/Bl6B,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,sFApERA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAu/C,EAAA/kC,OAAA,KAAA+kC,EAAA/kC,OAAApmB,OAAAnF,CAA4B,WAAAqtB,GAa7BrtB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA6iD,EAAA78C,MAAA,wBAIGzT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAk8C,EAAAzqD,UAQH7F,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAA2hC,EAAAxwC,SAAA,IAAAwwC,EAAAxwC,SAAA9f,CAAIswD,EAAAxwC,UAAJ9f,EAAA6uB,sBAAA,IAoCJ7uB,EAAAwN,oBAAA,IAAAxN,EAAA4f,sBAAA,gBAAAvN,EAAAgnB,UAAAtzB,SAAA,MAAAsM,EAAA6nB,MAAA,KAAA7nB,EAAA6nB,MAAA3mB,KAGUvT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAAgnB,UAAAtzB,SAAA,MAAAsM,EAAA6nB,MAAA,KAAA7nB,EAAA6nB,MAAA3mB,IAAA,+BAhF9B,IAAM+lB,EAAuB,GAiHhB55B,iCAA8B,eAA9B+wD,EAA8B,WAYvC,SAAAA,EACYzvD,EACAoX,GAAkB,IAAAhX,EAAAtB,KAAAD,EAAAC,KAAA2wD,GADlB3wD,KAAAkB,YACAlB,KAAAsY,UAbLtY,KAAAu7C,UAAY,EACZv7C,KAAA4c,OAAyB,GACzB5c,KAAA25B,UAAW,EAoDF35B,KAAA45B,iBAAmB,SAACC,GAA+B,OAC9Dv4B,EAAKw4B,UAAYD,CAAE,EAER75B,KAAA+5B,kBAAoB,SAACF,GAA+B,OAC/Dv4B,EAAK04B,SAAWH,CAAE,EACP75B,KAAAi6B,iBAAmB,SAACrQ,GAAU,OAAMtoB,EAAKq4B,SAAW/P,CAAC,CA7ClE,CAEH9pB,SAAA6wD,EAAA,EAAAlvD,IAAA,YAAAkE,IATA,WACI,OAAO3F,KAAKkB,UAAUyE,IAAc,qBAAuB6zB,CAC/D,GAAC,CAAA/3B,IAAA,kBAAAC,MAQM,WAAe,IAAAyD,EAAAnF,KACNA,KAAKsY,QAAQrD,KAAKs7C,EAAAL,iCAAkC,CAC5DptD,KAAM,CACF8Z,OAAQ5c,KAAK4c,OACbqG,QAAS,CAAEjD,SAAUhgB,KAAKu7C,cAG9BziC,cAAc3F,UAAU,SAACyJ,GACpBA,GACLzX,EAAKm1B,SAAS1d,EAClB,EACJ,GAEA,CAAAnb,IAAA,iBAAAC,MACO,SAAemb,GAClB7c,KAAKs6B,SAASt6B,KAAK4c,OAAOV,OAAO,SAAC7Y,GAAC,OAAKA,EAAEoQ,KAAOoJ,EAAMpJ,EAAE,GAC7D,GAEA,CAAAhS,IAAA,WAAAC,MAIO,SAASy4B,GACZn6B,KAAK4c,OAASud,EACVn6B,KAAK85B,WAAW95B,KAAK85B,UAAU95B,KAAK4c,OAC5C,GAGA,CAAAnb,IAAA,aAAAC,MAIO,SAAWA,GACd1B,KAAK4c,OAASlb,GAAS,EAC3B,GAAC,CAAAD,IAAA,kBAAAC,MAUM,SAAgBmb,GACnB,IAAM4d,EAAWz6B,KAAKu5B,UAChBmB,GAAaD,EAASx0B,SAAS4W,EAAMpJ,IAEvCzT,KAAKkB,UAAUy5B,gBAAgB41B,EAAAJ,gBAD/Bz1B,EAC8C,GAAAt2B,OAAAif,EACvCoX,GAAQ,CACX5d,EAAMpJ,KAKNgnB,EAASve,OAAO,SAAC7Y,GAAC,OAAKA,IAAMwZ,EAAMpJ,EAAE,GAGjD,KAACk9C,CAAA,CA5EsC,GAA9BA,SAA8B,mBAAA1wD,iBAA9B0wD,GAA8BzwD,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAuQ,WAAA,EAA9Bu3C,EAA8B,UAAAzwD,EAAA,kCAA9BywD,EAA8BxnD,UAAA,+BAAAC,SAAA,CAAAlJ,EAAAkwB,6BAR5B,CACP,CACI1jB,QAAS9C,EAAAixB,kBACTC,eAAa7wB,EAAA8wB,YAAW,kBAAM41B,CAA8B,GAC5D31B,OAAO,MAEd1xB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,eAAA+iB,aAdsBC,UAAAC,MAAAC,EAAA,uGA3D+CF,UAAAG,MAAAD,EAAA,ugCAD1CF,UAAAI,MAAAF,EAAA,4GACJ,gBAA8CG,yLAgB1CL,UAAAM,MAAAJ,EAAA,2JAAc,oFAYdF,UAAAO,MAAAL,EAAA,6JAAe,uOA7DvCtwB,EAAAqN,yBAAA,WACIrN,EAAAiS,qBAAA,EAAAy+C,EAAA,cAiFJ1wD,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAKIrN,EAAA8Q,qBAAA,0BAAStH,EAAA0xC,iBAAiB,GAE1Bl7C,EAAAqN,yBAAA,UAAArN,CAAwD,cAC1CA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAA+BzuB,EAAAsN,wBAAAtN,KAGvCA,EAAAqN,yBAAA,WACIrN,EAAAyJ,oBAAA,WACJzJ,EAAAsN,gCA7F0BtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAkT,sGAwGrB+zC,CAA8B,kIC5H3C,IAAAp/B,EAAAzzB,EAAA,OAEA+yD,EAAA/yD,EAAA,OAIA8B,WAAqBE,EAkBjB,SAAAgxD,IAAwC,IAA5BhuD,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA0B,GAAElF,EAAAC,KAAA8wD,GACpC9wD,KAAKyT,GAAK3Q,EAAK2Q,IAAM,GACrBzT,KAAK2T,KAAO7Q,EAAK6Q,MAAQ,GACzB3T,KAAK+wD,UAAYjuD,EAAKiuD,QACtB/wD,KAAKgxD,QAAUluD,EAAKkuD,SAAW,GAC/BhxD,KAAKixD,WAAanuD,EAAKmuD,SACvBjxD,KAAKgzB,SAAW,IAAI69B,EAAAK,MAAMpuD,EAAKkwB,UAAalwB,EAAayW,QACzDvZ,KAAKmxD,cAAgBruD,EAAKquD,cAAgB,IAAIn1C,IAC1C,SAAA1V,GAAwD,IAArD8qD,EAAS9qD,EAAT8qD,UAAWC,EAAO/qD,EAAP+qD,QAAer/C,EAAQ1L,EAAR0L,SAAUs0B,EAAMhgC,EAANggC,OACnC,MAAO,CACHv0B,KAAM,IAAI0I,KAFSnU,EAAJyL,MAEoB,IAAZq/C,GAAkBr7B,UACzC/jB,SACIA,MACAuf,EAAAmiB,qBAA8B,IAAV2d,EAA4B,IAAZD,GACxC9qB,OAAQA,EAEhB,GAEJtmC,KAAKsxD,SAAWxuD,EAAKwuD,MACzB,0NC3CJ,IAAA/wD,EAAAzC,EAAA,MAEAwC,EAAAxC,EAAA,OAEA0C,EAAA1C,EAAA,OAGA+yD,EAAA/yD,EAAA,OACAyzD,EAAAzzD,EAAA,OAGM0zD,EAAoB,0BAU1B,SAAgBC,EACZ9vB,GAEA,IAAM7N,KAAQtzB,EAAAohC,eAAcD,GAC5B,SAAOphC,EAAAoF,KAAG,GAAAvB,OACHotD,EAAiB,iBAAAptD,OAAgB0vB,EAAQ,IAAMA,EAAQ,KAC5D3wB,QAAK7C,EAAA0b,KAAI,SAAC+W,GAAC,OAAKA,EAAE/W,IAAI,SAAC01C,GAAC,OAAK,IAAIH,EAAAT,SAASY,EAAE,EAAC,GACnD,CAdA9xD,iBAAA,SAAgB+xD,IACZ,SAAOpxD,EAAAoF,KAAI6rD,GAAmBruD,QAC1B7C,EAAA0b,KAAI,SAAC+W,GAAC,OAAKA,EAAE/W,IAAI,SAAC01C,GAAC,OAAK,IAAIH,EAAAT,SAASY,EAAE,EAAC,GAEhD,EAGA9xD,4BAAA6xD,EASA,IAAMG,EAAoB,SAACC,GAAI,SAC3BvxD,EAAA0b,KAAI,SAAC5I,GAAgB,OACjBA,EACK8I,OAAO,SAAC41C,GAAG,QAAOA,EAAI9+B,QAAQ,GAC9BhX,IACG,SAAC81C,GAAG,OACA,IAAIjB,EAAAK,MAAKphC,IAAA,GACFgiC,EAAI9+B,UAAQ,IACf9b,MAAO26C,GAAK5hC,YAAY6hC,EAAI9+B,SAASjf,OACrCo9C,aAAcW,EAAIX,eACpB,GAETj1C,OAAO,SAACW,GAAK,OAAKA,EAAM0vB,QAAQ,EAAC,EACzC,EAGL3sC,iCAAA,SAAgBmyD,EACZpwB,EACAkwB,GAEA,OAAOJ,EAA0B9vB,GAAGx+B,KAAKyuD,EAAkBC,GAC/D,EAEAjyD,oBAAA,SAAgBoyD,EAAkBrwB,GAC9B,IAAM7N,KAAQtzB,EAAAohC,eAAcD,GAC5B,SAAOphC,EAAAoF,KAAG,GAAAvB,OACHotD,EAAiB,cAAAptD,OAAa0vB,EAAQ,IAAMA,EAAQ,KACzD3wB,QAAK7C,EAAA0b,KAAI,SAAC+W,GAAC,OAAKA,CAAe,GACrC,EAGAnzB,qBAAA,SAAgBqyD,EACZtwB,EACAkwB,GAEA,IAAM/9B,KAAQtzB,EAAAohC,eAAcD,GAC5B,SAAOphC,EAAAoF,KAAG,GAAAvB,OACHotD,EAAiB,cAAAptD,OAAa0vB,EAAQ,IAAMA,EAAQ,KACzD3wB,QACE7C,EAAA0b,KAAI,SAAC+W,GAAC,OAAKA,EAAE/W,IAAI,SAAC01C,GAAC,OAAK,IAAIH,EAAAT,SAASY,EAAE,EAAC,GACxCE,EAAkBC,GAE1B,kFCxEAx6B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,8MCFA,IAAAqK,EAAAnM,EAAA,OACAkQ,EAAAlQ,EAAA,OACA0C,EAAA1C,EAAA,OAIAo0D,EAAAp0D,EAAA,yIAgBYoC,EAAAqN,yBAAA,aAAArN,CAA+C,cACjCA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,6BAgFCA,EAAAqN,yBAAA,mBAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAHItN,EAAA+Q,qBAAA,QAAAkhD,EAAA1+C,IAEAvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAwkD,EAAAx+C,KAAA,mEAdhBzT,EAAAqN,yBAAA,WAAArN,CAGC,sBAHDA,CAGC,mBAIWA,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAA6M,EAAA9d,EAAAkR,wBAAAwE,GAAA,OAAA1V,EAAAsR,sBAAAwM,EAAAC,UAAkB,GAAC9M,EAAA,GAGnBjR,EAAAiS,qBAAA,EAAAigD,EAAA,qBAMJlyD,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,sBAAArN,CAAoD,cAK5CA,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAA6M,EAAA9d,EAAAkR,wBAAAwE,GAAA,OAAA1V,EAAAsR,sBAAAwM,EAAAC,UAAkB,GAAC9M,EAAA,GAJvBjR,EAAAsN,yBAOAtN,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,4BAAsBvN,EAAAsN,wBAAAtN,GAErCA,EAAAqN,yBAAA,eAIIrN,EAAA8Q,qBAAA,uBAAAqhD,EAAAnyD,EAAAkR,wBAAAwE,GAAA08C,MAAAC,EAAAryD,EAAAqR,0BAAA0M,UAAA,OAAS/d,EAAAsR,sBAAA+gD,EAAAC,MAAAjlB,OAAA8kB,EAAoB,GAAE,GAE/BnyD,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,aAAMvN,EAAAsN,wBAAAtN,IAAW,0DA3BvBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAwhD,EAAA,IAIqBvyD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAK,EAAAohD,YAYrBxyD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAwhD,EAAA,kEA3EpBvyD,EAAAqN,yBAAA,UAAArN,CAAiE,UAAjEA,CAAiE,sBAAjEA,CAAiE,cAOjDA,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAA6M,EAAA9d,EAAAkR,wBAAAuF,GAAA,OAAazW,EAAAsR,sBAAbwM,EAAAC,UAAatK,KAAAxC,EACnC,GALkBjR,EAAAsN,yBAOAtN,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,8BAAwBvN,EAAAsN,wBAAAtN,GAEvCA,EAAAqN,yBAAA,eAIIrN,EAAA8Q,qBAAA,uBAAAuhD,EAAAryD,EAAAkR,wBAAAuF,GAAAsH,UAAA5G,EAAAnX,EAAAqR,0BAASghD,SAAAC,MAAAv7B,KAAA,CAAgB,GAAI,KAAI/2B,EAAAsR,sBAAA6F,EAAAs7C,WAAAJ,EAAA9+C,GAAA,GAEjCvT,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,SAAGvN,EAAAsN,wBAAAtN,GAEjBA,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,uBAAAuhD,EAAAryD,EAAAkR,wBAAAuF,GAAAsH,UAAAigC,EAAAh+C,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAA0sC,EAAAyU,WAAAzU,EAAAyU,aAAAJ,EAAA9+C,GAAA8+C,EAAA9+C,GAGxB,GAAE,GACsBvT,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,GAENA,EAAAqN,yBAAA,gBAIIrN,EAAA8Q,qBAAA,uBAAA4hD,EAAA1yD,EAAAkR,wBAAAuF,GAAA27C,MAAA96C,EAAAtX,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAgG,EAAAq7C,SAAAtlB,OAAAqlB,EAAmB,GAAE,GAE9B1yD,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,aAAMvN,EAAAsN,wBAAAtN,KAGxBA,EAAAqN,yBAAA,aAQIrN,EAAAiS,qBAAA,GAAA2gD,EAAA,eAqCJ5yD,EAAAsN,wBAAAtN,EAAM,yDAlFMA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAshD,EAAA5+C,MAiBJzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAshD,EAAAC,MAAAntD,QAKUnF,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA2B,EAAA08C,aAAAJ,EAAA9+C,GAAA,6BAkBdvT,EAAAwN,oBAAA,GAAAxN,EAAAmnD,sBAAA,UAAApxC,EAAA08C,aAAAJ,EAAA9+C,GAAA,EAAA8+C,EAAAC,MAAAntD,OAAA,SAOqBnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAshD,EAAAC,MAAA,EAsD5B5yD,+BAA6B,eAA7BmzD,EAA6B,SAAAlyD,GAAAC,EAAAiyD,EAAAlyD,GAAA,IAAAG,EAAAC,EAAA8xD,GAiBtC,SAAAA,EACqC1Y,GAA8B,IAAA/4C,EAAAvB,SAAAC,KAAA+yD,IAE/DzxD,EAAAN,EAAAO,KAAAvB,OAFiCq6C,QAhBpB/4C,EAAAwtB,MAAQ,IAAI7kB,EAAAwV,aAEtBne,EAAAiiB,SAAU,EAGVjiB,EAAA0xD,cAAgB1xD,EAAK+4C,MAAM2Y,cAIlB1xD,EAAAoxD,WAAkCR,EAAAe,WAU9C3xD,EAAKuxD,UAAYxY,EAAM6Y,QAAU,IAAIl3C,IAAI,SAACJ,GACtCA,SAAI42C,MAAQ52C,EAAI42C,MAAMx2C,IAAI,SAAC+W,GAAC,MAAK,CAC7BA,EAAE,GACFtuB,KAAKC,UAAUquB,EAAE,IACpB,GACMnX,CACX,GAAGta,CACP,CAACxB,SAAAizD,EAAA,EAAAtxD,IAAA,SAAAkE,IAfD,WACI,MAAO,WAAaqiC,KAAKC,MAAsB,SAAhBD,KAAKmrB,SACxC,GAAC,CAAA1xD,IAAA,mBAAAC,MAeM,SAAiBA,GAAc,IAAAyD,EAAAnF,KAClCA,KAAK6D,QACD,aACA,kBAAOsB,EAAKk1C,MAAM+Y,UAAYjuD,EAAKk1C,MAAM+Y,UAAU1xD,GAAS,EAAE,EAC9D,IAER,GAAC,CAAAD,IAAA,cAAAC,MAEM,WACH1B,KAAKujB,SAAU,EACf,IAAMsvC,EAAW7yD,KAAK6yD,SAAS72C,IAAI,SAACJ,GAChC,OAAAkU,IAAA,GACOlU,GAAG,IACN42C,MAAO52C,EAAI42C,MAAMx2C,IAAI,SAAC+W,GAClB,IAAIrxB,EAAQqxB,EAAE,GACd,IACIrxB,EAAQ+C,KAAKmyB,MAAM7D,EAAE,UACb,CACZ,MAAO,CAACA,EAAE,GAAIrxB,EAClB,IAER,GACA1B,KAAK8uB,MAAMnP,KAAK,CAAE4P,OAAQ,OAAQoiB,SAAUkhB,GAChD,KAACE,CAAA,CArDqC,CAAQvyD,EAAAiI,cAArCsqD,SAA6B,mBAAA9yD,iBAA7B8yD,GAA4B7yD,EAAAwI,4BAkBzBsF,EAAAwvB,iBAAe,EAlBlBu1B,EAA6B,UAAA7yD,EAAA,kCAA7B6yD,EAA4B5pD,UAAA,4BAAA0W,QAAA,CAAAiP,MAAA,SAAA1lB,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,GAAAC,KAAA,EAAA+D,OAAA,0jCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjIjCvJ,EAAAqN,yBAAA,WAAArN,CAAQ,QACAA,EAAAuN,iBAAA,iCAA2BvN,EAAAsN,yBAC/BtN,EAAAiS,qBAAA,EAAAkhD,EAAA,gBAGJnzD,EAAAsN,yBACAtN,EAAAqN,yBAAA,WAAArN,CAAgE,oBAIxDA,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAiBzH,EAAA4pD,iBAAAniD,EAAwB,GAEzCjR,EAAAuN,iBAAA,gCACJvN,EAAAsN,yBACAtN,EAAAyJ,oBAAA,QACAzJ,EAAAqN,yBAAA,cAEIrN,EAAA8Q,qBAAA,0BAAStH,EAAAmpD,SAAA57B,KAAA,CAAAxjB,GAAA/J,EAAA6pD,OAAAf,MAAA,IAAwC,GAEjDtyD,EAAAuN,iBAAA,mBACJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAAqhD,EAAA,cA2FJtzD,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAAArN,CAEC,eAC8CA,EAAA8Q,qBAAA,0BAAStH,EAAA+pD,aAAa,GAC7DvzD,EAAAuN,iBAAA,qBACJvN,EAAAsN,wBAAAtN,UApH+BA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,SAO3BrjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAspD,eAYiB9yD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAmpD,qYA4GpBE,CAA6B,6KCrJ1C,IAAA9oD,EAAAnM,EAAA,OACA0C,EAAA1C,EAAA,OACA41D,EAAA51D,EAAA,6FAOYoC,EAAAqN,yBAAA,aAAArN,CAA+C,cACjCA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,iEAGvBA,EAAAqN,yBAAA,SAAArN,CAAwC,UAAxCA,CAAwC,gBAILA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBACjCtN,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,iDAA2CvN,EAAAsN,yBAC9CtN,EAAAqN,yBAAA,aAGIrN,EAAA8Q,qBAAA,kBAAAG,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,0BAAA,OAAUrR,EAAAsR,sBAAAF,EAAAqiD,gBAAAxiD,GAAuB,GAHrCjR,EAAAsN,wBAAAtN,GAMJA,EAAAqN,yBAAA,UAAArN,CAAwD,cAIhDA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAC,GAAA,IAAAa,EAAAhS,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAU,EAAAsW,mBAAkB,GAE3BtoB,EAAAuN,iBAAA,yBACJvN,EAAAsN,wBAAAtN,IAAS,2BAIbA,EAAAqN,yBAAA,aAGIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,GAAavN,EAAAsN,wBAAAtN,2CAAbA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAxC,EAAAyR,QAAA,EAMN3jB,mCAAgC,eAAhCg0D,EAAgC,WA1C7C,SAAAA,IAAA7zD,EAAAC,KAAA4zD,GA2CqB5zD,KAAA8uB,MAAQ,IAAI7kB,EAAAwV,aAG7B3f,SAAA8zD,EAAA,EAAAnyD,IAAA,kBAAAC,MACO,SAAgBotB,GAAgB,IAAAxtB,EAAAtB,KACnCA,KAAKujB,QAAU,0BACf,IAAMkyB,EAA4B3mB,EAAM+kC,OACxC,GAAY,MAAPpe,MAASqe,MAAO,OAAQ9zD,KAAKujB,QAAU,GAC5C,IAAMuwC,EAAkBre,EAAQqe,MAChC,IAAKA,EAAMzuD,OAAQ,OAAQrF,KAAKujB,QAAU,GAC1C,IAAMwwC,EAAOD,EAAM,GACbE,EAAa,IAAIC,WACvBD,EAAWE,iBAAiB,UAAW,SAAC9uC,GACpC,IACMtiB,KAAOtC,EAAA2zD,WADI/uC,EAAEyuC,OAAOnsD,QAE1BpG,EAAKiiB,QAAU,GACfjiB,EAAKwtB,MAAMnP,KAAK,CACZ4P,OAAQ,OACRoiB,SAAU7uC,EACLoZ,OAAO,SAAC7Y,GAAC,MAAsC,UAAhCA,EAAE2P,MAAQ,IAAI0gB,aAAwB,GACrD1X,IACG,SAAC+W,GAAC,OACE,IAAI2gC,EAAAU,aAAYtkC,IAAA,GACTiD,GAAC,IACJ9P,QAASngB,EACJoZ,OACG,SAAC7Y,GAAC,MAEM,YADHA,EAAE2P,MAAQ,IAAI0gB,eACCrwB,EAAE2qD,OAASj7B,EAAEtf,EAAE,GAEtCuI,IAAI,SAAC3Y,GAAC,MAAM,CACToQ,GAAIpQ,EAAEoQ,GACNE,KAAMtQ,EAAEsQ,KACR+kB,MAAOr1B,EAAE64B,SACTooB,SAAUjhD,EAAEihD,SACZ/jB,WAAYl9B,EAAEk9B,WACjB,KACP,IAGtB,GACAyzB,EAAWK,WAAWN,EAC1B,GAAC,CAAAtyD,IAAA,mBAAAC,MAEM,YAIH,EAAAlB,EAAA8zD,cAAa,2BAHC,sJAIlB,KAACV,CAAA,CAlDwC,GAAhCA,SAAgC,mBAAA3zD,iBAAhC2zD,EAAgC,EAAhCA,EAAgC,UAAA1zD,EAAA,kCAAhC0zD,EAAgCzqD,UAAA,iCAAA0W,QAAA,CAAAiP,MAAA,SAAAxlB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,8rBAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAvCrCvJ,EAAAqN,yBAAA,aAAArN,CAAuE,QAC/DA,EAAAuN,iBAAA,0BAAoBvN,EAAAsN,yBACxBtN,EAAAiS,qBAAA,EAAAoiD,EAAA,gBAGJr0D,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAqiD,EAAA,eAsBAt0D,EAAAiS,qBAAA,EAAAsiD,EAAA,yBAAAv0D,EAAAomB,yEA1BmCpmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,SAI5BrjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,QAAArjB,CAAgB,WAAAumB,EAAA,6FAiClBmtC,CAAgC,+LC9C7C,IAAAc,EAAA52D,EAAA,OACAmM,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OAEAkQ,EAAAlQ,EAAA,OACA0C,EAAA1C,EAAA,OACA41D,EAAA51D,EAAA,oLAYYoC,EAAAqN,yBAAA,aAAArN,CAAyD,cAC3CA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,6BASfA,EAAAqN,yBAAA,WAAArN,CAAsD,cAQ9CA,EAAAuN,iBAAA,WAAIvN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,OAACvN,EAAAsN,yBAAOtN,EAAAuN,iBAAA,QACtBvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,cAMAzJ,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,sBAAgBvN,EAAAsN,wBAAAtN,8CAd3BA,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,QAAAiC,EAAArR,KAAAuU,SAAAtR,KAAAghD,SAAA5yC,EAAArR,KAAAuU,SAAAtR,KAAAihD,QAAA,2BAiBR10D,EAAAqN,yBAAA,WAAArN,CAA0D,cAQlDA,EAAAuN,iBAAA,eAAQvN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,OAACvN,EAAAsN,yBAAOtN,EAAAuN,iBAAA,QAC1BvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,cAOAzJ,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,0BAAoBvN,EAAAsN,wBAAAtN,2EAf/BA,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,QAAAS,EAAA7P,KAAAuU,SAAAiX,SAAAy4B,SAAAp0C,EAAA7P,KAAAuU,SAAAiX,SAAA04B,SAaI10D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAAI,EAAA,+DAkBJnR,EAAAqN,yBAAA,qBAEIrN,EAAA8Q,qBAAA,yBAAA6jD,EAAA30D,EAAAkR,wBAAAgG,GAAA6G,UAAA5G,EAAAnX,EAAAqR,wBAAA,UAAWrR,EAAAsR,sBAAA6F,EAAAy9C,UAAAD,GAAe,GAE1B30D,EAAAuN,iBAAA,GACAvN,EAAAqN,yBAAA,cAAArN,CAGC,cACaA,EAAAuN,iBAAA,YAAMvN,EAAAsN,wBAAAtN,IAAW,2BAL/BA,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAknD,EAAA,KAGI30D,EAAAwN,oBAAA,GAAAxN,EAAA60D,sBAAA,uBAAAF,EAAA,+DAnBpB30D,EAAAqN,yBAAA,WAAArN,CAAsD,cAClDA,EAAAyuB,iBAAA,MAQAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAAArN,CAAqC,yBAE7BA,EAAAiS,qBAAA,EAAA6iD,EAAA,uBAYJ90D,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAOIrN,EAAA8Q,qBAAA,gCAAAG,GAAAjR,EAAAkR,wBAAAqP,GAAA,IAAAjJ,EAAAtX,EAAAqR,wBAAA,UAAwBrR,EAAAsR,sBAAAgG,EAAAy9C,OAAA9jD,GAAc,GAP1CjR,EAAAsN,wBAAAtN,IAQE,yEA9BFA,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,QAAAjK,EAAAnF,KAAAuU,SAAA+oC,KAAA2G,SAAA9+C,EAAAnF,KAAAuU,SAAA+oC,KAAA4G,SAUyB10D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA4E,EAAAq/C,UAgBrBh1D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAAkN,EAAAje,CAA4B,gCAAA2V,EAAAs/C,WAA5Bj1D,CAA4B,mDAOxCA,EAAAqN,yBAAA,WAAArN,CAA6D,cAChCA,EAAAuN,iBAAA,kBAAYvN,EAAAsN,yBACrCtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,iBAMJzJ,EAAAsN,wBAAAtN,6BAEJA,EAAAqN,yBAAA,WAAArN,CAA4D,cAQpDA,EAAAuN,iBAAA,iBAAUvN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,OAACvN,EAAAsN,yBAAOtN,EAAAuN,iBAAA,QAC5BvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,cAOAzJ,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,4BAAsBvN,EAAAsN,wBAAAtN,8CAfjCA,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,QAAAxJ,EAAA5F,KAAAuU,SAAAsb,WAAAo0B,SAAAr+C,EAAA5F,KAAAuU,SAAAsb,WAAAq0B,QAAA,wBA0FR10D,EAAAqN,yBAAA,WAAArN,CAAwD,cACpDA,EAAAyuB,iBAAA,MAAgDzuB,EAAAsN,yBAChDtN,EAAAyJ,oBAAA,yBAIJzJ,EAAAsN,+HAlMJtN,EAAAqN,yBAAA,WAAArN,CAIC,WAEOA,EAAAiS,qBAAA,EAAAijD,EAAA,cAoBAl1D,EAAAiS,qBAAA,EAAAkjD,EAAA,cAqBJn1D,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAmjD,EAAA,aAoCAp1D,EAAAiS,qBAAA,EAAAojD,EAAA,aAWAr1D,EAAAiS,qBAAA,EAAAqjD,EAAA,cAqBAt1D,EAAAqN,yBAAA,WAAArN,CAA+B,cACWA,EAAAuN,iBAAA,oBAAcvN,EAAAsN,yBACpDtN,EAAAqN,yBAAA,sBAA8CrN,EAAAuN,iBAAA,IAE5CvN,EAAAsN,wBAAAtN,GAENA,EAAAqN,yBAAA,YAAArN,CAAuD,sBAG/CA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAqyC,GAAA,IAAA3rC,EAAA5X,EAAAqR,0BAAA,OAEFrR,EAAAsR,sBAAAL,EAAqC2G,EAAAm9C,OAAA,CAAAvzD,MAC/C,gBACRoW,EAAAg9C,UAAU,eACR,GAEkB50D,EAAAuN,iBAAA,yBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAqyC,GAAA,IAAApiC,EAAAnhB,EAAAqR,0BAAA,OAC6BrR,EAAAsR,sBAAAL,EAASkQ,EAAA4zC,OAAA,CAAAvzD,MAAgB,UACpE2f,EAAAyzC,UAAU,SACd,GAEkB50D,EAAAuN,iBAAA,mBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAqyC,GAAA,IAAA1iC,EAAA7gB,EAAAqR,0BAAA,OAEFrR,EAAAsR,sBAAAL,EAAqC4P,EAAAk0C,OAAA,CAAAvzD,MAC9C,eACRqf,EAAA+zC,UAAU,cACT,GAEkB50D,EAAAuN,iBAAA,uBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAqyC,GAAA,IAAAgS,EAAAv1D,EAAAqR,0BAAA,OAEFrR,EAAAsR,sBAAAL,EAAqCskD,EAAAR,OAAA,CAAAvzD,MAClD,mBAAkD+zD,EAAAX,UAChD,kBACL,GAEkB50D,EAAAuN,iBAAA,2BACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,sBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAqyC,GAAA,IAAArhC,EAAAliB,EAAAqR,0BAAA,OAEFrR,EAAAsR,sBAAAL,EAAqCiR,EAAA6yC,OAAA,CAAAvzD,MACjD,kBAAiD0gB,EAAA0yC,UAC/C,iBACN,GAEkB50D,EAAAuN,iBAAA,0BACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAAArN,CAA+B,eACQA,EAAAuN,iBAAA,mBAAYvN,EAAAsN,yBAC/CtN,EAAAyJ,oBAAA,mBAQJzJ,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAAujD,EAAA,aAOJx1D,EAAAsN,wBAAA,6CAhMItN,EAAA+Q,qBAAA,YAAAgF,EAAAvF,MAGgCxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgF,EAAAvF,KAAAuU,SAAAtR,MAoBAzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgF,EAAAvF,KAAAuU,SAAAiX,UAsBJh8B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgF,EAAAvF,KAAAuU,SAAA+oC,MAoCA9tD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgF,EAAAvF,KAAAuU,SAAApR,aAWA3T,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgF,EAAAvF,KAAAuU,SAAAsb,YAuBsBrgC,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA,OAAAk5C,EAAAv3C,EAAAvF,KAAA/K,IAAA,mBAAA6nD,EAAA9rD,MAAA,YAM1CxB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAgF,EAAA0/C,OAAA,eAAAz1D,CAAiC,iBAAAA,EAAA0R,0BAAA,GAAAipC,IAWjC36C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAgF,EAAA0/C,OAAA,SAAAz1D,CAA2B,iBAAAA,EAAA0R,0BAAA,GAAAipC,IAS3B36C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAgF,EAAA0/C,OAAA,cAAAz1D,CAAgC,iBAAAA,EAAA0R,0BAAA,GAAAipC,IAWhC36C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAgF,EAAA0/C,OAAA,kBAAAz1D,CAAoC,iBAAAA,EAAA0R,0BAAA,GAAAipC,IAWpC36C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAgF,EAAA0/C,OAAA,iBAAAz1D,CAAmC,iBAAAA,EAAA0R,0BAAA,GAAAipC,IAgBnC36C,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,CAAS,UAATA,CAAS,SAATA,CAAS,YAAA+V,EAAA2/C,eAMW11D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgF,EAAAvF,KAAAuU,SAAAwG,OAAA,+DAQhCvrB,EAAAqN,yBAAA,cAAArN,CAGC,eAKOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAykD,GAAA,IAAAC,EAAA51D,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAskD,EAAArC,cAAa,GAEtBvzD,EAAAuN,iBAAA,YACJvN,EAAAsN,wBAAAtN,EAAS,2CAJLA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAU,EAAAjB,KAAAqlD,MAAA,wBAOJ71D,EAAAqN,yBAAA,YACIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,6BAAuBvN,EAAAsN,wBAAAtN,6BAI9BA,EAAAqN,yBAAA,mBACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAF8CtN,EAAA+Q,qBAAA,QAAA+kD,GAC1C91D,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAqoD,EAAA,MAYHp2D,6BAA0B,eAA1Bq2D,EAA0B,WA6CnC,SAAAA,EACqC5b,GAA4Bt6C,EAAAC,KAAAi2D,GAA5Bj2D,KAAAq6C,QA5CpBr6C,KAAA8uB,MAAQ,IAAI7kB,EAAAwV,aAEtBzf,KAAA0Q,KAAO,IAAI9G,EAAAk2B,UAAU,CACxBnsB,KAAM,IAAI/J,EAAAm2B,YAAY//B,KAAKmc,KAAKxI,MAAQ,GAAI,CAAC/J,EAAAo2B,WAAWC,WACxDpsB,YAAa,IAAIjK,EAAAm2B,YAAY//B,KAAKmc,KAAKtI,aAAe,IACtDqoB,SAAU,IAAItyB,EAAAm2B,YAAY//B,KAAKmc,KAAK+f,UAAY,GAAI,CAChDtyB,EAAAo2B,WAAWC,WAEfM,WAAY,IAAI32B,EAAAm2B,YAAY//B,KAAKmc,KAAKokB,WAAY,CAC9C32B,EAAAo2B,WAAWC,WAEf+tB,KAAM,IAAIpkD,EAAAm2B,YAAY//B,KAAKmc,KAAK6xC,MAAQ,IACxCkI,cAAe,IAAItsD,EAAAm2B,YAAY//B,KAAKmc,KAAK+5C,gBAAiB,GAC1DC,aAAc,IAAIvsD,EAAAm2B,YAAY//B,KAAKmc,KAAKg6C,cAAgB,GACxD1qC,OAAQ,IAAI7hB,EAAAm2B,YAAY//B,KAAKmc,KAAKsP,QAAU,MAGzCzrB,KAAAujB,SAAU,EAEDvjB,KAAAm1D,WAAuB,CAACT,EAAA0B,MAAO1B,EAAA2B,MAAO3B,EAAA4B,MA0BnD,CAEHx2D,SAAAm2D,EAAA,EAAAx0D,IAAA,OAAAkE,eAxBI,OAAO3F,KAAKq6C,MAAMl+B,MAAQ,IAAIu3C,EAAAU,YAClC,GAEA,CAAA3yD,IAAA,aAAAkE,IACA,WACI,OAAO3F,KAAKq6C,MAAMkc,YAAc,EACpC,GAAC,CAAA90D,IAAA,WAAAkE,IAED,WACI,OAAO3F,KAAK0Q,KAAKuU,SAAS+oC,KAAKtsD,KACnC,GAAC,CAAAD,IAAA,gBAAAC,MAEM,WACH,SAAA0C,OADiBa,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EAClB,IACnB,GAAC,CAAAxD,IAAA,SAAAC,MAEM,SAAO80D,GACV,OAAOx2D,KAAKk1D,SAASjvD,SAASuwD,EAClC,GAAC,CAAA/0D,IAAA,SAAAC,MAUM,SAAOotB,GACV,GAAK9uB,KAAK0Q,MAAS1Q,KAAK0Q,KAAKuU,SAAS+oC,KACtC,CAAAhuD,KAAK0Q,KAAKuU,SAAS+oC,KAAKyI,cACxB,IAAMC,EAAQ5nC,EAAM4nC,MACdh1D,EAAQotB,EAAMptB,MACdwzD,EAAWl1D,KAAKk1D,UACjBxzD,GAAS,IAAIuyC,SACdihB,EAASj+B,KAAKv1B,GACd1B,KAAK0Q,KAAKuU,SAAS+oC,KAAK1zB,SAAS46B,IAIjCwB,IAAOA,EAAMh1D,MAAQ,IAC7B,GAEA,CAAAD,IAAA,YAAAC,MAIO,SAAUi1D,GACb,GAAK32D,KAAK0Q,MAAS1Q,KAAK0Q,KAAKuU,SAAS+oC,KACtC,KAAMkH,EAAWl1D,KAAKk1D,SACtBl1D,KAAK0Q,KAAKuU,SAAS+oC,KAAKyI,cACxB,IAAMnE,EAAQ4C,EAAS0B,QAAQD,GAE3BrE,GAAS,IACT4C,EAAS3nB,OAAO+kB,EAAO,GACvBtyD,KAAK0Q,KAAKuU,SAAS+oC,KAAK1zB,SAAS46B,GAAQ,CAEjD,GAAC,CAAAzzD,IAAA,cAAAC,MAEM,WACH1B,KAAKujB,SAAU,EACfvjB,KAAK8uB,MAAMnP,KAAK,CACZ4P,OAAQ,OACRoiB,SAAU,CACNx1B,KAAM,IAAIu3C,EAAAU,aAAYtkC,IAAA,GACf9vB,KAAKmc,MAAI,IACZ1I,GAAIzT,KAAKmc,KAAK1I,IAAE,QAAArP,UAAY5D,EAAAq2D,WAAU,YACnC72D,KAAK0Q,KAAKhP,UAI7B,KAACu0D,CAAA,CAhGkC,GAA1BA,SAA0B,mBAAAh2D,iBAA1Bg2D,GAA0B/1D,EAAAwI,4BA8CvBsF,EAAAwvB,iBAAe,EA9ClBy4B,EAA0B,UAAA/1D,EAAA,kCAA1B+1D,EAA0B9sD,UAAA,0BAAA0W,QAAA,CAAAiP,MAAA,SAAAxlB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,umCA9KtBgjB,UAAAC,MAAAC,EAAA,6MAoBoBF,UAAAG,MAAAD,EAAA,8gBAkHoBF,UAAAI,MAAAF,EAAA,4ZAnMjDtwB,EAAAqN,yBAAA,WAAArN,CAAQ,QACAA,EAAAuN,iBAAA,GAAmCvN,EAAAsN,yBACvCtN,EAAAiS,qBAAA,EAAA2kD,EAAA,gBAGJ52D,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAA4kD,EAAA,gBAoMA72D,EAAAiS,qBAAA,EAAA6kD,EAAA,gBAaA92D,EAAAiS,qBAAA,EAAA8kD,EAAA,yBAAA/2D,EAAAomB,kCAMApmB,EAAAqN,yBAAA,6BACIrN,EAAAiS,qBAAA,GAAA+kD,EAAA,oBAGJh3D,EAAAsN,gEAhOQtN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,GAAAjE,EAAAyS,KAAA1I,GAAA,sBACqCvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,SAMxCrjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAgH,OAAAhH,EAAA6Z,QAAArjB,CAAwB,WAAAqtB,GAmMxBrtB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,SAmB8BrjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAA6sD,WAAA,6nBAa9BN,CAA0B,qICzPvCr2D,eAAyB,WAyCrB,SAAAw0D,IAA4C,IAAA+C,EAAAC,EAAhCt0D,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA8B,GAAElF,EAAAC,KAAAo0D,GACxCp0D,KAAKyT,GAAK3Q,EAAK2Q,IAAM,GACrBzT,KAAK2T,KAAO7Q,EAAK6Q,MAAQ7Q,EAAK2Q,IAAM,GACpCzT,KAAKk8B,SAAWp5B,EAAKo5B,UAAY,GACjCl8B,KAAKugC,WAAaz9B,EAAKy9B,YAAc,EACrCvgC,KAAK6T,YAAc/Q,EAAK+Q,aAAe,GACvC7T,KAAKq3D,SAAWv0D,EAAKu0D,UAAY,EACjCr3D,KAAKm2D,aAAerzD,EAAKqzD,cAAgB,EACzCn2D,KAAKk2D,gBAAkBpzD,EAAKozD,cAC5Bl2D,KAAKguD,KAAOlrD,EAAKkrD,MAAQ,GACzBhuD,KAAKyrB,OAAS3oB,EAAK2oB,QAAU,GAC7BzrB,KAAKijB,QAAUngB,EAAKmgB,SAAW,GAC/B,IAAMq0C,EAAct3D,KAAKijB,QAAQopB,KAAK,SAAChpC,GAAC,OAAkB,IAAbA,EAAEg4B,MAAe,GAC9Dr7B,KAAKu3D,aACAD,EACKt3D,KAAKijB,QAAQ/G,OAAO,SAAC7Y,GAAC,OAAkB,IAAbA,EAAEg4B,MAAe,GAC5Cv4B,EAAKy0D,cAAgB,GAC/Bv3D,KAAKw3D,eAAiB10D,EAAK00D,gBAAkB,GAC7Cx3D,KAAKy3D,wBACDz3D,KAAKugC,WACLvgC,KAAKu3D,YACAv7C,IAAI,SAAC+W,GAAC,OAAKA,EAAEwN,YAAc,CAAC,GAC5BnD,OAAO,SAACs0B,EAAG/9B,GAAC,OAAK+9B,EAAI/9B,CAAC,EAAE,GACjC3zB,KAAK03D,WAAa13D,KAAKy3D,wBAA0Bz3D,KAAKq3D,SACtDr3D,KAAK23D,gBACW,QAAZR,EAAAn3D,KAAKijB,eAAO,IAAAk0C,OAAA,EAAZA,EACMn7C,IAAI,SAAC3Y,GAAC,OAAKA,EAAEoQ,IAAM,EAAE,GACtByJ,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAEkL,cAAc7f,EAAE,GACjCjK,KAAK,OAAQ,GACtB/U,KAAK43D,SAAwB,QAAhBR,EAAGt0D,EAAK80D,gBAAQ,IAAAR,IACjC,CAACt3D,SAAAs0D,EAAA,EAAA3yD,IAAA,YAAAkE,IAnCD,WACI,IAAMsd,EAAUjjB,KAAKu3D,YAAYv7C,IAAI,SAAC3Y,GAAC,OAAKA,EAAEoQ,EAAE,GAAEsB,KAAK,KACvD,SAAA3Q,OAAUpE,KAAKyT,GAAE,KAAArP,OAAI6e,EAAO,KAAA7e,OAAKpE,KAAK43D,SAAoB,GAAT,OACrD,KAACxD,CAAA,CAvCoB,sKCFzB,IAAAnqD,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OAKA+5D,GAJA/5D,EAAA,OACAA,EAAA,OAGAA,EAAA,uHAeoBoC,EAAAyJ,oBAAA,6DAIIzJ,EAAA+Q,qBAAA,SAAA+pC,EAAAvvB,OAAA,0BAGAvrB,EAAAyJ,oBAAA,qCASAzJ,EAAAqN,yBAAA,aAKIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,yGAHItN,EAAA+Q,qBAAA,aAAA6F,EAAAghD,WAAA9c,IAEA96C,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAAqtC,EAAAuc,YAAA,KAAAvc,EAAAuc,YAAAlyD,SAAA,iFA7BhBnF,EAAAqN,yBAAA,UAAArN,CAIC,WAIOA,EAAAiS,qBAAA,EAAA4lD,EAAA,aAMA73D,EAAAiS,qBAAA,EAAA6lD,EAAA,yBAAA93D,EAAAomB,kCAMJpmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAkB,WAEVA,EAAAuN,iBAAA,GACAvN,EAAAiS,qBAAA,EAAA8lD,EAAA,eAOJ/3D,EAAAsN,yBACAtN,EAAAqN,yBAAA,SAAKrN,EAAAuN,iBAAA,IAA6BvN,EAAAsN,yBAClCtN,EAAAqN,yBAAA,YAAArN,CAEC,gBAMOA,EAAA8Q,qBAAA,uBAAAgqC,EAAA96C,EAAAkR,wBAAA8b,GAAAjP,UAAAsC,EAAArgB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA+O,EAAA23C,SAAAld,GAAc,GAEvB96C,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBACdtN,EAAAuN,iBAAA,eACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,gBAKIrN,EAAA8Q,qBAAA,uBAAAgqC,EAAA96C,EAAAkR,wBAAA8b,GAAAjP,UAAAmC,EAAAlgB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA4O,EAAAstB,WAAAsN,GAAgB,GAEzB96C,EAAAqN,yBAAA,YAAArN,CAAyC,eAC3BA,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACftN,EAAAuN,iBAAA,eACJvN,EAAAsN,wBAAAtN,OAIZA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,uBAAAgqC,EAAA96C,EAAAkR,wBAAA8b,GAAAjP,UAAA3H,EAAApW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8E,EAAA+iB,gBAAA2hB,GAAqB,GAE9B96C,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,IAAW,sFAhERA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA+pC,EAAAvvB,OAAA,KAAAuvB,EAAAvvB,OAAApmB,OAAAnF,CAA2B,WAAAqtB,GAa5BrtB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAqtC,EAAArnC,MAAA,YAGKzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAA+pC,EAAAuc,YAAA,KAAAvc,EAAAuc,YAAAlyD,QAMJnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,GAAAqtC,EAAAqc,SAAA,cAmCLn3D,EAAAwN,oBAAA,IAAAxN,EAAA4f,sBAAA,gBAAAvN,EAAAgnB,UAAAtzB,SAAA+0C,EAAAvnC,KAGUvT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAAgnB,UAAAtzB,SAAA+0C,EAAAvnC,IAAA,+BA3E9B,IAAM+lB,EAAa,GA0GN55B,6BAA0B,eAA1Bu4D,EAA0B,WAmBnC,SAAAA,EACYj3D,EACAoX,GAAkB,IAAAhX,EAAAtB,KAAAD,EAAAC,KAAAm4D,GADlBn4D,KAAAkB,YACAlB,KAAAsY,UApBItY,KAAAijB,QAIZ,GACGjjB,KAAA05B,MAAwB,GACxB15B,KAAA25B,UAAW,EAIX35B,KAAAuf,SAA2B,GA8BlBvf,KAAA45B,iBAAmB,SAACC,GAA+B,OAC9Dv4B,EAAKw4B,UAAYD,CAAE,EACR75B,KAAA+5B,kBAAoB,SAACF,GAA+B,OAC/Dv4B,EAAK04B,SAAWH,CAAE,EACP75B,KAAAi6B,iBAAmB,SAACrQ,GAAU,OAAMtoB,EAAKq4B,SAAW/P,CAAC,CAvBlE,CAEH9pB,SAAAq4D,EAAA,EAAA12D,IAAA,YAAAkE,IAXA,WACI,OACI3F,KAAKkB,UAAUyE,IAAc,yBAA2B6zB,CAEhE,GAAC,CAAA/3B,IAAA,WAAAC,MAWM,SAASy4B,GACZn6B,KAAK05B,MAAQS,EACTn6B,KAAK85B,WAAW95B,KAAK85B,UAAU95B,KAAK05B,MAC5C,GAEA,CAAAj4B,IAAA,aAAAC,MAIO,SAAWA,GACd1B,KAAK05B,MAAQh4B,GAAS,EAC1B,GAAC,CAAAD,IAAA,aAAAC,MAQM,SAAWya,GACd,IAAMke,EAAer6B,KAAK05B,MAAMxd,OAAO,SAAC7Y,GAAC,OAAKA,EAAEoQ,KAAO0I,EAAK1I,EAAE,GAC9DzT,KAAKs6B,SAASD,EAClB,GAAC,CAAA54B,IAAA,WAAAC,MAEM,SAASya,GAAmB,IAAAhX,EAAAnF,KACnBA,KAAKsY,QAAQrD,KAAK4iD,EAAAO,+BAAgC,CAC1Dt1D,KAAM,CAAC9C,KAAK05B,MAAO15B,KAAKijB,WAExBnK,cAAc3F,UAAU,SAACumB,GACpBA,GACLv0B,EAAKm1B,SAASZ,EAClB,EACJ,GAAC,CAAAj4B,IAAA,aAAAC,MAEM,SAAWya,GAAkB,IAAAk8C,EAChC,OAAuB,QAAvBA,EAAOl8C,EAAKo7C,mBAAW,IAAAc,OAAA,EAAhBA,EAAkBr8C,IAAI,SAAC3Y,GAAC,OAAKA,EAAEsQ,IAAI,GAAEoB,KAAK,KACrD,GAAC,CAAAtT,IAAA,kBAAAC,MAEM,SAAgB42D,GACnB,IAAM79B,EAAWz6B,KAAKu5B,UAChBmB,GAAaD,EAASx0B,SAASqyD,EAAa7kD,IAE9CzT,KAAKkB,UAAUy5B,gBAAgB,uBAD/BD,EACqD,GAAAt2B,OAAAif,EAC9CoX,GAAQ,CACX69B,EAAa7kD,KAKbgnB,EAASve,OAAO,SAAC7Y,GAAC,OAAKA,IAAMi1D,EAAa7kD,EAAE,GAGxD,KAAC0kD,CAAA,CAhFkC,GAA1BA,SAA0B,mBAAAl4D,iBAA1Bk4D,GAA0Bj4D,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAAuQ,WAAA,EAA1B++C,EAA0B,UAAAj4D,EAAA,kCAA1Bi4D,EAA0BhvD,UAAA,0BAAAyW,OAAA,CAAAqD,QAAA,WAAA7Z,SAAA,CAAAlJ,EAAAkwB,6BATxB,CACP,CACI1jB,QAAS9C,EAAAixB,kBAETC,eAAa7wB,EAAA8wB,YAAW,kBAAMo9B,CAA0B,GACxDn9B,OAAO,MAEd1xB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,4yCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IApGWvJ,EAAAqN,yBAAA,WACJrN,EAAAiS,qBAAA,EAAAomD,EAAA,cA6EJr4D,EAAAsN,yBACAtN,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,0BAAStH,EAAAwuD,UAAU,GAEnBh4D,EAAAqN,yBAAA,UAAArN,CAAwD,cAC1CA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,cAAQvN,EAAAsN,wBAAAtN,YArFGA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAgwB,OAgFrBx5B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,WAAAvH,EAAAiwB,qHAkBCw+B,CAA0B,yLCjHvC,IAAA33D,EAAA1C,EAAA,OAEA41D,EAAA51D,EAAA,SACAA,EAAA,4JA4BgBoC,EAAAqN,yBAAA,cAAArN,CAKC,cACaA,EAAAuN,iBAAA,eAASvN,EAAAsN,wBAAAtN,uEAHnBA,EAAA+Q,qBAAA,oBAAAwV,EAAA,+DAtBRvmB,EAAAqN,yBAAA,UAAArN,CAAsD,oBAI9CA,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAC,GAAA,IAAAC,EAAApR,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAF,EAAAknD,WAAArnD,EAAA,GACHjR,EAAAsN,yBACDtN,EAAAqN,yBAAA,UAAArN,CAA0C,UAA1CA,CAA0C,SAE7BA,EAAAuN,iBAAA,GAAevN,EAAAsN,yBACpBtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YAGIrN,EAAAuN,iBAAA,oEACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAiS,qBAAA,GAAAsmD,EAAA,iBAQAv4D,EAAAqN,yBAAA,gBAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAC,GAAA,IAAAa,EAAAhS,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAU,EAAAwmD,cAAAxmD,EAAAwmD,aAAA,GAEAx4D,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,kBAAWvN,EAAAsN,wBAAAtN,IAAW,2CA7BhCA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAsB,EAAAimD,YAISt4D,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAA4J,KAAAxI,MAEDzT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAA4J,KAAA+f,SAAA,KAMJh8B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAsU,sBAAA,KAAAjC,EAAA4J,KAAAokB,WAAA,IAAArgC,EAAA8V,sBAAA,KAAAzD,EAAAomD,SAAA,KAOHz4D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsB,EAAA0+C,UAOD/wD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAsB,EAAA4J,KAAA8G,QAAA5d,OAAA,+DA2BAnF,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+M,GAAA,IAAAy6C,EAAA14D,EAAAqR,0BAAA0M,UAAA3H,EAAApW,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA8E,EAAAuiD,WAAAD,GAAkB,GAG3B14D,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,EAAW,+DAE7BA,EAAAqN,yBAAA,eAKIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA83B,GAAA,IAAA0vB,EAAA14D,EAAAqR,0BAAA0M,UAAArH,EAAA1W,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAoF,EAAAkiD,aAAAF,GAAoB,GAG7B14D,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,YAAMvN,EAAAsN,wBAAAtN,EAAW,2BA/BnCA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,YAGAzJ,EAAAqN,yBAAA,WAAArN,CAA8B,YACRA,EAAAuN,iBAAA,GAAiBvN,EAAAsN,yBACnCtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAiS,qBAAA,EAAA4mD,EAAA,iBAUA74D,EAAAiS,qBAAA,EAAA6mD,EAAA,iBAUJ94D,EAAAsN,gFAzB0BtN,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAskD,EAAAjlD,MAEdzT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAirD,EAAAlgC,MAAA,KASHx4B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8Q,EAAAkvC,UAUA/wD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA8Q,EAAAkvC,SAAA,2BArCb/wD,EAAAqN,yBAAA,YAQIrN,EAAAiS,qBAAA,EAAA8mD,EAAA,cAkCJ/4D,EAAAsN,iEAtCItN,EAAAmnD,sBAAA,SAAApxC,EAAAyiD,aAAA,IAAAziD,EAAAkG,KAAA8G,QAAA5d,OAAA,WAMuBnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAgF,EAAAkG,KAAA8G,QAAA,EAgF1BrjB,4BAAyB,eAAzBs5D,EAAyB,WAwClC,SAAAA,EAAoBC,GAA+B,IAAA73D,EAAAtB,KAAAD,EAAAC,KAAAk5D,GAA/Bl5D,KAAAm5D,YApCbn5D,KAAA04D,cAAe,EAEN14D,KAAAo5D,UAAY,kBAAM93D,EAAK63D,UAAUC,UAAU93D,EAAK6a,KAAK,EAErDnc,KAAA64D,WAAa,SAACQ,GAAsB,OAChD/3D,EAAK63D,UAAUC,UAAU93D,EAAK6a,KAAMk9C,EAAO,EAE/Br5D,KAAA84D,aAAe,SAACO,GAAsB,OAClD/3D,EAAK63D,UAAUG,aAAah4D,EAAK6a,KAAMk9C,EAAO,EAElCr5D,KAAAu5D,SAAW,kBAAMj4D,EAAK63D,UAAUK,QAAQl4D,EAAK6a,KAAK,EAElDnc,KAAA0tC,WAAa,kBAAMpsC,EAAK63D,UAAUM,WAAWn4D,EAAK6a,KAAK,CAwBjB,CAACrc,SAAAo5D,EAAA,EAAAz3D,IAAA,WAAAkE,IAtBvD,WACI,OAAO3F,KAAKm5D,UAAUO,WAC1B,GAAC,CAAAj4D,IAAA,aAAAkE,IAED,WACI,OAAQ3F,KAAKmc,KAAKq7C,eAAevxD,SAASjG,KAAKm5D,UAAUnlD,KAC7D,EAAC4H,IAED,SAAsB0hB,GAAc,IAAAn4B,EAAAnF,KAC5BoT,EAAOpT,KAAKmc,KAAKq7C,eAEhBpkD,EADAkqB,EACOlqB,EAAK8I,OAAO,SAAC7Y,GAAC,OAAKA,IAAM8B,EAAKg0D,UAAUnlD,IAAI,IAD5CZ,EAAO5S,EAAA6qC,QAAM,GAAAjnC,OAAAif,EAAKjQ,GAAI,CAAEpT,KAAKm5D,UAAUnlD,QAEnDhU,KAAKm5D,UAAUQ,WACX,IAAIjG,EAAAU,aAAYtkC,IAAA,GAAM9vB,KAAKmc,MAAI,IAAEq7C,eAAgBpkD,KAEzD,GAEA,CAAA3R,IAAA,SAAAkE,IACA,WACI,OAAO3F,KAAKm5D,UAAUS,QAC1B,KAACV,CAAA,CAtCiC,GAAzBA,SAAyB,mBAAAj5D,iBAAzBi5D,GAAyBh5D,EAAAwI,4BAAAC,EAAAkxD,sBAAA,EAAzBX,EAAyB,UAAAh5D,EAAA,kCAAzBg5D,EAAyB/vD,UAAA,+BAAAyW,OAAA,CAAAzD,KAAA,QAAAiD,MAAAvN,EAAAvI,MAAA,GAAAC,KAAA,EAAA+D,OAAA,w8CAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAjI9BvJ,EAAAqN,yBAAA,WAGIrN,EAAAiS,qBAAA,EAAA2nD,EAAA,eAoCA55D,EAAAiS,qBAAA,EAAA4nD,EAAA,aA2CA75D,EAAAqN,yBAAA,oBAAArN,CAA0B,cAIlBA,EAAA8Q,qBAAA,0BAAStH,EAAA0vD,WAAW,GAEpBl5D,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,SAAGvN,EAAAsN,yBACbtN,EAAAqN,yBAAA,WAAkBrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,GAEhCA,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,0BAAStH,EAAA6vD,UAAU,GAEnBr5D,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,WAAIvN,EAAAsN,yBACdtN,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,gBAASvN,EAAAsN,wBAAAtN,GAE/BA,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,0BAAStH,EAAAgkC,YAAY,GAErBxtC,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBAChBtN,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,kBAAWvN,EAAAsN,wBAAAtN,cAtGKA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAyS,MAsCrCjc,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAyS,qeAwFJ+8C,CAAyB,kKC1ItC,IAAAl/C,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,UAEAA,EAAA,iGAaoBoC,EAAAyhB,kCAAA,GACIzhB,EAAAyJ,oBAAA,WACJzJ,EAAA4hB,0DAD4B5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA+oD,EAAA,2BAFhC95D,EAAAyhB,kCAAA,GACIzhB,EAAAiS,qBAAA,EAAA8nD,EAAA,oDAGJ/5D,EAAA4hB,0EAHmC5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAzD,EAAA2nD,MAAA,2BAUnCh6D,EAAAyhB,kCAAA,GACIzhB,EAAAyJ,oBAAA,WACJzJ,EAAA4hB,0DAD4B5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAkpD,EAAA,2BANhCj6D,EAAAqN,yBAAA,eAKIrN,EAAAiS,qBAAA,EAAAioD,EAAA,oDAGJl6D,EAAAsN,+EALItN,EAAA+Q,qBAAA,QAAAopD,GADAn6D,EAAA60D,sBAAA,QAAAsF,GAG+Bn6D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAC,EAAAqkD,UAAAD,GAAA,wBAMnCn6D,EAAAqN,yBAAA,UAAArN,CAAsD,cACxCA,EAAAuN,iBAAA,WAAKvN,EAAAsN,yBACftN,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,sBAAgBvN,EAAAsN,wBAAAtN,IAetBN,wBAAqB,eAArB26D,EAAqB,WAsB9B,SAAAA,EAAoBpB,GAA+B,IAAA73D,EAAAtB,KAAAD,EAAAC,KAAAu6D,GAA/Bv6D,KAAAm5D,YApBJn5D,KAAAk6D,KAAOl6D,KAAKm5D,UAAUe,KAEtBl6D,KAAAw6D,UAAY,IAAIxgD,EAAAqB,gBAAwB,IAExCrb,KAAAs6D,SAAWt6D,KAAKk6D,KAAK/2D,QACjC7C,EAAA0b,KAAI,SAACk+C,GACD,IACmCpiC,EAD7B2iC,EAAW,GAAG1iC,EAAAC,EACA12B,EAAKi1D,YAAU,QAAAt+B,EAAA,WAAE,IAA1BS,EAAKZ,EAAAp2B,MACZ+4D,EAAS/hC,GAASwhC,EAAKh+C,OACnB,SAACC,GAAI,OAAKA,EAAK+f,WAAaxD,CAAK,IAFzC,IAAAX,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MAAAH,GAIC,OAAArN,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACD,OAAOoiC,CACX,GAOkD,CAAC36D,SAAAy6D,EAAA,EAAA94D,IAAA,aAAAkE,IAJvD,WACI,OAAO3F,KAAKm5D,UAAU5C,UAC1B,KAACgE,CAAA,CApB6B,GAArBA,SAAqB,mBAAAt6D,iBAArBs6D,GAAqBr6D,EAAAwI,4BAAAC,EAAAkxD,sBAAA,EAArBU,EAAqB,UAAAr6D,EAAA,kCAArBq6D,EAAqBpxD,UAAA,oBAAAG,MAAA,EAAAC,KAAA,EAAA+D,OAAA,kQAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAzC1BvJ,EAAAqN,yBAAA,qBAEIrN,EAAA8Q,qBAAA,+BAAAG,GAAA,OACqBzH,EAAA8wD,UAAAh4D,KAA0B,IAA1B2O,EAA8B,GAAEzH,EAAA6sD,WAAAplD,EACpD,GACX,GACUjR,EAAAqN,yBAAA,eACIrN,EAAAiS,qBAAA,EAAAuoD,EAAA,oDAKJx6D,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAwoD,EAAA,iBASJz6D,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAyoD,EAAA,yBAAA16D,EAAAomB,2EAhBuBpmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAyQ,EAAAxhB,EAAA8V,sBAAA,IAAAtM,EAAAwwD,OAAA,KAAAx4C,EAAArc,OAAAnF,CAA8B,WAAAumB,GAO3BvmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAA6sD,WAAA,wRA2BrBgE,CAAqB,6KClDlC,IAAAtwD,EAAAnM,EAAA,OACA8L,EAAA9L,EAAA,OACAkQ,EAAAlQ,EAAA,OAGAulD,EAAAvlD,EAAA,OAEA41D,EAAA51D,EAAA,mJAcYoC,EAAAqN,yBAAA,aAAArN,CAA+C,cACjCA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,6BAQnBA,EAAAqN,yBAAA,UAAArN,CAAsD,cAO9CA,EAAAuN,iBAAA,WAAIvN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,OAACvN,EAAAsN,yBAAOtN,EAAAuN,iBAAA,QACtBvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,cAMAzJ,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,sBAAgBvN,EAAAsN,wBAAAtN,8CAb3BA,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,QAAAiC,EAAArR,KAAAuU,SAAAtR,KAAAghD,SAAA5yC,EAAArR,KAAAuU,SAAAtR,KAAAihD,QAAA,2BAgBR10D,EAAAqN,yBAAA,UAAArN,CAAuD,cAQ/CA,EAAAuN,iBAAA,WAAIvN,EAAAqN,yBAAA,UAAMrN,EAAAuN,iBAAA,OAACvN,EAAAsN,yBAAOtN,EAAAuN,iBAAA,QACtBvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,cAOAzJ,EAAAqN,yBAAA,eAAWrN,EAAAuN,iBAAA,sBAAgBvN,EAAAsN,wBAAAtN,2EAf3BA,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,QAAAS,EAAA7P,KAAAuU,SAAAyT,MAAAi8B,SAAAp0C,EAAA7P,KAAAuU,SAAAyT,MAAAk8B,SAaI10D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAAI,EAAA,wBAKZnR,EAAAqN,yBAAA,UAAArN,CAA4D,cACrCA,EAAAuN,iBAAA,iBAAWvN,EAAAsN,yBAC9BtN,EAAAqN,yBAAA,uBACIrN,EAAAyJ,oBAAA,cAOJzJ,EAAAsN,wBAAAtN,0BAEJA,EAAAqN,yBAAA,UAAArN,CAA0D,qBAElDA,EAAAuN,iBAAA,mCACJvN,EAAAsN,wBAAAtN,6BA5DRA,EAAAqN,yBAAA,YAKIrN,EAAAiS,qBAAA,EAAA0oD,EAAA,cAmBA36D,EAAAiS,qBAAA,EAAA2oD,EAAA,cAqBA56D,EAAAiS,qBAAA,EAAA4oD,EAAA,aAYA76D,EAAAiS,qBAAA,EAAA6oD,EAAA,aAKJ96D,EAAAsN,iEA3DItN,EAAA+Q,qBAAA,YAAAgF,EAAAvF,MAE4BxQ,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgF,EAAAvF,KAAAuU,SAAAtR,MAmBAzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgF,EAAAvF,KAAAuU,SAAAyT,OAqBAx4B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgF,EAAAvF,KAAAuU,SAAAsb,YAYArgC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgF,EAAAvF,KAAAuU,SAAAq/B,SAAA,+DAMhCpkD,EAAAqN,yBAAA,cAAArN,CAGC,eAKOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAiF,GAAA,IAAAC,EAAApW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8E,EAAAm9C,cAAa,GAEtBvzD,EAAAuN,iBAAA,YACJvN,EAAAsN,wBAAAtN,EAAS,2CAJLA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAU,EAAAjB,KAAAqlD,MAAA,wBAOJ71D,EAAAqN,yBAAA,YACIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,oCAA8BvN,EAAAsN,wBAAAtN,6BAIrCA,EAAAqN,yBAAA,mBACIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDAFyCtN,EAAA+Q,qBAAA,QAAAgqD,GACrC/6D,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAstD,EAAA,MAMHr7D,mCAAgC,eAAhCs7D,EAAgC,WAuBzC,SAAAA,EACqC7gB,GAAkCt6C,EAAAC,KAAAk7D,GAAlCl7D,KAAAq6C,QAtBpBr6C,KAAA8uB,MAAQ,IAAI7kB,EAAAwV,aAEtBzf,KAAA0Q,KAAO,IAAI9G,EAAAk2B,UAAU,CACxBnsB,KAAM,IAAI/J,EAAAm2B,YAAY//B,KAAKq5D,OAAO1lD,MAAQ,GAAI,CAAC/J,EAAAo2B,WAAWC,WAC1DvH,MAAO,IAAI9uB,EAAAm2B,YAAY//B,KAAKq5D,OAAO3gC,OAAS,GAAI,CAAC9uB,EAAAo2B,WAAWC,WAC5DM,WAAY,IAAI32B,EAAAm2B,YAAY//B,KAAKq5D,OAAO94B,YACxC+jB,SAAU,IAAI16C,EAAAm2B,cAAc//B,KAAKq5D,OAAO/U,SAAU,MAG/CtkD,KAAAujB,SAAU,CAcd,CAACzjB,SAAAo7D,EAAA,EAAAz5D,IAAA,SAAAkE,eAVA,OAAO3F,KAAKq6C,MAAMgf,MACtB,GAEA,CAAA53D,IAAA,QAAAkE,IACA,WACI,OAAO3F,KAAKq6C,MAAM8gB,OAAS,EAC/B,GAAC,CAAA15D,IAAA,cAAAC,MAMM,WACH1B,KAAKujB,SAAU,EACf,IAAM63C,EAAUtrC,IAAA,GACT9vB,KAAKq5D,QAAM,IACd5lD,GAAIzT,KAAKq5D,OAAO5lD,IAAE,UAAArP,UAAci/C,EAAAwT,WAAU,YACvC72D,KAAK0Q,KAAKhP,OAEjB1B,KAAK8uB,MAAMnP,KAAK,CACZ4P,OAAQ,OACRoiB,SAAU,CACNx1B,KAAM,IAAIu3C,EAAAU,aAAYtkC,IAAA,GACf9vB,KAAKq6C,MAAMghB,QAAM,IACpBp4C,QAASjjB,KAAKq6C,MAAMghB,OAAOp4C,QACtB/G,OAAO,SAAC6W,GAAC,OAAKA,EAAEtf,KAAO2nD,EAAW3nD,EAAE,GACpCrP,OAAO,CAACg3D,SAI7B,KAACF,CAAA,CA7CwC,GAAhCA,SAAgC,mBAAAj7D,iBAAhCi7D,GAAgCh7D,EAAAwI,4BAwB7BsF,EAAAwvB,iBAAe,EAxBlB09B,EAAgC,UAAAh7D,EAAA,kCAAhCg7D,EAAgC/xD,UAAA,4BAAA0W,QAAA,CAAAiP,MAAA,SAAAxlB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,ylCAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAhGrCvJ,EAAAqN,yBAAA,WAAArN,CAAQ,QACAA,EAAAuN,iBAAA,GAA4CvN,EAAAsN,yBAChDtN,EAAAiS,qBAAA,EAAAmpD,EAAA,gBAGJp7D,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAopD,EAAA,cA+DAr7D,EAAAiS,qBAAA,EAAAqpD,EAAA,gBAaAt7D,EAAAiS,qBAAA,EAAAspD,EAAA,yBAAAv7D,EAAAomB,kCAMApmB,EAAAqN,yBAAA,6BACIrN,EAAAiS,qBAAA,GAAAupD,EAAA,oBAGJx7D,EAAAsN,gEA3FQtN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,GAAAjE,EAAA2vD,OAAA5lD,GAAA,6BAC2BvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,SAM9BrjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAgH,OAAAhH,EAAA6Z,QAAArjB,CAAwB,WAAAqtB,GA8DxBrtB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,SAmB8BrjB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAyxD,MAAA,mWAO9BD,CAAgC,oJCjH7Cp9D,EAAA,2GAwCwBoC,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,2EADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAguD,EAAAhoD,KAAA,+BALRzT,EAAAyhB,kCAAA,GACIzhB,EAAAiS,qBAAA,EAAAypD,EAAA,cAMJ17D,EAAA4hB,0DAJS5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA0qD,EAAA,+DAnCrBz7D,EAAAyhB,kCAAA,GACIzhB,EAAAqN,yBAAA,WACIrN,EAAAyJ,oBAAA,WAGJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAuB,cASfA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA2rC,GAAA,IAAAjmC,EAAA5W,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAsF,EAAA+kD,SAAQ,GAEjB37D,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,GAAqCvN,EAAAsN,wBAAAtN,KAGvDA,EAAAqN,yBAAA,UAAArN,CAEC,WACiBA,EAAAuN,iBAAA,GAAgBvN,EAAAsN,yBAC9BtN,EAAAqN,yBAAA,WAAArN,CAAoB,YAIZA,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YACIrN,EAAAiS,qBAAA,GAAA2pD,EAAA,uBAQJ57D,EAAAsN,wBAAAtN,GAERA,EAAA4hB,iCAAA,2CA9BY5hB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,aAAAvN,EAAA8oB,OAAAn7B,CAA2B,aAAAqS,EAAA8oB,OAA3Bn7B,CAA2B,eAAAqS,EAAA8oB,QAKjBn7B,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAA8oB,OAAA,sBAMAn7B,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA,MAAA/B,EAAA4J,KAAA,KAAA5J,EAAA4J,KAAAxI,MAKNzT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,iBAAA4E,EAAA4J,KAAA,KAAA5J,EAAA4J,KAAAmd,UAAA,MAAA/mB,EAAA4J,KAAA,KAAA5J,EAAA4J,KAAAk7C,WAAA,OAI0Bn3D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAsB,EAAA4J,KAAAo7C,YAAA,EArClD,IAAMwE,EAAe,IAAIC,IAyDZp8D,6BAA0B,eAA1Bq8D,EAA0B,WAvDvC,SAAAA,IAAAl8D,EAAAC,KAAAi8D,GA2DWj8D,KAAAq7B,QAAS,EAmBnBv7B,SAAAm8D,EAAA,EAAAx6D,IAAA,WAAAkE,IAjBG,WAAmB,IAAAu2D,EACf,SAAA93D,OAAUpE,KAAKm8D,SAAQ,KAAA/3D,OAAa,QAAb83D,EAAIl8D,KAAKmc,YAAI,IAAA+/C,OAAA,EAATA,EAAWzoD,GAC1C,GAAC,CAAAhS,IAAA,WAAAC,MAEM,WACH1B,KAAKq7B,OAAS0gC,EAAa70B,IAAIlnC,KAAKo8D,SACxC,GAAC,CAAA36D,IAAA,SAAAC,MAEM,WACCq6D,EAAa70B,IAAIlnC,KAAKo8D,WACtBL,EAAYM,OAAQr8D,KAAKo8D,UACzBp8D,KAAKq7B,QAAS,IAEd0gC,EAAa5mB,IAAIn1C,KAAKo8D,UACtBp8D,KAAKq7B,QAAS,EAEtB,KAAC4gC,CAAA,CAtBkC,GAA1BA,SAA0B,mBAAAh8D,iBAA1Bg8D,EAA0B,EAA1BA,EAA0B,UAAA/7D,EAAA,kCAA1B+7D,EAA0B9yD,UAAA,gCAAAyW,OAAA,CAAAu8C,SAAA,WAAAhgD,KAAA,QAAAiD,MAAAvN,EAAAvI,MAAA,EAAAC,KAAA,EAAA+D,OAAA,+xBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,GApD/BvJ,EAAAiS,qBAAA,EAAAmqD,EAAA,6BAAep8D,EAAA+Q,qBAAA,OAAAvH,EAAAyS,gPAoDV8/C,CAA0B,oJC1DvCn+D,EAAA,gFAmBYoC,EAAAqN,yBAAA,WAIIrN,EAAAyJ,oBAAA,uBACJzJ,EAAAsN,iDADoBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAsrD,EAAA,wBAEpBr8D,EAAAqN,yBAAA,WAAArN,CAIC,OACMA,EAAAuN,iBAAA,wBAAkBvN,EAAAsN,wBAAAtN,yBAG7BA,EAAAyJ,oBAAA,yBAiBK/J,6BAA0B,eAA1B48D,EAA0B,WAMnC,SAAAA,EAAoBC,GAA8B18D,EAAAC,KAAAw8D,GAA9Bx8D,KAAAy8D,UAJJz8D,KAAA08D,WAAa18D,KAAKy8D,QAAQ/4B,SAE1B1jC,KAAAujB,QAAUvjB,KAAKy8D,QAAQl5C,OAEc,CAACzjB,SAAA08D,EAAA,EAAA/6D,IAAA,WAAAC,MAE/C,WACH1B,KAAKy8D,QAAQ5uC,cACjB,GAAC,CAAApsB,IAAA,cAAAC,MAEM,WACH1B,KAAKy8D,QAAQ3lC,aACjB,GAEA,CAAAr1B,IAAA,YAAAC,MACO,SAAU4wD,EAAenyB,GAC5B,OAAOA,EAAQA,EAAM1sB,QAAKnO,CAC9B,KAACk3D,CAAA,CAnBkC,GAA1BA,SAA0B,mBAAAv8D,iBAA1Bu8D,GAA0Bt8D,EAAAwI,4BAAAC,EAAAg0D,uBAAA,EAA1BH,EAA0B,UAAAt8D,EAAA,kCAA1Bs8D,EAA0BrzD,UAAA,0BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,ksBAAA9D,SAAA,SAAAC,EAAAC,SAAA,EAAAD,IA7C/BvJ,EAAAqN,yBAAA,WAGIrN,EAAAyJ,oBAAA,WACAzJ,EAAAqN,yBAAA,WAAkBrN,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACtBtN,EAAAqN,yBAAA,WAAoBrN,EAAAuN,iBAAA,cAAQvN,EAAAsN,yBAC5BtN,EAAAqN,yBAAA,WAAkBrN,EAAAuN,iBAAA,UAAIvN,EAAAsN,yBACtBtN,EAAAqN,yBAAA,WAAkBrN,EAAAuN,iBAAA,iBAAWvN,EAAAsN,yBAC7BtN,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,YAAKvN,EAAAsN,yBACvBtN,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,kBAAWvN,EAAAsN,yBAC7BtN,EAAAqN,yBAAA,YAAkBrN,EAAAuN,iBAAA,aAAMvN,EAAAsN,yBACxBtN,EAAAyJ,oBAAA,YACJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,WACIrN,EAAAiS,qBAAA,GAAAyqD,EAAA,2CAMA18D,EAAAiS,qBAAA,GAAA0qD,EAAA,6CAOJ38D,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAA2qD,EAAA,iEAZ0B58D,EAAAwN,oBAAA,IAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,KAAAtM,EAAAgzD,YAAAx8D,CAAuB,eAAAwJ,EAAA2jB,WAOxCntB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAkF,EAAAjW,EAAA8V,sBAAA,KAAAtM,EAAAgzD,cAAAvmD,EAAA9Q,SAMJnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAA/Q,EAAA8V,sBAAA,KAAAtM,EAAA6Z,8PAgBAi5C,CAA0B,yRCrDvC,IAAAvyD,EAAAnM,EAAA,OACAkQ,EAAAlQ,EAAA,OAGA0C,EAAA1C,EAAA,OAEA41D,EAAA51D,EAAA,MACAi/D,EAAAj/D,EAAA,OAGAk/D,GADAl/D,EAAA,MACAA,EAAA,qJAkCwCoC,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,yBACJvN,EAAAsN,uFAUJtN,EAAAqN,yBAAA,kBAGIrN,EAAA8Q,qBAAA,yBAAAG,IAAAjR,EAAAkR,wBAAAgG,GAAA,IAAA6lD,EAAA/8D,EAAAqR,0BAAA0M,UAAAQ,GAAAve,EAAAqR,wBAAA,UAE5BrR,EAAAsR,sBAAAiN,GAAAy+C,mBAAAD,EAAA9rD,IACV,GACmCjR,EAAAsN,wBAAA,qDALGtN,EAAA+Q,qBAAA,UAAAgsD,EAAA5F,SAAA,+DAMJn3D,EAAAqN,yBAAA,WAAArN,CAGC,WAHDA,CAGC,cAHDA,CAGC,cAaqBA,EAAAuN,iBAAA,YAAMvN,EAAAsN,wBAAAtN,KAGxBA,EAAAqN,yBAAA,YAGIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqyC,GAAA,IAAAwZ,GAAA/8D,EAAAqR,0BAAA0M,UAAArG,EAAA1X,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAoG,EAAA4hD,QAAAyD,IAAa,GAEtB/8D,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,SAAGvN,EAAAsN,wBAAAtN,IAAW,qDAxBxBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAgsD,EAAA5F,SAAA,sEASIn3D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAQJ/Q,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAsvD,EAAA5F,SAAA,+BAtDZn3D,EAAAqN,yBAAA,WAAArN,CAIC,WAJDA,CAIC,YAGWA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAgrD,EAAA,cAMJj9D,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAGIrN,EAAAuN,iBAAA,oCAIJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAirD,EAAA,oBAQAl9D,EAAAiS,qBAAA,EAAAkrD,EAAA,eAgCJn9D,EAAAsN,gFAzDYtN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAsvD,EAAAtpD,KAAA,KAICzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgsD,EAAAh6C,QAAA5d,QAQLnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAsU,sBAAA,IAAAyoD,EAAA18B,WAAA,IAAAngB,EAAAk9C,MAAA,KAWCp9D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAgsD,EAAAh6C,QAAA5d,QAIAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAgsD,EAAAh6C,QAAA5d,OAAA,sDAvCjBnF,EAAAqN,yBAAA,cAAArN,CAGC,WAEOA,EAAAiS,qBAAA,EAAAorD,EAAA,eAiEJr9D,EAAAsN,wBAAAtN,oFApEAA,EAAA+Q,qBAAA,QAAAusD,GAMyBt9D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,WAAA4E,EAAA4nD,YAAAv9D,EAAA0R,0BAAA,EAAAC,IAAA2rD,GAAA,2BATjCt9D,EAAAyhB,kCAAA,GACIzhB,EAAAiS,qBAAA,EAAAurD,EAAA,iBAwEJx9D,EAAA4hB,yFAvES5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA8Q,EAAA07C,YAAAv9D,EAAA0R,0BAAA,EAAAC,IAAA2rD,GAAAn4D,OAAA,2BAJjBnF,EAAAyhB,kCAAA,GACIzhB,EAAAqN,yBAAA,mBACIrN,EAAAiS,qBAAA,EAAAwrD,EAAA,sBA0EJz9D,EAAAsN,yBACJtN,EAAA4hB,2EA3EsC5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAiB,EAAAqkD,WAAA,2BAH1Cr2D,EAAAqN,yBAAA,WACIrN,EAAAiS,qBAAA,EAAAyrD,EAAA,sBA8EJ19D,EAAAsN,8FA9EmBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAsB,EAAAsrD,mBAAA39D,CAA2B,WAAAgiB,EAAA,+DAmF1ChiB,EAAAyhB,kCAAA,GACIzhB,EAAAqN,yBAAA,eACIrN,EAAAuN,iBAAA,cACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAQIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA0sD,GAAA,IAAA/Z,GAAA7jD,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAAuyC,GAAA8Z,oBAA8B,EAAI,GAElC39D,EAAAuN,iBAAA,eACJvN,EAAAsN,yBACJtN,EAAA4hB,iCAAA,4CARQ5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,YAAAwkD,EAAAt1B,MAAA49B,WAAA79D,CAA8B,WAAAu1D,EAAAt1B,MAAA49B,WAA9B79D,CAA8B,kBAAAu1D,EAAAt1B,MAAA49B,WAAA,+DAUlC79D,EAAAqN,yBAAA,eAGIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA4sD,GAAA,IAAAC,EAAA/9D,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAAysD,EAAAJ,oBAA8B,EAAK,GAEnC39D,EAAAuN,iBAAA,YACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAA2BrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA4sD,GAAA,IAAAE,EAAAh+D,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAA0sD,EAAAC,YAAW,GAC3Cj+D,EAAAuN,iBAAA,kBACJvN,EAAAsN,wBAAA,2BA/BRtN,EAAAqN,yBAAA,eAIIrN,EAAAiS,qBAAA,EAAAisD,EAAA,sBAiBAl+D,EAAAiS,qBAAA,EAAAksD,EAAA,0BAAAn+D,EAAAomB,kCAYJpmB,EAAAsN,8FA7BmBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAgF,EAAA4nD,mBAAA39D,CAA2B,WAAAo+D,EAAA,2BA+B1Cp+D,EAAAqN,yBAAA,YACIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,GAAavN,EAAAsN,wBAAAtN,2CAAbA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAxC,EAAAyR,QAAA,2BAeKrjB,EAAAqN,yBAAA,YAKIrN,EAAAuN,iBAAA,GAIJvN,EAAAsN,0GANItN,EAAA+Q,qBAAA,aAAAstD,EAAAC,WAAAC,IAEAv+D,EAAAwN,oBAAA,GAAAxN,EAAA6f,6BAAA,IAAA0+C,EAAAx7C,QAAA5d,OAAA,cAAAo5D,EAAAx7C,QAAA5d,OAAA,mFAZZnF,EAAAqN,yBAAA,WAAArN,CAIC,WAJDA,CAIC,YAEiCA,EAAAuN,iBAAA,GAAevN,EAAAsN,yBACzCtN,EAAAiS,qBAAA,EAAAusD,EAAA,cAUJx+D,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAGIrN,EAAAuN,iBAAA,oCACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,kBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAAstD,GAAAv+D,EAAAkR,wBAAA8zC,GAAAjnC,UAAAknC,GAAAjlD,EAAAqR,wBAAA,UAAiBrR,EAAAsR,sBAAA2zC,GAAA+X,mBAAAuB,GAAAttD,GAAgC,GACpDjR,EAAAsN,wBAAAtN,EAAY,0DApBiBA,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAmqD,EAAA9qD,MAGrBzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAwtD,EAAAx7C,QAAA5d,QAYLnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAsU,sBAAA,IAAAiqD,EAAA/G,WAAA,IAAAiH,EAAArB,MAAA,KAGAp9D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAwtD,EAAApH,SAAA,2BA5BZn3D,EAAAqN,yBAAA,cAAArN,CAA4B,QACpBA,EAAAuN,iBAAA,mBAAavN,EAAAsN,wBAAAtN,GAErBA,EAAAqN,yBAAA,WACIrN,EAAAiS,qBAAA,EAAAysD,EAAA,cA4BJ1+D,EAAAsN,iEAzByBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA6F,EAAAqpB,MAAAzG,MAAA,EAiExB95B,8BACT,eADSi/D,EACT,SAAAh+D,GAAAC,EAAA+9D,EAAAh+D,GAAA,IAsBCE,EAtBDC,EAAAC,EAAA49D,GAwBA,SAAAA,EACY19D,EACyBk5C,IAA6B,IAAA/4C,EAAAvB,SAAAC,KAAA6+D,IAE9Dv9D,EAAAN,EAAAO,KAAAvB,OAHQmB,OACyBG,EAAA+4C,SAtBpB/4C,EAAAwtB,MAAQ,IAAI7kB,EAAAwV,aAEtBne,EAAAiiB,QAAU,GAUVjiB,EAAAm8D,WAAsC,GAEtCn8D,EAAAi1D,WAAuB,GAW1Bj1D,EAAKiiB,QAAU,kBAAkBjiB,CACrC,CAACxB,SAAA++D,EAAA,EAAAp9D,IAAA,OAAAkE,IAVD,WACI,OAAO3F,KAAKmB,KAAK29D,aACrB,GAAC,CAAAr9D,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAUM,SAAAC,IAAA,IAAAi9D,GAAAC,GAAAC,GAAA95D,GAAAnF,KAAA,OAAA4B,IAAAS,KAAA,SAAAC,IAAA,cAAAA,GAAAC,KAAAD,GAAAE,MAAA,OACH,OAAAxC,KAAKujB,QAAU,kBACfvjB,KAAKmgC,MAAQ,IAAI48B,EAAAmC,cAAcl/D,KAAKq6C,MAAMla,OAAO79B,GAAAE,KAAA,EAC9BxC,KAAKq6C,MAAM8kB,kBACV,QAD2BJ,GAC3C/+D,KAAKmgC,MAAMrR,aAAK,IAAAiwC,IAAO,QAAPC,GAAhBD,GAAkBliD,aAAK,IAAAmiD,IAAO,QAAPC,GAAvBD,GAAyB9nD,aAAK,IAAA+nD,QAAd,EAAhBA,GAAgChrD,WACnC,OAFDjU,KAAKwyD,MAAKlwD,GAAA4B,KAGVlE,KAAKq6C,MAAM6f,KAAK/mD,UAAU,SAACC,GACvBjO,GAAKoe,QAAU,kBACf,IAE4BuU,GAFtBy+B,MAAa/1D,EAAA6qC,QAAOj4B,EAAK4I,IAAI,SAACG,IAAI,OAAKA,GAAK+f,QAAQ,IACpDlgB,GAAM,GAAG+b,GAAAC,EACGu+B,IAAU,QAAAt+B,GAAA,WAAE,IAAnBmnC,GAAGtnC,GAAAp2B,MACVsa,GAAIojD,IAAOhsD,EAAK8I,OAAO,SAACC,IACpB,OACIA,GAAK+f,WAAakjC,OAClBpC,EAAAqC,uBACIljD,GACAhX,GAAKqtD,MACLrtD,GAAKg7B,MAAMrR,MAGvB,IAVJ,IAAAiJ,GAAAnO,MAAAkO,GAAAC,GAAAI,KAAAC,MAAAH,IAWC,OAAArN,IAAAmN,GAAA3S,EAAAwF,GAAA,SAAAmN,GAAAM,GAAA,CACDlzB,GAAKoxD,WAAaA,GAClBpxD,GAAKs4D,WAAazhD,GAClB7W,GAAKm6D,uBACLn6D,GAAKtB,QAAQ,gBAAiB,kBAAOsB,GAAKoe,QAAU,EAAE,EAAG,IAC7D,GAAG,wBAAAjhB,GAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACN,SAAA+E,KAAA,OAAAhE,EAAAiE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,UAAAC,MAEM,SAAQya,IAAkD,IAAAojD,EAAA/4D,GAAAxG,KAA9Bw/D,KAAAv6D,UAAAI,OAAA,QAAAC,IAAAL,UAAA,KAAAA,UAAA,GACzBw6D,GAAWz/D,KAAKmgC,MAAMzG,MAAMxJ,KAC9B,SAACwvC,IAAG,OACAA,GAAIjsD,KAAO0I,GAAK1I,IAChBisD,GAAIz8C,QAAQ5d,SACRq6D,GAAIz8C,QAAQma,OACR,SAACs0B,GAAGluC,IAAC,OACDkuC,IACCv1C,GAAK8G,QAAQiN,KAAK,SAACyvC,GAAG,OAAKn8C,GAAE/P,KAAOksD,EAAIlsD,EAAE,GACrC,EACA,EAAE,EACZ,EACH,GAET+rD,IAA8B,QAAhBD,EAAIpjD,GAAK8G,eAAO,IAAAs8C,GAAZA,EAAcl6D,OAChCrF,KAAKq6C,MAAMulB,cAAczjD,GAAK8G,SAAS48C,KAAK,SAAC58C,IACzC,IAAM68C,GAAW,IAAIpM,EAAAU,aAAYtkC,IAAA,GAAM3T,IAAI,IAAE8G,cAC7Czc,GAAKgzD,QAAQsG,IAAU,EAC3B,GAEA9/D,KAAKmgC,MAAQ,IAAI48B,EAAAmC,cAAapvC,IAAA,GACvB9vB,KAAKmgC,OAAK,GAFVs/B,GAEU,CACb/lC,MAAO15B,KAAKmgC,MAAMzG,MACbxd,OACG,SAAC6W,IAAC,QAEMA,GAAEtf,KAAO0I,GAAK1I,IACdsf,GAAE4kC,iBAAmBx7C,GAAKw7C,eAC7B,GAERvzD,OAAO,CACJ,IAAIsvD,EAAAU,aAAYtkC,IAAA,GACT3T,IAAI,IACPk7C,SAAUoI,GAASpI,SAAW,QAM7B,CACb39B,MAAO15B,KAAKmgC,MAAMzG,MAAMt1B,OAAO,CAC3B,IAAIsvD,EAAAU,aAAYtkC,IAAA,GAAM3T,IAAI,IAAEk7C,SAAU,UAIlDr3D,KAAKs/D,sBACT,GAAC,CAAA79D,IAAA,aAAAC,MAEM,SAAWya,IACdnc,KAAKmgC,MAAQ,IAAI48B,EAAAmC,cAAapvC,IAAA,GACvB9vB,KAAKmgC,OAAK,IACbzG,MAAO15B,KAAKmgC,MAAMzG,MAAMxd,OACpB,SAAC7Y,GAAC,OACEA,EAAEoQ,KAAO0I,GAAK1I,IAAMpQ,EAAEs0D,iBAAmBx7C,GAAKw7C,cAAc,MAGxE33D,KAAKs/D,sBACT,GAAC,CAAA79D,IAAA,qBAAAC,MAEM,SAAmBya,GAAoBmd,GAC1C,IAAMmmC,GAAWz/D,KAAKmgC,MAAMzG,MAAMxJ,KAC9B,SAACwvC,IAAG,OACAA,GAAIjsD,KAAO0I,GAAK1I,IAAMisD,GAAI/H,iBAAmBx7C,GAAKw7C,cAAc,GAEpEj+B,GAAKrW,EAAOrjB,KAAKmgC,MAAMzG,QAEvBA,GADA+lC,GACQz/D,KAAKmgC,MAAMzG,MACdxd,OACG,SAAC6W,IAAC,QAEMA,GAAEtf,KAAO0I,GAAK1I,IACdsf,GAAE4kC,iBAAmBx7C,GAAKw7C,eAC7B,GAERvzD,OAAO,CAAC,IAAIsvD,EAAAU,aAAYtkC,IAAA,GAAM3T,IAAI,IAAEk7C,SAAU/9B,OAE3Ct5B,KAAKmgC,MAAMzG,MAAMt1B,OAAO,CAC5B,IAAIsvD,EAAAU,aAAYtkC,IAAA,GAAM3T,IAAI,IAAEk7C,SAAU/9B,QAGxCpc,KAAK,SAACyW,GAAG3U,IAAC,OAAK2U,GAAEhgB,KAAKkrB,cAAc7f,GAAErL,KAAK,GACjD3T,KAAKmgC,MAAQ,IAAI48B,EAAAmC,cAAapvC,IAAA,GACvB9vB,KAAKmgC,OAAK,IACbzG,YAEJ15B,KAAKs/D,sBACT,GAAC,CAAA79D,IAAA,uBAAAC,MAEM,WAAoB,IAAA0F,GAAApH,KACvB,QAAWo/D,KAAOp/D,KAAKy9D,WAAY,KACQ5gC,GADRC,GAAA9E,EACZh4B,KAAKy9D,WAAW2B,IAAI,QAAA/5B,GAAA,WAAE,IAA9BlpB,GAAI0gB,GAAAn7B,MACVya,GAAak7C,SAAWjwD,GAAK+4B,MAAMzG,MAAM0D,OACtC,SAACs0B,GAAG3+B,GAAC,OAAMA,EAAEtf,KAAO0I,GAAK1I,GAAKi+C,GAAI3+B,EAAEskC,SAAW3F,EAAC,EAChD,IAHR,IAAA50B,GAAAlT,MAAAiT,GAAAC,GAAA3E,KAAAC,MAAAiN,IAKC,OAAAza,IAAAkS,GAAA1X,EAAAwF,GAAA,SAAAkS,GAAAzE,GAAA,EAET,GAAC,CAAA52B,IAAA,aAAAC,MAEM,SAAWya,IACd,OAAOA,GAAK8G,QAAQjH,IAAI,SAAC+W,GAAC,OAAKA,EAAEpf,IAAI,GAAEoB,KAAK,KAChD,GAAC,CAAAtT,IAAA,YAAAC,MAEM,WACH1B,KAAK8uB,MAAMnP,KAAK,CACZ4P,OAAQ,OACRoiB,SAAU,CAAExR,MAAOngC,KAAKmgC,QAEhC,GAAC,CAAA1+B,IAAA,eAAAC,MAEM,WACH1B,KAAK69D,oBAAqB,CAC9B,KAACgB,CAAA,CA7KD,CAAQr+D,EAAAiI,cADCo2D,SACT,mBAAA5+D,iBADS4+D,GAA2B3+D,EAAAwI,4BAAAC,EAAAG,qBAAA5I,EAAAwI,4BA2BxBsF,EAAAwvB,iBAAe,EA3BlBqhC,EACT,UAAA3+D,EAAA,kCADS2+D,EAA2B11D,UAAA,+BAAA0W,QAAA,CAAAiP,MAAA,SAAA1lB,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,0rDAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAjMhCvJ,EAAAiS,qBAAA,EAAA4tD,EAAA,aAgFA7/D,EAAAiS,qBAAA,EAAA6tD,EAAA,gBAkCA9/D,EAAAiS,qBAAA,EAAA8tD,EAAA,yBAAA//D,EAAAomB,kCAMApmB,EAAAiS,qBAAA,EAAA+tD,EAAA,yBAAAhgE,EAAAomB,yEAxHiCpmB,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,QAAArjB,CAAgB,WAAAumB,GAiF5CvmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,QAAA,+1BAgHAs7C,CACT,gMC5NJ,IAAA50D,EAAAnM,EAAA,OAOA0C,EAAA1C,EAAA,UACAA,EAAA,6HA+CwBoC,EAAAqN,yBAAA,OACIrN,EAAAuN,iBAAA,oCACJvN,EAAAsN,kEADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAsU,sBAAA,IAAA1C,EAAAqK,KAAAokB,WAAA,IAAAzuB,EAAAwrD,MAAA,+BAaRp9D,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iDADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAwyD,EAAA,+BA6CwBjgE,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,oCAIJvN,EAAAsN,0GAJItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,KAAAzN,EAAAsU,sBAAA,IAAA4rD,EAAA7/B,WAAA,IAAA/pB,EAAA8mD,MAAA,+BAjBZp9D,EAAAqN,yBAAA,wBAAArN,CAIC,WAJDA,CAIC,YAOWA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAkuD,EAAA,cASJngE,EAAAsN,wBAAAtN,2BAnBAA,EAAA+Q,qBAAA,QAAAmvD,EAAA3sD,IAQQvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAyyD,EAAAzsD,KAAA,KAICzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAmvD,EAAA7/B,WAAA,+DAhCrBrgC,EAAAyhB,kCAAA,GAGIzhB,EAAAqN,yBAAA,wBAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA83B,GAAA,IAAAo3B,EAAApgE,EAAAqR,0BAAA0M,UAAAQ,EAAAve,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAAiN,EAAA8hD,YAAAD,EAAA3sD,MAAAxC,EAAA,EAAAjR,CAAqC,yBAAAiR,GAAAjR,EAAAkR,wBAAA83B,GAAA,IAAAo3B,EAAApgE,EAAAqR,0BAAA0M,UAAAzG,EAAAtX,EAAAqR,wBAAA,UAGjErR,EAAAsR,sBAAAgG,EAAAgpD,kBAAAF,EAAAnvD,GACV,GAEsCjR,EAAAqN,yBAAA,wBAAArN,CAAuC,aACnCA,EAAAyuB,iBAAA,MACSzuB,EAAAsN,wBAAAtN,GAGbA,EAAAiS,qBAAA,EAAAsuD,EAAA,2BAwBJvgE,EAAAsN,yBACJtN,EAAA4hB,iCAAA,oFApCQ5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAsP,EAAAggD,YAAAD,EAAA3sD,MAAAzT,CAAqC,iBAAAqgB,EAAApE,KAAA,KAAAoE,EAAApE,KAAAy7C,UAajB13D,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAqvD,EAAA,KAAAA,EAAAr9C,QAAA,2BAyChB/iB,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,oCAIJvN,EAAAsN,0GAJItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,KAAAzN,EAAAsU,sBAAA,IAAAksD,EAAAngC,WAAA,IAAAxf,EAAAu8C,MAAA,mEApBZp9D,EAAAqN,yBAAA,qBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAAuvD,EAAAxgE,EAAAkR,wBAAA+Q,GAAAlE,UAAAmE,EAAAliB,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA4Q,EAAAu+C,aAAAD,EAAAjtD,IAAAtC,EAAA,EAAAjR,CAAkC,yBAAAiR,GAAA,IAAAuvD,EAAAxgE,EAAAkR,wBAAA+Q,GAAAlE,UAAA8lC,EAAA7jD,EAAAqR,wBAAA,UAGhErR,EAAAsR,sBAAAuyC,EAAA6c,mBAAAF,EAAAjtD,GAAAtC,GACR,GAEsCjR,EAAAqN,yBAAA,WAAArN,CAEC,YAIOA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAA0uD,EAAA,cASJ3gE,EAAAsN,wBAAAtN,EAAM,0DAvBNA,EAAA+Q,qBAAA,UAAAmQ,EAAAu/C,aAAAD,EAAAjtD,IAAAvT,CAAkC,iBAAAkhB,EAAAjF,KAAA,KAAAiF,EAAAjF,KAAAy7C,UAY1B13D,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA+yD,EAAA/sD,KAAA,KAICzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAyvD,EAAAngC,WAAA,0BAlBbrgC,EAAAiS,qBAAA,EAAA2uD,EAAA,wEACoB5gE,EAAA+Q,qBAAA,gBAAAqvD,EAAA,KAAAA,EAAAr9C,QAAA,2BAtDhC/iB,EAAAqN,yBAAA,WAAArN,CAIC,YAEOA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YACIrN,EAAAiS,qBAAA,EAAA4uD,EAAA,sBA2CA7gE,EAAAiS,qBAAA,EAAA6uD,EAAA,0BAAA9gE,EAAAomB,kCA6BJpmB,EAAAsN,wBAAAtN,wDA9EAA,EAAA60D,sBAAA,QAAAuL,EAAA3sD,MAGIzT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA2yD,EAAA3sD,KAAA,KAIKzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAqvD,EAAAhc,SAAApkD,CAAuB,WAAAgtB,EAAA,+DArEpDhtB,EAAAyhB,kCAAA,GACIzhB,EAAAqN,yBAAA,eACIrN,EAAAyJ,oBAAA,sBAIAzJ,EAAAqN,yBAAA,cAIIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA4sD,GAAA,IAAAC,EAAA/9D,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAysD,EAAAj2D,MAAA2X,OAAY,GAGrBzf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,gBAAUvN,EAAAsN,wBAAAtN,GAExBA,EAAAqN,yBAAA,cAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA4sD,GAAA,IAAAE,EAAAh+D,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA0sD,EAAA/iC,UAAAxb,OAAgB,GAGzBzf,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,GAERvN,EAAAsN,wBAAAtN,KAGVA,EAAAqN,yBAAA,UAAArN,CAAsD,eAAtDA,CAAsD,SAAtDA,CAAsD,WAItCA,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAA8uD,EAAA,WAGJ/gE,EAAAsN,yBACAtN,EAAAqN,yBAAA,mBACIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAA4sD,GAAA,IAAAW,EAAAz+D,EAAAqR,0BAAA,OAAarR,EAAAsR,sBAAAmtD,EAAAxiD,KAAAk7C,SAAAlmD,EAC/B,EADkBjR,CAA2B,2BAAAA,EAAAkR,wBAAA4sD,GAAA,IAAAkD,EAAAhhE,EAAAqR,0BAAA,OAEMrR,EAAAsR,sBAAA0vD,EAAA7lC,OAAS6lC,EAAA5lC,aAAA3b,KAAAuhD,EAAA7lC,QAElE,GAAE,GAEmBn7B,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,iBACIrN,EAAAiS,qBAAA,GAAAgvD,EAAA,cAMJjhE,EAAAsN,yBACAtN,EAAAyJ,oBAAA,SACAzJ,EAAAqN,yBAAA,gBAAArN,CAAmC,aAE3BA,EAAAiS,qBAAA,GAAAivD,EAAA,cAmFJlhE,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,YAAArN,CAEC,gBAOOA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA4sD,GAAA,IAAAO,EAAAr+D,EAAAqR,0BAAAgtD,SAAAljC,QAAAkjC,EAAAljC,OAA2Bn7B,EAAAsR,sBAAA+sD,EAAAjjC,aAAA3b,KAAA4+C,EAAAljC,QAAyB,GAEpDn7B,EAAAqN,yBAAA,YAAArN,CAA8C,kBACfA,EAAAuN,iBAAA,IAEzBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,QACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,OAIhBA,EAAA4hB,iCAAA,2CAnKY5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,SAAAsB,EAAA4J,KAAAsP,QAgBAvrB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,cAAAvN,EAAAgpB,IAAAr7B,CAAyB,gBAAAqS,EAAAgpB,KAKfr7B,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAAgpB,IAAA,8BASFr7B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAA4J,KAAAxI,KAAA,KAEAzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsB,EAAA4J,KAAAokB,YAKJrgC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAsB,EAAA4J,KAAAk7C,SAAAn3D,CAA2B,QAA3BA,CAA2B,MAAAqS,EAAA4J,KAAAohB,OAAA,IAWXr9B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAsB,EAAA4J,KAAA6xC,MAUM9tD,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAsB,EAAA2uB,QA2F1BhhC,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,UAAAvN,EAAA8oB,QAK+Bn7B,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAA8oB,OAAA,gBAIvBn7B,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAA8oB,OAAA,+DAOhBn7B,EAAAqN,yBAAA,WAAArN,CAGC,UACGA,EAAAyuB,iBAAA,MAEAzuB,EAAAsN,wBAAAtN,IAiBHN,+BAA4B,eAA5ByhE,EAA4B,WAlMzC,SAAAA,IAAAthE,EAAAC,KAAAqhE,GAoMoBrhE,KAAAq7B,QAAkB,EAClBr7B,KAAAu7B,KAAe,EACfv7B,KAAAs9D,KAAe,MAEdt9D,KAAAm7B,UAAY,IAAIlxB,EAAAwV,aAChBzf,KAAAs7B,aAAe,IAAIrxB,EAAAwV,aACnBzf,KAAAgI,MAAQ,IAAIiC,EAAAwV,aAEtBzf,KAAA2gE,aAAwC,GACxC3gE,KAAAugE,YAAsC,GAsDhDzgE,SAAAuhE,EAAA,EAAA5/D,IAAA,cAAAC,MAnDU,SAAYw4B,GACXA,EAAQ/d,MAAQnc,KAAKmc,MACrBnc,KAAKiyB,SAEb,GAAC,CAAAxwB,IAAA,oBAAAC,MAEM,SAAkBg3B,EAA4BjlB,GACjD,GAAKilB,EACL,CAAA14B,KAAKugE,YAAY7nC,EAAM/kB,MAAQF,EAAG,IACAqkB,EADAC,EAAAC,EACbU,EAAMzV,SAAO,IAAlC,IAAA8U,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MAAoC,KAAzBihC,EAAMvhC,EAAAp2B,MACb23D,EAAOh+B,OAASg+B,EAAO5lD,KAAOA,EACjC,OAAAmX,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,EACL,GAAC,CAAA52B,IAAA,qBAAAC,MAEM,SAAmB+R,EAAY6pB,GAAc,IAAA4+B,EAC1C7C,EAAkB,QAAZ6C,EAAGl8D,KAAKmc,YAAI,IAAA+/C,OAAA,EAATA,EAAWj5C,QAAQiN,KAAK,SAAC7sB,GAAC,OAAKA,EAAEoQ,KAAOA,CAAE,GACrD4lD,IAAQA,EAAOh+B,OAASiC,EAChC,GAAC,CAAA77B,IAAA,UAAAC,MAEO,WAAO,IAAAJ,EAAAtB,KACX,GAAKA,KAAKmc,KACV,CAAKnc,KAAKmc,KAAKk7C,WACVr3D,KAAKmc,KAAak7C,SAAW,GAElCr3D,KAAK2gE,aAAe,GACpB3gE,KAAKugE,YAAc,GACnB,IAE0B1jC,EAFpBqE,KAAS1gC,EAAA6qC,QAAOrrC,KAAKmc,KAAK8G,QAAQjH,IAAI,SAAC+W,GAAC,OAAKA,EAAE2F,OAAS,OAAO,IAC/D4oC,EAAa,GAAGxkC,EAAA9E,EACFkJ,GAAM,QAAAmE,EAAA,WAAE,IAAjB3M,EAAKmE,EAAAn7B,MACNuhB,EAAU3hB,EAAK6a,KAAK8G,QAAQ/G,OAAO,SAAC6W,GAAC,OAAKA,EAAE2F,QAAUA,CAAK,GACjE4oC,EAAWrqC,KAAK,CACZtjB,KAAM+kB,EACN4rB,WAAYrhC,EAAQiN,KAAK,SAAC6C,GAAC,OAAKA,EAAEuxB,QAAQ,GAC1CrhC,aALR,IAAA6Z,EAAAlT,MAAAiT,EAAAC,EAAA3E,KAAAC,MAAAiN,GAOC,OAAAza,GAAAkS,EAAA1X,EAAAwF,EAAA,SAAAkS,EAAAzE,GAAA,CAED,GADAr4B,KAAKkhC,OAASogC,EACVthE,KAAKmc,KAAKo7C,YAAa,KACgBgK,EADhBC,EAAAxpC,EACLh4B,KAAKmc,KAAKo7C,aAAW,QAAAt/B,EAAA,WAAE,IAA9B0nC,EAAG4B,EAAA7/D,MACJ23D,EAAS/3D,EAAK6a,KAAK8G,QAAQiN,KAAK,SAAC7sB,GAAC,OAAKA,EAAEoQ,KAAOksD,EAAIlsD,EAAE,GACxD4lD,IACAA,EAAOh+B,QAAS,EAChB/5B,EAAKq/D,aAAahB,EAAIlsD,KAAM,EAC5BnS,EAAKk/D,kBACDl/D,EAAK4/B,OAAOhR,KAAK,SAACuxC,GAAC,OAAKA,EAAE9tD,OAAS0lD,EAAO3gC,KAAK,GAC/C2gC,EAAO5lD,MAPnB,IAAA+tD,EAAA53C,MAAA23C,EAAAC,EAAArpC,KAAAC,MAAAH,GAUC,OAAArN,GAAA42C,EAAAp8C,EAAAwF,EAAA,SAAA42C,EAAAnpC,GAAA,GAET,KAACgpC,CAAA,CAhEoC,GAA5BA,SAA4B,mBAAAphE,iBAA5BohE,EAA4B,EAA5BA,EAA4B,UAAAnhE,EAAA,kCAA5BmhE,EAA4Bl4D,UAAA,4BAAAyW,OAAA,CAAAzD,KAAA,OAAAkf,OAAA,SAAAE,IAAA,MAAA+hC,KAAA,QAAAz9C,QAAA,CAAAsb,UAAA,YAAAG,aAAA,eAAAtzB,MAAA,SAAAoB,SAAA,CAAAlJ,EAAA+6B,gCAAA3xB,MAAA,EAAAC,KAAA,EAAA+D,OAAA,s8CA7GQgjB,UAAAC,MAAAC,EAAA,knBA0FMF,UAAAG,MAAAD,EAAA,wJA5K/CtwB,EAAAiS,qBAAA,EAAAuvD,EAAA,wBAuKAxhE,EAAAiS,qBAAA,EAAAwvD,EAAA,yBAAAzhE,EAAAomB,yEAvKepmB,EAAA+Q,qBAAA,OAAAvH,EAAAyS,KAAAjc,CAAY,WAAAiuB,EAAA,mZA+LtBkzC,CAA4B,oOClNzC,IAAA/gE,EAAAxC,EAAA,UACAA,EAAA,mHAkEQoC,EAAAqN,yBAAA,UAAArN,EAAAyuB,iBAAA,KAEAzuB,EAAAsN,uFAMItN,EAAAqN,yBAAA,oBAIIrN,EAAA8Q,qBAAA,+BAAA4wD,EAAA1hE,EAAAkR,wBAAA8Q,GAAAjE,UAAAnM,EAAA5R,EAAAqR,0BAAA,OAAiBrR,EAAAsR,sBAAAM,EAAA+vD,eAAAD,GAAoB,iCAErC1hE,EAAAuN,iBAAA,GACJvN,EAAAsN,wBAAA,2DAJItN,EAAA+Q,qBAAA,iBAAAyQ,EAAAxhB,EAAA8V,sBAAA,IAAAC,EAAAwgB,WAAA,MAAA/U,EAAA60C,WAAA,KAAA70C,EAAA60C,WAAAtwD,SAAA27D,IADA1hE,EAAA60D,sBAAA,OAAA6M,GAIA1hE,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAi0D,EAAA,MA9EhB,IAAME,EAAQ,CACVC,OAAM,knNAgBNC,OAAM,glEAaNC,OAAM,krLAMNC,MAAK,ioMAoDItiE,+BAA4B,eAA5BuiE,EAA4B,WAWrC,SAAAA,EAAoBloD,GAAiC,IAAA3Y,EAAAtB,KAAAD,EAAAC,KAAAmiE,GAAjCniE,KAAAia,SAVJja,KAAAi+B,QAAS,EAETj+B,KAAAoiE,MAAQN,EAER9hE,KAAAy2B,QAAUz2B,KAAKia,OAAOwc,QAEtBz2B,KAAAqiE,WAAa,SAAChqC,GAAC,OAAK/2B,EAAK2Y,OAAOooD,WAAWhqC,EAAE,EAE7Cr4B,KAAAu2D,WAAav2D,KAAKia,OAAOs8C,UAEe,CAACz2D,SAAAqiE,EAAA,EAAA1gE,IAAA,iBAAAC,OAAA4gE,EAAA3gE,EAAAC,IAAAC,KAElD,SAAAC,EAAqB6R,GAAY,IAAA4iD,EAAA,OAAA30D,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EACPxC,KAAKy2B,QAAQtzB,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,QAA3DizD,EAA2Dj0D,EAAA4B,KAA3DqyD,YACOtwD,SAAS0N,GACpB3T,KAAKqiE,WAAW,CACZ9L,WAAYA,EAAWr6C,OAAO,SAAC7Y,GAAC,OAAKA,IAAMsQ,CAAI,KAElD3T,KAAKqiE,WAAW,CAAE9L,WAAU,GAAAnyD,OAAAif,EAAMkzC,GAAU,CAAE5iD,MAAS,wBAAArR,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAC/D,SAAA6hE,EAAAxkD,GAAA,OAAAilD,EAAAt9D,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,YAAAC,MAAA,eAAA6gE,EAAA5gE,EAAAC,IAAAC,KAEM,SAAA0D,EAAgBixD,GAAW,IAAAxI,EAAA,OAAApsD,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAAAiD,SAAAjD,KAAA,EACPxC,KAAKy2B,QAAQtzB,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,QAArD0qD,EAAqDvoD,EAAAvB,KAArD8pD,MACC/nD,SAASuwD,GACdx2D,KAAKqiE,WAAW,CAAErU,KAAMA,EAAK9xC,OAAO,SAAC7Y,GAAC,OAAKA,IAAMmzD,CAAG,KACnDx2D,KAAKqiE,WAAW,CAAErU,KAAI,GAAA5pD,OAAAif,EAAM2qC,GAAI,CAAEwI,MAAQ,wBAAA/wD,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAClD,gBAAAwiE,EAAArrC,GAAA,OAAAorC,EAAAv9D,MAAAhF,KAAAiF,UAAA,EAPA,MAOAk9D,EAhBwD,IAAAG,CAgBxD,CA3BoC,GAA5BH,SAA4B,mBAAAliE,iBAA5BkiE,GAA4BjiE,EAAAwI,4BAAAC,EAAA85D,2BAAA,EAA5BN,EAA4B,UAAAjiE,EAAA,kCAA5BiiE,EAA4Bh5D,UAAA,4BAAAyW,OAAA,CAAAqe,OAAA,UAAA30B,MAAA,GAAAC,KAAA,GAAA+D,OAAA,wYAxBsCgjB,UAAAC,MAAAC,EAAA,iKAXvEtwB,EAAAqN,yBAAA,UAAArN,CAAwD,qBAAxDA,CAAwD,gBAEZA,EAAAuN,iBAAA,YAAMvN,EAAAsN,yBAC1CtN,EAAAqN,yBAAA,aAGIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,OAAiBzH,EAAA24D,WAAA,CAAApkC,OAAA9sB,GAA8B,iCAHnDjR,EAAAsN,wBAAAtN,KAQRA,EAAAiS,qBAAA,EAAAuwD,EAAA,YAGAxiE,EAAAqN,yBAAA,WAKIrN,EAAAiS,qBAAA,EAAAwwD,EAAA,oDAQJziE,EAAAsN,gCA3B4BtN,EAAA4f,sBAAA,aAAApW,EAAAu0B,QAKhB/9B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,iBAAA0N,EAAAze,EAAA8V,sBAAA,IAAAtM,EAAA+sB,UAAA,KAAA9X,EAAAsf,QAMuC/9B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAAu0B,QAK/C/9B,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,YAAApW,EAAAu0B,OAAA/9B,CAA0B,WAAAwJ,EAAAu0B,QAIL/9B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,KAAAtM,EAAA6sD,uTAepB4L,CAA4B,uJC5FzC,IAAAl4D,EAAAnM,EAAA,UACAA,EAAA,oFAmBoBoC,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iEADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAA4J,KAAAk7C,UAAA,kCAEJn3D,EAAAyJ,oBAAA,mDAIIzJ,EAAA+Q,qBAAA,SAAAgF,EAAAkG,KAAAsP,OAAA,0BAGAvrB,EAAAyJ,oBAAA,qCAcAzJ,EAAAqN,yBAAA,UAIIrN,EAAAuN,iBAAA,oCACJvN,EAAAsN,iEADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAsU,sBAAA,IAAAlD,EAAA6K,KAAAokB,WAAA,IAAAjvB,EAAAgsD,MAAA,+BAEJp9D,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,GACJvN,EAAAsN,iEADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAmJ,EAAAmM,QAAA,4BAEJ/iB,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,UACJvN,EAAAsN,gDACAtN,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,UACJvN,EAAAsN,gDACAtN,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,SACJvN,EAAAsN,gDACAtN,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,SACJvN,EAAAsN,gDACAtN,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,SACJvN,EAAAsN,0BAoBX5N,gCAA6B,eAA7BgjE,EAA6B,WAzG1C,SAAAA,IAAA7iE,EAAAC,KAAA4iE,GA2GoB5iE,KAAAq7B,QAAS,EACTr7B,KAAAuf,UAAW,EACXvf,KAAA6iE,WAAY,EACZ7iE,KAAAs9D,KAAe,MACdt9D,KAAAm7B,UAAY,IAAIlxB,EAAAwV,aAChBzf,KAAA8iE,OAAS,IAAI74D,EAAAwV,aAKjC3f,SAAA8iE,EAAA,EAAAnhE,IAAA,UAAAkE,IAHG,WAAkB,IAAAo9D,EACd,OAA4B,QAA5BA,EAAO/iE,KAAKmc,KAAKo7C,mBAAW,IAAAwL,OAAA,EAArBA,EAAuB/mD,IAAI,SAAC3Y,GAAC,OAAKA,EAAEsQ,IAAI,GAAEoB,KAAK,KAC1D,KAAC6tD,CAAA,CAXqC,GAA7BA,SAA6B,mBAAA3iE,iBAA7B2iE,EAA6B,EAA7BA,EAA6B,UAAA1iE,EAAA,kCAA7B0iE,EAA6Bz5D,UAAA,8BAAAyW,OAAA,CAAAzD,KAAA,OAAAkf,OAAA,SAAA9b,SAAA,WAAAsjD,UAAA,YAAAvF,KAAA,QAAAz9C,QAAA,CAAAsb,UAAA,YAAA2nC,OAAA,UAAAx5D,MAAA,GAAAC,KAAA,GAAA+D,OAAA,y8EAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAtGlCvJ,EAAAqN,yBAAA,SAAArN,CAIC,cAKOA,EAAA8Q,qBAAA,0BAAStH,EAAAo5D,OAAAnjD,MAAa,GAEtBzf,EAAAqN,yBAAA,WAGIrN,EAAAiS,qBAAA,EAAA6wD,EAAA,aAMA9iE,EAAAiS,qBAAA,EAAA8wD,EAAA,aAMA/iE,EAAAiS,qBAAA,EAAA+wD,EAAA,yBAAAhjE,EAAAomB,kCAMJpmB,EAAAsN,yBACAtN,EAAAqN,yBAAA,UAAArN,CAAwC,UAAxCA,CAAwC,SAE3BA,EAAAuN,iBAAA,IAAyBvN,EAAAsN,yBAC9BtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,YACIrN,EAAAiS,qBAAA,GAAAgxD,EAAA,YAMAjjE,EAAAiS,qBAAA,GAAAixD,EAAA,cAMAljE,EAAAiS,qBAAA,GAAAkxD,EAAA,cAMAnjE,EAAAiS,qBAAA,GAAAmxD,EAAA,cAMApjE,EAAAiS,qBAAA,GAAAoxD,EAAA,cAMArjE,EAAAiS,qBAAA,GAAAqxD,EAAA,cAMAtjE,EAAAiS,qBAAA,GAAAsxD,EAAA,cAMJvjE,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,0BAAStH,EAAAyxB,UAAAxb,MAAgB,GAEzBzf,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAERvN,EAAAsN,wBAAAtN,4CA9FNA,EAAA4f,sBAAA,gBAAApW,EAAA2xB,QAcan7B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAyS,KAAAk7C,UAAA3tD,EAAA6V,UAMArf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAyS,KAAAsP,OAAA,KAAA/hB,EAAAyS,KAAAsP,OAAApmB,OAAAnF,CAA2B,WAAAumB,GAavBvmB,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA5K,EAAAyS,KAAAxI,MAAA,QAEDzT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAAyS,KAAA+f,SAAA,KAMCh8B,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAyS,KAAAokB,YAMArgC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAyS,KAAAo7C,YAAA,KAAA7tD,EAAAyS,KAAAo7C,YAAAlyD,QAMAnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAyS,KAAA6xC,KAAA,KAAAtkD,EAAAyS,KAAA6xC,KAAA/nD,SAAA,gBAMA/F,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAyS,KAAA6xC,KAAA,KAAAtkD,EAAAyS,KAAA6xC,KAAA/nD,SAAA,UAMA/F,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAyS,KAAA6xC,KAAA,KAAAtkD,EAAAyS,KAAA6xC,KAAA/nD,SAAA,eAMA/F,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAyS,KAAA6xC,KAAA,KAAAtkD,EAAAyS,KAAA6xC,KAAA/nD,SAAA,mBAMA/F,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAyS,KAAA6xC,KAAA,KAAAtkD,EAAAyS,KAAA6xC,KAAA/nD,SAAA,kBAYb/F,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,gBAAApW,EAAAm5D,WAGU3iE,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA5K,EAAAm5D,UAAA,iIAQbD,CAA6B,mJC5G1C,IAAA34D,EAAAnM,EAAA,OAOAkc,EAAAlc,EAAA,UAEAA,EAAA,0HAaoBoC,EAAAqN,yBAAA,+BAOIrN,EAAA8Q,qBAAA,2BAAA8b,EAAA5sB,EAAAkR,wBAAA8b,GAAAjP,UAAAsC,EAAArgB,EAAAqR,wBAAA,UAAarR,EAAAsR,sBAAA+O,EAAA4a,UAAAxb,KAAAmN,EAAArZ,IAAuB,EAApCvT,CAAqC,wBAAA4sB,EAAA5sB,EAAAkR,wBAAA8b,GAAAjP,UAAAmC,EAAAlgB,EAAAqR,wBAAA,UAC3BrR,EAAAsR,sBAAA4O,EAAAsjD,WAAA52C,GAAiB,GAAK,GACnC5sB,EAAAsN,wBAAA,0DANGtN,EAAA+Q,qBAAA,OAAA6b,EAAA5sB,CAAa,SAAAgS,EAAAmpB,SAAAvO,EAAA62C,UAAbzjE,CAAa,cAAbA,CAAa,YAAAgS,EAAAiqB,YAAArP,EAAArZ,IAAA,2BAVzBvT,EAAAyhB,kCAAA,GACIzhB,EAAAqN,yBAAA,UAA2BrN,EAAAuN,iBAAA,mBAAavN,EAAAsN,yBACxCtN,EAAAqN,yBAAA,SACIrN,EAAAuN,iBAAA,iCACJvN,EAAAsN,yBAEAtN,EAAAqN,yBAAA,UACIrN,EAAAiS,qBAAA,EAAAyxD,EAAA,+DAUJ1jE,EAAAsN,yBACJtN,EAAA4hB,4EAfQ5hB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,YAAA+T,EAAAxhB,EAAA8V,sBAAA,IAAAzD,EAAAa,OAAA,KAAAsO,EAAArc,SAAA,gBAMqBnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAzD,EAAAa,MAAA,+DAmBrBlT,EAAAqN,yBAAA,gCAQIrN,EAAA8Q,qBAAA,2BAAA6yD,EAAA3jE,EAAAkR,wBAAAuF,GAAAsH,UAAArH,EAAA1W,EAAAqR,wBAAA,UAAarR,EAAAsR,sBAAAoF,EAAAukB,UAAA0oC,EAAApwD,IAAkB,EAA/BvT,CAAgC,wBAAA2jE,EAAA3jE,EAAAkR,wBAAAuF,GAAAsH,UAAA5G,EAAAnX,EAAAqR,wBAAA,UACtBrR,EAAAsR,sBAAA6F,EAAAqsD,WAAAG,GAAiB,GAAK,GACnC3jE,EAAAsN,wBAAA,0DAPGtN,EAAA+Q,qBAAA,OAAA4yD,EAAA3jE,CAAa,SAAAke,EAAAid,SAAAwoC,EAAAF,UAAbzjE,CAAa,WAAAke,EAAAmB,SAAAtZ,SAAA49D,EAAAF,WAAbzjE,CAAa,YAAAke,EAAA+d,YAAA0nC,EAAApwD,IAAbvT,CAAa,OAAAke,EAAAk/C,KAAA,2BAPrBp9D,EAAAqN,yBAAA,UAIIrN,EAAAiS,qBAAA,EAAA2xD,EAAA,gEAWJ5jE,EAAAsN,kEATyBtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,IAAAM,EAAAytD,WAAA,2BAP7B7jE,EAAAyhB,kCAAA,GACIzhB,EAAAiS,qBAAA,EAAA6xD,EAAA,2CAgBJ9jE,EAAA4hB,0GAdS5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAyQ,EAAAxhB,EAAA8V,sBAAA,IAAAC,EAAA8tD,YAAA,KAAAriD,EAAArc,OAAAnF,CAAmC,WAAAumB,EAAA,wBAiB5CvmB,EAAAqN,yBAAA,WAAArN,CAGC,UAEOA,EAAAuN,iBAAA,2DACJvN,EAAAsN,wBAAAtN,0BAIJA,EAAAqN,yBAAA,YAIIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,UAAsBrN,EAAAuN,iBAAA,gCAA0BvN,EAAAsN,wBAAAtN,UADnCA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAOhBrR,4BAAyB,eAAzBqkE,EAAyB,WAgBlC,SAAAA,EAAoBhqD,GAAiCla,EAAAC,KAAAikE,GAAjCjkE,KAAAia,SAfJja,KAAAq7B,OAAiB,GACjBr7B,KAAAuf,SAAmB,GACnBvf,KAAAw8B,eAAiC,GACjCx8B,KAAAu5B,UAAsB,GACrBv5B,KAAAm7B,UAAY,IAAIlxB,EAAAwV,aAChBzf,KAAAy8B,SAAW,IAAIxyB,EAAAwV,aAEhBzf,KAAAoT,KAAO,IAAI4G,EAAAqB,gBAAgC,IAC3Crb,KAAAujB,QAAUvjB,KAAKia,OAAOsJ,QACtBvjB,KAAA+jE,UAAY/jE,KAAKia,OAAOiqD,aAMgB,CAACpkE,SAAAmkE,EAAA,EAAAxiE,IAAA,OAAAkE,IAJzD,WACI,OAAO3F,KAAKia,OAAO6kD,aACvB,GAAC,CAAAr9D,IAAA,cAAAC,MAIM,SAAYw4B,GACXA,EAAQsC,gBACRx8B,KAAKoT,KAAK5Q,KAAKxC,KAAKw8B,gBAAkB,GAE9C,GAAC,CAAA/6B,IAAA,cAAAC,MAEM,SAAYyiE,GAAe,IAAAC,EAC9B,OAAqB,QAArBA,EAAOpkE,KAAKu5B,iBAAS,IAAA6qC,OAAA,EAAdA,EAAgBn+D,SAASk+D,EACpC,GAAC,CAAA1iE,IAAA,aAAAC,MAEM,SAAWya,GAAgD,IAE7CojD,EAFiB8E,EAAAp/D,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAClCjF,KAAKy8B,SAAS9c,KAAKxD,GACfkoD,IACY,QAAZ9E,EAAApjD,EAAK8G,eAAO,IAAAs8C,GAAZA,EAAc51C,QAAQ,SAACtmB,GAAC,cAAYA,EAAEg4B,MAAM,GAEpD,KAAC4oC,CAAA,CAjCiC,GAAzBA,SAAyB,mBAAAhkE,iBAAzBgkE,GAAyB/jE,EAAAwI,4BAAAC,EAAA85D,2BAAA,EAAzBwB,EAAyB,UAAA/jE,EAAA,kCAAzB+jE,EAAyB96D,UAAA,yBAAAyW,OAAA,CAAAyb,OAAA,SAAA9b,SAAA,WAAAid,eAAA,iBAAAjD,UAAA,aAAA1Z,QAAA,CAAAsb,UAAA,YAAAsB,SAAA,YAAArzB,SAAA,CAAAlJ,EAAA+6B,gCAAA3xB,MAAA,GAAAC,KAAA,GAAA+D,OAAA,y3BAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAjE9BvJ,EAAAqN,yBAAA,WACIrN,EAAAiS,qBAAA,EAAAmyD,EAAA,oDAmBApkE,EAAAqN,yBAAA,UAA2BrN,EAAAuN,iBAAA,aAAOvN,EAAAsN,yBAClCtN,EAAAqN,yBAAA,SACIrN,EAAAuN,iBAAA,iCACJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAoyD,EAAA,oDAkBJrkE,EAAAsN,yBACAtN,EAAAiS,qBAAA,GAAAqyD,EAAA,yBAAAtkE,EAAAomB,kCAUApmB,EAAAiS,qBAAA,GAAAsyD,EAAA,yBAAAvkE,EAAAomB,8EApDmBpmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,cAAAyQ,EAAAxhB,EAAA8V,sBAAA,IAAAtM,EAAA0J,OAAA,KAAAsO,EAAArc,QAqBXnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,YAAAgR,EAAAze,EAAA8V,sBAAA,IAAAtM,EAAAq6D,YAAA,KAAAplD,EAAAtZ,SAAA,uBAEWnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAA/Q,EAAA8V,sBAAA,IAAAtM,EAAA6Z,SAAArjB,CAA0B,WAAAgiB,EAAA,sGAyCxC+hD,CAAyB,+NC9EtC,IAAAzjE,EAAA1C,EAAA,OAEAyC,GADAzC,EAAA,MACAA,EAAA,OACAkc,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,OAQA41D,EAAA51D,EAAA,MACAk/D,EAAAl/D,EAAA,uCAuBa8B,4BAAyB,eAAzB6iE,EAAyB,WAoGlC,SAAAA,EACYthE,EACAD,GAA0B,IAAAI,EAAAtB,KAAAD,EAAAC,KAAAyiE,GAD1BziE,KAAAmB,OACAnB,KAAAkB,YArGJlB,KAAA+9B,SAAW,IAAI/jB,EAAAqB,gBAAsC,IACrDrb,KAAA6xB,SAAW,IAAI7X,EAAAqB,gBAAsC,CACzD4iB,OAAQ,GACR+vB,KAAM,GACNuI,WAAY,KAERv2D,KAAA4xB,SAAW,IAAI5X,EAAAqB,gBAAgB,IAEvBrb,KAAAujB,QAAUvjB,KAAK4xB,SAASpW,eACxBxb,KAAAy2B,QAAUz2B,KAAK6xB,SAASrW,eAExBxb,KAAAwF,SAAWxF,KAAKmB,KAAKoX,gBAAgBpV,QACjD7C,EAAA4b,QAAO,SAAC7Y,GAAC,QAAOA,CAAC,MACjB/C,EAAAiyB,WAAU,SAAClvB,GAAC,SACR9C,EAAAgrC,cAAaloC,EAAEoQ,GAAI,qBAAqBtQ,QACpC7C,EAAA2yB,YAAW,SAAC5vB,GAAC,SAAK2W,EAAAO,IAAG,GAAoB,GAC5C,MAELja,EAAA0b,KAAI,SAAC3Y,GAAC,OAAKA,EAAEiU,OAA2B,MACxChX,EAAAwjB,KAAI,SAACzgB,GAAC,OACF/B,EAAKJ,UAAU4gC,KAAK,2BAA6B,MAADz+B,MAAG2vD,eAAc,MAErE1yD,EAAA+yB,aAAY,IAGArzB,KAAA0kE,aAAe1kE,KAAKwF,SAASrC,QACzC7C,EAAA0b,KAAI,SAAC3Y,GAAC,OAAKA,EAAEqhE,cAAgB,EAAE,IAEnB1kE,KAAAmxD,aAAenxD,KAAKwF,SAASrC,QACzC7C,EAAA0b,KAAI,SAAC3Y,GAAC,OAAKA,EAAEshE,gBAAkB,EAAE,IAGrB3kE,KAAA4kE,kBAA6C5qD,EAAAgJ,eAAc,CACvEhjB,KAAK+9B,SACL/9B,KAAKmB,KAAKoX,kBACXpV,QACC7C,EAAA4b,QAAO,SAAA5V,GAAQ,QAAR4c,EAAA5c,EAAA,GAAQ,EAAW,MAC1BhG,EAAAiyB,WAAU,SAAApP,GAAoB,IAAAC,EAAAF,EAAAC,EAAA,GAAhBnP,EAAIoP,EAAA,GAAJpP,KAAQkF,EAAGkK,EAAA,GACrB9hB,SAAKswB,SAASpvB,KAAK,WAAQ,EACpBjC,EAAAgrC,cAAav3B,GAAQkF,EAAIzF,GAAI,YAAYtQ,QAC5C7C,EAAA0b,KAAI,SAACjD,GAAC,OAAKA,EAAEzB,QAAQ0E,IAAI,SAAC3Y,GAAC,OAAK,IAAIqwD,EAAAU,aAAa/wD,EAAE,EAAC,MACpD/C,EAAA2yB,YAAW,SAAC5vB,GAAC,MAAK,EAAE,GAE5B,IAAC,EACD/C,EAAAwjB,KAAI,SAACzgB,GAAC,OAAK/B,EAAKswB,SAASpvB,KAAK,GAAG,MACjClC,EAAA+yB,aAAY,IAGArzB,KAAAu2D,WAAav2D,KAAK4kE,eAAezhE,QAC7C7C,EAAA0b,KAAI,SAAC3Y,GAAC,SAAK7C,EAAA6qC,QAAOhoC,EAAE2Y,IAAI,SAAC+W,GAAC,OAAKA,EAAEmJ,QAAQ,GAAE,IAG/Bl8B,KAAAkkE,iBAAgBlqD,EAAAgJ,eAAc,CAC1ChjB,KAAK6xB,SACL7xB,KAAK4kE,iBACNzhE,QACC7C,EAAAiyB,WAAS,eAAAuM,EAAAn9B,EACL,SAAA4xB,GAAA,IAAAC,EAAAtQ,EAAAqQ,EAAA,GAAAsxC,EAAArxC,EAAA,GAEQyK,EAAM4mC,EAAN5mC,OACA+vB,EAAI6W,EAAJ7W,KACAuI,EAAUsO,EAAVtO,WACA1qB,EAAOg5B,EAAPh5B,QACA95B,EAAI8yD,EAAJ9yD,KACAC,EAAQ6yD,EAAR7yD,SACAiF,EAAS4tD,EAAT5tD,UAEJqf,EAAC9C,EAAA,UAAA5xB,IAAAC,KAAA,SAAAC,IAAA,IAAA0wD,EAAAp/C,EAAA,OAAAxR,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,KAEmBw6D,EAAA8H,yBAChBj5B,GACFvoC,YAAW,OAFPkvD,SAAKlwD,EAAA4B,KAGX+5B,EAASA,EAAOvK,cACZtgB,EAAO6qB,EACL3H,EAAEpa,OAAO,SAAC7Y,GAAC,OAAKA,EAAEsQ,KAAK+f,cAAcztB,SAASg4B,EAAO,GACrD3H,EACNljB,EAAO46C,EAAK3oD,OACN+N,EAAK8I,OAAO,SAAC7Y,GAAC,OAAK2qD,EAAKvpB,MAAM,SAACxkC,GAAC,OAAKoD,EAAE2qD,KAAK/nD,SAAShG,EAAE,EAAC,GACxDmT,EAINA,GAHAA,EAAOmjD,EAAWlxD,OACZ+N,EAAK8I,OAAO,SAAC7Y,GAAC,OAAKkzD,EAAWtwD,SAAS5C,EAAE64B,SAAS,GAClD9oB,GACM8I,OAAO,SAAC7Y,GAAC,SACjB25D,EAAAqC,uBAAsBh8D,EAAGmvD,EAAO,CAC5BzgD,OACAC,WACAiF,aACK,GACX3U,EAAAqB,OAAA,SACKyP,GAAI,wBAAA9Q,EAAAwC,OAAA,EAAAhD,EAAA,EAtBVF,EAsBU,GACd,gBAAAyb,GAAA,OAAAyhB,EAAA95B,MAAAhF,KAAAiF,UAAA,EAlCI,KAkCJ,EAEL3E,EAAA+yB,aAAY,GAUb,CAACvzB,SAAA2iE,EAAA,EAAAhhE,IAAA,gBAAAkE,IAPJ,WACI,OAAO3F,KAAKmB,KAAK29D,aACrB,GAAC,CAAAr9D,IAAA,aAAAC,MAOM,SAAWqjE,GACd/kE,KAAK+9B,SAASv7B,KAAIstB,IAAA,GAAM9vB,KAAK+9B,SAAS9kB,YAAe8rD,GACzD,GAAC,CAAAtjE,IAAA,aAAAC,MAEM,SAAWqjE,GACd/kE,KAAK6xB,SAASrvB,KAAIstB,IAAA,GAAM9vB,KAAK6xB,SAAS5Y,YAAe8rD,GACzD,KAACtC,CAAA,CA/GiC,GAAzBA,SAAyB,mBAAAxiE,iBAAzBwiE,GAAyBviE,EAAAwd,mBAAA/U,EAAAG,qBAAA5I,EAAAwd,mBAAA7U,EAAAD,iBAAA,EAAzB65D,EAAyB,WAAAviE,EAAA,oCAAzBuiE,EAAyB9kD,QAAzB8kD,EAAyB7kD,UAAAC,WAFtB,SAEH4kD,CAAyB,2NCpCtC,IAAAz0D,EAAAlQ,EAAA,OAGA41D,GAFA51D,EAAA,OACAA,EAAA,MACAA,EAAA,UACAA,EAAA,0LA+DgBoC,EAAAqN,yBAAA,eAMIrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAqV,GAAA,IAAAxQ,EAAA/V,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAyE,EAAAinB,UAAqB,KAAI,GAN7Bh9B,EAAAyuB,iBAAA,MAUAzuB,EAAAsN,wBAAA,EAvEhB,IAAMgsB,EAAuB,GAqIhB55B,iCAA8B,eAA9Bw4D,EAA8B,WAsBvC,SAAAA,EACYl3D,EACA8jE,EACA7jE,EACyBk5C,GAA4Bt6C,EAAAC,KAAAo4D,GAHrDp4D,KAAAkB,YACAlB,KAAAglE,SACAhlE,KAAAmB,OACyBnB,KAAAq6C,QAzB9Br6C,KAAAk9B,UAAiC,KACjCl9B,KAAAuf,SAAQ8D,EAAwBrjB,KAAKq6C,MAAM,IAAM,IA0BpDr6C,KAAKglE,OAAO3C,WAAWriE,KAAKq6C,MAAM,GACtC,CAACv6C,SAAAs4D,EAAA,EAAA32D,IAAA,YAAAkE,IAzBD,WACI,OACI3F,KAAKkB,UAAUyE,IAAc,yBAA2B6zB,CAEhE,GAAC,CAAA/3B,IAAA,eAAAkE,IAED,WACI,OAAO3F,KAAKuf,SAASvD,IAAI,SAAC3Y,GAAC,OAAKA,EAAEsgE,SAAS,GAAE5uD,KAAK,IACtD,GAAC,CAAAtT,IAAA,QAAAkE,IAED,WACI,OAAO3F,KAAKuf,SAAS6d,OAAO,SAACn9B,EAAG8yB,GAAC,OAAK9yB,EAAI8yB,EAAEskC,QAAQ,EAAE,EAC1D,GAAC,CAAA51D,IAAA,OAAAkE,IAED,WACI,OAAO3F,KAAKmB,KAAK29D,aACrB,GAAC,CAAAr9D,IAAA,aAAAC,MAWM,SAAW+R,GACd,OAAOA,GAAMzT,KAAKq9B,aAAap3B,SAASwN,EAC5C,GAAC,CAAAhS,IAAA,cAAAC,MAEM,SAAYya,EAAoBmhB,GACnC,IAAMlqB,EAAOpT,KAAKuf,SAASrD,OACvB,SAAC7Y,GAAC,OAAKA,EAAEsgE,YAAcxnD,EAAKwnD,SAAS,GAEzC,GAAIrmC,EAAO,CACP,IAAMwiC,EAAW,IAAIpM,EAAAU,aAAYtkC,IAAA,GAAM3T,GAAI,IAAEy7C,UAAU,KACvDxkD,EAAK6jB,KAAK6oC,GACV9/D,KAAKk9B,UAAY4iC,EAErB9/D,KAAKuf,SAAWnM,CACpB,GAAC,CAAA3R,IAAA,kBAAAC,MAEM,SAAgBya,GACnB,IAAMse,EAAWz6B,KAAKu5B,UAChBmB,GAAaD,EAASx0B,SAASkW,EAAK1I,IAEtCzT,KAAKkB,UAAUy5B,gBAAgB,uBAD/BD,EACqD,GAAAt2B,OAAAif,EAC9CoX,GAAQ,CACXte,EAAK1I,KAKLgnB,EAASve,OAAO,SAAC7Y,GAAC,OAAKA,IAAM8Y,EAAK1I,EAAE,GAGhD,KAAC2kD,CAAA,CA7DsC,GAA9BA,SAA8B,mBAAAn4D,iBAA9Bm4D,GAA8Bl4D,EAAAwI,4BAAAC,EAAAC,iBAAA1I,EAAAwI,4BAAAG,EAAA45D,2BAAAviE,EAAAwI,4BAAAK,EAAAD,qBAAA5I,EAAAwI,4BA0B3BsF,EAAAwvB,iBAAe,EA1BlB46B,EAA8B,UAAAl4D,EAAA,kCAA9Bk4D,EAA8BjvD,UAAA,+BAAAG,MAAA,GAAAC,KAAA,GAAA+D,OAAA,sPApHlBgjB,UAAAC,MAAAC,EAAA,msCA+DRF,UAAAG,MAAAD,EAAA,+XAgBwCF,UAAAI,MAAAF,EAAA,uHAGNF,UAAAM,MAAAJ,EAAA,mHAC/B,wNA/BHF,UAAAO,MAAAL,EAAA,qHAhETtwB,EAAAqN,yBAAA,UAAArN,CAEC,aAFDA,CAEC,aAFDA,CAEC,cAQqBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,GAEnBA,EAAAqN,yBAAA,QAAArN,EAAAyuB,iBAAA,KAAqBzuB,EAAAsN,wBAAAtN,GAEzBA,EAAAqN,yBAAA,YAGIrN,EAAAyJ,oBAAA,6BAGAzJ,EAAAqN,yBAAA,WAGIrN,EAAAyJ,oBAAA,8BAIAzJ,EAAAqN,yBAAA,2BAKIrN,EAAA8Q,qBAAA,qBAAAG,GAAA,OAAazH,EAAA2vB,gBAAAloB,EAAuB,EAApCjR,CAAqC,oBAAAiR,GAAA,OAAAzH,EAAAwzB,UAAA/rB,CAAA,GAGxCjR,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,8BAMIrN,EAAA8Q,qBAAA,wBAAAG,GAAA,OAAgBzH,EAAA+zB,YAAA/zB,EAAAwzB,UAAA/rB,EAA+B,EAA/CjR,CAAgD,8BAMnCwJ,EAAA2vB,gBAAA3vB,EAAAwzB,UAA2B,EANxCh9B,CAAgD,0BAAAwJ,EAAAwzB,UAO3B,IAAI,GAC5Bh9B,EAAAsN,wBAAAtN,GAELA,EAAAqN,yBAAA,gBAGIrN,EAAAiS,qBAAA,GAAA8yD,EAAA,iBAWA/kE,EAAAqN,yBAAA,gBAAArN,EAAAyuB,iBAAA,OAUAzuB,EAAAsN,wBAAAtN,GAEJA,EAAAqN,yBAAA,eAAArN,CAEC,eAFDA,CAEC,YAFDA,CAEC,kBASqCA,EAAAuN,iBAAA,iBAAUvN,EAAAsN,yBACpCtN,EAAAqN,yBAAA,aAAArN,EAAAyuB,iBAAA,OAA6CzuB,EAAAsN,wBAAAtN,KAGrDA,EAAAqN,yBAAA,WAAArN,EAAAyuB,iBAAA,OAEAzuB,EAAAsN,yBACAtN,EAAAqN,yBAAA,gBAMIrN,EAAA8Q,qBAAA,0BAERtH,EAAA+zB,YAAA/zB,EAAAwzB,WAC0CxzB,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAymC,WAGpD,GACkBzjE,EAAAqN,yBAAA,YAAArN,CAA+B,kBACDA,EAAAuN,iBAAA,IAExBvN,EAAAsN,yBACFtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,wBAAAtN,gBAjHJA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAvH,EAAA6V,UAkBIrf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAGA/Q,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,eAAAvH,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAymC,UAAAzjE,CAA+B,WAAAwJ,EAAA2zB,aAA/Bn9B,CAA+B,iBAAAwJ,EAAA6V,SAA/Brf,CAA+B,YAAAwJ,EAAA6vB,WAYnCr5B,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,UAAApW,EAAAwzB,UAAAh9B,CAA2B,UAAAwJ,EAAAwzB,WAF3Bh9B,EAAA+Q,qBAAA,OAAAvH,EAAAwzB,UAAAh9B,CAAmB,SAAAwJ,EAAA2zB,aAAAp3B,UAAA,MAAAyD,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAymC,YAAA,IAAnBzjE,CAAmB,OAAAwJ,EAAA4zD,KAAnBp9D,CAAmB,QAAAwJ,EAAAwzB,WAAAxzB,EAAA6vB,UAAAtzB,UAAA,MAAAyD,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAzpB,KAAA,KAuBlBvT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAvH,EAAAwzB,WAWDh9B,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,OAAApW,EAAAwzB,WADAh9B,EAAA+Q,qBAAA,mBAAAvH,EAAA6V,UAeArf,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,mBAAAvH,EAAA6V,UAUJrf,EAAAwN,oBAAA,GAAAxN,EAAA2uB,oBAAAnlB,EAAA6zB,OAAAr9B,EAAA6uB,sBAAA,IAMI7uB,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,UAAApW,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAymC,YADAzjE,EAAA+Q,qBAAA,YAAAvH,EAAAwzB,WAU8Bh9B,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA5K,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAymC,WAAA,gBAItBzjE,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAjE,EAAAk0B,WAAA,MAAAl0B,EAAAwzB,UAAA,KAAAxzB,EAAAwzB,UAAAymC,WAAA,6MAafvL,CAA8B,+KC5I3C,IAAAnuD,EAAAnM,EAAA,OACAkQ,EAAAlQ,EAAA,OAGAulD,EAAAvlD,EAAA,qHA6CoCoC,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,oCAIJvN,EAAAsN,0GAJItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,KAAAzN,EAAAsU,sBAAA,IAAA0wD,EAAA3kC,WAAA,IAAAxe,EAAAu7C,MAAA,+BAbZp9D,EAAAqN,yBAAA,wBAAArN,CAIC,WAJDA,CAIC,YAGWA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAgzD,EAAA,cASJjlE,EAAAsN,wBAAAtN,2BAfAA,EAAA+Q,qBAAA,QAAAi0D,EAAAzxD,IAIQvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAu3D,EAAAvxD,KAAA,KAICzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAi0D,EAAA3kC,WAAA,+DArBrBrgC,EAAAyhB,kCAAA,GACIzhB,EAAAqN,yBAAA,wBAIIrN,EAAA8Q,qBAAA,yBAAAG,GAAAjR,EAAAkR,wBAAAsoC,GAAA,IAAA0rB,EAAAllE,EAAAqR,0BAAA0M,UAAApI,EAAA3V,EAAAqR,0BAAA,OAAiBrR,EAAAsR,sBAAAqE,EAAA2qD,kBAAA4E,EAAAj0D,GAAgC,GAEjDjR,EAAAqN,yBAAA,wBAAArN,CAA6C,aACXA,EAAAuN,iBAAA,UAAIvN,EAAAsN,wBAAAtN,GAEtCA,EAAAiS,qBAAA,EAAAkzD,EAAA,2BAoBJnlE,EAAAsN,yBACJtN,EAAA4hB,iCAAA,qDAnB4B5hB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,gBAAAm0D,EAAA,KAAAA,EAAAniD,QAAA,2BA6BhB/iB,EAAAqN,yBAAA,YAIIrN,EAAAuN,iBAAA,oCACJvN,EAAAsN,0GADItN,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,KAAAzN,EAAAsU,sBAAA,IAAA8wD,EAAA/kC,WAAA,IAAA9hB,EAAA6+C,MAAA,mEAZZp9D,EAAAqN,yBAAA,qBAEIrN,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAAm0D,EAAAplE,EAAAkR,wBAAA85C,GAAAjtC,UAAAigC,EAAAh+C,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAA0sC,EAAAyiB,aAAA2E,EAAA7xD,IAAAtC,EAAA,GAEAjR,EAAAqN,yBAAA,WAAArN,CAA8C,YAEtCA,EAAAuN,iBAAA,GACJvN,EAAAsN,yBACAtN,EAAAiS,qBAAA,EAAAozD,EAAA,cAMJrlE,EAAAsN,wBAAAtN,EAAM,0DAZNA,EAAA+Q,qBAAA,UAAAuF,EAAAmqD,aAAA2E,EAAA7xD,KAIQvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA23D,EAAA3xD,KAAA,KAICzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAq0D,EAAA/kC,WAAA,0BAVbrgC,EAAAiS,qBAAA,EAAAqzD,EAAA,wEACoBtlE,EAAA+Q,qBAAA,gBAAAm0D,EAAA,KAAAA,EAAAniD,QAAA,2BAzChC/iB,EAAAqN,yBAAA,UAAArN,CAIC,WAC2CA,EAAAuN,iBAAA,GAAgBvN,EAAAsN,yBACxDtN,EAAAqN,yBAAA,WACIrN,EAAAiS,qBAAA,EAAAszD,EAAA,sBAgCAvlE,EAAAiS,qBAAA,EAAAuzD,EAAA,yBAAAxlE,EAAAomB,kCAkBJpmB,EAAAsN,wBAAAtN,wDAtDAA,EAAA60D,sBAAA,QAAAqQ,EAAAzxD,MAEwCzT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA8wD,EAAAzxD,MAErBzT,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAm0D,EAAA9gB,SAAApkD,CAAuB,WAAAqtB,EAAA,EAqE7C3tB,qCAAkC,eAAlC+lE,EAAkC,WAS3C,SAAAA,EACqCtrB,GAAoC,IAAA/4C,EAAAtB,KAAAD,EAAAC,KAAA2lE,GAApC3lE,KAAAq6C,QARpBr6C,KAAA8uB,MAAQ,IAAI7kB,EAAAwV,aAItBzf,KAAA2gE,aAAiC,GACxB3gE,KAAAs9D,KAAOt9D,KAAKq6C,MAAMijB,KAK9B,IAI0BxlC,EAJpBoJ,KAASmiB,EAAAhY,QACXrrC,KAAKq6C,MAAMp3B,QAAQjH,IAAI,SAAC+W,GAAC,OAAKA,EAAE2F,OAAS,OAAO,IAE9C4oC,EAAa,GAAGvpC,EAAAC,EACFkJ,GAAM,QAAAjJ,EAAA,WAAE,IAAjBS,EAAKZ,EAAAp2B,MACNuhB,EAAU3hB,EAAK+4C,MAAMp3B,QAAQ/G,OAAO,SAAC6W,GAAC,OAAKA,EAAE2F,QAAUA,CAAK,GAClE4oC,EAAWrqC,KAAK,CACZtjB,KAAM+kB,EACN4rB,WAAYrhC,EAAQiN,KAAK,SAAC6C,GAAC,OAAKA,EAAEuxB,QAAQ,GAC1CrhC,aALR,IAAA8U,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MAAAH,GAOC,OAAArN,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACDr4B,KAAKkhC,OAASogC,CAClB,CAACxhE,SAAA6lE,EAAA,EAAAlkE,IAAA,oBAAAC,MAEM,SAAkBg3B,EAA4BjlB,GAAU,IACzBopB,EADyBC,EAAA9E,EACtCU,EAAMzV,SAAO,IAAlC,IAAA6Z,EAAAlT,MAAAiT,EAAAC,EAAA3E,KAAAC,MAAoC,KAAzBihC,EAAMx8B,EAAAn7B,MACb1B,KAAK2gE,aAAatH,EAAO5lD,IAAM4lD,EAAO5lD,KAAOA,EAChD,OAAAmX,GAAAkS,EAAA1X,EAAAwF,EAAA,SAAAkS,EAAAzE,GAAA,CACL,GAAC,CAAA52B,IAAA,cAAAC,MAEM,WAAW,IAAAyD,EAAAnF,KACRijB,EAAUjjB,KAAKq6C,MAAMp3B,QAAQ/G,OAC/B,SAACyjD,GAAG,OAAKx6D,EAAKw7D,aAAahB,EAAIlsD,GAAG,GAEtCzT,KAAK8uB,MAAMnP,KAAK,CAAE4P,OAAQ,OAAQoiB,SAAU,CAAE1uB,YAClD,KAAC0iD,CAAA,CAtC0C,GAAlCA,SAAkC,mBAAA1lE,iBAAlC0lE,GAAkCzlE,EAAAwI,4BAU/BsF,EAAAwvB,iBAAe,EAVlBmoC,EAAkC,UAAAzlE,EAAA,kCAAlCylE,EAAkCx8D,UAAA,iCAAA0W,QAAA,CAAAiP,MAAA,SAAAxlB,MAAA,GAAAC,KAAA,EAAA+D,OAAA,+wBAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAnFvCvJ,EAAAqN,yBAAA,WAAArN,CAAQ,QACAA,EAAAuN,iBAAA,oBAAcvN,EAAAsN,yBAClBtN,EAAAqN,yBAAA,aAAArN,CAA8B,cAChBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,KAGvBA,EAAAqN,yBAAA,YACIrN,EAAAiS,qBAAA,EAAAyzD,EAAA,aA2DJ1lE,EAAAsN,yBACAtN,EAAAqN,yBAAA,aAAArN,CAAoB,cACmBA,EAAA8Q,qBAAA,0BAAStH,EAAAm8D,aAAa,GACrD3lE,EAAAuN,iBAAA,aACJvN,EAAAsN,wBAAAtN,UA7DsBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAw3B,6WA0ErBykC,CAAkC,uICnG/C,IAAAnlE,EAAA1C,EAAA,OAGA41D,EAAA51D,EAAA,MAGA8B,gBAA0BE,EA0BtB,SAAAo/D,IAA6C,IAAA4G,EAAAC,EAAjCjjE,EAAAmC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA+B,GAAElF,EAAAC,KAAAk/D,GACzCl/D,KAAKyT,GAAK3Q,EAAK2Q,IAAE,SAAArP,UAAa5D,EAAAq2D,WAAU,QAAW,MACnD72D,KAAKo1B,UAAYtyB,EAAKsyB,WAAa,GACnCp1B,KAAK2jC,SAAW7gC,EAAK6gC,WAAsB,QAAdmiC,EAAIhjE,EAAKgsB,aAAK,IAAAg3C,OAAA,EAAVA,EAAYryD,KAAM,GACnDzT,KAAK05B,OAAS52B,EAAK42B,OAAS,IAAI1d,IAAI,SAAC+W,GAAC,OAAK,IAAI2gC,EAAAU,aAAarhC,EAAE,GAC9D/yB,KAAK+9D,WAAa/9D,KAAK05B,MAAM0D,OACzB,SAAC9D,EAAQnd,GAAI,OAAKmd,EAASnd,EAAKk7C,QAAQ,EACxC,GAEJr3D,KAAK03D,WAAa13D,KAAK05B,MAAM0D,OACzB,SAAC9D,EAAQnd,GAAI,OAAKmd,GAAUnd,EAAKu7C,YAAc,EAAE,EACjD,GAEJ13D,KAAKgmE,YAAcljE,EAAKkjE,aAAe,GACvChmE,KAAKsmC,OAASxjC,EAAKwjC,QAAU,WAC7BtmC,KAAKsgC,eAAiBx9B,EAAKw9B,gBAAkB,GAC7CtgC,KAAK8uB,MAAQhsB,EAAKgsB,OAAS,KAC3B9uB,KAAKimE,MAAQnjE,EAAKmjE,OAAS,GAC3BjmE,KAAKkmE,WACDpjE,EAAKojE,YACJpjE,EAAaiP,OACJ,QADQg0D,EAClB/lE,KAAK8uB,aAAK,IAAAi3C,OAAA,EAAVA,EAAYh0D,OACZ0I,KAAKuX,KACb,2NCrDJ,IAAAxxB,EAAA1C,EAAA,OAQAqoE,GAFAroE,EAAA,OACAA,EAAA,OACAA,EAAA,mIAyCgBoC,EAAAqN,yBAAA,eAKIrN,EAAAuN,iBAAA,YACJvN,EAAAsN,kEAHItN,EAAA+Q,qBAAA,aAAAK,EAAA6uB,MAAA8lC,MAAA,+DAvCZ/lE,EAAAqN,yBAAA,UAAArN,CAKC,UALDA,CAKC,UALDA,CAKC,cASqBA,EAAAuN,iBAAA,kBAAYvN,EAAAsN,wBAAAtN,KAG9BA,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,gCACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,GAKJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YACIrN,EAAAuN,iBAAA,IAKJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,aAAkBrN,EAAAuN,iBAAA,IAAwCvN,EAAAsN,yBAC1DtN,EAAAqN,yBAAA,aACIrN,EAAAiS,qBAAA,GAAAi0D,EAAA,iBAOJlmE,EAAAsN,yBACAtN,EAAAqN,yBAAA,aACIrN,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,YAAArN,CAAkB,eAAlBA,CAAkB,aASNA,EAAAuN,iBAAA,IACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,kBAAuBrN,EAAAuN,iBAAA,sBAAevN,EAAAsN,wBAAAtN,KAG9CA,EAAAqN,yBAAA,YAAArN,CAAkB,gBACDA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA2rC,GAAA,IAAAjmC,EAAA5W,EAAAqR,0BAAA,OAAArR,EAAAsR,sBAAAsF,EAAAuvD,YAAAvvD,EAAAuvD,WAAA,GACTnmE,EAAAqN,yBAAA,eAAUrN,EAAAuN,iBAAA,IAIRvN,EAAAsN,wBAAAtN,MAAW,wEAjErBA,EAAA4f,sBAAA,eAAAvN,EAAA8zD,WAAAnmE,CAAiC,cAAAqS,EAAA8zD,YAM7BnmE,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,cAAAvN,EAAA8zD,WAAAnmE,CAAgC,sBAAAqS,EAAA8zD,YAUhCnmE,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAAzN,EAAAsU,sBAAA,KAAAjC,EAAA4tB,MAAA+lC,WAAA3zD,EAAAqd,aAAA,KAGA1vB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAA4E,EAAA4tB,MAAArR,MAAA,KAAAvc,EAAA4tB,MAAArR,MAAAjS,MAAAlH,gBAAA,MAAApD,EAAA4tB,MAAArR,MAAA,KAAAvc,EAAA4tB,MAAArR,MAAAjS,MAAAlJ,OAAA,uBAOAzT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAA4E,EAAA4tB,MAAArR,OAAA,MAAAvc,EAAA4tB,MAAArR,MAAAjW,UAAA,KAAAtG,EAAA4tB,MAAArR,MAAAjW,UAAAlF,QAAA,MAAApB,EAAA4tB,MAAArR,MAAA,KAAAvc,EAAA4tB,MAAArR,MAAAna,OAAA,wBAMczU,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAA4tB,MAAA6lC,aAAA,eAGT9lE,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,OAAAsB,EAAA4tB,MAAA8lC,OAQL/lE,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,IAAA4E,EAAA4tB,MAAAG,gBAAA,sBAOIpgC,EAAAwN,oBAAA,GAAAxN,EAAAmnD,sBAAA,mBAAA90C,EAAA+zB,OAAA,KAAA/zB,EAAA+zB,OAAAggC,QACApmE,EAAA+Q,qBAAA,oBAAAwV,GAGIvmB,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,UAAA4E,EAAA+zB,OAAA,KAAA/zB,EAAA+zB,OAAA3yB,KAAA,KAOMzT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAA/B,EAAA8zD,WAAA,uEAclBnmE,EAAAyJ,oBAAA,iEAIIzJ,EAAA+Q,qBAAA,iBAAA8Q,EAAAoe,MAAA,KAAApe,EAAAoe,MAAA1sB,GAAAvT,CAAsB,OAAAi6D,EAAA,2BAV9Bj6D,EAAAqN,yBAAA,WAMIrN,EAAAiS,qBAAA,EAAAo0D,EAAA,aAOJrmE,EAAAsN,iEAVItN,EAAA4f,sBAAA,QAAA7J,EAAAowD,YACAnmE,EAAA+Q,qBAAA,QAAAgF,EAAAowD,WAAA,eAKqBnmE,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAgF,EAAAkqB,MAAAzG,MAAA,+DAMrBx5B,EAAAqN,yBAAA,eAIIrN,EAAA8Q,qBAAA,uBAAAw1D,EAAAtmE,EAAAkR,wBAAAiF,GAAA4H,UAAA3H,EAAApW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA8E,EAAAmwD,aAAAD,EAAA/yD,IAAuB,GAEhCvT,EAAAyJ,oBAAA,YAIAzJ,EAAAqN,yBAAA,aAAwBrN,EAAAuN,iBAAA,GAAiBvN,EAAAsN,wBAAAtN,EAAO,2BAF5CA,EAAAwN,oBAAA,GAAAxN,EAAAmnD,sBAAA,mBAAAmf,EAAAF,QAEoBpmE,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAkyD,EAAA7yD,KAAA,EAuB3B/T,yBAAuB,eAAvB8mE,EAAuB,SAAA7lE,GAAAC,EAAA4lE,EAAA7lE,GAAA,IAAAG,EAAAC,EAAAylE,GAoBhC,SAAAA,EACYjK,EACAv7D,GAA0B,IAAAI,EAAAvB,SAAAC,KAAA0mE,IAElCplE,EAAAN,EAAAO,KAAAvB,OAHQy8D,UACAn7D,EAAAJ,YAnBLI,EAAA+kE,YAAa,EAEJ/kE,EAAAqlE,SAAWR,EAAAS,kBAEXtlE,EAAAmlE,aAAY,eAAAngE,EAAA3E,EAAAC,IAAAC,KAAG,SAAAC,EAAO8nB,GAAC,OAAAhoB,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EAC7BlB,EAAKm7D,QAAQgK,aAAanlE,EAAK6+B,MAAOvW,GAAE,OAC9CtoB,EAAKuC,QAAQ,gBAAiB,kBAAQvC,EAAK6+B,MAAcmG,OAAS1c,CAAC,GAAG,wBAAAtnB,EAAAwC,OAAA,EAAAhD,EAAA,IACzE,gBAAAub,GAAA,OAAA/W,EAAAtB,MAAAhF,KAAAiF,UAAA,EAH2B,GAG1B3D,CAeF,CAACxB,SAAA4mE,EAAA,EAAAjlE,IAAA,SAAAkE,IAbD,WAAiB,IAAAR,EAAAnF,KACb,OAAOA,KAAK2mE,SAASz2C,KAAK,SAAC6C,GAAC,OAAKA,EAAEtf,KAAOtO,EAAKg7B,MAAMmG,MAAM,EAC/D,GAAC,CAAA7kC,IAAA,cAAAkE,IAED,WACI,OAAO3F,KAAKkB,UAAU0uB,WAC1B,KAAC82C,CAAA,CAlB+B,CAAQlmE,EAAAiI,cAA/Bi+D,SAAuB,mBAAAzmE,iBAAvBymE,GAAsBxmE,EAAAwI,4BAAAC,EAAAg0D,uBAAAz8D,EAAAwI,4BAAAG,EAAAD,iBAAA,EAAtB89D,EAAuB,UAAAxmE,EAAA,kCAAvBwmE,EAAsBv9D,UAAA,qBAAAyW,OAAA,CAAAugB,MAAA,SAAA/2B,SAAA,CAAAlJ,EAAAmJ,sCAAAC,MAAA,EAAAC,KAAA,EAAA+D,OAAA,mwCAAA9D,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAvH3BvJ,EAAAiS,qBAAA,EAAA00D,EAAA,eAuEA3mE,EAAAiS,qBAAA,EAAA20D,EAAA,YAcA5mE,EAAAqN,yBAAA,qBACIrN,EAAAiS,qBAAA,EAAA40D,EAAA,gBAYJ7mE,EAAAsN,gCA9FKtN,EAAA+Q,qBAAA,OAAAvH,EAAAy2B,OAoEAjgC,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,aAAAvH,EAAAy2B,MAAA,KAAAz2B,EAAAy2B,MAAAzG,MAAAr0B,QAgBsBnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAvH,EAAAi9D,ycA6BnB,CAACnmE,EAAA8Y,mCAEJotD,CAAuB,oRCrIpC,IAAA1sD,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,OACAyzB,EAAAzzB,EAAA,OAEA0C,EAAA1C,EAAA,OACAkpE,EAAAlpE,EAAA,OACA4C,EAAA5C,EAAA,OAEAi/D,EAAAj/D,EAAA,kBA6Ba8B,wBAAsB,eAAtB+8D,EAAsB,SAAA97D,GAAAC,EAAA67D,EAAA97D,GAAA,IA+D/BomE,EA/D+BjmE,EAAAC,EAAA07D,GA4C/B,SAAAA,IAAA,IAAAr7D,EAAAvB,SAAAC,KAAA28D,IACIr7D,EAAAN,EAAAO,KAAAvB,OA5CI0xB,MAAQ,IAAI1X,EAAAqB,gBAAwB,GACpC/Z,EAAAswB,SAAW,IAAI5X,EAAAqB,iBAAyB,GACxC/Z,EAAAuwB,SAAW,IAAI7X,EAAAqB,gBAAsC,IAG7C/Z,EAAA4lE,UAAsCltD,EAAAgJ,eAAc,CAChE1hB,EAAKuwB,SACLvwB,EAAKowB,QACNvuB,QACC7C,EAAA4xB,cAAa,MAAG,EAChB5xB,EAAAiyB,WAAU,SAAAjsB,GAAsB,IAAA6gE,EAAAjkD,EAAA5c,EAAA,MAAlByL,EAAIo1D,EAAJp1D,KAAMgC,EAAKozD,EAALpzD,MAChBzS,EAAKswB,SAASpvB,MAAK,GACnB,IAAMwtB,KAAQuB,EAAAyC,gBAAYzC,EAAA0C,YAAWliB,GAAQ0I,KAAKuX,QAC5C7M,KAAMoM,EAAAyC,gBAAYzC,EAAA4C,UAASpiB,GAAQ0I,KAAKuX,QAC9C,SAAOg1C,EAAA1yC,aAAY,CACf85B,UAAWr6C,GAAS,IAAIgB,KAAK,KAC7Bgf,aAAc/D,EACdkE,WAAY/O,GAEpB,IAAC,EACD7kB,EAAA0b,KAAI,SAACuY,GAAM,SAAK/zB,EAAA4yB,SAAQmB,EAAOvY,IAAI,SAAC8S,GAAK,OAAKA,EAAMs4C,IAAI,WAAW,GAAE,MACrE9mE,EAAAwjB,KAAI,kBAAMxiB,EAAKswB,SAASpvB,MAAK,EAAM,MACnClC,EAAA+yB,aAAY,IAGA/xB,EAAAiiB,QAAUjiB,EAAKswB,SAASpW,eAUxBla,EAAAoiC,SAAWpiC,EAAK4lE,OAAO/jE,QACnC7C,EAAA0b,KAAI,SAAC5I,GAAI,OACLA,EACK8I,OAAO,SAACikB,GAAK,OAxD9B,SAASknC,EACLlnC,EACA1J,GAEA,IAAM7M,GAAK6M,EAAQwH,QAAU,IAAIvK,cACjC,QAASyM,EAAMzG,MAAMxJ,KACjB,SAAC/T,GAAI,OACDA,EAAKxI,KAAK+f,cAAcztB,SAAS2jB,MAC/BzN,EAAK8G,QAAQiN,KAAK,SAACmpC,GAAM,OACvBA,EAAO1lD,KAAK+f,cAAcztB,SAAS2jB,EAAE,EACxC,EAEb,CA4CmCy9C,CAAWlnC,EAAO7+B,EAAKuwB,SAAS5Y,WAAW,GAC7DiE,KAAK,SAACyW,EAAG3U,GAAC,OAAK2U,EAAEuyC,WAAalnD,EAAEknD,UAAU,EAAC,IAMpD5kE,EAAK2R,aAAa,UAAW3R,EAAK4lE,OAAO/zD,aAAa7R,CAC1D,CAEAxB,SAAA68D,EAAA,EAAAl7D,IAAA,UAAAkE,eApBI,OAAO3F,KAAK6xB,SAAS5Y,UACzB,EACA2C,IACA,SAAmB6a,GACfz2B,KAAK6xB,SAASrvB,KAAKi0B,EACvB,GAAC,CAAAh1B,IAAA,eAAAC,MAgBM,WAAsC,IAAAyD,EAAAnF,KACzCA,KAAK62B,SACD,UACA,kBAAM1xB,EAAKusB,MAAMlvB,UAASiY,MAAOsb,UAAU,EAH/B9wB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,KAMpC,GAEA,CAAAxD,IAAA,cAAAC,MACO,WACH1B,KAAK+2B,cAAc,UACvB,GAEA,CAAAt1B,IAAA,eAAAC,OAAAulE,EAAAtlE,EAAAC,IAAAC,KAKO,SAAAC,EACHq+B,EACAmG,GAA2B,IAAAghC,EAAAzwD,EAAAiY,EAAAgU,EAAA,OAAAlhC,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAErB8kE,SAAgB,IAAIvK,EAAAmC,cAAapvC,IAAA,GAChCqQ,GAAK,IACRmG,SACAxX,MAAO,QAELjY,EAAW,GAAAzS,OAAAif,EACV8c,EAAMrR,MAAMs4C,IAAI,YAAYlrD,OAAO,SAACsH,GAAC,OAAKA,EAAE/P,KAAO0sB,EAAM1sB,EAAE,IAAC,CAC/D6zD,IACFtrD,IAAI,SAAC+W,GAAC,OAAK,IAAIgqC,EAAAmC,cAAapvC,EAAA,GAAMiD,GAAI,GAClCjE,EAAQ,IAAIpuB,EAAAotB,cAAagC,IAAA,GACxBqQ,EAAMrR,OAAK,IACdjY,cACFvU,EAAAE,KAAA,KACoBwkE,EAAAO,WAAUz4C,EAAM04C,UAAUlkE,YAAW,OAArDw/B,SAAOxgC,EAAA4B,KACblE,KAAK0xB,MAAMlvB,KAAKiY,KAAKuX,OACpBmO,EAAcmG,OAASA,EAAOhkC,EAAAqB,OAAA,SACxBm/B,GAAO,wBAAAxgC,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACjB,SAAAymE,EAAAppD,EAAA8Z,GAAA,OAAA8vC,EAAAjiE,MAAAhF,KAAAiF,UAAA,MAAA03D,CAAA,CAzF8B,CAAQn8D,EAAAiI,cAA9Bk0D,SAAsB,mBAAA18D,iBAAtB08D,EAAqB,EAArBA,EAAsB,WAAAz8D,EAAA,oCAAtBy8D,EAAqBh/C,QAArBg/C,EAAqB/+C,UAAAC,WAFlB,SAEH8+C,CAAsB,mNCrCnC,IAAAn8D,EAAA1C,EAAA,OAEA2pE,GADA3pE,EAAA,MACAA,EAAA,QACAwC,EAAAxC,EAAA,UACAA,EAAA,mKA0CwBoC,EAAAqN,yBAAA,WAGIrN,EAAA8Q,qBAAA,uBAAA02D,EAAAxnE,EAAAkR,wBAAA2rC,GAAA9+B,UAAAnH,EAAA5W,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAsF,EAAA6wD,WAAAD,EAAAj0D,IAAoB,GAE7BvT,EAAAqN,yBAAA,QACIrN,EAAAyJ,oBAAA,qBAIJzJ,EAAAsN,yBACAtN,EAAAqN,yBAAA,QAAIrN,EAAAuN,iBAAA,GAAsCvN,EAAAsN,yBAC1CtN,EAAAqN,yBAAA,UAAArN,CAAuB,yEAcfA,EAAAuN,iBAAA,kCAOJvN,EAAAsN,wBAAAtN,IAAO,gEAzBHA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAa,EAAAyN,SAAAtZ,SAAAyhE,EAAAj0D,KAGJvT,EAAAwN,oBAAA,GAAAxN,EAAAoU,4BAAAozD,EAAA/xD,cAAA+xD,EAAA/zD,MAIIzT,EAAAwN,oBAAA,GAAAxN,EAAA4f,sBAAA,wBAAA3J,EAAAjW,EAAA8V,sBAAA,IAAAlE,EAAAq/C,gBAAAh7C,EAAAlQ,SAAAyhE,EAAAj0D,KAAAvT,CAIC,oBAAAsS,EAAAtS,EAAA8V,sBAAA,IAAAlE,EAAAq/C,eAAA,KAAA3+C,EAAAvM,SAAAyhE,EAAAj0D,KAODvT,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAAgb,EAAAzoB,EAAA8V,sBAAA,MAAAlE,EAAAq/C,gBAAAxoC,EAAA1iB,SAAAyhE,EAAAj0D,IAAA,wFAxDxBvT,EAAAqN,yBAAA,WAAArN,CAGC,YAHDA,CAGC,YAHDA,CAGC,OAHDA,CAGC,WAMgCA,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAA+wC,GAAA,IAAApgC,EAAA7hB,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAuQ,EAAA4lD,WAAW,KAAI,GACrCznE,EAAAyJ,oBAAA,iFAYJzJ,EAAAsN,yBACAtN,EAAAyJ,oBAAA,QACAzJ,EAAAqN,yBAAA,WACIrN,EAAAuN,iBAAA,mCACJvN,EAAAsN,wBAAAtN,KAGRA,EAAAqN,yBAAA,YACIrN,EAAAiS,qBAAA,GAAAy1D,EAAA,8CAoCJ1nE,EAAAsN,wBAAAtN,IAAQ,iDAtDQA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,kBAAAyQ,EAAAxhB,EAAA8V,sBAAA,IAAAzD,EAAAs1D,QAAA,KAAAnmD,EAAArc,UAAAkN,EAAAgN,SAAAla,OAAAnF,CAGC,gBAAAqS,EAAAgN,SAAAla,OAAA,WAAAsZ,EAAAze,EAAA8V,sBAAA,IAAAzD,EAAAs1D,QAAA,KAAAlpD,EAAAtZ,UAAAkN,EAAAgN,SAAAla,QAULnF,EAAAwN,oBAAA,GAAAxN,EAAAyN,6BAAA,WAAAwI,EAAAjW,EAAA8V,sBAAA,KAAAzD,EAAAs1D,QAAA,KAAA1xD,EAAA9Q,OAAA,aAMcnF,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAA/Q,EAAA8V,sBAAA,MAAAzD,EAAAs1D,OAAA,wBAkDlC3nE,EAAAqN,yBAAA,aAGIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,kCAA4BvN,EAAAsN,wBAAAtN,IAYlCN,mCAAgC,eAAhCkoE,EAAgC,WAMzC,SAAAA,EACY3O,EACAh4D,GAAyBpB,EAAAC,KAAA8nE,GADzB9nE,KAAAm5D,YACAn5D,KAAAmB,OAPLnB,KAAAujB,SAAU,EACVvjB,KAAAuf,SAAqB,GACZvf,KAAA6nE,SAAQJ,EAAAj1C,sBAAqBxyB,KAAKmB,KAAK+U,SAASzC,IAChDzT,KAAAmxD,aAAenxD,KAAKm5D,UAAUhI,YAK3C,CAACrxD,SAAAgoE,EAAA,EAAArmE,IAAA,aAAAC,OAAAqmE,EAAApmE,EAAAC,IAAAC,KAEG,SAAAC,EAAiB2R,GAAU,IAAAo0D,EAAA,OAAAjmE,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnB,MAAPiR,EAAU,CAAAnR,EAAAE,KAAA,QAAAF,SAAAE,KAAA,EACUxC,KAAK6nE,MAAM1kE,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,OAEpDtD,KAAKuf,SADLvf,KAAKuf,SAASla,UADZwiE,EAAKvlE,EAAA4B,MACwBmB,OACfwiE,EAAM7rD,IAAI,SAAC3Y,GAAC,OAAKA,EAAEoQ,EAAE,GACpB,GAAGnR,EAAAE,KAAA,eAGpBxC,KAAKuf,SADLvf,KAAKuf,SAAStZ,SAASwN,GACPzT,KAAKuf,SAASrD,OAAO,SAAC7Y,GAAC,OAAKA,IAAMoQ,CAAE,GACtC,GAAArP,OAAAif,EAAOrjB,KAAKuf,UAAQ,CAAE9L,IAAI,wBAAAnR,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAEnD,SAAA2nE,EAAAtqD,GAAA,OAAA0qD,EAAA/iE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,iBAAAC,MAAA,eAAAsmE,EAAArmE,EAAAC,IAAAC,KAEM,SAAA0D,IAAA,IAAA6N,EAAA9R,EAAAtB,KAAA,OAAA4B,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACH,OAAAxC,KAAKujB,SAAU,EAAK9d,EAAAjD,KAAA,EACQxC,KAAKmxD,aAAahuD,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,OAAjE2kE,OACA70D,EADa3N,EAAAvB,KACQgY,OAAO,SAAC7Y,GAAC,OAAM/B,EAAKie,SAAStZ,SAAS5C,EAAE,GAACoC,EAAAjD,KAAA,EAC9DxC,KAAKm5D,UACN+O,aAAa,CAAEvD,eAAgBvxD,IAAO5O,MAChC,kBAAM,IAAI,GAAC,OACtBxE,KAAKujB,SAAU,EAAM,wBAAA9d,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IACxB,gBAAAmoE,IAAA,OAAAH,EAAAhjE,MAAAhF,KAAAiF,UAAA,EAVA,IAUA,CAAAxD,IAAA,kBAAAC,MAAA,eAAA0mE,EAAAzmE,EAAAC,IAAAC,KAEM,SAAAwE,IAAA,IAAA+M,EAAA,OAAAxR,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAAAiE,SAAAjE,KAAA,EACyBxC,KAAKmxD,aAAahuD,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,OAAjE2kE,OACA70D,KAAO5S,EAAA6qC,QADM5kC,EAAAvC,KACeE,OAAOpE,KAAKuf,WAAU9Y,EAAAjE,KAAA,EAClDxC,KAAKm5D,UACN+O,aAAa,CAAEvD,eAAgBvxD,IAAO5O,MAChC,kBAAM,IAAI,GAAC,OACtBxE,KAAKujB,SAAU,EAAM,wBAAA9c,EAAA3B,OAAA,EAAAuB,EAAArG,KAAA,IACxB,gBAAAqoE,IAAA,OAAAD,EAAApjE,MAAAhF,KAAAiF,UAAA,EATA,MASA6iE,EAhCG,IAAAC,CAgCH,CAzCwC,GAAhCD,SAAgC,mBAAA7nE,iBAAhC6nE,GAAgC5nE,EAAAwI,4BAAAC,EAAAkxD,sBAAA35D,EAAAwI,4BAAAG,EAAAC,qBAAA,EAAhCg/D,EAAgC,UAAA5nE,EAAA,kCAAhC4nE,EAAgC3+D,UAAA,iCAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,q2BAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IAxGrCvJ,EAAAqN,yBAAA,QAAArN,CAAK,aAALA,CAAK,UAEmBA,EAAAuN,iBAAA,yCAAmCvN,EAAAsN,yBACnDtN,EAAAqN,yBAAA,aAAArN,CAA8B,cAChBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,KAGvBA,EAAAiS,qBAAA,EAAAm2D,EAAA,gBAqEApoE,EAAAqN,yBAAA,aAAArN,CAEC,cACyBA,EAAA8Q,qBAAA,0BAAStH,EAAAy+D,gBAAgB,GAC3CjoE,EAAAuN,iBAAA,wBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAAsBrN,EAAA8Q,qBAAA,0BAAStH,EAAA2+D,iBAAiB,GAC5CnoE,EAAAuN,iBAAA,yBACJvN,EAAAsN,wBAAAtN,KAGRA,EAAAiS,qBAAA,GAAAo2D,EAAA,yBAAAroE,EAAAomB,0EA9ESpmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,QAAArjB,CAAgB,WAAAiuB,EAAA,4QA+FpB25C,CAAgC,gQCjH7ChqE,EAAA,WACAyC,EAAAzC,EAAA,MAKAkc,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,OAWA0C,EAAA1C,EAAA,OAWA0qE,GAFA1qE,EAAA,MAEAA,EAAA,OAIA2qE,EAAA3qE,EAAA,OAIA4qE,EAAA5qE,EAAA,OAIA41D,EAAA51D,EAAA,MACAi/D,EAAAj/D,EAAA,OACA6qE,EAAA7qE,EAAA,MAKA8qE,EAAA9qE,EAAA,OAIA+qE,EAAA/qE,EAAA,kDAWa8B,uBAAqB,eAArBi6D,EAAqB,SAAAh5D,GAAAC,EAAA+4D,EAAAh5D,GAAA,IA6C7BioE,EA7C6B9nE,EAAAC,EAAA44D,GA+C9B,SAAAA,EACY14D,EACAmX,EACApX,GAA0B,IAAAI,EAAAvB,SAAAC,KAAA65D,IAElCv4D,EAAAN,EAAAO,KAAAvB,OAJQmB,OACAG,EAAAgX,UACAhX,EAAAJ,YAjDJI,EAAAynE,SAAW,IAAI/uD,EAAAqB,gBAAgB,GAE/B/Z,EAAA0nE,MAAQ,IAAIhvD,EAAAqB,gBAAgC,IAE5C/Z,EAAAswB,SAAW,IAAI5X,EAAAqB,iBAAyB,GAExC/Z,EAAA2nE,UAAY,IAAIjvD,EAAAqB,gBAAwB,OAEhC/Z,EAAA44D,KAAO54D,EAAK0nE,MAAMxtD,eAElBla,EAAAiiB,QAAUjiB,EAAKswB,SAASpW,eAExBla,EAAAs4D,SAAWt4D,EAAK2nE,UAAUztD,eAE1Bla,EAAAkE,SAAWlE,EAAKH,KAAKoX,gBAAgBpV,QACjD7C,EAAA4b,QAAO,SAAC7Y,GAAC,QAAOA,CAAC,MACjB/C,EAAAiyB,WAAU,SAAClvB,GAAC,SACR9C,EAAAgrC,cAAaloC,EAAEoQ,GAAI,qBAAqBtQ,QACpC7C,EAAA2yB,YAAW,SAAC5vB,GAAC,SAAK2W,EAAAO,IAAG,GAAoB,GAC5C,MAELja,EAAA0b,KAAI,SAAC3Y,GAAC,OAAMA,EAAEiU,SAAgC,EAAE,MAChDhX,EAAAwjB,KAAI,SAACzgB,GAAC,OACF/B,EAAKJ,UAAU4gC,KAAK,2BAA6B,MAADz+B,MAAG2vD,eAAc,MAErE1yD,EAAA+yB,aAAY,IAGA/xB,EAAAojE,aAAepjE,EAAKkE,SAASrC,QACzC7C,EAAA0b,KAAI,SAAC3Y,GAAC,OAAKA,EAAEqhE,cAAgB,EAAE,IAEnBpjE,EAAA6vD,aAAe7vD,EAAKkE,SAASrC,QACzC7C,EAAA0b,KAAI,SAAC3Y,GAAC,OAAKA,EAAEshE,gBAAkB,EAAE,IAG9BrjE,EAAA0S,KAAO,GAiBV1S,EAAK2R,aACD,WACA3R,EAAKH,KAAKoX,gBAAgBpF,UAAS,eAAA7M,EAAA3E,EAAAC,IAAAC,KAAC,SAAAC,EAAOoX,GAAa,IAAAghD,EAAA,OAAAt4D,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAChD0W,EAAG,CAAA5W,EAAAE,KAAA,QAAAF,SAAAE,KAAA,EACiBlB,EAAK4nE,mBAAmBhwD,EAAIzF,IAAG,OAA7CymD,EAAI53D,EAAA4B,KAA2C8X,IACjD,SAAC+W,GAAC,OAAK,IAAI2gC,EAAAU,aAAarhC,EAAE,GAE9BzxB,EAAK2nE,UAAUzmE,KACXlB,EAAKJ,UAAUyE,IAAI,iBACfuT,EAAI0gD,UACJ,OAERt4D,EAAK0nE,MAAMxmE,KAAK03D,GAAM,wBAAA53D,EAAAwC,OAAA,EAAAhD,EAAA,IAE7B,gBAAAub,GAAA,OAAA/W,EAAAtB,MAAAhF,KAAAiF,UAAA,EAZkC,KAarC3D,CACN,CAEAxB,SAAA+5D,EAAA,EAAAp4D,IAAA,cAAAkE,IAjCA,WAAsB,IAAAgoC,EAClB,OAAQ3tC,KAAKgU,MAAQhU,KAAKgU,QAA2B,QAAvB25B,EAAK3tC,KAAKmB,KAAK+U,gBAAQ,IAAAy3B,OAAA,EAAlBA,EAAoBl6B,GAC3D,GAAC,CAAAhS,IAAA,aAAAkE,IAED,WACI,IAAMu0D,EAAOl6D,KAAKgpE,MAAM/vD,WACxB,SAAOzY,EAAA6qC,QAAO6uB,EAAKl+C,IAAI,SAAC+W,GAAC,OAAKA,EAAEmJ,QAAQ,GAC5C,GAAC,CAAAz6B,IAAA,sBAAAC,OAAAonE,EAAAnnE,EAAAC,IAAAC,KA8BM,SAAA0D,EAA0B46B,GAAoB,IAAAgpC,EAAAzwD,EAAApB,EAAAnS,EAAAnF,KAAA,OAAA4B,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAC3CkW,SAAM1Y,KAAKsY,QAAQrD,KAGvB0zD,EAAA9J,4BAA6B,CAC3B/7D,KAAM,CACFw6D,KAAMt9D,KAAKipE,UAAUhwD,WACrBknB,QACA+5B,KAAMl6D,KAAKk6D,KACX32C,QAASvjB,KAAKujB,QACd47C,kBAAmB,SAAC97D,GAAC,OAAK8B,EAAKg6D,kBAAkB97D,EAAE,EACnDu8D,cAAe,SAACv8D,GAAC,OAAK8B,EAAKy6D,cAAcv8D,EAAE,KAEjDoC,EAAAjD,KAAA,EACoBwB,QAAQ+sC,KAAK,CAC/Br4B,EAAIM,kBAAkB8V,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEksB,MAAiB,IACrCjsB,YACLoV,EAAII,cAAcxV,cACpB,OALIgU,SAAO7R,EAAAvB,KAMbwU,EAAI1Q,QAAQvC,EAAA9B,OAAA,UACE,MAAP2T,GAAiB,QAAV6xD,EAAP7xD,EAASq6B,gBAAQ,IAAAw3B,OAAV,EAAPA,EAAmBhpC,QAASA,GAAK,wBAAA16B,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAC3C,SAAAopE,EAAAjyC,GAAA,OAAA2xC,EAAA9jE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,UAAAC,MAAA,eAAA2nE,EAAA1nE,EAEM,eAAA6E,EAAAxG,KAAcmc,EAAAlX,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqB,IAAIyuD,EAAAU,aAAc,OAAAxyD,IAAAC,KAAA,SAAAwE,IAAA,IAAAqS,EAAApB,EAAA4iD,EAAA5H,EAAA,OAAA1wD,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAClDkW,SAAMlS,EAAK8R,QAAQrD,KAGvBuzD,EAAAvS,2BAA4B,CAC1BnzD,KAAM,CACFqZ,OACAo6C,WAAY/vD,EAAK+vD,cAEvB9vD,EAAAjE,KAAA,EACoBwB,QAAQ+sC,KAAK,CAC/Br4B,EAAIM,kBAAkB8V,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEksB,MAAiB,IACrCjsB,YACLoV,EAAII,cAAcxV,cACpB,OALW,GAAPgU,EAAO7Q,EAAAvC,KAMW,SAApBoT,GAASiY,OAAiB,CAAA9oB,EAAAjE,KAAA,eAAAiE,EAAA9C,OAAA,iBACxBu2D,EAAO1zD,EAAKwiE,MAAM/vD,YAClBq5C,EAAQ4H,EAAK1sB,UAAU,SAACkyB,GAAG,OAAKA,EAAIjsD,KAAO0I,EAAK1I,EAAE,KAC3C,EACTymD,EAAK3sB,OAAO+kB,EAAO,EAAGh7C,EAAQq6B,SAASx1B,MAEvC+9C,EAAKjjC,KAAK3f,EAAQq6B,SAASx1B,MAE/B3V,EAAK8iE,WAAW9iE,EAAKrF,KAAK+U,SAASzC,GAAIymD,GAAM2F,KACzC,WACIr5D,EAAKwiE,MAAMxmE,KAAI6gB,EAAK62C,IACpBxhD,EAAI1Q,OACR,EACA,kBAAO0Q,EAAIM,kBAAkBuK,SAAU,CAAK,GAC9C,yBAAA9c,EAAA3B,OAAA,EAAAuB,EAAA,EA9BsDzE,EA8BtD,GACL,gBAAA43D,IAAA,OAAA6P,EAAArkE,MAAAhF,KAAAiF,UAAA,EAjCA,IAiCA,CAAAxD,IAAA,aAAAC,MAEM,SAAWya,GAAkB,IAAA/U,EAAApH,KAC1Bk6D,EAAOl6D,KAAKgpE,MAAM/vD,WAClBq5C,EAAQ4H,EAAK1sB,UAAU,SAACkyB,GAAG,OAAKA,EAAIjsD,KAAO0I,EAAK1I,EAAE,GACpD6+C,GAAS,EAAG4H,EAAK3sB,OAAO+kB,EAAO,EAAGn2C,GACjC+9C,EAAKjjC,KAAK9a,GACfnc,KAAKspE,WAAWtpE,KAAKmB,KAAK+U,SAASzC,GAAIymD,GAAM2F,KAAK,kBAC9Cz4D,EAAK4hE,MAAMxmE,KAAI6gB,EAAK62C,GAAM,EAElC,GAAC,CAAAz4D,IAAA,YAAAC,MAAA,eAAA6nE,EAAA5nE,EAEM,SACHwa,GAAkB,IAAA80B,EAAAjxC,KAClBq5D,EAAAp0D,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAyB,GAAS,OAAArD,IAAAC,KAAA,SAAAsF,IAAA,IAAAg0D,EAAAziD,EAAApB,EAAA4iD,EAAA5H,EAAA,OAAA1wD,IAAAS,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,OAE5B24D,YAAQ36D,EAAA6qC,QAAOlvB,EAAK8G,QAAQjH,IAAI,SAAC+W,GAAC,OAAKA,EAAE2F,KAAK,IAC9ChgB,EAAMu4B,EAAK34B,QAAQrD,KAGvBwzD,EAAAvN,iCAAkC,CAChCp4D,KAAM,CACFu4D,OAAQl/C,EACRk9C,SACA8B,WAEN9zD,EAAA7E,KAAA,EACoBwB,QAAQ+sC,KAAK,CAC/Br4B,EAAIM,kBAAkB8V,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEksB,MAAiB,IACrCjsB,YACLoV,EAAII,cAAcxV,cACpB,OALW,GAAPgU,EAAOjQ,EAAAnD,KAMW,SAApBoT,GAASiY,OAAiB,CAAAloB,EAAA7E,KAAA,eAAA6E,EAAA1D,OAAA,iBACxBu2D,EAAOjpB,EAAK+3B,MAAM/vD,YAClBq5C,EAAQ4H,EAAK1sB,UAAU,SAACkyB,GAAG,OAAKA,EAAIjsD,KAAO0I,EAAK1I,EAAE,KAC3C,EACTymD,EAAK3sB,OAAO+kB,EAAO,EAAGh7C,EAAQq6B,SAASx1B,MAEvC+9C,EAAKjjC,KAAK3f,EAAQq6B,SAASx1B,MAE/B80B,EAAKq4B,WAAWr4B,EAAK9vC,KAAK+U,SAASzC,GAAIymD,GAAM2F,KACzC,WACI5uB,EAAK+3B,MAAMxmE,KAAI6gB,EAAK62C,IACpBxhD,EAAI1Q,OACR,EACA,kBAAO0Q,EAAIM,kBAAkBuK,SAAU,CAAK,GAC9C,yBAAAlc,EAAAvC,OAAA,EAAAqC,EAAA,EAjCgCvF,EAiChC,GACL,gBAAAw3D,EAAA5zB,GAAA,OAAA+jC,EAAAvkE,MAAAhF,KAAAiF,UAAA,EAtCA,IAsCA,CAAAxD,IAAA,gBAAAC,MAAA,eAAA8nE,EAAA7nE,EAAAC,IAAAC,KAEM,SAAAqvC,EAAoBjuB,GAAyB,IAAAvK,EAAApB,EAAA,OAAA1V,IAAAS,KAAA,SAAAivC,GAAA,cAAAA,EAAA/uC,KAAA+uC,EAAA9uC,MAAA,OAC1CkW,SAAM1Y,KAAKsY,QAAQrD,KAGvB2zD,EAAAjD,mCAAoC,CAClC7iE,KAAM,CACFw6D,KAAMt9D,KAAKipE,UAAUhwD,WACrBgK,aAENquB,EAAA9uC,KAAA,EACoBwB,QAAQ+sC,KAAK,CAC/Br4B,EAAIM,kBAAkB8V,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEksB,MAAiB,IACrCjsB,YACLoV,EAAII,cAAcxV,cACpB,OALW,GAAPgU,EAAOg6B,EAAAptC,KAMW,SAApBoT,GAASiY,OAAiB,CAAA+hB,EAAA9uC,KAAA,eAAA8uC,EAAA3tC,OAAA,SAAS,IAAE,OACzC+U,SAAI1Q,QAAQspC,EAAA3tC,OAAA,SACL2T,EAAQq6B,SAAS1uB,SAAO,wBAAAquB,EAAAxsC,OAAA,EAAAosC,EAAAlxC,KAAA,IAClC,gBAAA4/D,EAAAn6B,GAAA,OAAA+jC,EAAAxkE,MAAAhF,KAAAiF,UAAA,EArBA,IAqBA,CAAAxD,IAAA,aAAAC,MAAA,eAAA+nE,EAAA9nE,EAAAC,IAAAC,KAEM,SAAAkwC,EAAiB51B,GAAkB,IAAA7E,EAAA4iD,EAAAwP,EAAA1pE,KAAA,OAAA4B,IAAAS,KAAA,SAAA8vC,GAAA,cAAAA,EAAA5vC,KAAA4vC,EAAA3vC,MAAA,OAAA2vC,SAAA3vC,KAAA,KAChBhC,EAAA6uB,kBAClB,CACI7tB,MAAO,uBACPumB,QAAO,qDAAA3jB,OAAuD+X,EAAKxI,KAAI,mBACvE2b,KAAM,CACFtc,KAAM,OACN22D,MAAO,iBACP5hD,QAAS,WAGjB/nB,KAAKsY,SACR,OAXY,GAYU,UAZjBhB,EAAO66B,EAAAjuC,MAYDqrB,OAAiB,CAAA4iB,EAAA3vC,KAAA,eAAA2vC,EAAAxuC,OAAA,iBAC7B2T,EAAQiM,QAAQ,6BACV22C,EAAOl6D,KAAKgpE,MAAM/vD,WAAWiD,OAAO,SAACwjD,GAAG,OAAKvjD,EAAK1I,KAAOisD,EAAIjsD,EAAE,GACrEzT,KAAKspE,WAAWtpE,KAAKmB,KAAK+U,SAASzC,GAAIymD,GAAM2F,KACzC,WACI6J,EAAKV,MAAMxmE,KAAI6gB,EAAK62C,IACpB5iD,EAAQtP,OACZ,EACA,kBAAMsP,EAAQiM,QAAQ,GAAG,GAC3B,wBAAA4uB,EAAArtC,OAAA,EAAAitC,EAAA/xC,KAAA,IACL,gBAAAy5D,EAAA/zB,GAAA,OAAA+jC,EAAAzkE,MAAAhF,KAAAiF,UAAA,EAzBA,IAyBA,CAAAxD,IAAA,eAAAC,MAAA,eAAAkoE,EAAAjoE,EAAAC,IAAAC,KAEM,SAAAgoE,EAAmB1tD,EAAoBk9C,GAAsB,IAAA/hD,EAAA4iD,EAAA4P,EAAA9pE,KAAA,OAAA4B,IAAAS,KAAA,SAAA6vC,GAAA,cAAAA,EAAA3vC,KAAA2vC,EAAA1vC,MAAA,OAAA0vC,SAAA1vC,KAAA,KAC1ChC,EAAA6uB,kBAClB,CACI7tB,MAAO,8BACPumB,QAAO,wDAAA3jB,OAA0Di1D,EAAO1lD,KAAI,YAAAvP,OAAW+X,EAAKxI,KAAI,MAChG2b,KAAM,CACFtc,KAAM,OACN22D,MAAO,iBACP5hD,QAAS,WAGjB/nB,KAAKsY,SACR,OAXY,GAYU,UAZjBhB,EAAO46B,EAAAhuC,MAYDqrB,OAAiB,CAAA2iB,EAAA1vC,KAAA,eAAA0vC,EAAAvuC,OAAA,iBAC7B2T,EAAQiM,QAAQ,qCACV22C,EAAOl6D,KAAKgpE,MAAM/vD,YACnBs0B,OACD2sB,EAAK1sB,UAAU,SAACkyB,GAAG,OAAKA,EAAIjsD,KAAO0I,EAAK1I,EAAE,GAC1C,EACA,IAAIigD,EAAAU,aAAYtkC,IAAA,GACT3T,GAAI,IACP8G,QAAS9G,EAAK8G,QAAQ/G,OAAO,SAACyjD,GAAG,OAAKA,EAAIlsD,KAAO4lD,EAAO5lD,EAAE,OAGlEzT,KAAKspE,WAAWtpE,KAAKmB,KAAK+U,SAASzC,GAAIymD,GAAM2F,KACzC,WACIiK,EAAKd,MAAMxmE,KAAI6gB,EAAK62C,IACpB5iD,EAAQtP,OACZ,EACA,kBAAMsP,EAAQiM,QAAQ,GAAG,GAC3B,wBAAA2uB,EAAAptC,OAAA,EAAA+kE,EAAA7pE,KAAA,IACL,gBAAAs5D,EAAAhnB,EAAAy3B,GAAA,OAAAH,EAAA5kE,MAAAhF,KAAAiF,UAAA,EAjCA,IAiCA,CAAAxD,IAAA,aAAAC,MAAA,eAAAsoE,EAAAroE,EAAAC,IAAAC,KAEM,SAAAooE,IAAA,IAAA/W,EAAAF,EAAAkH,EAAAiB,EAAAziD,EAAApB,EAAA4yD,EAAAlqE,KAAA,OAAA4B,IAAAS,KAAA,SAAA8nE,GAAA,cAAAA,EAAA5nE,KAAA4nE,EAAA3nE,MAAA,OAAA2nE,SAAA3nE,KAAA,EACkBxC,KAAKm/D,kBAAkBn/D,KAAKmB,KAAK+U,SAASzC,IAAG,OAA5Dy/C,SAAMiX,EAAAjmE,KAAAimE,EAAA3nE,KAAA,EACoBxC,KAAKwF,SAASrC,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,OAAA8mE,OAA/DpX,EAA+DmX,EAAAjmE,KAA/D8uD,cACFkH,EAAOl6D,KAAKgpE,MAAM/vD,WAClBkiD,KAAQ36D,EAAA6qC,WAAO7qC,EAAA4yB,SAAQ8mC,EAAKl+C,IAAI,SAAC+W,GAAC,OAAMA,EAAEmJ,UAAQ93B,OAAAif,EAAK0P,EAAEi7B,MAAI,KAC7Dt1C,EAAM1Y,KAAKsY,QAAQrD,KAGvByzD,EAAA3V,6BAA8B,CAC5BjwD,KAAM,CACFowD,SACAiI,QACAnI,gBACAI,UAAW,SAACp0C,GAAC,OAAKkrD,EAAKhC,aAAa,CAAElV,cAAeh0C,GAAI,KAE/DmrD,EAAA3nE,KAAA,GACoBwB,QAAQ+sC,KAAK,CAC/Br4B,EAAIM,kBAAkB8V,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEksB,MAAiB,IACrCjsB,YACLoV,EAAII,cAAcxV,cACpB,QALW,GAAPgU,EAAO6yD,EAAAjmE,KAMW,SAApBoT,GAASiY,OAAiB,CAAA46C,EAAA3nE,KAAA,gBAAA2nE,EAAAxmE,OAAA,kBAC9B3D,KAAKqqE,aAAarqE,KAAKmB,KAAK+U,SAASzC,GAAI6D,EAAQq6B,UAAUkuB,KACvD,kBAAMnnD,EAAI1Q,OAAO,EACjB,kBAAO0Q,EAAIM,kBAAkBuK,SAAU,CAAK,GAC9C,yBAAA4mD,EAAArlE,OAAA,EAAAmlE,EAAAjqE,KAAA,IACL,gBAAAsqE,IAAA,OAAAN,EAAAhlE,MAAAhF,KAAAiF,UAAA,EA7BA,IA6BA,CAAAxD,IAAA,aAAAC,MAAA,eAAA6oE,EAAA5oE,EAAAC,IAAAC,KAEM,SAAA2oE,IAAA,IAAA9xD,EAAApB,EAAA4iD,EAAAhhD,EAAAuxD,EAAA,OAAA7oE,IAAAS,KAAA,SAAAqoE,GAAA,cAAAA,EAAAnoE,KAAAmoE,EAAAloE,MAAA,OACGkW,SAAM1Y,KAAKsY,QAAQrD,KAAK4zD,EAAAjV,kCAAiC8W,EAAAloE,KAAA,EACzCwB,QAAQ+sC,KAAK,CAC/Br4B,EAAIM,kBAAkB8V,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEksB,MAAiB,IACrCjsB,YACLoV,EAAII,cAAcxV,cACpB,OALW,GAAPgU,EAAOozD,EAAAxmE,KAMW,SAApBoT,GAASiY,OAAiB,CAAAm7C,EAAAloE,KAAA,eAAAkoE,EAAA/mE,OAAA,iBAC9B+U,SAAIM,kBAAkBuK,QAAU,mBAC1B22C,EAAOl6D,KAAKgpE,MAAM/vD,WAClBC,EAAMlZ,KAAKmB,KAAK+U,SAChBu0D,KAAejqE,EAAA6qC,QAAO/zB,EAAQq6B,SAASvtC,OAAO81D,GAAO,MAAKwQ,EAAAloE,KAAA,GAC1DxC,KAAKspE,WAAWpwD,EAAIzF,GAAIg3D,GAAajmE,MAAO,SAACnB,GAC/C,QAAA7C,EAAAqU,aAAY,iCACZ6D,EAAI1Q,QACE3E,CACV,GAAE,SACF,EAAA7C,EAAAopC,eAAa,wCAAAxlC,OAC+BkT,EAAQq6B,SAAStsC,OAAM,oBAEnEqT,EAAI1Q,QAAQ,yBAAA0iE,EAAA5lE,OAAA,EAAA0lE,EAAAxqE,KAAA,IACf,gBAAA2qE,IAAA,OAAAJ,EAAAvlE,MAAAhF,KAAAiF,UAAA,EAxBA,IAwBA,CAAAxD,IAAA,aAAAC,MAEO,SAAWmqC,EAAiBquB,GAChC,SAAO35D,EAAAwrD,gBAAelgB,EAAS,CAC3Bp4B,GAAIo4B,EACJl4B,KAAM,WACN2D,QAAS4iD,EACTrmD,YAAW,qBAAAzP,OAAuBynC,KACnCvoC,WACP,GAAC,CAAA7B,IAAA,eAAAC,MAAA,eAAAkpE,EAAAjpE,EAAAC,IAAAC,KAEM,SAAAgpE,EAAmBrlE,GAA0B,OAAA5D,IAAAS,KAAA,SAAAyoE,GAAA,cAAAA,EAAAvoE,KAAAuoE,EAAAtoE,MAAA,OAAAsoE,SAAAtoE,KAAA,EACrBxC,KAAKwF,SAASrC,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,OAA5DynE,OAAYD,EAAAnnE,OAAA,YACXpD,EAAAwrD,gBAAe/rD,KAAKmB,KAAK+U,SAASzC,GAAI,CACzCA,GAAIzT,KAAKmB,KAAK+U,SAASzC,GACvBE,KAAM,oBACN2D,QAAOwY,IAAA,GAJOg7C,EAAA5mE,MAIiBsB,GAC/BqO,YAAW,yBAAAzP,OAA2BpE,KAAKmB,KAAK+U,SAASzC,MAC1DnQ,aAAW,wBAAAwnE,EAAAhmE,OAAA,EAAA+lE,EAAA7qE,KAAA,IACjB,gBAAAkoE,EAAA8C,GAAA,OAAAJ,EAAA5lE,MAAAhF,KAAAiF,UAAA,EAVA,IAUA,CAAAxD,IAAA,qBAAAC,MAAA,eAAAupE,EAAAtpE,EAAAC,IAAAC,KAEO,SAAAqpE,EAAyBr/B,GAAe,IAAAquB,EAAA,OAAAt4D,IAAAS,KAAA,SAAA8oE,GAAA,cAAAA,EAAA5oE,KAAA4oE,EAAA3oE,MAAA,OAAA2oE,SAAA3oE,KAAA,KACxBjC,EAAAgrC,cAAaM,EAAS,YAAYvoC,YAAW,OAA3D42D,OACMiR,EAAAxnE,OAAA,UADNu2D,EAAIiR,EAAAjnE,KACLoT,mBACkB8zB,MAAQ8uB,EAAO,IAAE,wBAAAiR,EAAArmE,OAAA,EAAAomE,EAAA,IAC3C,gBAAAhC,EAAAkC,GAAA,OAAAH,EAAAjmE,MAAAhF,KAAAiF,UAAA,EANA,IAMA,CAAAxD,IAAA,oBAAAC,MAAA,eAAA2pE,EAAA1pE,EAEM,eACHkqC,EAAA5mC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAkBjF,KAAKmB,KAAK+U,SAASzC,GAAE,OAAA7R,IAAAC,KAAA,SAAAypE,IAAA,IAAA9Y,EAAA,OAAA5wD,IAAAS,KAAA,SAAAkpE,GAAA,cAAAA,EAAAhpE,KAAAgpE,EAAA/oE,MAAA,OAAA+oE,SAAA/oE,KAAA,KAG7BjC,EAAAgrC,cAAaM,EAAS,mBAAmBvoC,YAAW,OADxDkvD,OAEG+Y,EAAA5nE,OAAA,UAFH6uD,EAAK+Y,EAAArnE,KAEToT,mBACsB8zB,MAASonB,EAAgB,IAAE,wBAAA+Y,EAAAzmE,OAAA,EAAAwmE,EAAA,EALZ1pE,EAKY,GACtD,gBAAAu9D,IAAA,OAAAkM,EAAArmE,MAAAhF,KAAAiF,UAAA,EATA,IASA,CAAAxD,IAAA,eAAAC,MAEO,SAAamqC,EAAiBqnB,GAClC,SAAO3yD,EAAAwrD,gBAAelgB,EAAS,CAC3Bp4B,GAAIo4B,EACJl4B,KAAM,kBACN2D,QAAS47C,EACTr/C,YAAW,4BAAAzP,OAA8BynC,KAC1CvoC,WACP,GAAC,CAAA7B,IAAA,iBAAAC,MAEM,SAAey+B,EAAsB2/B,GACxC,IAAIpmC,EAAQyG,EAAMzG,MACZ8xC,EAAQ9xC,EAAMxJ,KAChB,SAAC/T,GAAI,IAAAsvD,EAAAlM,EAAA,OACDpjD,EAAK1I,KAAOqsD,EAASrsD,KACL,QAAhBg4D,EAAA3L,EAAS78C,eAAO,IAAAwoD,OAAA,EAAhBA,EAAkBpmE,WACF,QADQk6D,EACpBpjD,EAAK8G,eAAO,IAAAs8C,OAAA,EAAZA,EAAcniC,OACV,SAACs0B,EAAGluC,GAAC,OACDkuC,GACCoO,EAAS78C,QAAQiN,KAAK,SAACyvC,GAAG,OAAKn8C,EAAE/P,KAAOksD,EAAIlsD,EAAE,GACzC,EACA,EAAE,EACZ,GACH,GAYb,OAVA+3D,EACQA,EAAcnU,UAAY,EAC3B39B,EAAQA,EAAMt1B,OAAO,CAClB,IAAIsvD,EAAAU,aAAYtkC,IAAA,GAAMgwC,GAAQ,IAAEzI,SAAU,OAElC,IAAI0F,EAAAmC,cAAapvC,IAAA,GAC5BqQ,GAAK,IACRzG,QACA5K,MAAO,OAGf,KAAC+qC,CAAA,CA7X6B,CAAQr5D,EAAAiI,cAA7BoxD,SAAqB,mBAAA55D,iBAArB45D,GAAoB35D,EAAAwd,mBAAA/U,EAAAG,qBAAA5I,EAAAwd,mBAAA7U,EAAAuQ,WAAAlZ,EAAAwd,mBAAA3U,EAAAH,iBAAA,EAApBixD,EAAqB,WAAA35D,EAAA,oCAArB25D,EAAoBl8C,QAApBk8C,EAAoBj8C,UAAAC,WAFjB,SAEHg8C,CAAqB,wFCnBrBj6D,aAAyB,CAClC,CAAE6T,GAAI,aAAcE,KAAM,qBAC1B,CAAEF,GAAI,cAAeE,KAAM,sBAC3B,CAAEF,GAAI,aAAcE,KAAM,uBAC1B,CAAEF,GAAI,aAAcE,KAAM,uBAC1B,CAAEF,GAAI,YAAaE,KAAM,2BACzB,CAAEF,GAAI,eAAgBE,KAAM,+BAC5B,CAAEF,GAAI,eAAgBE,KAAM,gBAC5B,CAAEF,GAAI,SAAUE,KAAM,6JCrD1B,IAAAnT,EAAA1C,EAAA,OAEA8L,GADA9L,EAAA,OACAA,EAAA,QACA+P,EAAA/P,EAAA,OACAwQ,EAAAxQ,EAAA,MACAkQ,EAAAlQ,EAAA,OACAuQ,EAAAvQ,EAAA,OACAyQ,EAAAzQ,EAAA,OACA2Q,EAAA3Q,EAAA,MACA0Q,EAAA1Q,EAAA,OACAmQ,EAAAnQ,EAAA,OAEAyM,EAAAzM,EAAA,OAEA07C,EAAA17C,EAAA,UAEAA,EAAA,OACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OAEAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,iBA8Ca8B,uBAAoB,eAApByM,EAAoBvM,EAAA,SAAAuM,IAAAtM,EAAAC,KAAAqM,EAAA,GAApBA,SAAoB,mBAAApM,iBAApBoM,EAAoB,EAApBA,EAAoB,UAAAnM,EAAA,iCAApBmM,MAAoB,UAAAnM,EAAA,qCAjBzBM,EAAAmZ,aACAtL,EAAA0B,cACAxB,EAAA2B,cACArC,EAAA+B,sBACA5B,EAAAsB,gBACAhB,EAAA0B,kBACAvB,EAAA4B,eACA7B,EAAA4B,iBACAxG,EAAAiC,YACAjC,EAAAwC,oBACAotC,EAAArqC,iBACAlB,EAAAsB,mBACAhF,EAAA4B,oBAKKE,CAAoB,qFCjFjCgrB,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,MAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,MAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,MAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,8FCfaA,oBAAgC,CACzC,CAAE6T,GAAI,UAAWE,KAAM,UAAW2b,KAAM,CAAEq6C,MAAO,kBAAoBrD,OAAQ,QAC7E,CAAE7yD,GAAI,WAAYE,KAAM,WAAY2b,KAAM,CAAEq6C,MAAO,mBAAqBrD,OAAQ,WAChF,CACI7yD,GAAI,YACJE,KAAM,YACN2b,KAAM,CAAEq6C,MAAO,oBACfrD,OAAQ,WAEZ,CAAE7yD,GAAI,QAASE,KAAM,QAAS2b,KAAM,CAAEq6C,MAAO,gBAAkBrD,OAAQ,WACvE,CACI7yD,GAAI,YACJE,KAAM,YACN2b,KAAM,CAAEq6C,MAAO,oBACfrD,OAAQ,WAEZ,CACI7yD,GAAI,YACJE,KAAM,YACN2b,KAAM,CAAEq6C,MAAO,oBACfrD,OAAQ,uNCrBhBxoE,EAAA,WACA0C,EAAA1C,EAAA,OACAwC,EAAAxC,EAAA,UACAA,EAAA,gLAeYoC,EAAAqN,yBAAA,UAAArN,CAOC,qBAPDA,CAOC,aAIWA,EAAA8Q,qBAAA,yBAAAG,GAAA,IAAAkhD,EAAAnyD,EAAAkR,wBAAA+wC,GAAAmQ,MAAAvwC,EAAA7hB,EAAAqR,wBAAA,UAAArR,EAAAsR,sBAAAuQ,EAAA2iD,aAAArS,GAAAlhD,EAAA,GAFJjR,EAAAsN,wBAAAtN,GAMJA,EAAAqN,yBAAA,cAAarN,EAAA8Q,qBAAA,uBAAAqhD,EAAAnyD,EAAAkR,wBAAA+wC,GAAAmQ,MAAAz8C,EAAA3V,EAAAqR,wBAAA,UAASrR,EAAAsR,sBAAAqE,EAAA61D,WAAArZ,GAAa,GAC/BnyD,EAAAqN,yBAAA,cAAUrN,EAAAuN,iBAAA,YAAMvN,EAAAsN,wBAAAtN,IAAW,sDALvBA,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAK,EAAAozD,aAAArS,GAAA,2BAfhBnyD,EAAAqN,yBAAA,YAIIrN,EAAAiS,qBAAA,EAAAw5D,EAAA,aAmBJzrE,EAAAsN,iEAfJtN,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,UAAAsB,EAAAmyD,aAAAxkE,CACE,eAAAqS,EAAA8a,UAAA,+DAeEntB,EAAAqN,yBAAA,cAAArN,CAGC,eAEOA,EAAAuN,iBAAA,oBACAvN,EAAAqN,yBAAA,cAGIrN,EAAA8Q,qBAAA,kBAAAG,GAAAjR,EAAAkR,wBAAAsoC,GAAA,IAAAt5B,EAAAlgB,EAAAqR,0BAAA,OAAUrR,EAAAsR,sBAAA4O,EAAAwrD,iBAAAz6D,GAAwB,GAHtCjR,EAAAsN,wBAAAtN,GAMJA,EAAAqN,yBAAA,eAAmCrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAsoC,GAAA,IAAAt7B,EAAAle,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAA4M,EAAAytD,UAAS,GACjD3rE,EAAAuN,iBAAA,gBACJvN,EAAAsN,yBACAtN,EAAAqN,yBAAA,eAAmCrN,EAAA8Q,qBAAA,mBAAA9Q,EAAAkR,wBAAAsoC,GAAA,IAAAljC,EAAAtW,EAAAqR,0BAAA,OAASrR,EAAAsR,sBAAAgF,EAAAs1D,kBAAiB,GACzD5rE,EAAAuN,iBAAA,oBACJvN,EAAAsN,wBAAAtN,EAAS,wBAGTA,EAAAqN,yBAAA,aAGIrN,EAAAyJ,oBAAA,oBACAzJ,EAAAqN,yBAAA,OAAGrN,EAAAuN,iBAAA,uCAAiCvN,EAAAsN,wBAAAtN,IAMvCN,+BAA4B,eAA5BmsE,EAA4B,WAIrC,SAAAA,EACY9xD,EACAmoC,GAAuDriD,EAAAC,KAAA+rE,GADvD/rE,KAAAia,SACAja,KAAAoiD,cALLpiD,KAAA0kE,aAAyB,GACzB1kE,KAAAujB,SAAU,CAKd,CAACzjB,SAAAisE,EAAA,EAAAtqE,IAAA,WAAAC,OAAAX,EAAAY,EAAAC,IAAAC,KAEG,SAAAC,IAAA,OAAAF,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,SAAAE,KAAA,EAEQxC,KAAKia,OAAOyqD,aAAavhE,QAAK7C,EAAA8b,MAAK,IAAI9Y,YAAW,UAAAhB,EAAAiC,GAAAjC,EAAA4B,KAAA5B,EAAAiC,GAAA,CAAAjC,EAAAE,KAAA,QAAAF,EAAAiC,GAAK,GAAE,OADpEvE,KAAK0kE,aAAYpiE,EAAAiC,GAAA,wBAAAjC,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAEpB,SAAA+E,IAAA,OAAAhE,EAAAiE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,UAAAC,MAEM,WACH1B,KAAK0kE,aAAaztC,KAAK,GAC3B,GAAC,CAAAx1B,IAAA,aAAAC,MAEM,SAAW4wD,GACdtyD,KAAK0kE,aAAan3B,OAAO+kB,EAAO,EACpC,GAEA,CAAA7wD,IAAA,mBAAAC,MAIO,SAAiBotB,GAAK,IAAAxtB,EAAAtB,KAEzB,GAAI8uB,EAAM+kC,OAAQ,CACd,IAAME,EAAOjlC,EAAM+kC,OAAOC,MAAM,GAEhC,GAAIC,EAAM,CACN,IAAMiY,EAAS,IAAI/X,WACnB+X,EAAO3X,WAAWN,EAAM,SACxBiY,EAAO9X,iBAAiB,OAAQ,SAAC+X,GAC7B,IAEwCn0C,EAFlC1kB,KACF5S,EAAA2zD,WAAW8X,EAAIC,WAAmBxkE,SAAW,GAAGqwB,EAAAC,EAChB5kB,GAAI,IAAxC,IAAA2kB,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MAA0C,CACtC92B,EAAKojE,aAAaztC,KADoBa,EAAAp2B,MAA7B47D,KACkB,CAC9B,OAAA1yC,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACD/2B,EAAKojE,gBAAelkE,EAAA6qC,QAAO/pC,EAAKojE,cAChC51C,EAAM+kC,OAAOnyD,MAAQ,EACzB,GACAsqE,EAAO9X,iBAAiB,QAAS,SAAC7wD,GAAC,SAC/B7C,EAAAqU,aAAY,sBAAsB,IAIlD,GAAC,CAAApT,IAAA,kBAAAC,MAAA,eAAAyqE,EAAAxqE,EAAAC,IAAAC,KAEM,SAAA0D,IAAA,IAAA6mE,EAAA,OAAAxqE,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACH,OAAAxC,KAAKujB,SAAU,EACT6oD,EAAgBpsE,KAAK0kE,aAAaxoD,OAAO,SAAC7Y,GAAC,OAAKA,GAAKA,EAAE4wC,MAAM,GAACxuC,EAAAjD,KAAA,EAC9DxC,KAAKia,OAAOiuD,aAAa,CAAExD,aAAc0H,IAAgB,OAC/DpsE,KAAKoiD,YAAYp6C,QAAQ,wBAAAvC,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAC5B,gBAAA8rE,IAAA,OAAAK,EAAAnnE,MAAAhF,KAAAiF,UAAA,EAPA,IAOA,CAAAxD,IAAA,YAAAC,MAEM,SAAUgvC,EAAav0B,GAC1B,OAAOu0B,CACX,KAACq7B,EApDG,IAAAhrE,CAoDH,CA3DoC,GAA5BgrE,SAA4B,mBAAA9rE,iBAA5B8rE,GAA4B7rE,EAAAwI,4BAAAC,EAAAkxD,sBAAA35D,EAAAwI,4BAAAG,EAAAw5C,cAAA,EAA5B0pB,EAA4B,UAAA7rE,EAAA,kCAA5B6rE,EAA4B5iE,UAAA,6BAAAG,MAAA,GAAAC,KAAA,EAAA+D,OAAA,m6BAAA9D,SAAA,SAAAC,EAAAC,MAAA,EAAAD,IA5DjCvJ,EAAAqN,yBAAA,WAAArN,CAAQ,QACAA,EAAAuN,iBAAA,uBAAiBvN,EAAAsN,yBACrBtN,EAAAqN,yBAAA,aAAArN,CAA8B,cAChBA,EAAAuN,iBAAA,WAAKvN,EAAAsN,wBAAAtN,KAGvBA,EAAAiS,qBAAA,EAAAk6D,EAAA,cAwBAnsE,EAAAiS,qBAAA,EAAAm6D,EAAA,gBAmBApsE,EAAAiS,qBAAA,EAAAo6D,EAAA,yBAAArsE,EAAAomB,yEA1CKpmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,QAAArjB,CAAgB,WAAAumB,GAyBhBvmB,EAAAwN,oBAAA,GAAAxN,EAAA+Q,qBAAA,QAAAvH,EAAA6Z,QAAA,oLA4BAwoD,CAA4B,sJCrEzC,IAAAx6C,EAAAzzB,EAAA,OAEA0uE,EAAA1uE,EAAA,OAIAkc,EAAAlc,EAAA,OACAyC,EAAAzC,EAAA,MACAwC,EAAAxC,EAAA,OAEM2uE,EAA+D,GAErE7sE,0BAAA,SAAgBklE,EACZj5B,GAGA,OAAKA,KACA4gC,EAAc5gC,IAHnB5mC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,MAIIwnE,EAAc5gC,IAAO,EAAItrC,EAAAgrC,cAAaM,EAAS,mBAAmB1oC,QAC9D7C,EAAA0b,KACI,SAAC3Y,GAAC,OACGA,EAAEiU,mBAAmB8zB,MAChB/nC,EAAEiU,QACF,EAAE,IAAsB,EAEtChX,EAAA2yB,YAAW,SAAC7N,GAAC,SAAKpL,EAAAO,IAAG,GAAwB,KAE9CkyD,EAAc5gC,KAAO,EAXP7xB,EAAAO,IAAG,GAY5B,EAEA3a,wBAAA,SAAgBy/D,EACZljD,EACAq2C,EACA1jC,GAEA,IACwBgJ,EADpB40C,GAAe,EAAK30C,EAAAC,EACLw6B,GAAK,QAAAv6B,EAAA,WAAE,IAAA00C,EAAfC,EAAI90C,EAAAp2B,MACX,GACIya,EAAK+f,WAAa0wC,EAAKj5D,MACvBwI,EAAK6xC,KAAK/nD,SAAS2mE,EAAKj5D,OACxBmb,EAAM7X,UAAUiZ,KAAK,SAAC7sB,GAAC,OAAKA,EAAE0Q,MAAM9N,SAAS2mE,EAAKj5D,KAAK,IAC5C,QAD6Cg5D,EACxD79C,EAAMjS,aAAK,IAAA8vD,GAAXA,EAAa54D,MAAM9N,SAAS2mE,EAAKj5D,OACnB,MAAdi5D,EAAKj5D,KACP,CACE,IACkCkpB,EAD9BgwC,EAAU,EAAE/vC,EAAA9E,EACQ40C,EAAKpa,OAAK,IAAlC,IAAA11B,EAAAlT,MAAAiT,EAAAC,EAAA3E,KAAAC,MAAoC,KAAzB00C,EAASjwC,EAAAn7B,MACVqQ,EAAO,IAAI0I,KAAKqU,EAAM/c,MAC5B,OAAQ+6D,EAAU,IACd,IAAK,YACDD,MAAWt7C,EAAA2jB,UACPz6B,KAAKuX,OAAG,EACRT,EAAAw7C,UAASh7D,EAAM+6D,EAAU,KAEvB,EACA,EACN,MACJ,IAAK,eACDD,MAAWt7C,EAAA0jB,SACPx6B,KAAKuX,OAAG,EACRT,EAAAw7C,UAASh7D,EAAM+6D,EAAU,KAEvB,EACA,EACN,MACJ,IAAK,aACDD,MAAWt7C,EAAA0jB,SAAQljC,KAAMwf,EAAAwmB,UAAShmC,EAAM+6D,EAAU,KAC5C,EACA,EACN,MACJ,IAAK,cACDD,MAAWt7C,EAAA2jB,UAASnjC,KAAMwf,EAAAwmB,UAAShmC,EAAM+6D,EAAU,KAC7C,EACA,EACN,MACJ,IAAK,aACDD,GACI/9C,EAAM9c,aAAYw6D,EAAAQ,iBAAgBF,EAAU,IACtC,EACA,EACV,MACJ,IAAK,aACDD,GACI/9C,EAAM9c,aAAYw6D,EAAAQ,iBAAgBF,EAAU,IACtC,EACA,EACV,MACJ,IAAK,eACDD,GACI/9C,EAAMs4C,IAAI,kBAAoB0F,EAAU,GAAK,EAAI,EACrD,MACJ,QACID,GAAW,EAAE,CAExB,OAAAjiD,GAAAkS,EAAA1X,EAAAwF,EAAA,SAAAkS,EAAAzE,GAAA,CACDq0C,EAAeG,GAAWD,EAAKpa,MAAMntD,SA1D7C,IAAA0yB,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MAAAH,GA4DC,OAAArN,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACD,OAAOq0C,CACX,mFClGAr1C,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,0ICLA,IAAAmK,EAAAjM,EAAA,OAEa8B,gCAA6BmK,EAAAkjE,SAAQ,OAAQ,IACtDljE,EAAAmjE,YAAW,SAAU,IACjBnjE,EAAAmsC,OAAM,CAAEi3B,QAAS,EAAG3lE,OAAQ,KAAG,EAC/BuC,EAAAqjE,SAAQ,OAAKrjE,EAAAmsC,OAAM,CAAEi3B,QAAS,EAAG3lE,OAAQ,UAC5C,EACDuC,EAAAmjE,YAAW,SAAU,IACjBnjE,EAAAmsC,OAAM,CAAEi3B,QAAS,EAAG3lE,OAAQ,OAAK,EACjCuC,EAAAqjE,SAAQ,OAAKrjE,EAAAmsC,OAAM,CAAEi3B,QAAS,EAAG3lE,OAAQ,SAIpC5H,oCAAiCmK,EAAAkjE,SAAQ,OAAQ,IAC1DljE,EAAAuzB,OAAM,UAAQvzB,EAAAmsC,OAAM,CAAEi3B,QAAS,EAAG3lE,OAAQ,QAAM,EAChDuC,EAAAuzB,OAAM,UAAQvzB,EAAAmsC,OAAM,CAAEi3B,QAAS,EAAG3lE,OAAQ,EAAG,iBAAkB,WAAS,EACxEuC,EAAAmjE,YAAW,mBAAiBnjE,EAAAqjE,SAAQ,2GCdxC,IAAMC,EAAgB,MAAC/nE,EAAW,KAAM,IAMxC1F,gBAAA,SAAgBgiC,EAAc5lB,GAC1B,IAAIsxD,EAAM,GACV,GAAItxD,EACA,QAAWva,KAAOua,EACVva,KAAOua,IAAQqxD,EAAcpnE,SAAS+V,EAAIva,MAC1C6rE,GAAG,GAAAlpE,OAAOkpE,EAAM,IAAM,IAAElpE,OAAG3C,EAAG,KAAA2C,OAAIs0C,mBAC9B18B,EAAIva,MAKpB,OAAO6rE,CACX,oKClBA,IAGIC,EAHJlqB,EAAAvlD,EAAA,OACAslD,EAAAtlD,EAAA,OAGI0vE,GAAe,EA8BU,SAAAC,aAAA9rE,EAAAC,IAAAC,KAA7B,SAAAC,EAA8B4rE,GAAe,OAAA9rE,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACtB,GADsBF,EAAAiC,GACrCmpE,EAAMC,WAASrrE,EAAAiC,GAAA,CAAAjC,EAAAE,KAAA,QAAAF,SAAAE,KAAA,EAAWkrE,EAAME,iBAAgB,OAAAtrE,EAAAiC,GAAAjC,EAAA4B,KAAA,WAAA5B,EAAAiC,GAAA,CAAAjC,EAAAE,KAAA,SAChD,SAAA6gD,EAAArgD,KAAI,QAAO,sCAAwCV,EAAAE,KAAA,EACvCkrE,EAAMG,iBAAgB,UAAAvrE,EAAA4B,KAAA,CAAA5B,EAAAE,KAAA,gBAAAF,EAAAqB,OAAA,kBAClC6pE,GAAe,KACfpqB,EAAA0qB,YACI,gDACA,UACA,kBAAM/nE,SAASyC,QAAQ,GACzB,yBAAAlG,EAAAwC,OAAA,EAAAhD,EAAA,KAETkD,MAAAhF,KAAAiF,UAAA,CAvCDrF,gBAAA,SAAgBmuE,IACZ,OAAOP,CACX,EAQA5tE,aAAA,SAAgB8G,EAAWgnE,GAAiD,IAAhC72C,EAAA5xB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmB,IACvDyoE,EAAMC,YACFJ,GAAQx2C,cAAcw2C,GAC1BA,EAAcS,YAAY,YACtB,EAAA3qB,EAAArgD,KAAI,QAAO,2BAUvB,SAIe6qE,EAAcxwD,GAAAowD,EAAAzoE,MAAAhF,KAAAiF,UAAA,CAbjB4oE,CAAeH,EACnB,EAAG72C,GAEX,EAEAj3B,kBAAA,SAAgBquE,IACRV,GAAQx2C,cAAcw2C,EAC9B,uJC7BA,IAAAvzD,EAAAlc,EAAA,kBAWa8B,eAAY,eAAZ6I,EAAY,WAHzB,SAAAA,IAAA1I,EAAAC,KAAAyI,GAKczI,KAAAkuE,QAAsC,GAEtCluE,KAAAmuE,WAAyC,GAEzCnuE,KAAAouE,eAEN,GAEepuE,KAAAquE,aAAe,IAAIr0D,EAAAqB,iBAAyB,GAE/Crb,KAAAkD,YAAclD,KAAKquE,aAAa7yD,eAEhD1b,SAAA2I,EAAA,EAAAhH,IAAA,iBAAAkE,IACA,WACI,OAAO3F,KAAKquE,aAAap1D,UAC7B,GAAC,CAAAxX,IAAA,cAAAC,MAEM,WACH1B,KAAKsuE,SACT,GAAC,CAAA7sE,IAAA,UAAAC,MAES,WACN,QAAWD,KAAOzB,KAAKkuE,QACfzsE,KAAOzB,KAAKkuE,SACZluE,KAAKmE,aAAa1C,GAG1B,QAAWA,KAAOzB,KAAKmuE,WACf1sE,KAAOzB,KAAKmuE,YACZnuE,KAAK+2B,cAAct1B,GAG3B,QAAWA,KAAOzB,KAAKouE,eACf3sE,KAAOzB,KAAKouE,gBACZpuE,KAAKuuE,MAAM9sE,EAGvB,GAEA,CAAAA,IAAA,UAAAC,MAMU,SAAQiS,EAAckmB,GAAmC,IAAAv4B,EAAAtB,KAAnBwuE,EAAAvpE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,IAC5D,KAAI0O,GAAQkmB,GAAMA,aAAc40C,UAO5B,MAAM,IAAIC,MACN/6D,EACM,6CACA,8CATV3T,KAAKmE,aAAawP,GAClB3T,KAAKkuE,QAAQv6D,GAAag7D,WAAW,WACjC90C,WACOv4B,EAAK4sE,QAAQv6D,EACxB,EAAG66D,EAQX,GAEA,CAAA/sE,IAAA,eAAAC,MAAA,SAAAktE,GAAA,SAAAzqE,EAAAkZ,GAAA,OAAAuxD,EAAA5pE,MAAAhF,KAAAiF,UAAA,CAAAd,SAAA0qE,SAAA,kBAAAD,EAAAC,UAAA,EAAA1qE,CAAA,EAIU,SAAawP,GACf3T,KAAKkuE,QAAQv6D,KACbxP,aAAanE,KAAKkuE,QAAQv6D,WACnB3T,KAAKkuE,QAAQv6D,GAE5B,IAEA,CAAAlS,IAAA,WAAAC,MAMU,SAASiS,EAAckmB,GAAmC,IAAnB20C,EAAAvpE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,IAC7D,KAAI0O,GAAQkmB,GAAMA,aAAc40C,UAI5B,MAAM,IAAIC,MACN/6D,EACM,8CACA,+CANV3T,KAAK+2B,cAAcpjB,GACnB3T,KAAKmuE,WAAWx6D,GAAaq6D,YAAY,kBAAMn0C,GAAI,EAAE20C,EAQ7D,GAEA,CAAA/sE,IAAA,gBAAAC,MAAA,SAAAotE,GAAA,SAAA/3C,EAAAI,GAAA,OAAA23C,EAAA9pE,MAAAhF,KAAAiF,UAAA,CAAA8xB,SAAA83C,SAAA,kBAAAC,EAAAD,UAAA,EAAA93C,CAAA,EAIU,SAAcpjB,GAChB3T,KAAKmuE,WAAWx6D,KAChBojB,cAAc/2B,KAAKmuE,WAAWx6D,WACvB3T,KAAKmuE,WAAWx6D,GAE/B,IAEA,CAAAlS,IAAA,eAAAC,MAKU,SAAaiS,EAAc46D,GACjCvuE,KAAKuuE,MAAM56D,GACX3T,KAAKouE,eAAez6D,GAAQ46D,CAChC,GAAC,CAAA9sE,IAAA,kBAAAC,MAES,SAAgBiS,GACtB,OACI3T,KAAKouE,eAAez6D,aAAiBqG,EAAA+0D,gBACnC/uE,KAAKouE,eAAez6D,EAE9B,GAEA,CAAAlS,IAAA,QAAAC,MAIU,SAAMiS,GACRA,KAAQ3T,KAAKouE,iBACTpuE,KAAKouE,eAAez6D,aAAiBqG,EAAA+0D,aACpC/uE,KAAKouE,eAAez6D,GAAc8J,cAC5Bzd,KAAKouE,eAAez6D,IAC1B3T,KAAKouE,eAAez6D,YAElB3T,KAAKouE,eAAez6D,GAEnC,GAEA,CAAAlS,IAAA,YAAAC,MACU,SAAUstE,GAChB,IAGsBl3C,EAHhBm3C,EAAO5kD,OAAOC,KAAKtqB,KAAKouE,gBAAgBlyD,OAAO,SAACgzD,GAAC,OACnDA,EAAEjpE,SAAS+oE,EAAS,GACtBj3C,EAAAC,EACgBi3C,GAAI,IAAtB,IAAAl3C,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MACIp4B,KAAKuuE,MADKz2C,EAAAp2B,MAEb,OAAAkpB,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACL,KAAC5vB,CAAA,CAhJoB,GAAZA,SAAY,mBAAAxI,iBAAZwI,EAAY,EAAZA,EAAY,WAAAvI,EAAA,oCAAZuI,EAAYkV,QAAZlV,EAAYmV,UAAAC,WAFT,SAEHpV,CAAY,+MCXzB,IAAA8oB,EAAAzzB,EAAA,OACAyjC,EAAAzjC,EAAA,OACAqxE,EAAArxE,EAAA,OACAulD,EAAAvlD,EAAA,OAoBA,SAASsxE,EAAUr9D,GACf,IAAMs9D,KAAWF,EAAAG,iBAAgBv9D,EAAM,OACvC,SAAA3N,UAAUmtB,EAAAgW,QAAO8nC,EAAU,YAAW,KAAAjrE,UAAImtB,EAAAgW,QAAO8nC,EAAU,UAAS,IACxE,CAEA,SAASE,EAAax9D,GAClB,SAAA3N,UAAUmtB,EAAAgW,QAAOx1B,EAAM,YAC3B,CA+FA,SAASy9D,EAAkBlC,GACvB,OAAOA,EACFlvC,QAAQ,MAAO,KACfA,QAAQ,MAAO,KACfA,QAAQ,SAAU,MAClBA,QAAQ,OAAQ,OAChBA,QAAQ,iBAAkB,MACnC,CApGAx+B,2BAAA,SAAgBmzC,EAAyBjkB,GAAe,IAAA2gD,EAAAC,EAAAC,EAC9CC,EAA0B,GAC1B/7D,EAAc27D,EAAiB,GAAAprE,OAAI0qB,EAAM6V,OACzC5+B,EAAWypE,EAAiB,GAAAprE,OAAI0qB,EAAM/oB,WAC5C6pE,EAAO34C,KAAK,CAAC,QAAS,cACtB24C,EAAO34C,KAAK,CAAC,UAAW,QACxB24C,EAAO34C,KAAK,CAAC,QAAS,WACtB24C,EAAO34C,KAAK,CAAC,MAAK,GAAA7yB,OAAK0qB,EAAM+gD,eAC7BD,EAAO34C,KAAK,CACR,UAAS,GAAA7yB,OACN,IAAIqW,KACHqU,EAAMuC,WAAUE,EAAA0C,YAAWnF,EAAM/c,MAAQ+c,EAAM/c,MACjD+9D,iBAENF,EAAO34C,KAAK,CACR,QAAO,GAAA7yB,OAEH0qB,EAAMuC,WACAE,EAAA4C,UAASrF,EAAM/c,OAAI,EACnBwf,EAAAqN,YAAW9P,EAAM/c,KAAoB,QAAhB09D,EAAE3gD,EAAM9c,gBAAQ,IAAAy9D,IAAI,IAAIK,iBAG3DF,EAAO34C,KAAK,CAAC,UAAS,GAAA7yB,OAAK0qB,EAAMttB,SACjCouE,EAAO34C,KAAK,CAAC,cAAepjB,IAC5B+7D,EAAO34C,KAAK,CAAC,WAAYlxB,IACzB,IAAM4O,GACa,QAAf+6D,EAAA5gD,EAAMjW,iBAAS,IAAA62D,OAAA,EAAfA,EAAiB/7D,QACP,QADWg8D,EACrB7gD,EAAMna,YAAI,IAAAg7D,OAAA,EAAVA,EAAY1oE,MAAM,OAClB6nB,EAAMgd,WACN,OACJ8jC,EAAO34C,KAAK,CACR,YAAW,MAAA7yB,OACLuQ,EAAI,YAAAvQ,OAAW0qB,EAAMna,MAAQma,EAAMgV,cAE7C,IAAMisC,EAAWH,EACZ5zD,IAAI,SAAA1V,GAAA,IAAA8B,EAAA8a,EAAA5c,EAAA,GAAO5E,EAAK0G,EAAA,YAAAhE,OAAPgE,EAAA,GAAmB,KAAAhE,OAAIs0C,mBAAmBh3C,GAAM,GACzDqT,KAAK,MACV,yCAAA3Q,OAA0C2rE,EAC9C,EAEAnwE,6BAAA,SAAgBizC,EAA2B/jB,GAAe,IAAAkhD,EAAAC,EAChDC,EAAMphD,EAAMuC,QAAUk+C,EAAeH,EACrC93D,EAAe,CACjB+P,OAAQ,WACR8oD,KAAMrhD,EAAMttB,MACZ8V,QAASwX,EAAM6V,KACf5+B,SAAU+oB,EAAM/oB,SAChBqqE,KAAK,EACLC,MAAK,GAAAjsE,OAAK8rE,EAAIphD,EAAM/c,MAAK,KAAA3N,OAAI8rE,KACzB3+C,EAAAqN,YAAW9P,EAAM/c,KAAoB,QAAhBi+D,EAAElhD,EAAM9c,gBAAQ,IAAAg+D,IAAI,OAG3CM,GAAUxhD,EAAMpY,WAAa,IAAIsF,IAAI,SAAC3Y,GAAM,OAAKA,EAAE2D,OAAS3D,CAAC,GAC7D4T,IACc,QAAfg5D,EAAAnhD,EAAM7X,iBAAS,IAAAg5D,GAAfA,EAAiB5qE,OAASypB,EAAM7X,UAAY,OAAS,CAAC6X,EAAMvV,SAC/DyC,IAAI,SAAC3Y,GAAM,OAAKA,GAAG2D,OAAS3D,CAAC,GAC/B,OAAIitE,EAAOjrE,QAAU4R,EAAU5R,UAC3BiS,EAAQ69B,OAAMkO,EAAAhY,QAAM,GAAAjnC,OAAAif,EAAKitD,GAAMjtD,EAAKpM,KAAYlC,QACpD,+CAAA3Q,UAAsDm9B,EAAAK,eAClDtqB,GAER,EAEA1X,gCAAA,SAAgB+yC,EACZ7jB,GACqC,IAAAyhD,EAAAC,EAAAC,EAArCz9D,EAAA/N,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAA6B,SAExB6pB,EAAM/c,OAAM+c,EAAM/c,KAAO0I,KAAKuX,OACnC,IAAMlvB,EAAY,CACdpE,KAAM,2BACNgyE,IAAK,WACLC,QAAS,IAAIl2D,KAAKqU,EAAM/c,MAAM+9D,cAC9Bc,SAAOr/C,EAAAqN,YAAW9P,EAAM/c,KAAoB,QAAhBw+D,EAAEzhD,EAAM9c,gBAAQ,IAAAu+D,IAAI,IAAIT,cACpDe,QAAS/hD,EAAMttB,MACfmjC,KAAM7V,EAAM6V,KACZ5+B,SAAU+oB,EAAM/oB,SAChB+qE,OAAqB,QAAfN,EAAE1hD,EAAMuC,eAAO,IAAAm/C,MAEnBF,GAAUxhD,EAAMpY,WAAa,IAAIsF,IAAI,SAAC3Y,GAAM,OAAKA,EAAE2D,OAAS3D,CAAC,GAC7D4T,IACc,QAAfw5D,EAAA3hD,EAAM7X,iBAAS,IAAAw5D,GAAfA,EAAiBprE,OAASypB,EAAM7X,UAAY,OAAS,CAAC6X,EAAMvV,SAC/DyC,IAAI,SAAC3Y,GAAM,OAAKA,GAAG2D,OAAS3D,CAAC,GAC/B,OAAIitE,EAAOjrE,QAAU4R,EAAU5R,UAC3BvC,EAAKiuE,MAAK1tB,EAAAhY,QAAM,GAAAjnC,OAAAif,EAAKitD,GAAMjtD,EAAKpM,KAAYlC,QAChC,WAAT/B,EAAiB,wDAAA5O,UACsCm9B,EAAAK,eACpD9+B,IACH,sDAAAsB,UACqDm9B,EAAAK,eAClD9+B,GAEd,+LC5HA8iC,EAAA9nC,EAAA,OAASusB,uCAAA,CAAA2mD,YAAA,EAAArrE,IAAA,kBAAAigC,EAAAn9B,YAAY,IACrB,IAAAwoE,EAAAnzE,EAAA,OAASusB,iDAAA,CAAA2mD,YAAA,EAAArrE,IAAA,kBAAAsrE,EAAAC,sBAAsB,IAC/B,IAAAC,EAAArzE,EAAA,OAASusB,yCAAA,CAAA2mD,YAAA,EAAArrE,IAAA,kBAAAwrE,EAAAC,cAAc,IACvB,IAAAC,EAAAvzE,EAAA,OAASusB,0CAAA,CAAA2mD,YAAA,EAAArrE,IAAA,kBAAA0rE,EAAAzoE,eAAe,IACxB,IAAA0oE,EAAAxzE,EAAA,OAASusB,wCAAA,CAAA2mD,YAAA,EAAArrE,IAAA,kBAAA2rE,EAAAC,aAAa,IACtB,IAAAC,EAAA1zE,EAAA,OAASusB,kCAAA,CAAA2mD,YAAA,EAAArrE,IAAA,kBAAA6rE,EAAAC,OAAO,IAEhBp6C,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,MAAA8B,GACAy3B,EAAAC,aAAAx5B,EAAA,OAAA8B,yMClBA9B,EAAA,WACAwC,EAAAxC,EAAA,UAEAA,EAAA,OACAA,EAAA,gDAEA8B,qBAAwCE,EAAA,SAAA4xE,IAAA3xE,EAAAC,KAAA0xE,EAAA,GAO3B9xE,wBAAqB,eAArB+xE,EAAqB,WAC9B,SAAAA,EACYnhE,EACAtP,EACAC,GAAyBpB,EAAAC,KAAA2xE,GAFzB3xE,KAAAwQ,UACAxQ,KAAAkB,YACAlB,KAAAmB,MACT,CAACrB,SAAA6xE,EAAA,EAAAlwE,IAAA,cAAAC,OAAAkwE,EAAAjwE,EAAAC,IAAAC,KAEG,SAAAC,IAAA,OAAAF,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAqB,OAAA,SACI3D,KAAK6xE,gBAAc,wBAAAvvE,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IAC7B,SAAAlB,IAAA,OAAA8yE,EAAA5sE,MAAAhF,KAAAiF,UAAA,KAAAxD,IAAA,UAAAC,MAAA,eAAAowE,EAAAnwE,EAAAC,IAAAC,KAEM,SAAA0D,IAAA,OAAA3D,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAA9B,OAAA,SACI3D,KAAK6xE,gBAAc,wBAAApsE,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAC7B,gBAAAhB,IAAA,OAAA8yE,EAAA9sE,MAAAhF,KAAAiF,UAAA,EAJA,IAIA,CAAAxD,IAAA,eAAAC,MAAA,eAAAqwE,EAAApwE,EAAAC,IAAAC,KAEO,SAAAwE,IAAA,IAAA+C,EAAA4oE,EAAA1wE,EAAAtB,KAAA,OAAA4B,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAAAiE,SAAAjE,KAAA,EACExC,KAAKmB,KAAK+B,YAAYC,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAAAmD,SAAAjE,KAAA,EACvDxC,KAAKkB,UAAUgC,YAAYC,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,OAAKA,CAAC,IAAGC,YAAW,OAC5D8F,SAAWpJ,KAAKkB,UAAUyE,IAAI,0BAA4B,IAC1DqsE,GAAgB5oE,EAAS8mB,KAAK,SAAC7sB,GAAC,OAClC/B,EAAKkP,QAAQ5C,IAAI3H,SAAS5C,EAAE,KAG5BrD,KAAKwQ,QAAQK,SAAS,CAAC,MAC1BpK,EAAA9C,OAAA,WACQquE,GAAY,wBAAAvrE,EAAA3B,OAAA,EAAAuB,EAAArG,KAAA,IACxB,gBAAA6xE,IAAA,OAAAE,EAAA/sE,MAAAhF,KAAAiF,UAAA,EAbA,MAaA0sE,EArBG,IAAAC,CAqBH,CA1B6B,GAArBD,SAAqB,mBAAA1xE,iBAArB0xE,GAAqBzxE,EAAAwd,mBAAA/U,EAAA0E,QAAAnN,EAAAwd,mBAAA7U,EAAAD,iBAAA1I,EAAAwd,mBAAA3U,EAAAD,qBAAA,EAArB6oE,EAAqB,WAAAzxE,EAAA,oCAArByxE,EAAqBh0D,QAArBg0D,EAAqB/zD,UAAAC,WAFlB,SAEH8zD,CAAqB,gGCblC,IAAApgD,EAAAzzB,EAAA,OAIA8B,mBAAA,SAAgBiwB,EAAiBvY,GAC7B,IAAI8Z,EAAkB9Z,EAAQ8Z,SAAW,GACzCA,SAAUA,EAAQ6gD,OAAO,GAAGC,cAAgB9gD,EAAQoJ,MAAM,IAC5C,GAAAp2B,OAAMgtB,EAAO,WAAAhtB,UAAUmtB,EAAAgW,QAAO,IAAI9sB,KAAKnD,EAAQ6N,KAAM,gBAAmB,iBAC1F,yhBCTA,IAAAvb,EAAA9L,EAAA,OAEAwC,EAAAxC,EAAA,OACAq0E,EAAAr0E,EAAA,OAiBIs0E,EAAY,MA4EhB,SAAgBvb,EAAUwb,GAA+B,IAAjBpqC,EAAAhjC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EACpD,OAAO+iC,KAAKC,MAAMD,KAAKmrB,UAAYkf,EAAOpqC,IAAUA,CACxD,CAmCsC,SAAAqqC,aAAA3wE,EAAAC,IAAAC,KAA/B,SAAAC,EACHgB,EACA6E,GAAiB,IAAA+Q,EAAA,OAAA9W,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEXkW,SAAM/Q,EAAOsN,KACfk9D,EAAAI,sBAAqBziD,IAAA,GAEdqiD,EAAAK,kBAAgB,IACnB1vE,UAEPR,EAAAiC,GAAAurB,EAAAxtB,EAAAguC,GAAAxgB,EAAAxtB,EAAAkuC,GAAA,GAAAluC,EAAAE,KAAA,EAEawB,QAAQ+sC,KAAK,CACnBr4B,EAAIM,kBAAkB8V,MACjB3rB,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,MAAkB,SAAbA,EAAEksB,MAAiB,IACrCjsB,YACLoV,EAAII,cAAcxV,cACpB,OAAAhB,SAAAmuC,GAAAnuC,EAAA4B,KAAA5B,EAAAmwE,MAAAnwE,EAAAguC,IAAAhuC,EAAAkuC,GAAAluC,EAAAmuC,IAAAnuC,EAAAowE,GAAA,GAAApwE,EAAAqwE,GAAA,CACFpvD,QAAS,SAACqG,GAAC,OAAMlR,EAAIM,kBAAkBuK,QAAUqG,CAAC,EAClD5hB,MAAO,kBAAM0Q,EAAI1Q,OAAO,GAAA1F,EAAAqB,OAAA,YAAArB,EAAAiC,IAAAjC,EAAAmwE,GAAAnwE,EAAAowE,GAAApwE,EAAAqwE,KAAA,yBAAArwE,EAAAwC,OAAA,EAAAhD,EAAA,KAE/BkD,MAAAhF,KAAAiF,UAAA,CApIDrF,aAAA,SAAgB8F,EAAWiO,GACvBy+D,EAAYz+D,CAChB,EAUA/T,MAAA,SAAgBoD,EACZgQ,EACA4/D,EACAC,GAG4B,IAF5BC,EAAA7tE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAwB,QAExB8tE,EAAA9tE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmBmtE,EAEnB,IAAIzvE,OAAOqwE,OACPrwE,OAAOswE,OAJXhuE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,IAI2B,CACvB,IAKUiuE,EAMHC,EAXDC,EAAmB,CACrB,iBACA,iBACA,kBAEAP,GACAK,EAAAzwE,SAAQqwE,GAAO9tE,MAAAkuE,EAAA,OAAA9uE,OACL2uE,EAAQ,QAAA3uE,OAAO4O,EAAI,QAAA5O,OAAOwuE,IAAGxuE,OAChCgvE,EAAM,CACTP,MAGJM,EAAA1wE,SAAQqwE,GAAO9tE,MAAAmuE,EAAA,OAAA/uE,OAAO2uE,EAAQ,QAAA3uE,OAAO4O,EAAI,QAAA5O,OAAOwuE,IAAGxuE,OAAOgvE,GAAM,CAG5E,EAOAxzE,kBAAA,SAAgByzE,EAAgB/oD,EAAgBtO,GAC5C,IAAMva,EAAM6oB,EAAK,GACjB,OAAItO,GAAOva,KAAOua,EACPsO,EAAKjlB,OAAS,EACfguE,EAAgB/oD,EAAKkQ,MAAM,GAAIxe,EAAIva,IAAQ,IAC3Cua,EAAIva,GAEP,IACX,EAOA7B,SAAA,SAAgByrC,IAAiD,IAAhB5pC,EAAAwD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAc,GACrDqlB,EAAO,GACb,OAF4BrlB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAa,IAE5BiX,OAAO,SAACo3D,GACjB,IAAM7/D,EAAKhS,EAAM6xE,EAAG7xE,GAAO6xE,EACrBC,EAASjpD,EAAKrkB,SAASwN,GAC7B,OAAK8/D,GAAQjpD,EAAK2M,KAAKxjB,IACf8/D,CACZ,EACJ,EAOA3zE,YAAAi3D,EASAj3D,YAAA,SAAgB4zE,EAAUlG,GAAwC,IAAlBjoE,EAAAJ,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,EAE7D,IADAqoE,EAAG,GAAAlpE,OAAMkpE,GACFA,EAAIjoE,OAASA,GAAQioE,EAAG,IAAAlpE,OAAOkpE,GACtC,OAAOA,CACX,EAOA1tE,eAAA,SAAgB0mD,EACZjhD,GAIA,QAHAouE,EAAAxuE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,gEAEZqoE,EAAM,GACDv6C,EAAI,EAAGA,EAAI1tB,EAAQ0tB,IACxBu6C,GAAOmG,EAAM5c,EAAU4c,EAAMpuE,SAEjC,OAAOioE,CACX,EAQA1tE,mBARC,SAQqByvB,EAAgBhS,EAAA8Z,GAAA,OAAAm7C,EAAAttE,MAAAhF,KAAAiF,UAAA,EA2BtCrF,YAAA,SAAgBu0D,EAAUuf,GAOtB,QANMC,EAAa,IAAIC,OACnB,+DACA,MAEAC,EAAa,KACXC,EAAU,CAAC,IACTD,EAAaF,EAAWI,KAAKL,IAC7BG,EAAW,GAAGxuE,QAA4B,MAAlBwuE,EAAW,IAAYC,EAAQ78C,KAAK,IAChE68C,EAAQA,EAAQzuE,OAAS,GAAG4xB,KACxB48C,EAAW,GACLA,EAAW,GAAGz1C,QAAQ,IAAIw1C,OAAO,KAAM,KAAM,KAC7CC,EAAW,IAGzB,IAAMG,EAAoBF,EAAQvmC,OAAO,EAAG,GAAG,GAe/C,OAdiBumC,EAAQ93D,IAAI,SAACi4D,GAE1B,QADMx+B,EAAU,GACP1iB,EAAI,EAAGA,EAAIkhD,EAAI5uE,OAAQ0tB,IAAK,CACjC,IAAMtxB,GAAOuyE,EAAQjhD,IAAM,IAAI9rB,MAAM,KAAK8N,KAAK,KAAK2e,cACpD,IACI+hB,EAAQh0C,GAAOgD,KAAKmyB,MAAMq9C,EAAIlhD,GAAGqL,QAAQ,IAAK,YAE9CqX,EAAQh0C,GAAOwyE,EAAIlhD,IAAM,IAER,SAAjB0iB,EAAQh0C,IAAoC,UAAjBg0C,EAAQh0C,MACnCg0C,EAAQh0C,GAAwB,SAAjBg0C,EAAQh0C,GAAS,CAExC,OAAOg0C,CACX,EAEJ,EAEA71C,6BAAA,SAAgBs0E,EAA2BplD,GAAiB,IAAAxtB,EAAAtB,KACxD,OAAO,IAAIgE,QAAgB,SAACC,EAASkwE,GAEjC,GAAIrlD,EAAM+kC,OAAQ,CACd,IAAMpe,EAAU3mB,EAAM+kC,OAChBE,EAAOte,EAAQqe,MAAM,GAE3B,GAAIC,EAAM,CACN,IAAMiY,EAAS,IAAI/X,WACnB+X,EAAO3X,WAAWN,EAAM,SACxBiY,EAAO9X,iBAAiB,OAAQ,SAAC+X,GAC7BhoE,EAASgoE,EAAIC,WAAmBxkE,QAChC+tC,EAAQ/zC,MAAQ,EACpB,GACAsqE,EAAO9X,iBAAiB,QAAS,SAAC7wD,GAC9B/B,EAAKiiB,QAAU,GACf4wD,EAAO,CAAC,qBAAsB9wE,GAClC,EAAC,EAGb,EACJ,EAMAzD,YAAA,SAAgBw0E,EAAUC,GACtB,GAAIA,aAAgBjpC,OAASipC,EAAKhvE,OAAS,EAAG,CAC1C,IACMivE,EADOjqD,OAAOC,KAAK+pD,EAAK,IACNn4D,OAAO,SAACza,GAAG,OAAKA,KAAO4yE,EAAK,EAAE,GACtD,SAAAjwE,OAAUkwE,EAAWv/D,KAAK,KAAI,MAAA3Q,OAAKiwE,EAC9Br4D,IAAI,SAACG,GAAI,OACNm4D,EACKt4D,IAAI,SAACva,GAAG,OAAKgD,KAAKC,UAAUyX,EAAK1a,IAAM28B,QAAQ,IAAK,IAAI,GACxDrpB,KAAK,IAAI,GAEjBA,KAAK,MAAK,CAEnB,MAAO,EACX,EAOAnV,eAAA,SAAgB00D,EAAaigB,EAAkBC,GAC3C,IAAM/+B,EAAUO,SAASC,cAAc,KACvCR,EAAQg/B,aACJ,OACA,iCAAmC/7B,mBAAmB87B,IAE1D/+B,EAAQg/B,aAAa,WAAYF,GAEjC9+B,EAAQS,MAAM9tB,QAAU,OACxB4tB,SAASrR,KAAK0R,YAAYZ,GAE1BA,EAAQi/B,QAER1+B,SAASrR,KAAK+R,YAAYjB,EAC9B,EAEA71C,WAAA,SAAgB+0E,EAASjxE,GACrB,IACMkxE,EADYlxE,EAAMuD,MAAM,KAAK,GACVm3B,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KACpDy2C,EAAcC,mBAChBC,KAAKH,GACA3tE,MAAM,IACN+U,IAAI,SAAC01C,GACF,MAAO,KAAO,KAAOA,EAAEsjB,WAAW,GAAGnG,SAAS,KAAKr0C,OAAM,EAC7D,GACCzlB,KAAK,KAEd,OAAOtQ,KAAKmyB,MAAMi+C,EACtB,EAOAj1E,UAAA,SAAgBwzB,EAAiB6hD,GAG7B,QAFMC,EAAK7xD,EAAO4xD,GACZE,EAAM,GACLD,EAAM7vE,QAAQ,CAEjB,IAAM7C,EAAO0yE,EAAMnoC,MACf3B,MAAMgqC,QAAQ5yE,GAEd0yE,EAAMj+C,KAAIjyB,MAAVkwE,EAAK7xD,EAAS7gB,IAEd2yE,EAAIl+C,KAAKz0B,EAAI,CAIrB,OAAO2yE,EAAIE,SACf,EASAz1E,uBAAA,SAAgB01E,EAAqBC,EAAQC,EAAMC,EAAQC,GACvD,OACKH,GAAUE,GAAUF,EAASG,GAC7BF,EAAOC,GAAUD,EAAOE,GACxBD,GAAUF,GAAUE,EAASD,GAC7BE,EAAOH,GAAUG,GAAQF,CAElC,EAEA,IACMG,EAmBN,SAASC,EAAMjiD,EAAG3U,EAAG0yC,EAAG34C,GACpB,OAAO,WAKH,IAAI9Y,GAJJ0zB,KAAO,IACP3U,KAAO,GAGW,EAClB2U,SAAI3U,EAAKA,IAAM,EACfA,GAJA0yC,KAAO,IAIGA,GAAK,GAAM,EAIrBA,GAHAA,EAAKA,GAAK,GAAOA,IAAM,KAEvBzxD,EAAKA,GADL8Y,EAAS,GALTA,KAAO,GAKO,GACA,GACA,GACN9Y,IAAM,GAAK,UACvB,CACJ,CAlCa21E,CAAM,WAAY,UAAY,WAO3C,SAASC,EAAMvI,GAEX,QADIwI,EAAI,WAAaxI,EAAIjoE,OAChB0tB,EAAI,EAAGA,EAAIu6C,EAAIjoE,OAAQ0tB,IAEvB+iD,GADJA,EAAI9tC,KAAK+tC,KAAKD,EAAIxI,EAAI0H,WAAWjiD,GAAI,cACvB,GAAO+iD,IAAM,GAChC,OAAO,WACHA,SAAI9tC,KAAK+tC,KAAKD,EAAKA,IAAM,GAAK,YAC9BA,EAAI9tC,KAAK+tC,KAAKD,EAAKA,IAAM,GAAK,aACtBA,GAAKA,IAAM,MAAQ,CAC/B,CACJ,CAlBaD,CAAM,UACoCG,IA0CvD,SAAgBC,IACZ,IACMC,GADO,IAAIz7D,MAEZC,mBACGs7B,SAASmgC,cAAc,QAAQC,aAAa,SACxCC,UAAUC,UAEjB5iD,cACL,OAAOwiD,EAAatf,QAAQ,MAAQ,GAAKsf,EAAatf,QAAQ,MAAQ,CAC1E,CAjDAh3D,uBAAA,SAAgB22E,IAA0D,IAArClE,EAAAptE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAe,IAAKgjC,EAAAhjC,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,EACrE,OAAO+iC,KAAKC,MAAM0tC,KAAUtD,EAAOpqC,IAAUA,CACjD,EAiCAroC,mBAAA,SAAgB42E,IACZ,OAAOP,IAAiB,QAAU,QACtC,EAGAr2E,eAAAq2E,EAWAr2E,mBAAA,SAAgBkV,EAAiBpE,GAAoC,IAAnB+lE,EAAAxxE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,GAC3D0vD,EAAU,GACd,QAAWlzD,KAAOiP,EAAKuU,SACfvU,EAAKuU,SAASxjB,aAAgBmI,EAAAk2B,UAC9B60B,EAAO,GAAAvwD,OAAAif,EACAsxC,GAAOtxC,EACPvO,EAAiBpE,EAAKuU,SAASxjB,GAAiB,GAAA2C,OAAK3C,EAAG,QAEvDiP,EAAKuU,SAASxjB,GAAKmT,OAC3B+/C,EAAQ19B,KAAI,GAAA7yB,OAAIqyE,GAAMryE,OAAG3C,IAGjC,OAAOkzD,CACX,EAEA/0D,oBAAA,SAAgBi1C,EAAkB6hC,GAC9B,QAAWj1E,KAAOi1E,GACVA,QAAIj1E,IAAwD,KAAbi1E,EAAIj1E,YAC5Ci1E,EAAIj1E,EAGvB,EAEA7B,wBAAA,SAAgBo0C,EAAsB2iC,GAClC,SAAAvyE,OAAUuyE,EAAK,GAAGzE,eAAa9tE,OAAGuyE,EAAKC,UAAU,GACrD,EAEAh3E,aAAA,SAAgBi3E,EACZ55D,GAC4C,IAA5C65D,EAAA7xE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuB,MAACK,EAAW,KAAM,IAEzC,OAAO2X,EAAMf,OAAO,SAAC7Y,GAAC,OAAMyzE,EAAc7wE,SAAS5C,EAAE,EACzD,EAEAzD,iBAAA,SAAgBm3E,IACZ,MACI,CACI,iBACA,mBACA,iBACA,OACA,SACA,QACF9wE,SAASowE,UAAUW,WAEpBX,UAAUY,UAAUhxE,SAAS,QAAU,eAAgB+vC,QAEhE,EAEAp2C,gBAAA,SAAgBs3E,IACZ,OAAOv0E,OAAOoD,WAAapD,OAAO04D,OAAOt1D,QAC7C,iKC5ZAjI,EAAA,WACAulD,EAAAvlD,EAAA,6BAca8B,yBAAsB,eAAtBsxE,EAAsB,WAe/B,SAAAA,EAAoB1vE,GAAYzB,EAAAC,KAAAkxE,GAAZlxE,KAAAwB,QATbxB,KAAAiN,SAAU,EAEVjN,KAAA+yE,SAAW,SAKV/yE,KAAAm3E,OAAqC,EAEV,CAACr3E,SAAAoxE,EAAA,EAAAzvE,IAAA,OAAAC,MAE7B,WAA6B,IAAxB01E,EAAAnyE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAsB,GACzBtC,OAAO00E,OACR10E,OAAO20E,UAAY30E,OAAO20E,WAAa,GACtC,SAAUC,EAAGx+D,EAAG6Q,EAAG0M,EAAGvD,GACnBwkD,EAAEjhD,GAAKihD,EAAEjhD,IAAM,GACfihD,EAAEjhD,GAAGW,KAAK,CACN,iBAAiBxc,MAAOu6B,UACxBlmB,MAAO,WAEX,IAAIuJ,EAAItf,EAAEy+D,qBAAqB5tD,GAAG,GAC9B6tD,EAAI1+D,EAAEk9B,cAAcrsB,GAExB6tD,EAAEC,OAAQ,EACVD,EAAEE,IAAM,8CAAgD5kD,EACxDsF,EAAEu/C,WAAWC,aAAaJ,EAAGp/C,EACjC,CAZC,CAYE11B,OAAQqzC,SAAU,SAAU,YAAaohC,IAAW,EACvD/zB,EAAArgD,KAAI,YAAa,UAAW,wCAEhChD,KAAK83E,QAAUn1E,OAAO00E,IAC1B,GAAC,CAAA51E,IAAA,OAAAC,MAEM,SAAKg1E,GACR/zE,OAAO20E,UAAUrgD,KAAKy/C,EAC1B,GAEA,CAAAj1E,IAAA,OAAAC,MAIO,SAAK01E,GACR,IAAKp3E,KAAKiN,QACN,MAAM,IAAIyhE,MACN,iEAGR,IAAK1uE,KAAK83E,QACN,MAAM,IAAIpJ,MACN,wDAGR,EAAArrB,EAAArgD,KAAI,YAAa,UAAS,2BAAAoB,OAA6BgzE,IACvDp3E,KAAK+3E,KAAK,GACd,GACA,CAAAt2E,IAAA,UAAAC,MAIO,SAAQ+R,GAAU,IAAAnS,EAAAtB,KACrB,IAAKA,KAAK83E,QACN,MAAM,IAAIpJ,MACN,uDAGJ1uE,KAAKiN,SACLjN,KAAK6D,QAAO,QAAAO,OACAqP,GACR,YACI,EAAA4vC,EAAArgD,KAAI,YAAa,UAAS,gBAAAoB,OAAkBqP,IAC5CnS,EAAKw2E,QAAQ,MAAO,SAAUrkE,GAC9BnS,EAAKwtB,MAAM,iBAAkB,oBACjC,EACA,IAGZ,GAAC,CAAArtB,IAAA,OAAAC,MAEM,SAAKsR,EAActR,GAA0B,IAAAyD,EAAAnF,KAChD,IAAKA,KAAK83E,QACN,MAAM,IAAIpJ,MACN,uDAGJ1uE,KAAKiN,SACLjN,KAAK6D,QAAO,OAAAO,OAAQ4O,GAAQ,WACxB7N,EAAK8xB,KAAInH,IAAA,GACFpuB,GAAK,IACRotB,MAAO,UAEf,EAER,GAEA,CAAArtB,IAAA,QAAAC,MAOO,SACHw6B,EACA7U,EACA2wD,EACAt2E,GAAc,IAAA8E,EAAAxG,KAEd,IAAKA,KAAK83E,QACN,MAAM,IAAIpJ,MACN,uDAGJ1uE,KAAKiN,SACLjN,KAAK6D,QAAO,SAAAO,OACC83B,EAAQ,KAAA93B,OAAIijB,EAAM,KAAAjjB,OAAI4zE,EAAK,KAAA5zE,OAAI1C,GACxC,WACI,IAAM40B,EAAI0hD,EAAQ,KAAOA,EAAQ,IACjC,EAAA30B,EAAArgD,KACI,YACA,UAAS,UAAAoB,OACC83B,EAAQ,MAAA93B,OAAKijB,GAAMjjB,OAAGkyB,GAAClyB,OAC7B1C,EAAQ,KAAOA,EAAQ,KAI/B8E,EAAKywB,KAAK,CACNnI,MAAO,QACPoN,SAAUA,EACV7U,OAAQA,EACR2wD,MAAOA,GAEf,EACA,IAGZ,GAEA,CAAAv2E,IAAA,SAAAC,MAKO,SAAOiS,EAAco/D,GAAiB,IAAA3rE,EAAApH,KACzC,IAAKA,KAAK83E,QACN,MAAM,IAAIpJ,MACN,uDAGJ/6D,GAAQ3T,KAAKiN,SACbjN,KAAK6D,QAAO,SAAAO,OACCuP,EAAI,KAAAvP,OAAI2uE,GAAY/yE,KAAK+yE,UAClC,YACI,EAAA1vB,EAAArgD,KACI,YACA,UAAS,WAAAoB,OACEuP,GAAIvP,OAAG2uE,EAAW,KAAOA,EAAW,KAEnD3rE,EAAK6vB,KAAK,CACNnI,MAAO,aACPmpD,QAASlF,GAAY3rE,EAAK2rE,SAC1BmF,WAAYvkE,GAEpB,EACA,IAGZ,GAEA,CAAAlS,IAAA,OAAAC,MAKO,SAAKy2E,GAAsC,IAAAlnC,EAAAjxC,KAAvBgG,EAAAf,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GACvB,IAAKjF,KAAK83E,QACN,MAAM,IAAIpJ,MACN,uDAGJ1uE,KAAKiN,UACLjN,KAAKo4E,WAAaD,GAAS,IAC3Bn4E,KAAK6D,QAAO,QAAAO,OACA+zE,GACR,YACI,EAAA90B,EAAArgD,KAAI,YAAa,UAAS,SAAAoB,OAAW+zE,IACrClnC,EAAKha,KAAK,CACNnI,MAAO,WACPlhB,IAAG,GAAAxJ,OAAK4B,EAASD,SAASC,OAAS,IAAE5B,OAAG+zE,IAEhD,EACA,KAGZ,GAEA,CAAA12E,IAAA,SAAAC,MAOO,SACHw6B,EACAm8C,EACA32E,EACAs2E,GAAc,IAAAtO,EAAA1pE,KAEd,IAAKA,KAAK83E,QACN,MAAM,IAAIpJ,MACN,uDAGJ1uE,KAAKiN,SACLjN,KAAK6D,QAAO,QAAAO,OACA83B,EAAQ,KAAA93B,OAAIi0E,EAAQ,KAAAj0E,OAAI1C,EAAK,KAAA0C,OAAI4zE,GACzC,YACI,EAAA30B,EAAArgD,KACI,YACA,UAAS,WAAAoB,OACE83B,EAAQ,MAAA93B,OAAKi0E,EAAQ,MAAAj0E,OAAK1C,GAAK0C,OACtC4zE,EAAQ,KAAOA,EAAQ,KAG/BtO,EAAKzyC,KAAK,CACNnI,MAAO,SACPoN,WACAm8C,WACA32E,QACAs2E,SAER,EACA,IAGZ,GAEA,CAAAv2E,IAAA,UAAAC,MAMQ,SAAQiS,EAAckmB,GAAmC,IAAAiwC,EAAA9pE,KAAnBwuE,EAAAvpE,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAgB,IACtDjF,KAAKm3E,OAAOxjE,KACZxP,aAAanE,KAAKm3E,OAAOxjE,WAClB3T,KAAKm3E,OAAOxjE,IAEvB3T,KAAKm3E,OAAOxjE,GAAag7D,WAAW,WAC5B90C,aAAc40C,UACd50C,WAEGiwC,EAAKqN,OAAOxjE,EACvB,EAAG66D,EACP,KAAC0C,CAAA,CAnQ8B,GAAtBA,SAAsB,mBAAAjxE,iBAAtBixE,GAAsBhxE,EAAAwd,mBAAA/U,EAAA2vE,OAAA,EAAtBpH,EAAsB,WAAAhxE,EAAA,oCAAtBgxE,EAAsBvzD,QAAtBuzD,EAAsBtzD,UAAAC,WAFnB,SAEHqzD,CAAsB,2JCfnC,IAAAl3D,EAAAlc,EAAA,OAGAulD,EAAAvlD,EAAA,kBAGMy6E,EAAoC,CAAC,UAAW,QAAS,MAAO,OAAQ,MAKjE34E,iBAAc,eAAdwxE,EAAc,WAcvB,SAAAA,IAAA,IAAA9vE,EAAAtB,KAAAD,EAAAC,KAAAoxE,GAZQpxE,KAAAw4E,eAAmD,GAEnDx4E,KAAAy4E,kBAAiD,GAEjDz4E,KAAA04E,UAAsB,GAEtB14E,KAAA24E,kBAAgC,GAEhC34E,KAAA44E,QAAkB,EAKtBj2E,OAAOuxD,iBAAiB,UAAW,SAACplC,GAChC,IAAMwuC,EAAOh8D,EAAKu3E,QAAQ/pD,EAAMwuC,MAAQ,IAAI5pC,eACxCpyB,EAAKw3E,YAAcxb,IACdh8D,EAAKk3E,eAAelb,KACrBh8D,EAAKk3E,eAAelb,GAAQ,IAAItjD,EAAAqB,gBAAgB,MAChD/Z,EAAKm3E,kBAAkBnb,GAAQh8D,EAAKk3E,eAAelb,GAAM9hD,gBAE7Dla,EAAKk3E,eAAelb,GAAM96D,OAAOlB,EAAKs3E,SAClCt3E,EAAKo3E,UAAU9hB,QAAQ0G,IAAS,GAChCxuC,EAAMiqD,iBAEVz3E,EAAKw3E,UAAYxb,EAEzB,GAEA36D,OAAOuxD,iBAAiB,QAAS,SAACplC,GAC9B,IAAMwuC,EAAOh8D,EAAKu3E,QAAQ/pD,EAAMwuC,MAAQ,IAAI5pC,eAC5CpyB,EAAKk3E,eAAelb,GAAM96D,KAAK,MAC3BlB,EAAKw3E,YAAcxb,IACnBh8D,EAAKw3E,UAAY,KAEzB,EACJ,CAEAh5E,SAAAsxE,EAAA,EAAA3vE,IAAA,SAAAC,MAKO,SAAOs3E,EAA0Bx2E,GAAgB,IAAA2C,EAAAnF,KAE9Ci5E,GADND,EAASA,aAAiB5tC,MAAQ4tC,EAAQA,EAAM/xE,MAAM,MAClB+U,IAAI,SAAA+W,GAAC,OAAI5tB,EAAK0zE,OAAO9lD,EAAEW,cAAc,GACzE,GAAIulD,EAAY5zE,OAAS,GAAKrF,KAAKk5E,iBAAiBD,GAAc,CAC9Dj5E,KAAK24E,kBAAkB1hD,KAAKgiD,GAC5B,IAAME,EAAWF,EAAYA,EAAY5zE,OAAS,GAClD,OAAKrF,KAAKw4E,eAAeW,KACrBn5E,KAAKw4E,eAAeW,GAAY,IAAIn/D,EAAAqB,gBAAgB,MACpDrb,KAAKy4E,kBAAkBU,GAAYn5E,KAAKw4E,eAAeW,GAAU39D,gBAErExb,KAAKo5E,2BACEp5E,KAAKy4E,kBAAkBU,GAAUhmE,UAAU,SAACoqB,GAC/C,GAAIA,EAAO,CACP,IAAM87C,EAAoB,GAC1B,GAAIJ,EAAY5zE,OAAS,EAAG,CACxB,IAC6ByyB,EAD7BC,EAAAC,EACkBihD,GAAW,IAA7B,IAAAlhD,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MAA+B,KACrBkF,EAAQn4B,EAAKqzE,eADT1gD,EAAAp2B,OAEV23E,EAAQpiD,KAAKqG,GAAQA,EAAMrkB,aAAc,EAAO,CAEpD,OAAA2R,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACA,QAAStF,EAAI,EAAGA,EAAIkmD,EAAY5zE,OAAS,EAAG0tB,IACxC,GAAIsmD,EAAQtmD,GAAKsmD,EAAQtmD,EAAI,GAAM,OAG7BsmD,EAAQj8C,OAAO,SAACzJ,EAAGhQ,GAAC,OAAKgQ,GAAKhQ,EAAI,EAAI,GAAI,EAAG,EAAE,IAChDs1D,EAAY5zE,QACrB7C,GAAI,CAGhB,EAAC,CAEL,OAAO,IACX,GAEA,CAAAf,IAAA,SAAAC,MAIQ,SAAO47D,GACX,OAAIA,EAAK1G,QAAQ,QAAU,GAAK0G,EAAK1G,QAAQ,UAAY,GAAK0G,EAAK1G,QAAQ,YAAc,EAC9E0G,EAAKl/B,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAE9Ck/B,CACX,GAEA,CAAA77D,IAAA,2BAAAC,MAGQ,WACJ,IAC0Cm7B,EADtBC,EAAA9E,EACAh4B,KAAK24E,mBAAiB,IAA1C,IAAA77C,EAAAlT,MAAAiT,EAAAC,EAAA3E,KAAAC,MAA4C,KAAjC4gD,EAAKn8C,EAAAn7B,MACZ1B,KAAK04E,UAAUzhD,KAAK+hD,EAAMA,EAAM3zE,OAAS,GAAE,CAC9C,OAAAulB,GAAAkS,EAAA1X,EAAAwF,EAAA,SAAAkS,EAAAzE,GAAA,CACDr4B,KAAK04E,aAAYr1B,EAAAhY,QAJA,GAKrB,GAEA,CAAA5pC,IAAA,mBAAAC,MAIQ,SAAiBs3E,GACrB,IACuBzX,EADnB+X,EAAW,EAAE9X,EAAAxpC,EACCghD,GAAK,IAAvB,IAAAxX,EAAA53C,MAAA23C,EAAAC,EAAArpC,KAAAC,MACQmgD,EAAwB3hB,QADlB2K,EAAA7/D,OACiC,GACvC43E,GAEP,OAAA1uD,GAAA42C,EAAAp8C,EAAAwF,EAAA,SAAA42C,EAAAnpC,GAAA,CACD,OAAOihD,EAAW,CACtB,KAAClI,CAAA,CAjHsB,GAAdA,SAAc,mBAAAnxE,iBAAdmxE,EAAc,EAAdA,EAAc,WAAAlxE,EAAA,oCAAdkxE,EAAczzD,QAAdyzD,EAAcxzD,UAAAC,WAFX,SAEHuzD,CAAc,uLCV3B,IAAI7gE,EACAgpE,GAAmB,EAoBvB,SAAgBC,EACZxmE,EACAymE,GAGuC,IAFvCpyD,EAAApiB,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAiB,KACjBy0E,EAAsBz0E,UAAAI,OAAA,EAAAJ,UAAA,QAAAK,EACtB4tD,EAAAjuD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,GAErC,IAAKsL,EACD,OACKgpE,GACD92E,QAAQk3E,KAAK,4CAGrB,IAAMC,EAAerpE,EAAS0E,KAAKwkE,EAASpyD,EAAMyI,EAAA,CAC9CxH,WAAY,CAACtV,GACbhB,SAAU,KACPkhD,IAEH7rC,IACAqyD,EAAYA,GAAc,kBAAME,EAAa36D,SAAS,EACtD26D,EAAaC,WAAW1mE,UAAU,kBAAMumE,GAAW,GAE3D,CAtCA95E,kBAAA,SAAgBqD,EACZ62E,GAGAvpE,EAAWupE,EACXP,EAHet0E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,EAInB,EAUArF,SAAA45E,EA+BA55E,gBAAA,SAAgBgqC,EACZgpC,EACAvrD,EACAqyD,GACuC,IAAvCxmB,EAAAjuD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,IAEpCs0E,GAAoB92E,QAAQwwE,MAAML,GAChB,iBAARA,IAAkBA,EAAM,WACnC4G,EAAO,UAAW5G,EAAKvrD,EAAQqyD,EAAWxmB,EAC9C,EASAtzD,cAAA,SAAgBiV,EACZ+9D,EACAvrD,EACAqyD,GACuC,IAAAK,EAAAC,EAAvC9mB,EAAAjuD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,IAEpCs0E,GAAoB92E,QAAQ0D,MAAMysE,GAChB,iBAARA,IACPA,GACgB,QAAXmH,EAAAnH,SAAW,IAAAmH,OAAA,EAAXA,EAAa5zE,SAAqB,QAAhB6zE,EAAKpH,SAAW,IAAAoH,OAAA,EAAXA,EAAaP,UAAW,qBACxDD,EAAO,QAAS5G,EAAKvrD,EAAQqyD,EAAWxmB,EAC5C,EASAtzD,aAAA,SAAgBgxC,EACZgiC,EACAvrD,EACAqyD,GACuC,IAAvCxmB,EAAAjuD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,IAEpCs0E,GAAoB92E,QAAQk3E,KAAK/G,GAClC4G,EAAO,OAAQ5G,EAAKvrD,EAAQqyD,EAAWxmB,EAC3C,EASAtzD,aAAA,SAAgBkuE,EACZ8E,EACAvrD,EACAqyD,GACuC,IAAvCxmB,EAAAjuD,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAqC,IAEpCs0E,GAAoB92E,QAAQC,KAAKkwE,GAClC4G,EAAO,OAAQ5G,EAAKvrD,EAAQqyD,EAAWxmB,EAC3C,kICrHA,IAAA3yD,EAAAzC,EAAA,MACAslD,EAAAtlD,EAAA,OAwBgC,SAAAm8E,aAAAt4E,EAAAC,IAAAC,KAAzB,SAAAC,EAA0B0D,GAAuB,IAAA00E,EAAAvlE,EAAAwlE,EAAAvsE,EAAAuqE,EAAAryE,EAAAotD,EAAA,OAAAtxD,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC9C03E,SAAW10E,EAAS00E,UAAYn0E,SAASm0E,SACzCvlE,EAAOnP,EAAS40E,QAAUr0E,SAASs0E,SACnCF,EAAO30E,EAAS20E,MAAQp0E,SAASo0E,KACjCvsE,EAAMpI,EAAS80E,WAAU,GAAAl2E,OACtB81E,EAAQ,MAAA91E,OAAKuQ,EAAI,KAAAvQ,OAAI+1E,GACxBp0E,SAASC,OACTmyE,GAASpyE,SAASuB,SAAW,KAAK82B,QAAQ,KAAM,KAChDt4B,EACFN,EAASM,MACTC,SAASkC,KAAKhC,SAAS,cACU,SAAjCs0E,aAAaryE,QAAQ,QAEnBgrD,EAA2B,CAC7BsnB,UAAW,YACXC,MAAO,SACP9lE,KAAI,GAAAvQ,OAAKuQ,GAAIvQ,OAAG+1E,EAAO,IAAMA,EAAO,IACpCO,SAAQ,GAAAt2E,OAAKwJ,EAAG,yBAChB+sE,UAAS,GAAAv2E,OAAKwJ,EAAG,qBACjBgtE,aAAY,GAAAx2E,OAAK2B,SAASC,QAAM5B,OAAG+zE,EAAK,mBACxC0C,cAAer1E,EAASI,YACxBk1E,YAAY,EACZh1E,QAEAy0E,cACAA,aAAaj2E,QACT,OAAM,GAAAF,SACD0B,IAASC,SAASkC,KAAKhC,SAAS,gBAGzCH,MACAs9C,EAAA0qB,YAAW,6BACdxrE,EAAAqB,OAAA,YACMpD,EAAAw6E,OAAM7nB,IAAO,yBAAA5wD,EAAAwC,OAAA,EAAAhD,EAAA,KACvBkD,MAAAhF,KAAAiF,UAAA,CAlCDrF,aAHA,SAGsBsG,EAAUmX,GAAA,OAAA48D,EAAAj1E,MAAAhF,KAAAiF,UAAA,4FCzBhC,IAAA+1E,EAAAl9E,EAAA,OAGA8B,iBAAA,SAAgBq7E,EAAe3d,GAAsD,IAAA4d,EAC3EC,EAAK,IAAIH,EAAAI,UAAU,CACrBxtE,IAAK0vD,GAAQ,QACbhW,KAAM,IACN+zB,WAJ+Cp2E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,QAKlDq2E,UALoEr2E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAG,OAMvEs2E,SAAS,EACTC,SAAU,EACVC,UAAU,EACVC,WAAY,IAEhB,OAAS,MAAFP,GAAsB,QAApBD,EAAFC,EAAIQ,QAAQ,kBAAU,IAAAT,OAApB,EAAFA,EAAwBvD,GACnC,qMCdA,IAAAp3E,EAAAzC,EAAA,MACAkc,EAAAlc,EAAA,OACAwC,EAAAxC,EAAA,OAEA8nC,EAAA9nC,EAAA,OACAulD,EAAAvlD,EAAA,kBA0Ba8B,uBAAqB,eAArBg8E,EAAqB,SAAAl1C,GAAA5lC,EAAA86E,EAAAl1C,GAAA,IAAA1lC,EAAAC,EAAA26E,GAsB9B,SAAAA,IAAA,IAAAt6E,EAAAvB,SAAAC,KAAA47E,IACIt6E,EAAAN,EAAAO,KAAAvB,OAtBI67E,WAAa,IAAI7hE,EAAAqB,gBAAwB,IACzC/Z,EAAAw6E,QAAU,IAAI9hE,EAAA+hE,QAEdz6E,EAAA06E,eAAiB16E,EAAKw6E,QAAQ34E,QAAK7C,EAAA+yB,aAAY,MAE/C/xB,EAAA26E,kBAAoB36E,EAAKu6E,WAAW14E,QACxC7C,EAAA4b,QAAO,SAAC7Y,GAAC,QAAOA,CAAC,MACjB/C,EAAAiyB,WAAU,SAAC9e,GAAE,SAAKuG,EAAAgJ,eAAc,IAAChJ,EAAAO,IAAG9G,GAAKnS,EAAK46E,QAAQzoE,EAAI,YAAY,MACtEnT,EAAA4b,QAAO,SAAA5V,GAAY,QAAZ4c,EAAA5c,EAAA,GAAY,EAAe,MAClChG,EAAA0b,KAAI,SAAAmH,GAAA,IAAE1P,EAAFyP,EAAAC,EAAA,GAAI,UACJ7hB,EAAK2R,aACD,cACA3R,EAAK06E,eAAe7oE,UAAU,SAAC4F,GAAC,SAC5BxY,EAAAoyB,WAAUlf,EAAI,UAAU6hB,QAAQ,aAAc,CAACvc,GAAG,GAEzD,IAIOzX,EAAAsB,QAAUtB,EAAK06E,eAI3B16E,EAAK66E,uBACL76E,EAAK26E,kBAAkB9oE,YAAY7R,CACvC,CAACxB,SAAA87E,EAAA,EAAAn6E,IAAA,YAAAC,MAEM,SAAU+R,GACbzT,KAAK67E,WAAWr5E,KAAKiR,EACzB,GAAC,CAAAhS,IAAA,uBAAAC,MAEO,WAQJ,QARwByD,EAAAnF,KAOtBi4B,EAAA,WACG,IAAMx2B,EAAG26E,EAAAh7C,IAxDtB,SAASi7C,EACLC,EACAC,EACAC,GAEA,IAAIC,EAAmBH,EAAWC,GACjCD,EAAmBC,GAAkB,WAAmB,QAAAG,EAAAz3E,UAAAI,OAAfwtE,EAAW,IAAAznC,MAAAsxC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAX9J,EAAW8J,GAAA13E,UAAA03E,GACjDH,EAAgB3J,GACf4J,EAAyBl7E,KAAIyD,MAA7By3E,EAAwB,CAAMH,GAAUl4E,OAAKyuE,GAClD,CAEJ,CA8CYwJ,CAAW55E,QAAShB,EAAK,mBAAAm7E,EAAA33E,UAAAI,OAAIwtE,EAAI,IAAAznC,MAAAwxC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJhK,EAAIgK,GAAA53E,UAAA43E,GAAA,OAAK13E,EAAK23E,aAAar7E,EAAKoxE,EAAK,IADtEzxC,EAAA,EAAAg7C,EAPiC,CAC7B,MACA,QACA,OACA,OACA,SAEmBh7C,EAAAg7C,EAAA/2E,OAAA+7B,IAAAnJ,GAG3B,GAAC,CAAAx2B,IAAA,eAAAC,MAEO,SAAasR,EAAclQ,GAAsC,IAA3Bi6E,EAAA93E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAkB,UAC5DnC,EAAK,GACkB,iBAAZA,EAAK,GAAkBA,EAAK,GAAGs7B,QAAQ,MAAO,IAAMt7B,EAAK,GACpE9C,KAAK87E,QAAQt5E,KAAK,CACdiR,GAAE,GAAArP,OAAK24E,EAAU,KAAA34E,UAAIi/C,EAAAwT,WAAU,aAC/B7jD,KAAM+pE,EACNC,QAAShqE,EACTiqE,UAAWxiE,KAAKuX,MAChBlvB,KAAMA,EAAKoZ,OACP,SAAC7Y,GAAC,MAAkB,iBAANA,IAAmBA,EAAE65E,WAAW,SAAS,IAGnE,GAEA,CAAAz7E,IAAA,UAAAC,MACQ,SAAQ+R,EAAYE,GAAoC,IACtDwpE,KAAS58E,EAAAoyB,WAAUlf,EADaxO,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAc,UAClBytB,QAAQ/e,GAC1C,OAAA3T,KAAKiT,aAAY,QAAA7O,OAASuP,GAAQwpE,EAAOhqD,QAClCgqD,EAAOtqD,QAClB,KAAC+oD,CAAA,CAhE6B,CAAQh2C,EAAAn9B,cAA7BmzE,SAAqB,mBAAA37E,iBAArB27E,EAAoB,EAApBA,EAAqB,WAAA17E,EAAA,oCAArB07E,EAAoBj+D,QAApBi+D,EAAoBh+D,UAAAC,WAFjB,SAEH+9D,CAAqB,0ICzBrBh8E,kBAAkB,SAAC+zB,EAAsB3U,GAElD,OADO8Q,IAAA,GAA2B6D,GAAM3U,EAE5C,EAEapf,oBAAoB,WAGR,IADrBw9E,EAAAn4E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAmC,GAE7B+W,EAAM,IAHZ/W,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAuC,IAIvB0kB,QAAQ,SAAC0O,GAAC,OAAMrc,EAAIqc,EAAE5kB,IAAM4kB,CAAC,GAC7C,IAAMglD,EAA8B,GACpCD,SAAYzzD,QAAQ,SAAC2zD,GACXthE,EAAIshE,EAAE7pE,KACR4pE,EAAOpmD,QAAKr3B,EAAA29E,iBAAgBvhE,EAAIshE,EAAE7pE,IAAK6pE,GAE/C,GACOD,CACX,4QCxBAv/E,EAAA,WACAkc,EAAAlc,EAAA,OACAyC,EAAAzC,EAAA,MACAyzB,EAAAzzB,EAAA,OACAwC,EAAAxC,EAAA,OAEAulD,EAAAvlD,EAAA,OACA0/E,EAAA1/E,EAAA,OAEA8nC,EAAA9nC,EAAA,OAEA0zE,EAAA1zE,EAAA,OACA2/E,EAAA3/E,EAAA,UACAA,EAAA,uCAYa8B,kBAAgB,eAAhBgJ,EAAgB,SAAA89B,GAAA5lC,EAAA8H,EAAA89B,GAAA,IAyDxBg3C,EAzDwB18E,EAAAC,EAAA2H,GA2DzB,SAAAA,EACY+0E,EACYC,GAAkC,IAAAt8E,EAAAvB,EAAAC,KAAA4I,IAEtDtH,EAAAN,EAAAO,KAAAvB,OAHQ29E,SACYr8E,EAAAs8E,aA3DhBt8E,EAAA8wE,UAAY,UAEZ9wE,EAAAu8E,WAAa,IAAI7jE,EAAAqB,gBAA2B,IAE5C/Z,EAAAw8E,eAAiB,IAAI9jE,EAAAqB,gBAAyB,IAE9C/Z,EAAAy8E,UAA2C,GAE3Cz8E,EAAA08E,aAAyC,GAEzC18E,EAAA28E,kBAA6B,GAoDjC,IAAMjsD,EAAM,IAAIvX,KACVyjE,EAAO,IAAIzjE,KAAK+2D,EAAAC,QAAQyM,MACxBC,KAAQ5sD,EAAAkC,WAAUzB,EAAKksD,GAAK,YAAA95E,UAChBmtB,EAAAgW,QAAO22C,EAAM,WAAQ,EACjC3sD,EAAAgW,QAAO22C,EAAM,sBACnB,SAAA76B,EAAArgD,KAAI,OAAM,GAAAoB,OAAKotE,EAAAC,QAAQ2M,QAAU,KAAM,SAAS,IAAI,EACpD/6B,EAAArgD,KAAI,MAAK,GAAAoB,OAAKotE,EAAAC,QAAQ4M,KAAI,cAAAj6E,OAAa+5E,GAAS,KAAM,SAAS,GAC/D78E,EAAKg9E,OAAOh9E,CAChB,CAEAxB,SAAA8I,EAAA,EAAAnH,IAAA,YAAAma,aAzDqBla,GACjB1B,KAAK69E,WAAWr7E,KAAKd,GACrB1B,KAAKu+E,oBACT,GAEA,CAAA98E,IAAA,SAAAC,MACO,SAAgBiS,GACnB,OAAK3T,KAAKg+E,aAAarqE,KACnB3T,KAAK+9E,UAAUpqE,GAAQ,IAAIqG,EAAAqB,gBAAmB,MAC9Crb,KAAKg+E,aAAarqE,GAAQ3T,KAAK+9E,UAAUpqE,GAAM6H,gBAE5Cxb,KAAKg+E,aAAarqE,EAC7B,GAEA,CAAAlS,IAAA,OAAAC,MACO,SAAQiS,EAAcjS,GACpB1B,KAAKg+E,aAAarqE,KACnB3T,KAAK+9E,UAAUpqE,GAAQ,IAAIqG,EAAAqB,gBAAmB,MAC9Crb,KAAKg+E,aAAarqE,GAAQ3T,KAAK+9E,UAAUpqE,GAAM6H,gBAEnDxb,KAAK+9E,UAAUpqE,GAAMnR,KAAKd,EAC9B,GAAC,CAAAD,IAAA,QAAAC,MAEM,SAAeiS,GAClB,OAAQ3T,KAAKg+E,aAAarqE,GAEpB3T,KAAK+9E,UAAUpqE,GAAMsF,WADrB,IAEV,GAEA,CAAAxX,IAAA,QAAAkE,IACA,WACI,OAAO3F,KAAK29E,OAAOa,UACvB,EAAC5iE,IACD,SAAiBla,GAAa,IAAA+8E,EAC1Bz+E,KAAK29E,OAAOe,SAAQ,GAAAt6E,OACb1C,EAAK,OAAA0C,OAAMpE,KAAK2F,IAAI,aAAe3F,KAAKoyE,YAE3BpyE,KAAK2F,IAAI,+BAEd,QAAf84E,EAAAz+E,KAAK49E,kBAAU,IAAAa,GAAfA,EAAiBE,KAAK,WAAY,CAAEn9E,MAAOE,IAC/C,GAAC,CAAAD,IAAA,OAAAC,OAAAg8E,EAAA/7E,EAAAC,IAAAC,KAoBM,SAAAC,IAAA,IAAA88E,EAAAnxD,EAAAtoB,EAAAnF,KAAA,OAAA4B,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OAAAxC,KAAK6+E,eACD7+E,KAAK2F,IAAI,WAAUhD,OAAOswE,OAAQ,GACnB,QAAnB2L,EAAI5+E,KAAK2F,IAAI,cAAM,IAAAi5E,GAAfA,EAAiBjrE,OACjB3T,KAAKoyE,UAAYpyE,KAAK2F,IAAI,OAAOgO,MAErC3T,KAAKoyE,UACDrsE,SAASuB,SAAS82B,QAAQ,UAAW,IAAI6V,QAAUj0C,KAAKoyE,aAC5D/uB,EAAA39C,YAAW1F,KAAKoyE,UAAUnrE,MAAM,KAAK8N,KAAK,KAAKm9D,gBAAa,EAC5D7uB,EAAArgD,KAAI,WAAY,gCAChBhD,KAAKquE,aAAa7rE,MAAK,GACnBG,OAAOswE,QACFtwE,OAAOm8E,cAAan8E,OAAOm8E,YAAc,IAC9Cn8E,OAAOm8E,YAAYt5E,SAAWxF,MAElCA,KAAKiT,aACD,gBACAjT,KAAK89E,eAAe3qE,UAAU,SAAC9P,GAAC,OAAK8B,EAAK45E,mBAAmB17E,EAAE,IACjEf,EAAAE,KAAA,GACiBi7E,EAAA72E,aAAazD,QAAK7C,EAAA8C,OAAM,SAACC,GAAC,QAAOA,CAAC,IAAGC,YAAW,QAA7DmqB,SAAInrB,EAAA4B,KAAA5B,EAAAE,KAAA,MACSjC,EAAAgrC,cAAa9d,EAAKha,GAAI,YAAYnQ,YAAW,QAChEtD,KAAK89E,eAAet7E,KADVF,EAAA4B,KACoBoT,SAAW,IACzCtX,KAAK6+E,eACL7+E,KAAKg/E,eAAe,yBAAA18E,EAAAwC,OAAA,EAAAhD,EAAA9B,KAAA,IACvB,SAAAs+E,IAAA,OAAAZ,EAAA14E,MAAAhF,KAAAiF,UAAA,IAED,CAAAxD,IAAA,WAAAkE,IACA,WACI,OAAO3F,KAAKoyE,SAChB,GAAC,CAAA3wE,IAAA,cAAAkE,IAED,WACI,OAAO3F,KAAK2F,IAAI,wBAA0B,QAAU,QACxD,GAEA,CAAAlE,IAAA,MAAAC,MAIO,SAAaD,GAChB,IACuB6E,EAAA8B,EADjBkiB,EAAO7oB,EAAIwF,MAAM,KACvB,GAAgB,QAAZqjB,EAAK,GACL,OAEyD,QAFzDhkB,EACiD,QADjD8B,KACIi7C,EAAAgwB,iBAAgB/oD,EAAMtqB,KAAKi+E,0BAAkB,IAAA71E,OAC7Ci7C,EAAAgwB,iBAAgB/oD,EAAMtqB,KAAK89E,eAAe7kE,mBAAW,IAAA3S,OACrD+8C,EAAAgwB,iBAAgB/oD,EAAMkzD,EAAAyB,kBAG9B,IACwCnnD,EADlConD,EAAiB77D,EAAOrjB,KAAK69E,WAAW5kE,YAAY8e,EAAAC,EACnCknD,GAAiB,IAAxC,IAAAnnD,EAAAnO,MAAAkO,EAAAC,EAAAI,KAAAC,MAA0C,KAA/B+mD,EAAQrnD,EAAAp2B,MACTA,KAAQ2hD,EAAAgwB,iBAAgB/oD,EAAKkQ,MAAM,GAAI2kD,GAC7C,GAAa,MAATz9E,EACA,OAAOA,EAEd,OAAAkpB,GAAAmN,EAAA3S,EAAAwF,EAAA,SAAAmN,EAAAM,GAAA,CACD,SAAOgrB,EAAAgwB,iBAAgB/oD,EAAMkzD,EAAAyB,iBACjC,GAAC,CAAAx9E,IAAA,kBAAAC,MAEM,SAAmBiS,EAAcjS,GAAQ,IAAA8E,EAAAxG,KAC5CA,KAAKi+E,kBAAkBtqE,GAAQjS,EAClB,cAATiS,GAAsB3T,KAAK6+E,eAClB,cAATlrE,GAAsB3T,KAAKg/E,eAC/Bh/E,KAAK6D,QAAQ,gBAAiB,kBAAM2C,EAAK44E,qBAAqB,EAAE,IACpE,GAAC,CAAA39E,IAAA,sBAAAC,MAEM,SACHD,EACAC,GAC0B,IAA1B29E,EAAAp6E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,IAAAA,UAAA,GAEIwwC,EAAUO,SAASspC,eAAc,qBAAAl7E,OAAsB3C,IACtDg0C,KACDA,EAAUO,SAASC,cAAc,UACzBxiC,GAAE,qBAAArP,OAAwB3C,GAClCu0C,SAASupC,KAAKlpC,YAAYZ,IAE9BA,EAAQ+pC,UAAS,kBAAAp7E,OAAqB3C,EAAG,MAAA2C,OAAK1C,EAAK,KAAA0C,OAC/Ci7E,EAAY,aAAe,GAC/B,IACJ,GAAC,CAAA59E,IAAA,qBAAAC,MAEO,WACJ,IAAM+9E,EAAez/E,KAAK2F,IAAI,sBAAwB,GAClD+5E,EAAa,UACjB,QAAWj+E,KAAOg+E,EACdC,GAAU,KAAAt7E,OAAS3C,EAAG,MAAA2C,OAAKq7E,EAAah+E,GAAI,MAEhDi+E,GAAc,IACd,IAAIjqC,EAAUO,SAASspC,eAAe,qBACjC7pC,KACDA,EAAUO,SAASC,cAAc,UACzBxiC,GAAK,oBACbuiC,SAASupC,KAAKlpC,YAAYZ,IAE9BA,EAAQ+pC,UAAYE,CACxB,GAAC,CAAAj+E,IAAA,sBAAAC,MAAA,eAAAi+E,EAAAh+E,EAAAC,IAAAC,KAEO,SAAA0D,IAAA,IAAAkoB,EAAA,OAAA7rB,IAAAS,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACsB,GACjB,OADHirB,KAAOgwD,EAAA32E,iBACR2mB,EAAMha,IAAO4W,OAAOC,KAAKtqB,KAAKi+E,mBAAmB54E,OAAM,CAAAI,EAAAjD,KAAA,eAAAiD,EAAA9B,OAAA,iBAAA8B,SAAAjD,KAAA,KACtDjC,EAAAwrD,gBAAet+B,EAAKha,GAAI,CAC1BE,KAAM,WACNE,YAAa,GACbyD,QAAOwY,IAAA,GACA9vB,KAAK89E,eAAe7kE,YACpBjZ,KAAKi+E,qBAEb36E,YAAW,OACdtD,KAAK89E,eAAet7E,KAAIstB,IAAA,GACjB9vB,KAAK89E,eAAe7kE,YACpBjZ,KAAKi+E,oBAEZj+E,KAAKi+E,kBAAoB,GAAG,wBAAAx4E,EAAAX,OAAA,EAAAS,EAAAvF,KAAA,IAC/B,gBAAAo/E,IAAA,OAAAO,EAAA36E,MAAAhF,KAAAiF,UAAA,EAlBA,IAkBA,CAAAxD,IAAA,qBAAAC,MAAA,eAAAk+E,EAAAj+E,EAAAC,IAAAC,KAEO,SAAAwE,EAAyBb,GAAiB,OAAA5D,IAAAS,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OAE7C,wBAAAiE,EAAA3B,OAAA,EAAAuB,EAAA,IACJ,gBAAA04E,EAAA1hE,GAAA,OAAAuiE,EAAA56E,MAAAhF,KAAAiF,UAAA,EALA,IAKA,CAAAxD,IAAA,eAAAC,MAEO,WACC1B,KAAK2F,IAAI,cACd3F,KAAK6/E,oBAAoB,YAAW,GAAAz7E,OAAKpE,KAAK2F,IAAI,aAAY,MAClE,GAAC,CAAAlE,IAAA,eAAAC,MAEO,WAMJ,KACHkH,CAAA,CAjNwB,CAAQg9B,EAAAn9B,cAAxBG,SAAgB,mBAAA3I,iBAAhB2I,GAAe1I,EAAAwd,mBAAA/U,EAAA2vE,OAAAp4E,EAAAwd,mBAAA7U,EAAAqoE,uBAAA,KAAftoE,EAAgB,WAAA1I,EAAA,oCAAhB0I,EAAe+U,QAAf/U,EAAegV,UAAAC,WAFZ,SAEHjV,CAAgB,8FCkJhBhJ,mBAAwB,CACjCqzE,OAAO,EACP6M,SAAU,CACN1F,OAAQ,GACRjC,MAAO,SACP+B,SAAU,GACVC,KAAM,GACNG,YAAY,EACZ10E,aAAa,GAEjBm6E,IAlDa,CACbpsE,KAAM,YACNnS,MAAO,wBACPqS,YAAa,sDACbmsE,WAAY,QACZC,WAAY,CACRjtE,KAAM,MACN2kE,IAAK,yBAETuI,UAAW,CACPltE,KAAM,MACN2kE,IAAK,wBAETvuE,SAAU,CAAC,SAAU,QAAS,UAAW,UAAW,OAAQ,YAC5D+2E,aAAa,EACbC,QAhJiB,CACjBC,OAAQ,CACJ5sE,GAAI,IACJT,KAAM,OACN+U,QAAO,IAEXu4D,UAAW,UACXnqC,SAAU,SA0IVoqC,KArIc,CACdC,MAAO,CACH,CACI7sE,KAAM,gBACN8sE,KAAM,qCACNnxD,KAAM,CACFtc,KAAM,OACN22D,MAAO,iBACP5hD,QAAS,OAEb24D,WACI,qKAER,CACI/sE,KAAM,oBACN8sE,KAAM,8DACNnxD,KAAM,CACFtc,KAAM,OACN22D,MAAO,iBACP5hD,QAAS,QAEb24D,WAAY,4BAEhB,CACI/sE,KAAM,kBACN8sE,KAAM,qCACNnxD,KAAM,CACFtc,KAAM,OACN22D,MAAO,iBACP5hD,QAAS,QAEb24D,WACI,kWAER,CACI/sE,KAAM,WACN8sE,KAAM,4BACNnxD,KAAM,CACFtc,KAAM,OACN22D,MAAO,iBACP5hD,QAAS,YAEb24D,WACI,mWAGZh5B,QAAS,GAwFTnzB,OAnFgB,CAChBosD,iBAAiB,EACjBC,WAAY,EACZ1oE,qBAAqB,EACrBf,cAAc,GAgFd0pE,cA3EuB,CACvBC,aAAa,GA2EbC,UAtEmB,CACnBC,cAAc,EACdC,kBAAmB,GAqEnBC,QAtDiB,CACjB9N,OAAQ,CACJ,aAAc,UACd,gBAAiB,UACjB,aAAc,UACd,qBAAsB,OACtB,gBAAiB,OASjB,WAAY,UACZ,cAAe,UACf,YAAa,WAEjB+N,qBAAqB,EACrBC,yBAAyB,EACzBC,OAAQ,CACJC,OAAQ,CACJ,CAAE7/E,IAAK,aAAckS,KAAM,mBAC3B,CAAElS,IAAK,gBAAiBkS,KAAM,iBAC9B,CAAElS,IAAK,aAAckS,KAAM,gBAC3B,CAAElS,IAAK,qBAAsBkS,KAAM,sBACnC,CAAElS,IAAK,gBAAiBkS,KAAM,cA4BtCghB,MAAO,CACHzc,qBAAqB,EACrBqpE,cAAc,EACdC,iBAAiB,GAErBC,UAAW,CACPx0E,SAAS,EACTmqE,YAAa,IAEjBsK,eAAe,EACfC,SA3Ea,CACbN,OAAQ,CACJ,CAAE1tE,KAAM,WAAYiuE,MAAO,WAC3B,CAAEjuE,KAAM,UAAWiuE,MAAO,WAC1B,CAAEjuE,KAAM,WAAYiuE,MAAO,aAwE/BC,YAAa,CACTp0D,KAAM,CAAEvW,MAAO,gBAAiBq+B,YAAa,6EClKd,SAAAusC,aAAAngF,EAAAC,IAAAC,KAAhC,SAAAC,EAAgDigF,GAAuB,OAAAngF,IAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC1Eu/E,SAAUC,gBAAgB1/E,EAAAE,KAAA,EACpBu/E,EAAUE,QAAQC,aAAY,OACpCH,EAAUC,gBAAgB,wBAAA1/E,EAAAwC,OAAA,EAAAhD,EAAA,KAC7BkD,MAAAhF,KAAAiF,UAAA,6EAJDrF,6BAAsBuiF,EAAiB9kE,GAAA,OAAAykE,EAAA98E,MAAAhF,KAAAiF,UAAA,0ICHvC,IAAAssB,EAAAzzB,EAAA,OACAskF,EAAAtkF,EAAA,OAGa8B,kBAAqB,QAAJyiF,EAAAzuC,YAAI,IAAAyuC,GAAkB,QAAlBC,EAAJD,EAAMxuC,wBAAgB,IAAAyuC,GAAmB,QAAnBC,EAAtBD,EAAwBxuC,yBAAiB,IAAAyuC,OAArC,EAAJA,EAA2CxuC,WAAY,mBAErFn0C,kBAAA,SAAgB0vE,EAAgBv9D,GAAgD,IACtEywE,KAAcJ,EAAAK,mBAD6Bx9E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAarF,EAAA8iF,iBACtB,EAAIN,EAAAK,mBAAkB7iF,EAAA8iF,gBAC9D,SAAOnxD,EAAAoxD,iBAAgB5wE,EAAMywE,GAAazsD,SAC9C,EAEAn2B,kBAAA,SAAgBgjF,EAAgB7wE,GAAgD,IAA3B8wE,EAAA59E,UAAAI,OAAA,QAAAC,IAAAL,UAAA,GAAAA,UAAA,GAAarF,EAAA8iF,eACxDF,KAAcJ,EAAAK,mBAAkB7iF,EAAA8iF,iBAAc,EAAIN,EAAAK,mBAAkBI,GAC1E,SAAOtxD,EAAAoxD,iBAAgB5wE,EAAMywE,GAAazsD,SAC9C,wGCdA,IAAAstB,EAAAvlD,EAAA,OAEa8B,YAAY,CACrB,CACE8B,MAAS,yBACTohF,KAAQ,MACRC,QAAU,GACVC,OAAS,EACT7S,KAAQ,2CACR8S,IAAO,CACL,eAGJ,CACEvhF,MAAS,SACTohF,KAAQ,IACRC,QAAU,GACVC,OAAS,EACT7S,KAAQ,4CACR8S,IAAO,CACL,aACA,iBACA,eACA,sBAGJ,CACEvhF,MAAS,yBACTohF,KAAQ,MACRC,QAAU,GACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,aACA,mBACA,mBACA,oBACA,mBAGJ,CACEvhF,MAAS,wBACTohF,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,oBACA,iBACA,eACA,gBACA,oBAGJ,CACEvhF,MAAS,iCACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,8BACR8S,IAAO,CACL,yBAGJ,CACEvhF,MAAS,wBACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yCACR8S,IAAO,CACL,iBACA,sBACA,kBACA,oBACA,uBAGJ,CACEvhF,MAAS,wBACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yCACR8S,IAAO,CACL,iBACA,sBACA,kBACA,oBACA,qBACA,YAGJ,CACEvhF,MAAS,4BACTohF,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,kBACA,uBACA,qBACA,kBACA,cAGJ,CACEvhF,MAAS,kCACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,0CACR8S,IAAO,CACL,oBACA,qBAGJ,CACEvhF,MAAS,yBACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,0CACR8S,IAAO,CACL,gBACA,wBACA,iBACA,mBACA,iBACA,kBACA,sBACA,YAGJ,CACEvhF,MAAS,gCACTohF,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,8BACR8S,IAAO,CACL,iBACA,qBACA,sBACA,oBACA,kBACA,sBACA,YACA,sBAGJ,CACEvhF,MAAS,wBACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yCACR8S,IAAO,CACL,kBACA,uBACA,4BACA,oBACA,oBACA,8BACA,8BACA,iCACA,sBACA,uBACA,mBACA,mBACA,YAGJ,CACEvhF,MAAS,iCACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,kDACR8S,IAAO,CACL,yBACA,iBACA,iBACA,sBACA,sBAGJ,CACEvhF,MAAS,+BACTohF,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,2BACR8S,IAAO,CACL,iBACA,0BAGJ,CACEvhF,MAAS,2BACTohF,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,kCACR8S,IAAO,CACL,iBACA,iBACA,wBACA,mBACA,oBACA,kBACA,eACA,iBACA,qBACA,cAGJ,CACEvhF,MAAS,wBACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yCACR8S,IAAO,CACL,kBACA,iBACA,6BACA,4BACA,0BACA,kBACA,8BACA,qBACA,mBACA,iBACA,mBACA,kBACA,sBACA,yBACA,sBACA,kBACA,YAGJ,CACEvhF,MAAS,2BACTohF,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,6BACR8S,IAAO,CACL,0BACA,wBACA,yBAGJ,CACEvhF,MAAS,0BACTohF,KAAQ,MACRC,QAAU,IACVC,OAAS,EACT7S,KAAQ,sBACR8S,IAAO,CACL,oBAGJ,CACEvhF,MAAS,yBACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,qBAGJ,CACEvhF,MAAS,yBACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,qCACR8S,IAAO,CACL,oBACA,oBACA,kBACA,kBACA,gBACA,qBAGJ,CACEvhF,MAAS,kCACTohF,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,uBACA,mBAGJ,CACEvhF,MAAS,2BACTohF,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,mDACR8S,IAAO,CACL,mBACA,kBACA,gBACA,mBACA,uBACA,oBACA,kBACA,mBACA,qBACA,kBACA,qBACA,iBACA,qBACA,iBACA,wBACA,iBACA,kBACA,qBACA,qBACA,wBACA,sBACA,sBACA,wBACA,wBACA,mBACA,mBACA,oBACA,qBACA,kBACA,cAGJ,CACEvhF,MAAS,2BACTohF,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,mBACA,sBAGJ,CACEvhF,MAAS,6BACTohF,KAAQ,MACRC,QAAU,IACVC,OAAS,EACT7S,KAAQ,2BACR8S,IAAO,CACL,qBAGJ,CACEvhF,MAAS,iCACTohF,KAAQ,QACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,sBAGJ,CACEvhF,MAAS,0BACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,2BACR8S,IAAO,CACL,6BACA,iCACA,0BACA,6BACA,6BACA,4BACA,4BACA,uBACA,oBACA,kBACA,gBACA,oBAGJ,CACEvhF,MAAS,2BACTohF,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,iCACR8S,IAAO,CACL,oBACA,gBACA,kBACA,oBACA,iBACA,qBACA,iBACA,mBACA,qBACA,mBACA,cAGJ,CACEvhF,MAAS,0BACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,wBACR8S,IAAO,CACL,oBAGJ,CACEvhF,MAAS,2BACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,yBACR8S,IAAO,CACL,uBAGJ,CACEvhF,MAAS,sBACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,kBAGJ,CACEvhF,MAAS,SACTohF,KAAQ,IACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,4CACR8S,IAAO,CACL,kBACA,yBACA,cAGJ,CACEvhF,MAAS,6BACTohF,KAAQ,MACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,iCACR8S,IAAO,IAET,CACEvhF,MAAS,uBACTohF,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,qBACR8S,IAAO,CACL,uBACA,oBAGJ,CACEvhF,MAAS,2BACTohF,KAAQ,OACRC,QAAU,EACVC,OAAS,EACT7S,KAAQ,6BACR8S,IAAO,CACL,sBACA,cAGJ,CACEvhF,MAAS,wBACTohF,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,mBACR8S,IAAO,CACL,oBACA,oBAGJ,CACEvhF,MAAS,MACTohF,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,mCACR8S,IAAO,CACL,uBACA,YAGJ,CACEvhF,MAAS,oBACTohF,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,0BACR8S,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACEvhF,MAAS,sBACTohF,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,gCACR8S,IAAO,CACL,qBACA,kBACA,gBACA,kBAGJ,CACEvhF,MAAS,oBACTohF,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,kBACA,kBACA,mBACA,gBACA,kBAGJ,CACEvhF,MAAS,0BACTohF,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,4BACR8S,IAAO,CACL,iBACA,eACA,gBACA,gBACA,gBACA,iBACA,eACA,kBACA,cACA,kBACA,oBACA,qBACA,kBACA,qBACA,uBAGJ,CACEvhF,MAAS,0BACTohF,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,+DACR8S,IAAO,CACL,sBACA,mBACA,iBACA,gBACA,kBACA,mBACA,oBACA,eACA,gBACA,cACA,cACA,oBACA,mBACA,eACA,iBACA,gBACA,kBAGJ,CACEvhF,MAAS,+BACTohF,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,gEACR8S,IAAO,CACL,kBACA,oBACA,kBACA,mBACA,mBACA,gBACA,kBAGJ,CACEvhF,MAAS,wBACTohF,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,kDACR8S,IAAO,CACL,eACA,kBACA,oBACA,gBACA,iBAGJ,CACEvhF,MAAS,iCACTohF,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,+CACR8S,IAAO,CACL,kBACA,gBACA,gBACA,kBAGJ,CACEvhF,MAAS,kCACTohF,KAAQ,QACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,kCACR8S,IAAO,CACL,iBACA,gBACA,qBACA,gBACA,kBACA,eACA,oBACA,gBACA,gBACA,kBACA,gBACA,oBACA,eACA,cAGJ,CACEvhF,MAAS,wBACTohF,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,uBACR8S,IAAO,CACL,oBAGJ,CACEvhF,MAAS,oBACTohF,KAAQ,MACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,gCACR8S,IAAO,CACL,eACA,gBACA,mBACA,oBAGJ,CACEvhF,MAAS,4BACTohF,KAAQ,OACRC,OAAU,EACVC,OAAS,EACT7S,KAAQ,qB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G,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,KAAKpL,EAAUmL,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG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","names":["router_1","require","find_space_component_1","room_booking_component_1","booking_confirmed_component_1","upcoming_bookings_component_1","components_1","not_found_component_1","desk_booking_component_1","desk_success_component_1","meeting_booking_component_1","meeting_success_component_1","routes","path","component","UnauthorisedComponent","NotFoundComponent","canActivate","AuthorisedUserGuard","canLoad","children","RoomBookingComponent","BookingConfirmedComponent","MeetingBookingComponent","MeetingBookingSuccessComponent","DeskBookingComponent","DeskBookingSuccessComponent","FindSpaceComponent","UpcomingBookingsComponent","pathMatch","redirectTo","exports","AppRoutingModule","_createClass","_classCallCheck","this","t","i0","RouterModule","forRoot","useHash","operators_1","ts_client_1","common_1","user_utilities_1","event_class_1","MOCKS","AppComponent","_common_1$AsyncHandle","_inherits","_ngOnInit","_super","_createSuper","_settings","_org","_cache","_snackbar","_this","call","title","key","value","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_Office","_Office$auth","get_token","tkn","_Office2","_Office2$context","wrap","_context","prev","next","console","info","window","history","replaceState","data","unused","log","setNotifyOutlet","initialised","pipe","first","_","toPromise","Office","onReady","_initialiseAuth","token","abrupt","_finishInitialise","timeout","auth","getAccessToken","Promise","resolve","sent","clearTimeout","concat","sessionStorage","setItem","t0","catch","JSON","stringify","context","ui","_authenticateWithOffice","stop","ngOnInit","apply","arguments","_initialiseAuth2","_this2","local","length","undefined","_callee2","settings","_context2","setAppName","get","local_login","storage","mock","location","origin","includes","setupPlace","error","_finishInitialise2","_callee3","_ref","_ref$email","_this3","_context3","setupCache","onInitError","current_user","setDefaultCreator","currentUser","setInternalUserDomain","email","split","_authenticateWithOffice2","_callee4","_this4","_context4","pathname","displayDialogAsync","height","width","result","dialog","addEventHandler","EventType","DialogMessageReceived","setToken","close","href","getItem","messageParent","_ref2","isMock","is_logged_in","invalidateToken","reload","AsyncHandler","ɵɵdirectiveInject","i1","SettingsService","i2","OrganisationService","i3","SwUpdate","i4","MatSnackBar","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","template","rf","ctx","ɵɵelement","forms_1","platform_browser_1","http_1","animations_1","snack_bar_1","core_1","service_worker_1","payments_1","explore_1","assets_1","catering_1","form_fields_1","environment_1","app_component_1","app_routing_module_1","book_module_1","shared_module_1","space_pipe_1","core_2","http_loader_1","select_1","HttpLoaderFactory","http","TranslateHttpLoader","AppModule","bootstrap","SpacePipe","imports","BrowserModule","BrowserAnimationsModule","BookModule","SharedComponentModule","HttpClientModule","FormsModule","MatNativeDateModule","MatSnackBarModule","MatSelectModule","PaymentsModule","AssetsModule","FormFieldsModule","ReactiveFormsModule","SharedCateringModule","SharedExploreModule","TranslateModule","defaultLanguage","loader","provide","TranslateLoader","useFactory","deps","HttpClient","ServiceWorkerModule","register","enabled","environment","production","router","Router","consts","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","url","autocomplete_1","button_1","datepicker_1","dialog_1","form_field_1","input_1","progress_spinner_1","chips_1","menu_1","checkbox_1","tabs_1","tooltip_1","radio_1","progress_bar_1","expansion_1","badge_1","slider_1","icon_1","bookings_1","events_1","SharedBookingsModule","SharedEventsModule","ComponentsModule","MatButtonModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","MatProgressBarModule","MatAutocompleteModule","MatChipsModule","MatRippleModule","MatMenuModule","MatCheckboxModule","MatExpansionModule","MatTabsModule","MatBadgeModule","MatTooltipModule","MatRadioModule","MatSliderModule","_service","_router","clearForm","form","_makeBooking","confirmPost","navigate","makeBooking","BookingFormService","ɵɵlistener","ɵɵproperty","asset_id","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","patchValue","secondary_resource","ctx_r2","ɵɵpureFunction0","_c0","ctx_r3","date","duration","_r7","ctx_r6","ɵɵtemplate","DeskBookingFormComponent_div_0_mat_checkbox_37_Template","DeskBookingFormComponent_div_0_div_38_Template","DeskBookingFormComponent_div_0_section_46_Template","ctx_r0","tmp_3_0","allow_all_day","can_book_lockers","allow_assets","DeskBookingFormComponent","_this$_service$form$g","_this$_service$form$g2","setOptions","type","subscription","valueChanges","subscribe","list","setBookingAsset","desk","_desk$zone","_desk$zone2","id","asset_name","name","map_id","description","booking_type","zones","zone","parent_id","booking_asset","DeskBookingFormComponent_div_0_Template","last_success","DeskBookingSuccessComponent_p_12_Template","ɵɵtextInterpolate","ɵɵtextInterpolate3","ɵɵpipeBind2","meeting_flow_confirm_component_1","_bottom_sheet","host","valid","notifyError","getInvalidFields","join","sheet_ref","open","MeetingFlowConfirmComponent","instance","show_close","afterDismissed","setView","EventFormService","MatBottomSheet","users_1","bld_r8","display_name","_r10","ctx_r9","setBuilding","MeetingBookingFormComponent_div_0_div_12_mat_option_8_Template","ɵɵpipeBind1","ctx_r1","building","tmp_2_0","buildings","_r12","ctx_r11","findAvailableTime","ctx_r13","hide_block","attendees","_r15","ctx_r14","catering","ctx_r5","ɵɵpureFunction3","_c1","resources","level","has_catering","_r17","ctx_r16","details","MeetingBookingFormComponent_div_0_div_12_Template","ctx_r18","MeetingBookingFormComponent_div_0_mat_checkbox_45_Template","MeetingBookingFormComponent_div_0_div_46_Template","MeetingBookingFormComponent_div_0_section_47_Template","ctx_r19","MeetingBookingFormComponent_div_0_section_60_Template","ctx_r20","assets","MeetingBookingFormComponent_div_0_section_73_Template","max_duration","can_book_for_others","hide_attendees","hide_notes","MeetingBookingFormComponent","_dialog","active_building","building_list","_this$form$value","ref","FindAvailabilityModalComponent","users","organiser","afterClosed","d","componentInstance","getValue","bld","saveBuilding","MatDialog","MeetingBookingFormComponent_div_0_Template","ANIMATION_SHOW_CONTRACT_EXPAND","system","button_toggle_1","bottom_sheet_1","ROUTES","CommonModule","forChild","NativeDateModule","MatBottomSheetModule","MatButtonToggleModule","rxjs_1","_state","_this$_state$last_suc","_this$_state$last_suc2","_this$_state$last_suc3","_this$_state$last_suc4","_this$_state$last_suc5","of","start_time$","Date","toLocaleTimeString","hour","minute","hour12","end_time$","newBooking","ɵɵtextInterpolate4","FeaturesFilterService","spaces$","available_spaces","updated_spaces_emitter","BehaviorSubject","_selected_features","selected_features$","asObservable","_features","features$","room_features","set","feature","_getSelectedFeatures","_this$selected_featur","map","arr","filter","item","take","getSelectedFeatures","_applyFilter","_this$updated_spaces$","requested_features","sortSelectedFeatures","selected_features","updated_spaces$","spaces","space","_sort_and_join","feature_list","applyFilter","array","sort","_sortSelectedFeatures","features_array","_x","_this$room_features","_this$features_sub","features_sub","unsubscribe","ɵɵinject","factory","ɵfac","providedIn","bld_r5","FilterSpaceComponent_form_1_mat_form_field_16_mat_option_3_Template","restoredCtx","$implicit","feature_r8","_r13","ctx_r12","closeModal","FilterSpaceComponent_form_1_label_14_Template","FilterSpaceComponent_form_1_mat_form_field_16_Template","FilterSpaceComponent_form_1_div_43_Template","ctx_r15","applyFilters","tmp_1_0","minDate","FilterSpaceComponent","_bottomsheetRef","_featuresFilterService","b","dismiss","MAT_BOTTOM_SHEET_DATA","MatBottomSheetRef","attrs","FilterSpaceComponent_form_1_Template","FindSpaceItemComponent","selected","selectedChange","EventEmitter","toggleSelected","emit","inputs","outputs","ɵɵclassProp","ɵɵtextInterpolate2","capacity","filter_space_component_1","space_r11","handleBookEvent","ctx_r10","book_space","FindSpaceComponent_ng_container_33_ng_container_1_div_1_find_space_item_1_Template","ctx_r8","map_r17","_r19","selected_level","updateSelectedLevel","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_mat_option_6_Template","maps_list$","map_r24","ctx_r23","map_styles$","map_features$","map_actions$","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_div_1_Template","ctx_r21","ctx_r22","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_div_2_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_div_3_Template","tmp_0_0","ɵɵelementContainerStart","FindSpaceComponent_ng_container_33_ng_container_1_div_1_Template","FindSpaceComponent_ng_container_33_ng_container_1_div_2_Template","ɵɵelementContainerEnd","ctx_r7","space_view","FindSpaceComponent_ng_container_33_ng_container_1_Template","_r4","_r26","ctx_r25","openRoomDetails","_bottomSheet","_spaces","_mapService","_roomConfirmService","filtered_spaces","show_room_details$","_map_features","space_list","quick_capacities","levels","combineLatest","options","_slicedToArray","_ref3","_ref4","_toConsumableArray","levelsForBuilding","loading","o","_this$_mapService$map","setTimeChips","v","locateSpaces","locatable_spaces$","tap","maps","features_loaded$","applyMapDecorations","map_features","book","updateSelectedSpace","bottomSheetRef","openRoomDetail","selected_space","_this$form","_this$form$controls","_this$form$controls$d","_this$form2","_this$form2$controls","_this$form2$controls$","_this$form3","_this$form3$controls","_this$form3$controls$","controls","duration_minutes","end","e","_this$selected_level","processFeature","processStyles","style_map","clearFilter","SpacesService","i5","i6","MapService","i7","RoomConfirmService","i8","openFilter","FindSpaceComponent_span_14_Template","resetSpace","FindSpaceComponent_ng_container_33_Template","FindSpaceComponent_ng_template_35_Template","ɵɵtemplateRefExtractor","FindSpaceComponent_ng_template_37_Template","FindSpaceComponent_div_40_Template","_r2","room_tile_component_1","_locateSpaces","_map_loaded","map_loaded$","_features_loaded","selected_space$","_locatable_spaces","_maps_list","_this$locatable_space","locatable_spaces","loadMap","action","callback","openRoomTile","_loadMap","_this$locatable_space2","_this$maps_list$","mapsList","Map","values","focus","content","MapPinComponent","z_index","zoom","styles","display","RoomTileComponent","panelClass","common_2","downloadTemplate","findSpace","min_date","tmp_4_0","_document","show_spaces","show_people","newForm","_findSpace","markAllAsTouched","storeForm","DOCUMENT","RoomBookingComponent_form_1_Template","room_details_component_1","room_confirm_component_1","_space_pipe","_this$_state$form","_this$_state$form$get","_selected_space","forEach","s","_openRoomDetail","room_details_ref","RoomDetailsComponent","selectedSpace","openRoomConfirm","RoomConfirmComponent","_bookRoom","id_list","Object","keys","all","transform","postForm","bookRoom","_postForm","err","attendee_r1","_bottomSheetRef","show_submit_button","_this$form4","_this$form4$controls","durationMinutes","unix_time","start_time","end_time","RoomConfirmComponent_div_33_Template","confirmBooking","creator","images","RoomDetailsComponent_section_21_div_3_div_2_Template","RoomDetailsComponent_section_21_div_3_div_3_Template","RoomDetailsComponent_section_21_div_3_div_4_Template","RoomDetailsComponent_section_21_div_3_div_5_Template","RoomDetailsComponent_section_21_div_3_div_6_Template","RoomDetailsComponent_section_21_div_3_div_7_Template","facility_r7","RoomDetailsComponent_section_21_div_3_Template","back","room_added","RoomDetailsComponent_section_1_Template","selectRoom","RoomDetailsComponent_button_6_Template","RoomDetailsComponent_button_7_Template","RoomDetailsComponent_section_21_Template","RoomDetailsComponent_button_23_Template","RoomDetailsComponent_button_24_Template","RoomTileComponent_img_4_Template","RoomTileComponent_div_5_Template","cancel","item_r7","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_event_card_1_Template","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_ng_template_2_Template","isEvent","_r9","UpcomingBookingsComponent_div_3_ng_container_1_ng_container_1_Template","events$","trackByFn","UpcomingBookingsComponent_div_3_ng_container_1_Template","_r3","_schedule","user","loading$","filtered_bookings","toggleType","startPolling","CalendarEvent","ScheduleStateService","UpcomingBookingsComponent_div_3_Template","UpcomingBookingsComponent_ng_template_5_Template","UpcomingBookingsComponent_ng_template_7_Template","_r1","app_module_1","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","formatted_recurrence","user_r10","ɵɵi18n","MeetingFlowConfirmComponent_section_26_mat_chip_9_Template","ɵɵi18nExp","event","ɵɵi18nApply","s_r12","MeetingFlowConfirmComponent_section_27_ng_container_6_Template","_r14","_sheet_ref","_event_form","openConfirmModal","icon","reason","cancelPost","cancelPostForm","_this$_sheet_ref","_space","time_format","formatRecurrence","_objectSpread","recurrence","start","levelWithID","find","address","ɵɵProvidersFeature","i18n_0","$localize","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","i18n_3","_templateObject4","_templateObject5","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_section_27_Template","MeetingFlowConfirmComponent_button_29_Template","pattern","all_day","spaces_1","date_fns_1","_toggleType","_lockers","_poll","_poll_type","_loading","_filters","shown_types","_date","now","_update","debounceTime","_deleted","_space_bookings","distinctUntilKeyChanged","unsubWith","switchMap","requestSpacesForZone","distinctUntilChanged","binding","getModule","obs","listen","event_list","i","resource","catchError","hasSubscription","bind","flatten","shareReplay","ws_events","_ref6","_ref7","isSameDay","toLowerCase","a","api_events","_ref8","query","period_start","getUnixTime","startOfDay","period_end","endOfDay","queryBookings","newCalendarEventFromBooking","queryEvents","events","_ref10","visitors","_ref12","desks","_ref14","include_checked_out","parking","_ref16","lockers","lockers$","_ref18","_ref19","system_id","mod","execute","my_lockers","_ref21","_ref22","_this$_org$levelWithI","locker","locker_id","level_id","Booking","valueOf","locker_name","extension_data","bookings","_ref23","_ref24","p","l","_ref25","_ref26","filters","_filters$shown_types","_filters$shown_types2","parse","interval","stopPolling","clearInterval","setAsDeleted","push","clear","_x2","LockersService","tslib_1","__exportStar","asset_class_1","assets_fn_1","ASSET_GROUP_LIST","EMPTY_ASSET_GROUP","AssetGroup","updateAssetGroupList","assetgroup_list","_step","_iterator","_createForOfIteratorHelper","_loop","assetgroup","n","done","f","AssetGroupPipe","_transform","group_id","asset_group","group","showAssetGroup","pure","asset_select_modal_component_1","asset_r1","AssetListFieldComponent_div_1_img_2_Template","AssetListFieldComponent_div_1_ng_template_3_Template","addAssetGroups","ɵɵi18nStart","ɵɵi18nEnd","removeAssetGroup","toggleFavourite","amount","favorites","EMPTY_FAVS","AssetListFieldComponent","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","changes","new_value","asset","updated_list","setValue","AssetSelectModalComponent","slice","fav_list","new_state","saveUserSetting","AssetStateService","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵNgOnChangesFeature","AssetListFieldComponent_div_1_Template","toggleFav","countChange","active","activeChange","fav","AssetDetailsComponent","AssetDetailsComponent_ng_container_0_Template","AssetDetailsComponent_ng_template_1_Template","AssetFiltersDisplayComponent","AssetFiltersComponent","asset_r7","selectAsset","AssetListComponent_ng_container_6_ul_1_li_1_div_3_Template","AssetListComponent_ng_container_6_ul_1_li_1_img_4_Template","AssetListComponent_ng_container_6_ul_1_li_1_ng_template_5_Template","category","isFavourite","AssetListComponent_ng_container_6_ul_1_li_1_Template","AssetListComponent_ng_container_6_ul_1_Template","AssetListComponent","_asset_state","selected_items","onSelect","counts","filtered_assets","_this$selected_items","_step2","_iterator2","AssetListComponent_ng_container_6_Template","AssetListComponent_ng_template_8_Template","AssetListComponent_ng_template_10_Template","displayed","_items","reduce","selected_ids","state","count","MAT_DIALOG_DATA","setSelected","updateSelectedCount","AssetSelectModalComponent_button_14_Template","isSelected","bookings_fn_1","asset_group_pipe_1","_options","_search","search","asset_list","queryAssets","replace","asset_bookings","available_groups","_ref3$","ignore","queryGroupAvailability","startOfMinute","endOfMinute","addMinutes","localeCompare","_ref5","_$assets","AssetCategory","parent_category_id","created_at","updated_at","assign","AssetPurchaseOrder","Asset","type_id","serial_number","barcode","identifier","other_data","purchase_order_id","generateAssetCategoryForm","FormGroup","FormControl","Validators","required","generateAssetPurchaseOrderForm","order","order_number","purchase_order_number","invoice_number","unit_price","purchase_date","expected_service_start_date","depreciation_start_date","expected_service_end_date","depreciation_end_date","generateAssetGroupForm","category_id","brand","generateAssetForm","assetsToGroups","groups","asset_type_id","_i","_groups","groupsToAssets","api_1","booking_class_1","BASE_ENDPOINT","queryAssetCategories","q","toQueryString","addAssetCategory","post","cleanObject","updateAssetCategory","put","queryAssetGroups","addAssetGroup","product","updateAssetGroup","addAsset","updateAsset","addAssetsInBulk","updateAssetsInBulk","queryAssetPurchaseOrders","addAssetPurchaseOrder","updateAssetPurchaseOrder","queryAvailableAssets","booking","_removeAssetRequests","requests","request","removeBooking","_updateAssetRequestsForResource","_ref9","new_assets","old_assets","ical_uid","location_name","location_id","filtered","event_id","_ref11","createBooking","user_email","saveAssetCategory","showAssetCategory","deleteAssetCategory","del","saveAssetGroup","deleteAssetGroup","saveAsset","showAsset","deleteAsset","saveAssetsInBulk","every","deleteAssetsInBulk","body","saveAssetPurchaseOrder","showAssetPurchaseOrder","deleteAssetPurchaseOrder","getGroupsWithAssets","showGroupFull","limit","purchase_orders","_purchase_orders$find","products","_loop2","removeAssetRequests","updateAssetRequestsForResource","_x3","_x4","_x5","booking_details_modal_component_1","async_handler_class_1","day","BookingCardComponent_h4_0_span_1_Template","show_day","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","ɵɵpureFunction1","is_done","status","period","for_current_user","BookingCardComponent","_async_handler_class_","_route","edit","remove","_this$booking","queryParamMap","params","_this2$booking","has","_this$booking2","_this$booking3","_this$booking4","is_today","format","_this$booking5","_this$booking6","_this$booking7","_this$booking8","is_all_day","dur","formatDuration","hours","Math","floor","minutes","BookingDetailsModalComponent","ActivatedRoute","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","map_locate_modal_component_1","map_pin_component_1","checked_in","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","auto_checkin","_c4","_r16","_booking","hide_map","ts","booking_start","booking_end","_this$booking9","_this$booking10","_toggleCheckedIn","checkinBooking","notifySuccess","MapLocateModalComponent","maxWidth","maxHeight","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","viewLocation","BookingDetailsModalComponent_interactive_map_41_Template","BookingDetailsModalComponent_button_52_Template","BookingDetailsModalComponent_button_53_Template","is_in_progress","booking_utilities_1","desk_questions_modal_component_1","booking_utilities_2","booking_link_modal_component_1","BOOKING_TYPES","_confirmPost","_payments","_assets","_view","_resource_use","generateBookingForm","loadResourceList","Array","unique","restrictions","showMetadata","available_resources","merge","timer","getRawValue","_this$form$getRawValu","zone_id","user_name","_asset$groups","_options$features","_asset$zone","_asset$zone2","_$items","rest","some","grp","bookable","bkn","grouped_availability","_options$members","_a$zone","_a$zone$id","_b$zone","members","pop","_$zone","_asset$zone3","NavigationEnd","reset","_this2$form$getRawVal","enable","_this$_options$getVal","splice","findIndex","booked_by","removeItem","_this$_org$building","booking_data","force","BookingLinkModalComponent","checkQuestions","postFormForGroup","ignore_check","_value$zones","_this3$_booking$getVa","_value$user","_value$user2","_value$user2$id","_value$user3","_value$user4","_value$assets","_booking$extension_da","_this3$form","receipt","checkResourceAvailable","payment_module","makePayment","resource_name","success","invoice","invoice_id","saveBooking","user_id","department","approved","booking_id","booked_by_email","_postFormForGroup","_active_resource$zone","_this$_options$getVal2","extra_members","active_resource","group_members","available","unavailable","group_name","_asset$zone4","_asset$zone5","_unavailable$map","t1","_getNearbyResources","t2","t3","idx","organisation","notifyWarn","_checkQuestions","DeskQuestionsModalComponent","race","_checkResourceAvailable","_this5","_callee5","_this5$_settings$get","allowed_bookings","current","_context5","_ref13","listChildMetadata","_$metadata$type","_$metadata$type2","metadata","_d$lockers","bank_id","_getNearbyResources2","_callee6","map_url","nearby_resources","_context7","_context6","findNearbyFeature","delegateYield","_x6","PaymentsService","calendar_links_1","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","ɵɵsanitizeUrl","IGNORE_EXT_KEYS","_data$extension_data","_data$extension_data2","_data$title","_data$extension_data3","_data$all_day","roundToNearestMinutes","nearestTo","abs","differenceInMinutes","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","capitalizeFirstLetter","trim","rejected","deleted","booked_by_id","booked_by_name","approver_id","approver_email","approver_name","access","checked_out_at","linked_event","getHours","removeEmptyFields","addHours","checked_out","getTime","isAfter","isBefore","add","validators_1","svg_viewer_1","_findNearbyFeature","centered_at","desk_ids","element","viewer","point","dist","closest","x","y","document","createElement","style","position","top","appendChild","createViewer","getViewer","mappings","sqrt","removeChild","removeViewer","_booking$all_day","_booking$extension_da2","_booking$extension_da3","_booking$extension_da4","endInFuture","company","other_asset_type","previous_time","previous_duration","previous_all_day","_v$all_day","_form$get","_form$get2","booker","emitEvent","disable","_resource$zone","_resource$zone2","roundingMethod","setHours","setMinutes","max","newBookingFromCalendarEvent","_event$system","_event$system2","_event$system3","user_class_1","BOOKINGS_ENDPOINT","updateBooking","patch","encodeURIComponent","queryPagedBookings","query_params","endpoint","queryAllBookings","resp","showBooking","response_type","approveBooking","rejectBooking","checkinBookingAttendee","GuestUser","queryResourceAvailability","isResourceAvailable","components_module_1","form_fields_module_1","_r11","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desk_list","DeskConfirmModalComponent","_data","_templateObject6","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","desk_select_modal_component_1","opt_r7","setFeature","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","DeskListFieldComponent","room_size","FAV_DESK_KEY","DeskSelectModalComponent","DeskListFieldComponent_div_1_Template","submit","travelled","unwell","contact","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent","updateFeature","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","desk_filters_component_1","feat_r2","_r6","show_fav","DeskFiltersDisplayComponent","_bsheet","view","viewChange","editFilter","DeskFiltersComponent","_this$_state$form$val","DeskFiltersDisplayComponent_div_16_Template","DeskFiltersDisplayComponent_div_18_Template","tmp_5_0","bld_r9","DeskFiltersComponent_div_10_mat_option_5_Template","_c16","lvl_r14","DeskFiltersComponent_div_12_mat_option_6_Template","feat_r18","_r20","ctx_r17","_c21","DeskFiltersComponent_section_40_div_3_Template","_r22","_bsheet_ref","can_close","active_buildings","active_levels","all_day_time","setLevel","allow_time_changes","addDays","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_29_Template","DeskFiltersComponent_section_40_Template","DeskFiltersComponent_div_42_Template","end_date","use_24hr","tmp_11_0","tmp_20_0","tmp_22_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","explore_spaces_service_1","explore_desk_info_component_1","lvl_r1","DeskMapComponent","is_displayed","center","_change","actions","ExploreDeskInfoComponent","full_size","no_scale","resourceUserName","free_desks","colours","fill","DEFAULT_COLOURS","_this$level","_this2$level2","_this2$level","_this2$level3","new_zoom","min","DeskMapComponent_mat_option_3_Template","setZoom","resetMap","_r8","_dialog_ref","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","desk_confirm_modal_component_1","DesksService","error_on_host","_bookDesk","_desks$0$zone","makeDeskBooking","bookDesk","_makeDeskBooking","for_user","_desk$zone3","_desk$zone4","notifications_1","general_1","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","setVisitor","item_r22","_r24","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","ɵɵelementContainer","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","InviteVisitorFormComponent","last_count","_item$split","_item$split2","clearOldState","initFormZone","setValidators","_sendInvite","visitor_details","old_visitors","_bookForMany","_bookForOne","_initFormZone","_bookForOne2","User","_bookForMany2","randomString","finish","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","ɵɵstyleProp","size","LockerGridComponent","bank_status","_this$bank","columns","bank","LockerGridComponent_button_3_Template","locker_select_modal_component_1","opt_r8","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","accessible","LockerListFieldComponent","FAV_LOCKER_KEY","LockerSelectModalComponent","LockerListFieldComponent_div_1_Template","locker_bank_r7","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","LockerBankListComponent","lockers_banks$","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","locker_filters_component_1","LockerFiltersDisplayComponent","LockerFiltersComponent","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r13","LockerFiltersComponent_div_12_mat_option_5_Template","feat_r17","_c19","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_16_0","tmp_18_0","explore_locker_bank_info_component_1","LockerMapComponent","selectLocker","ExploreLockerBankInfoComponent","free_lockers","LockerMapComponent_mat_option_7_Template","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","_r18","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","_level","PlaceMetadata","_$metadata$lockers","_$metadata$lockers2","bank_list","filtered_lockers$","_saveLockers","updateMetadata","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_c12","ParkingSpaceDetailsComponent","_this$space","_this$space2","_this$space3","_this$space4","_updateFeature","_this$space5","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","parking_filters_component_1","removeFeature","ParkingSpaceFiltersDisplayComponent","_removeFeature","editFilters","ParkingSpaceFiltersComponent","_this$_event_form$for","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_6_0","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","lvl","tags","_toggleFeature","new_list","ParkingSpaceFiltersComponent_button_2_Template","zone_ids","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","parking_location_pin_component_1","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","parking_select_modal_component_1","space_r1","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","ParkingSpaceListFieldComponent_div_1_Template","space_class_1","Calendar","primary","summary","can_edit","Space","availability","starts_at","ends_at","hidden","calendar_class_1","CALENDAR_ENDPOINT","queryCalendarAvailability","c","queryCalendars","calendarsToSpaces","org","cal","querySpaceCalendarAvailability","queryUserFreeBusy","querySpaceFreeBusy","catering_interfaces_1","type_r8","CateringConfigModalComponent_div_10_div_16_mat_option_3_Template","i_r6","index","set_r2","rules","rule_r5","rule_types","show_rules","i_r3","rulesets","CateringConfigModalComponent_div_10_div_16_Template","CateringConfigModalComponent","require_notes","RULE_TYPES","config","random","saveNotes","CateringConfigModalComponent_button_3_Template","saveNotesSetting","new_id","CateringConfigModalComponent_div_10_Template","saveChanges","catering_item_class_1","handleFileEvent","CateringImportMenuModalComponent","target","files","file","fileReader","FileReader","addEventListener","csvToJson","CateringItem","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","keycodes_1","invalid","touched","item_r15","removeTag","ɵɵattribute","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","addTag","tag_list","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","ctx_r24","CateringItemModalComponent_form_4_div_27_Template","hasTag","renderPercent","_r27","ctx_r26","dirty","option_r28","CateringItemModalComponent","accept_points","discount_cap","ENTER","COMMA","SPACE","categories","tag","markAsDirty","input","existing_tag","indexOf","randomInt","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_this$options","_data$in_order","quantity","has_options","option_list","hide_for_zones","unit_price_with_options","total_cost","options_string","in_order","new_catering_order_modal_component_1","optionList","CateringListFieldComponent_div_1_img_2_Template","CateringListFieldComponent_div_1_ng_template_3_Template","CateringListFieldComponent_div_1_span_8_Template","addItems","CateringListFieldComponent","NewCateringOrderModalComponent","_item$option_list","cateringitem","CateringListFieldComponent_div_1_Template","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","show_options","symbol","option_r8","editOption","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","CateringMenuItemComponent","_catering","addOption","option","deleteOption","editItem","addItem","deleteItem","is_editable","updateItem","currency","CateringStateService","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","menu_map","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","option_r13","CateringItemOptionModalComponent","types","new_option","parent","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","ACTIVE_ITEMS","Set","CateringOrderItemComponent","_this$item","order_id","item_key","delete","CateringOrderItemComponent_ng_container_0_Template","order_r3","CateringOrderListComponent","_orders","order_list","CateringOrdersService","CateringOrderListComponent_li_18_Template","CateringOrderListComponent_div_20_Template","CateringOrderListComponent_mat_progress_bar_22_Template","catering_order_class_1","utilities_1","item_r11","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","_r28","item_count","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","_r25","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","currency_code","_this$order$event","_this$order$event$spa","_this$order$event$spa2","CateringOrder","getCateringConfig","cat","cateringItemAvailable","updateMenuQuantities","_item$options","choose_options","old_item","itm","opt","selectOptions","then","new_item","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","group_r7","group_state","updateGroupOption","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","opt_r22","option_state","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","CateringItemDetailsComponent","group_list","_step3","_iterator3","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","item_r2","toggleCategory","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","icons","setFilters","_toggleCategory","_toggleTag","toggleTag","CateringOrderStateService","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_mat_checkbox_8_Template","CateringItemListItemComponent","favourite","select","_this$item$option_lis","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","selectItem","custom_id","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","item_r13","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","filtered_menu","item_id","_this$favorites","clear_state","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","charge_codes","disabled_rooms","available_menu","_ref7$","getCateringRulesForZone","opts","_order","NewCateringOrderModalComponent_button_14_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","group_r1","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","CateringOrderOptionsModalComponent_div_7_Template","saveOptions","_data$event","_this$event","charge_code","notes","deliver_at","catering_vars_1","CateringOrderComponent_div_0_button_15_Template","show_items","colour","CateringOrderComponent_ul_1_li_1_Template","status_r10","updateStatus","CateringOrderComponent","statuses","CATERING_STATUSES","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","events_fn_1","_updateStatus","orders","_ref2$","ext","checkOrder","updated_order","saveEvent","toJSON","space_utilities_1","space_r4","toggleRoom","CateringRoomsStateModalComponent_main_7_tr_13_Template","rooms","CateringRoomsStateModalComponent","_toggleRoom","_enableSelected","disabled_list","saveSettings","enableSelected","_disableSelected","disableSelected","CateringRoomsStateModalComponent_main_7_Template","CateringRoomsStateModalComponent_ng_template_13_Template","catering_item_modal_component_1","catering_option_modal_component_1","catering_config_modal_component_1","catering_order_modal_component_1","catering_order_options_modal_component_1","catering_import_menu_modal_component_1","_manageCateringOrder","_updated","_menu","_currency","getCateringForZone","_details$metadata","manageCateringOrder","_addItem","updateMenu","_addOption","_selectOptions","_deleteItem","_this6","class","_deleteOption","_callee7","_this7","_x7","_editConfig","_callee8","_this8","_context8","_yield$this$settings$","updateConfig","editConfig","_importMenu","_callee9","updated_menu","_context9","importMenu","_saveSettings","_callee10","_context10","old_settings","_x8","_getCateringForZone","_callee11","_context11","_x9","_getCateringConfig","_callee12","_context12","match","_new_item$options","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","addCodesFromFile","newCode","saveChargeCodes","ChargeCodeListModalComponent","reader","evt","srcElement","_saveChargeCodes","cleaned_codes","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template","helpers_1","RULE_REQUESTS","is_available","_event$space","rule","matches","condition","subHours","stringToMinutes","trigger","transition","opacity","animate","IGNORE_VALUES","str","_timer","_new_version","_activateUpdate","cache","isEnabled","checkForUpdate","activateUpdate","notifyInfo","hasNewVersion","setInterval","clearCacheCheck","_timers","_intervals","_subscriptions","_initialised","destroy","unsub","delay","Function","Error","setTimeout","_clearTimeout","toString","_clearInterval","Subscription","contains","subs","k","timezone_helpers_1","formatUTC","utc_date","localToTimezone","formatAllDay","formatCalFileText","_event$duration","_event$organiser","_event$host","chunks","meeting_url","toISOString","url_data","_event$duration2","_event$resources","fmt","text","trp","dates","emails","_event$duration3","_event$all_day","_event$resources2","rru","startdt","enddt","subject","allday","to","enumerable","google_analytics_service_1","GoogleAnalyticsService","hotkeys_service_1","HotkeysService","settings_service_1","vorlon_service_1","VorlonService","version_1","VERSION","PLACEOS_APP_ACCESS","FeatureAvailableGuard","_canActivate","checkFeature","_canLoad","_checkFeature","can_activate","charAt","toUpperCase","confirm_modal_component_1","_app_name","ceil","_openConfirmModal","ConfirmModalComponent","CONFIRM_METADATA","t4","t5","t6","msg","args","stream","app_name","jest","debug","_console","_console2","colors","getItemWithKeys","el","exists","padString","chars","csv","objPattern","RegExp","arrMatches","arrData","exec","headers","row","loadTextFileFromInputEvent","reject","jsonToCsv","json","valid_keys","filename","contents","setAttribute","click","parseJWT","base64","jsonPayload","decodeURIComponent","atob","charCodeAt","an_array","stack","res","isArray","reverse","timePeriodsIntersect","start1","end1","start2","end2","rand","sfc32","xmur3","h","imul","seed","is24HourTime","localeString","querySelector","getAttribute","navigator","language","predictableRandomInt","timeFormatString","prefix","obj","word","substring","cleanArray","removal_items","isMobileSafari","platform","userAgent","isNestedFrame","timers","tracking_id","gtag","dataLayer","w","getElementsByTagName","j","async","src","parentNode","insertBefore","service","page","label","appName","screenName","route","last_route","variable","Title","INVALID_STANDALONE_KEYS","keydown_states","keydown_observers","combo_end","registered_combos","counter","mapKey","last_down","preventDefault","combo","combination","validCombination","last_key","updateCombinationEndList","presses","non_meta","_disable_logging","notify","message","on_action","warn","snackbar_ref","onAction","snackbar","_msg","_msg2","_setupPlace","protocol","port","domain","hostname","use_domain","localStorage","auth_type","scope","auth_uri","token_uri","redirect_uri","handle_login","use_iframe","setup","vanillaqr_min_1","generateQRCode","_qr$toImage","qr","VanillaQR","colorLight","colorDark","toTable","ecclevel","noBorder","borderSize","toImage","RemoteLoggingService","_system_id","_events","Subject","_event_history","_logging_bindings","_bindTo","_patchConsoleMethods","_types","hookMethod","rootObject","functionToHook","hookingFunction","previousFunction","_len","_key","_len2","_key2","_handleEvent","event_type","subtype","timestamp","startsWith","module","roomConfigs","output","r","mergeRoomConfig","settings_1","user_state_1","_init","_title","_analytics","_overrides","_user_settings","_subjects","_observables","_pending_settings","time","built","semver","hash","init","_applyCssVariables","getTitle","_this$_analytics","setTitle","send","_this$get","_setDarkMode","application","_applyUserSettings","_setFontSize","DEFAULT_SETTINGS","override_settings","override","_savePendingChanges","important","getElementById","head","innerText","variable_map","css_string","_savePendingChanges2","_applyUserSettings2","overrideCssVariable","composer","app","short_name","logo_light","logo_dark","can_deliver","general","banner","copyright","help","tiles","link","background","multiple_spaces","desk_start","space_display","show_images","directory","show_avatars","min_search_length","explore","can_select_building","show_legend_group_names","legend","Spaces","allow_groups","auto_allocation","analytics","hide_contacts","schedule","color","departments","_whenChangesStable","spectator","detectChanges","fixture","whenStable","whenChangesStable","date_fns_tz_1","_Intl","_Intl$DateTimeFormat","_Intl$DateTimeFormat$","offset_diff","getTimezoneOffset","LOCAL_TIMEZONE","addMilliseconds","timezoneToLocal","tz","abbr","offset","isdst","utc","TIMEZONES","cloud_uploads_1","blobUtil","uploadFile","pub","permissions","Observable","observer","blob","arrayBufferToBlob","upload","upload_list","uploadFiles","file_name","public","upload_details","progress","formatted_size","humanReadableByteCount","takeWhile","access_url","complete","readAsArrayBuffer","EVENTS_NAMES","UserIdleTimeService","_last_action","_onUserInteraction","_event_names","last_action","throttleTime","idle_time","time_ms","startListening","stopListening","removeEventListener","EMPTY_USER","StaffUser","_current_user","showUser","retry","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","domElement","qrc","m","u","gexp","glog","R","Q","V","N1","N3","N2","N4","genframe","C","E","N","T","eccblocks","z","adelta","vpat","fmtword","tableWrite","canvasWrite","prototype","getContext","lineWidth","round","canvas","clearRect","fillStyle","fillRect","cssText","cloneNode","firstChild","innerHTML","Image","toDataURL","raw","distance","suffix","semverString","version","_load","load","injectVorlonScript","removeVorlonScript","_script","applySetting","dark_mode","font_size","AccessibilityTooltipComponent","_this$_data","CustomTooltipData","AccessibilityTooltipComponent_div_6_Template","AccessibilityTooltipComponent_ng_container_14_Template","can_change_dark_mode","ɵɵclassMap","ActionIconComponent","className","ngContentSelectors","ɵɵprojection","ActionIconComponent_div_4_Template","ActionIconComponent_div_5_Template","IMAGE_STORE","AuthenticatedImageDirective","_loadImage2","_image_el","source","_loadImage","response","nativeElement","cookie","apiKey","fetch","URL","createObjectURL","ElementRef","AuthorisedAdminGuard","checkUser","segments","_checkUser","onlineState","_access","_this$_access","BindingDirective","_element","_renderer","sys","on_event","model","modelChange","_binding","_old_model","bindVariable","authority","Renderer2","bld_r1","BuildingSelectComponent","_this$_data2","BuildingSelectComponent_mat_radio_button_12_Template","BuildingPipe","marked_1","changelog","ɵɵsanitizeHtml","ChangelogModalComponent","marked","ChangelogModalComponent_main_6_Template","ChangelogModalComponent_ng_template_7_Template","clipboard_1","paginator_1","table_1","portal_1","slide_toggle_1","core_3","icon_component_1","user_avatar_component_1","interactive_map_component_1","safe_pipe_1","sanitise_pipe_1","custom_tooltip_component_1","sort_1","image_carousel_component_1","debug_console_component_1","scrolling_1","user_controls_component_1","authenticated_image_directive_1","MAT_MODULES","ClipboardModule","MatPaginatorModule","CdkTableModule","PortalModule","MatSortModule","ScrollingModule","MatSlideToggleModule","useValue","UserAvatarComponent","NgIf","SafePipe","MatRipple","MatDialogClose","MatProgressSpinner","IconComponent","InteractiveMapComponent","ImageCarouselComponent","NgForOf","DebugConsoleComponent","NgSwitch","NgSwitchCase","NgSwitchDefault","DefaultValueAccessor","NgControlStatus","NgModel","CdkFixedSizeVirtualScroll","CdkVirtualForOf","CdkVirtualScrollViewport","CustomTooltipComponent","AsyncPipe","DatePipe","SanitizePipe","UserControlsComponent","MatTooltip","TranslatePipe","onConfirm","cancel_text","confirm_text","disableClose","enableClose","ConfirmModalComponent_main_3_Template","ConfirmModalComponent_footer_4_Template","ConfirmModalComponent_ng_template_5_Template","column_size","i_r5","display_column","column_r4","CustomTableComponent_ng_container_1_div_3_ng_container_1_span_2_Template","row_r9","CustomTableComponent_ng_container_1_div_3_ng_template_2_ng_container_0_Template","ɵɵpureFunction4","CustomTableComponent_ng_container_1_div_3_ng_container_1_Template","CustomTableComponent_ng_container_1_div_3_ng_template_2_Template","CustomTableComponent_ng_container_1_div_2_Template","CustomTableComponent_ng_container_1_div_3_Template","row_r20","row_clicked","empty","CustomTableComponent","pagination","page_size","data_source","MatTableDataSource","_sort","paginator","_paginator","filterPredicate","dataSource","viewQuery","MatPaginator","MatSort","CustomTableComponent_ng_container_1_Template","CustomTableComponent_cdk_header_row_2_Template","CustomTableComponent_cdk_row_3_Template","CustomTableComponent_ng_template_4_Template","CustomTooltipComponent_ng_template_1_ng_container_1_ng_container_1_Template","injector","CustomTooltipComponent_ng_template_1_ng_container_3_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_1_Template","CustomTooltipComponent_ng_template_1_ng_container_2_Template","CustomTooltipComponent_ng_template_1_ng_container_3_Template","_overlay","_injector","backdrop","hover","_overlay_ref","onClick","onTouch","onEnter","onLeave","_updateInjector","x_pos","y_pos","_get","_getPrototypeOf","_updateType","_portal","getBoundingClientRect","create","hasBackdrop","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","attach","backdropClick","dispose","TemplateRef","Injector","providers","Overlay","CdkPortal","CustomTooltipComponent_ng_template_1_Template","json_display_component_1","obj_r6","json_tooltip","DebugConsoleComponent_div_0_div_2_div_8_ng_container_2_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_3_Template","DebugConsoleComponent_div_0_div_2_div_8_ng_container_4_Template","DebugConsoleComponent_div_0_div_2_div_8_Template","log_r4","filtered_logs","DebugConsoleComponent_div_0_div_2_Template","DebugConsoleComponent_div_0_span_9_Template","logs","COLOR_MAP","network","dom","URL_STARTS","_logs","_hotkey","show","JsonDisplayComponent","DebugConsoleComponent_div_0_Template","DurationPipe","shorten","FixedPipe","toFixed","GlobalBannerComponent","_this$banner","_this$banner2","GlobalBannerComponent_div_0_Template","has_viewed","GlobalLoadingComponent","isOnline","GlobalLoadingComponent_div_0_Template","GlobalLoadingComponent_div_1_Template","online","tile_r1","HelpTooltipComponent","HelpTooltipComponent_a_6_Template","IconComponent_i_1_Template","IconComponent_img_2_Template","image_r5","ImageCarouselComponent_div_1_img_1_Template","i_r14","ImageCarouselComponent_div_5_button_1_Template","ImageCarouselComponent_div_1_Template","ImageCarouselComponent_div_2_Template","ImageCarouselComponent_button_3_Template","ImageCarouselComponent_button_4_Template","ImageCarouselComponent_div_5_Template","InteractiveMapComponent_ng_container_2_mat_spinner_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_ng_container_1_Template","element_r7","injectors","i_r8","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_ng_container_1_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_3_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_4_Template","InteractiveMapComponent_div_3_ng_container_1_div_1_ng_container_5_Template","track_id","InteractiveMapComponent_div_3_ng_container_1_div_1_Template","InteractiveMapComponent_div_3_ng_container_1_Template","InjectionToken","_createView","zoomChange","centerChange","_on_changes","_extra_data","ratio$","ratio","svg_ratio$","svg_ratio","zoom$","updateDisplay","applyGlobalStyles","createView","updateInjectors","focusOn","previousValue","currentValue","isSamePoint","p1","p2","labels","updateView","updateFeatureList","updateViewer","desired_zoom","desired_center","_this$_outlet_el","_this$_outlet_el3","_this$_outlet_el2","_outlet_el","listenToViewerChanges","rect","_this5$_feature_list$","_feature_list","toArray","old_injectors","_$get","_$get2","onResize","ɵɵresolveWindow","InteractiveMapComponent_ng_container_2_Template","InteractiveMapComponent_div_3_Template","InteractiveMapComponent_ng_template_4_Template","_updateFormatting","formatted_json","lang_r1","setLocale","flag","LanguageSelectComponent","_translation","use","TranslateService","LanguageSelectComponent_button_10_Template","locales","LevelPipe","logo","toPassword","login","LoginComponent","username","password","pwd_field","setErrors","LoginComponent_i_3_Template","LoginComponent_img_4_Template","LoginComponent_ng_container_6_Template","LoginComponent_div_7_Template","LoginComponent_ng_template_8_Template","_this$item$level","MapLocateModalComponent_div_6_Template","stroke","_details","show_message","MapPinComponent_div_0_Template","MapPinComponent__svg_svg_1_Template","MapPolygonComponent","_cdr","padding","svg_scale","points","point_list","zoom_value","_this$_details$ratio$","_this$_details$zoom$","_this$_details$svg_ra","data$","processPoints","diff","x_min","x_max","y_min","y_max","range","ChangeDetectorRef","scale","last_seen_at","MapRadiusComponent_ng_container_0_div_2_span_2_Template","radius","last_seen","updateRadius","MapRadiusComponent_ng_container_0_div_2_Template","MapRadiusComponent","_el","formatDistanceToNow","box","MapRadiusComponent_ng_container_0_Template","MisconfiguredComponent","i_r2","PopoutMenuComponent","PopoutMenuComponent_button_0_Template","RedirectComponent","setRegion","RegionSelectComponent","regions","region_list","region","active_region","RegionSelectComponent_mat_radio_button_12_Template","sanitizer","bypassSecurityTrustResourceUrl","bypassSecurityTrustUrl","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustHtml","DomSanitizer","SecurityContext","NONE","HTML","STYLE","SCRIPT","RESOURCE_URL","sanitize","link_r7","StatusOverlayComponent_ng_container_1_ng_container_5_Template","StatusOverlayComponent_ng_container_1_a_7_Template","links","StatusOverlayComponent","StatusOverlayComponent_ng_container_1_Template","StatusOverlayComponent_ng_template_2_Template","StatusOverlayComponent_ng_template_4_Template","UploadPermissionsModalComponent","is_public","UploadPermissionsModalComponent_div_15_Template","initials","UserAvatarComponent_div_0_div_1_Template","photo","parts","UserAvatarComponent_div_0_Template","UserAvatarComponent_ng_template_1_Template","wfh_settings_modal_component_1","accessibility_tooltip_component_1","building_select_component_1","help_tooltip_component_1","language_tooltip_component_1","region_select_component_1","support_ticket_modal_component_1","region_select","help_tooltip","openWfhModal","language_tooltip","newSupportTicket","reloadPage","building_select","accessibility_tooltip","logout","SupportTicketModalComponent","WFHSettingsModalComponent","_viewChangelog","viewChangelog","UserControlsComponent_div_7_Template","UserControlsComponent_div_21_Template","UserControlsComponent_div_22_Template","UserControlsComponent_div_33_Template","UserControlsComponent_button_34_Template","UserControlsComponent_button_39_Template","has_new_version","focusInput","key_r4","handleKeyPress","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_div_3_Template","VirtualKeyboardComponent_ng_template_1_div_1_ng_container_1_Template","row_r2","VirtualKeyboardComponent_ng_template_1_div_1_Template","keyset","DEFAULT_KEYS","VirtualKeyboardComponent","onFocus","onBlur","_this$_element","_this$_element$native","_this$_element2","_this$_element2$nativ","blur","global","bottom","centerHorizontally","cursor_pos","selectionStart","substr","dispatchEvent","InputEvent","updateKeyState","selectionEnd","VirtualKeyboardComponent_ng_template_1_Template","AttendeeListComponent_div_8_span_6_Template","user_r1","AttendeeListComponent","i18n_1","AttendeeListComponent_div_8_Template","event_details_modal_component_1","EventCardComponent_h4_0_span_1_Template","user_r7","EventCardComponent_a_1_div_30_div_1_Template","EventCardComponent_a_1_div_30_div_3_Template","ɵɵpipeBind3","EventCardComponent_a_1_div_22_Template","EventCardComponent_a_1_div_30_Template","EventCardComponent","_this2$event","getLocationString","_ngOnChanges","ngOnChanges","_getLocationString","_this$event2","_this$event3","_this$event4","zone_list","_this$event5","_this$event6","_this$event7","EventDetailsModalComponent","EventCardComponent_h4_0_Template","EventCardComponent_a_1_Template","building_class_1","level_class_1","checkin","room_status","EventDetailsModalComponent_div_15_button_1_Template","EventDetailsModalComponent_div_15_button_2_Template","can_check_in","allow_edit","opt_r21","EventDetailsModalComponent_ng_container_69_div_5_div_6_Template","EventDetailsModalComponent_ng_container_69_div_5_Template","EventDetailsModalComponent_div_72_div_3_Template","item_r24","EventDetailsModalComponent_ng_container_73_div_5_Template","_c25","show_attendees","act_r31","_r33","EMPTY_ACTIONS","_this$event$system","_this$event2$ext","_this$event3$linked_b","hide_edit","has_assets","linked_bookings","BuildingLevel","Building","accept_count","response_status","declined_count","pending_count","_checkin","_load2","_this$_event$system","_this$_event$system2","EventDetailsModalComponent_div_3_Template","EventDetailsModalComponent_div_4_Template","EventDetailsModalComponent_div_15_Template","EventDetailsModalComponent_ng_container_35_Template","EventDetailsModalComponent_div_37_Template","EventDetailsModalComponent_ng_container_69_Template","EventDetailsModalComponent_interactive_map_71_Template","EventDetailsModalComponent_div_72_Template","EventDetailsModalComponent_ng_container_73_Template","EventDetailsModalComponent_div_77_Template","EventDetailsModalComponent_button_80_Template","EventDetailsModalComponent_button_87_Template","EventDetailsModalComponent_button_88_Template","recurring_event_id","custom_actions","event_link_modal_component_1","helpers_2","asset_utilities_1","events_fn_2","calendar_fn_1","BOOKING_URLS","_newForm","generateEventForm","_zone_ids","forkJoin","_ref4$","limit_map","limited_zones","zone_limit","favorite_spaces","current_available_spaces","_this$_form$getRawVal","filterSpacesFromRules","booking_rules","is_restricted","periodInFreeTimeSlot","future_available_spaces","_this$_form$getRawVal2","has_calendar","querySpaceAvailability","differenceInDays","_ref17","_this$_form$get","_this$_form$get2","catering_notes","clearValidators","updateValueAndValidity","_event$extension_data","master","showEvent","_pattern","resetForm","_event$extension_data2","_event$extension_data3","_event$extension_data4","catering_charge_code","_form_data$assets","form_data","EventLinkModalComponent","_this4$event","_ref20","_spaces$","_this4$event2","_this4$event2$resourc","_this4$event3","_this4$event3$system","_this4$event4","_value$organiser","_value$organiser2","_event$extension_data5","_form$getRawValue","is_owner","breakdown","overflow","_spaces$2","_spaces$3","_spaces$4","_spaces$5","_this4$_org$building","_this4$_org$building2","recurring","checkSelectedSpacesAreAvailable","calendar","old_system","host_override","removeEvent","_makeBooking2","_updateVisitorList","_checkSelectedSpacesAreAvailable","exclude","exclude_range","system_ids","_x10","is_external","has_actioned","_default_user","DAYS_OF_WEEK","_data$from_bookings","_data$update_master","event_start","event_end","_data$recurrence$days","private","online_meeting_url","meeting_id","online_meeting_id","meeting_provider","online_meeting_provider","from_bookings","mailbox","update_master","range_start","range_end","occurrences","days_of_week","attachments","eventStatus","_this$recurrence","_this$system","parseRecurrence","EVENTS_ENDPOINT","createEvent","updateEvent","method","queryAllEvents","approveEvent","rejectEvent","declineEvent","queryEventGuests","checkinEventGuest","guest_id","updateEventMetadata","isSpaceAvailable","_s$resource","attendee_list_component_1","event_card_component_1","MatMenu","MatMenuItem","MatMenuTrigger","i9","i10","SlicePipe","getFreeTimeSlots","min_size","slots","bkn_start","bkn_end","isSameMinute","_details$resources","_data$days_of_week","addWeeks","addMonths","addYears","blocks","blk","getNextFreeTimeSlot","addSeconds","block","DURATION_MAP","month","months","week","weeks","days","DEFAULT_RULES","auto_approve","addToDate","rulesForSpace","rulemap","_step4","_iterator4","_rulemap$zone","_step5","_iterator5","ruleset","checkRulesMatch","date_obj","conditions","_host$groups","is_before","is_after","min_length","is_between","max_length","_rulesForSpace","save","SetupBreakdownModalComponent","_save","_this$_event2","_this$_event2$resourc","_this$_event3","_this$_event3$system","SetupBreakdownModalComponent_button_3_Template","SetupBreakdownModalComponent_main_4_Template","SetupBreakdownModalComponent_footer_5_Template","SetupBreakdownModalComponent_ng_template_6_Template","validateCateringField","BOOKING_DATE","catering_control","control","_catering_control$val","catering_field","_event$extension_data6","_event$extension_data7","_event$extension_data8","_event$extension_data9","_event$extension_data10","_event$extension_data11","_event$extension_data12","_event$extension_data13","_event$extension_data14","visitor_type","needs_space","needs_parking","_form$value$recurrenc","_form$value$recurrenc2","getDay","setMockBookingStartDatetime","statusFromBookings","requestable","next_free_slot","currently_free","time_until_next_block","free_tomorrow","available_until","replaceBookings","new_bookings","filter_options","from","organizer","_control$parent","isFuture","is_future","qr_code_1","ExploreBookQrComponent","_this$_data$space","qr_code","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","ExploreBookingModalComponent_ng_container_6_main_1_Template","ExploreBookingModalComponent","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","tries","parentElement","parseInt","left","ExploreDeskInfoComponent_ng_template_1_Template","_r0","desk_class_1","set_datetime_modal_component_1","explore_device_info_component_1","ExploreDesksService","_bookings","_in_use","_presence","_signs_of_life","_statuses","_users","_departments","_checked_in","Desk","_bind","processBindingChange","_booking_list","use_api","_state_change","in_use","presence","signs","_step$value","is_used","has_presence","has_signs","is_checked_in","processDesks","enable_booking","devices","at_location","signs_of_life","staff_name","processDevices","setStyles","_device$coordinates_f","_device$coordinates_f2","device","map_width","map_height","coordinates_from","ExploreDeviceInfoComponent","setFeatures","book_fn","_desk$groups","_this4$_options$getVa","_this4$_options$getVa2","_user","_yield$_this4$_setBoo","_setBookingTime","custom","priority","setActions","_setBookingTime2","until","SetDatetimeModalComponent","ExploreStateService","mac","manufacturer","os","ssid","ExploreDeviceInfoComponent_ng_template_5_p_3_Template","ExploreDeviceInfoComponent_ng_template_5_p_12_Template","ExploreDeviceInfoComponent_ng_template_5_p_13_Template","ExploreDeviceInfoComponent_ng_template_5_p_14_Template","ExploreDeviceInfoComponent_ng_template_5_p_15_Template","ExploreDeviceInfoComponent_ng_template_5_p_16_Template","hide_fields","variance","EMPTY","_loadUser","_this$_details$varian","bg_color","distance_color","addSuffix","_this2$_element$nativ","assigned_to","loadUser","ExploreDeviceInfoComponent_ng_template_5_Template","ɵɵstyleMap","diameter","explore_locker_bank_modal_component_1","in_use_count","ExploreLockerBankModalComponent","openBankModal","ExploreLockerBankInfoComponent_ng_template_2_Template","ExploreLockersService","_explore","_status","sys_id","_data$value","locker_status","map_status","banks","bank_lockers","allocated","bank_info","locker_count","in_use_percent","bld_r3","ExploreMapControlComponent_mat_form_field_1_mat_option_3_Template","lvl_r7","ExploreMapControlComponent_mat_form_field_3_mat_option_4_Template","ExploreMapControlComponent","relativeTo","queryParams","ExploreMapControlComponent_mat_form_field_1_Template","ExploreMapControlComponent_mat_form_field_3_Template","map_radius_component_1","explore_zones_service_1","explore_desks_service_1","explore_parking_service_1","explore_lockers_service_1","toggleZones","pair_r5","ExploreMapViewComponent_div_12_div_3_Template","ExploreMapViewComponent","_toggleZones","_s","_desks","_zones","_parking","map_styles","positions","map_positions","map_actions","map_labels","_options$disable","locateSpace","showStaff","locateUser","_locateFeature","setPositions","has_coordinates","parseFloat","_locateSpace","_locateUser","_this$_org$levelWithI2","_locations$","locate_details","locations","pos","MapLocation","ExploreSpacesService","ExploreZonesService","ExploreParkingService","i11","updateZoom","updateCenter","ExploreMapViewComponent_div_11_Template","ExploreMapViewComponent_div_12_Template","hide_zones","show_legend","existing_event","week_events","week_availablility","day_events","_updateParkingSpaces","can_book","zoom_level","setLabels","option_r7","ExploreSearchComponent_ng_container_11_mat_option_1_Template","ExploreSearchComponent_ng_container_11_mat_option_3_Template","results","ExploreSearchComponent","search_str","search_results","setFilter","checkClick","_this$_el","_this$_el$nativeEleme","_this$_input_el","_this$_input_el$nativ","_input_el","_this$_input_el2","_this$_input_el3","ExploreSearchService","ɵɵresolveDocument","closeSearch","showSearch","ExploreSearchComponent_mat_spinner_5_Template","ExploreSearchComponent_ng_container_11_Template","staff_fn_1","organisation_1","_emergency_contacts","_filter","emergency_contacts","_user_search","search_fn","_space_search","querySystems","_points_of_interest","points_of_interest","poi","contacts","is_role","_s$zone","queryUsers","authority_id","searchStaff","moduleFromMetadata","contacts_map","temp","humidity","ExploreSensorInfoComponent","ExploreSensorInfoComponent_div_1_Template","ExploreSensorInfoComponent_div_2_Template","ExploreSensorInfoComponent_div_3_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","explore_space_info_component_1","explore_booking_modal_component_1","explore_book_qr_component_1","free","pending","reserved","busy","unknown","_updateStatus2","_restrictions","handleBookingsChange","handleStatusChange","updateActions","_updateHoverElements","openEventLinkModal","_loop3","bookSpace","_positions","_styles","_actions","_labels","_message","_options$disable_feat","disable_features","_options$disable2","_options$disable_acti","disable_actions","_options$disable3","_options$disable_labe","disable_labels","_options$disable5","style_mappings","_options$disable4","_options$disable_styl","disable_styles","level_list","old_options","feature_map","actions_map","labels_map","map_polygon_component_1","explore_sensor_info_component_1","getCenterPoint","_location","_capacity","_draw","_points","parseData","_zone$details","areas","area","hide_label","label_location","draw_polygon","coordinates","properties","geometry","filled","area_id","temperature","people_count","people_count_sum","queue_size","ExploreZoomControlComponent","zoomIn","zoomOut","overlay_1","bookings_module_1","OverlayModule","SetDatetimeModalComponent_main_6_div_1_Template","SetDatetimeModalComponent_main_6_div_2_Template","book_until","tmp_7_0","SetDatetimeModalComponent_main_6_Template","ActionFieldComponent","show_tooltip","performAction","CounterComponent","step","ctrl_key","shift_key","render_fn","day_r2","day_r3","DateCalendarComponent_button_16_div_3_Template","active_date","is_month","today","DateCalendarComponent","offset_weekday","date_list","generateDates","getDate","getMonth","year","getFullYear","change","startOfWeek","startOfMonth","weekStartsOn","is_past","isSameMonth","changeMonth","DateCalendarComponent_div_13_Template","DateCalendarComponent_button_16_Template","week_start","DateFieldComponent","_from","_this$_control","_this$_control2","_control","_to","NgControl","_this$_tooltip","old_date","new_date","getMinutes","_tooltip","_this$_tooltip2","DateFieldComponent_span_8_Template","DateFieldComponent_ng_template_9_Template","option_r2","DurationFieldComponent_mat_option_4_ng_container_1_Template","DurationFieldComponent","custom_options","duration_options","generateDurationOptions","_updateOption","zero","_this$duration_option","DurationFieldComponent_mat_option_4_Template","date_field_component_1","user_search_field_component_1","space_list_field_component_1","rich_text_input_component_1","image_list_field_component_1","recurrence_modal_component_1","date_calendar_component_1","UserSearchFieldComponent","MatFormField","MatPrefix","MatSuffix","MatInput","MatOption","MatAutocomplete","MatAutocompleteTrigger","SpaceListFieldComponent","MatRadioGroup","MatRadioButton","i12","ImageListFieldComponent","i13","i14","MatChipGrid","MatChipInput","MatChipRemove","MatChipRow","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","FormControlName","MatError","i15","MatSelect","i16","RichTextInputComponent","RecurrenceModalComponent","NumberValueAccessor","user_r2","HostSelectFieldComponent","zip","_setValue","HostSelectFieldComponent_mat_option_2_Template","HostSelectFieldComponent_ng_container_6_Template","upload_permissions_modal_component_1","uploadImages","url_r10","copyLink","viewImage","removeImage","item_r17","retryUpload","ImageListFieldComponent_ng_container_4_div_1_mat_progress_spinner_1_Template","ImageListFieldComponent_ng_container_4_div_1_app_icon_2_Template","ImageListFieldComponent_ng_container_4_div_1_div_3_Template","ImageListFieldComponent_ng_container_4_div_1_Template","uploads","view_space","item_r29","_uploadImages","_clipboard","upload_ids","_upload_list","ids","_list_el","addImageUrl","copy","chipInput","inputElement","uploads_allowed","resolved","update_fn","_updateUploadHistory","done_list","Clipboard","ngAfterViewInit","ImageListFieldComponent_ng_container_2_Template","ImageListFieldComponent_div_3_Template","ImageListFieldComponent_ng_container_4_Template","ImageListFieldComponent_button_5_Template","ImageListFieldComponent_button_6_Template","ImageListFieldComponent_mat_chip_row_10_Template","addImage","addChipItem","removeChipItem","ItemListFieldComponent","placeholder","ItemListFieldComponent_mat_chip_row_3_Template","formatted_value","RecurrenceFieldComponent","instance_of_month","old_value","day_of_week","default_recurrence","setSimple","RecurrenceFieldComponent_mat_option_12_Template","openCustomRecurrenceModal","toggleDayOfWeek","ends_key","RecurrenceModalComponent_h2_20_Template","RecurrenceModalComponent_div_21_Template","Quill","readonly","_updateFn","_editor","root","_initialiseEditor","delta","clipboard","convert","setContents","writeValue","_editor_el","bounds","_container_el","modules","toolbar","readOnly","theme","on","off","new_space_select_modal_component_1","SpaceListFieldComponent_div_15_img_2_Template","SpaceListFieldComponent_div_15_ng_template_3_Template","changeSpaces","removeSpace","NewSpaceSelectModalComponent","_this2$_dialog_ref","_this2$_dialog_ref$co","i18n_11","SpaceListFieldComponent_div_15_Template","_c18","bld_r7","SupportTicketModalComponent_main_6_mat_option_24_Template","SupportTicketModalComponent_main_6_mat_error_31_Template","SupportTicketModalComponent_main_6_div_32_Template","desc_error","allow_images","_submit","stmp_system","support_email","SupportTicketModalComponent_main_6_Template","SupportTicketModalComponent_footer_7_Template","SupportTicketModalComponent_ng_template_8_Template","force_time","option_r3","TimeFieldComponent","no_past_times","show_select","_time_options","generateAvailableTimes","select_field","openedChange","datestamp","show_past","TimeFieldComponent_mat_option_3_Template","TimeFieldComponent_mat_option_4_Template","time_options","UploadFileFieldComponent_div_2_ng_container_3_Template","UploadFileFieldComponent_div_2_a_4_Template","UploadFileFieldComponent","_element$files","_uploadFile","on_change","onFileEvent","UploadFileFieldComponent_div_2_Template","UploadFileFieldComponent_ng_template_3_Template","item_r4","UploadListFieldComponent_div_12_div_1_ng_container_3_Template","UploadListFieldComponent_div_12_div_1_a_4_Template","removeFile","UploadListFieldComponent_div_12_div_1_Template","UploadListFieldComponent","UploadListFieldComponent_div_12_Template","UploadListFieldComponent_ng_template_13_Template","new_user_modal_component_1","guests_fn_1","item_r9","removeUser","addUserFromEmail","search$","user_r14","addUser","openNewUserModal","addUsersFromFile","downloadCSVTemplate","download","validateEmail","test","UserListFieldComponent","guests","guests_only","hide_actions","custom_template","new_user","separatorKeysCodes","user_list$","searchGuests","staff","visitors_list","active_list","validFn","emptyClick","_search_el","_this$active_list","visit_expected","a_user","processCsvData","staff_id","_el$visit_expected","first_name","last_name","USER_DOMAIN","internal_emails","endsWith","phone","_ref$componentInstanc","NewUserModalComponent","UserListFieldComponent_mat_chip_row_6_Template","updateSearch","UserListFieldComponent_mat_spinner_10_Template","UserListFieldComponent_mat_option_13_Template","UserListFieldComponent_mat_option_14_Template","UserListFieldComponent_div_16_Template","search_valid_email","option_r6","blurInput","stopPropagation","empty_fn","query_fn","search_results$","cancelReset","user_list","resetSearchString","_this3$active_user","active_user","validate","UserSearchFieldComponent_mat_spinner_6_Template","UserSearchFieldComponent_mat_option_9_Template","UserSearchFieldComponent_mat_option_10_Template","UserSearchFieldComponent_mat_option_11_Template","MOCK_PRODUCTS","model_number","assets_data_1","BASE_PATH","registerMocks","registerMockEndpoint","MOCK_CATEGORIES","route_params","new_event","req","update","MOCK_PURCHASE_ORDERS","MOCK_ASSETS","dataset","spaces_data_1","users_data_1","zone_data_1","EVENT_TIME","subDays","seconds","milliseconds","nextEventTime","TYPES","TRACKING","throw_away","_lvl_spaces","MOCK_STAFF","MOCK_BUILDINGS","lvls","MOCK_LEVELS","lvl_spaces","MOCK_SPACES","approver","guest","MOCK_GUESTS","asset_count","plate_number","tracking","bookings_data_1","MOCK_BOOKINGS","events_data_1","user2","user3","ACTIVE_USER","handleSpaceAvailability","systems","MOCK_EVENTS","generateCateringOrder","mx","MOCK_MENU","dayjs","catering_data_1","startOf","unix","event_status","randomStatus","rnd","PEOPLE","unshift","event_spaces","_new_event$system","_system$Bookings$","mockSystem","Bookings","$poll_bookings","randomSpaceFeatures","numFeatures","generateMockSpace","systems_bindings_mock_1","createSystem","_request$query_params","common_mock_1","PREDEF_USERS","DOMAIN","vaccination_proof","id_data","person","generateLocation","LOCATION_TYPES","level_spaces","meeting","subtract","geo","lat","lon","triggers","num","mockLevel","MOCK_METADATA","MOCK_ORGS","bindings","area_management","location_services","contact_tracing","generateParkingSpaces","generateLockers","generateMockDeskMetadata","map_regions","DESK_FEATURES","PARKING_SPACES","assignee","assigned_name","LOCKERS","idx2","CameraTilt","Down","Up","Stop","CameraPan","Left","Right","CameraModule","presets","dir","tilt","overrides","CaptureModule","live","remaining","$start","CONTACT_EVENTS","filterFn","contact_time","ContactTracingModule","beginning","ending","mac_address","RoomModule","_data$connected","tabs","volume","connected","input_list","output_list","env_sources","available_outputs","$updateState","following","mute","$mute","locked","Mic1","Mic2","Mic3","PC1","PC2","PC3","PC4","HDMI","VGA","Camera1","Camera2","Camera3","Camera4","TV1","VC1","Display1","Display2","Display5","states","ts_md5_1","MockAreaManagementModule","overview","updateLocations","MAC_LOOKUP","_ts_md5_1$Md","_ts_md5_1$Md2","fixed","usr","Md5","hashStr","s2_cell_id","MockLocationServicesModule","createAreaManagementModule","desk_count","desk_usage","device_capacity","device_count","estimated_people","percentage_use","recommendation","number","padZero","no","len","DisplayModule","MockBookingModule","time_zone","disable_book_now","disable_end_meeting","pending_period","pending_before","control_ui","catering_ui","last_booking_started","current_booking","next_booking","room_image","updateBookings","_event$attendees","subSeconds","LockerLocationsModule","MeetingPushModule","supported_meeting_url","MicrophoneModule","VideoConferenceModule","mic_mute","selfview","video_layout","presentation_mode","calls","Status","visible","layout","digit","dial_number","control_1","desks_1","camera_1","display_1","microphone_1","capture_1","meeting_1","video_conference_1","contact_tracing_1","locker_locations_1","registerSystem","System","createSystemModule","createBookingsModule","ContactTracing","createContactTracingModule","AreaManagement","LocationServices","Camera","createCameraModule","Display","createDisplayModule","Microphone","createMicrophoneModule","Capture","createCaptureModule","MeetingPush","createMeetingPushModule","VidConf","createVideoConferenceModule","Payment","createPaymentsModule","LockerLocations","createLockerLocationsModule","$update","zones_mock_1","users_mock_1","systems_mock_1","events_mock_1","calendars_mock_1","bookings_mock_1","assets_mock_1","ZONE_MOCKS","USER_MOCKS","SYSTEM_MOCKS","EVENT_MOCKS","CALENDAR_MOCKS","BOOKING_MOCKS","ASSET_MOCKS","raw_data","disc_info","discovery_info","extras","extra_id","extra_name","loan_items","building_id","_roles","roles","locker_structure","_systems","_phone_numbers","phone_numbers","room_configurations","attributes","searchables","neighbourhoods","lvl_features","catering_hours","visitor_space","holding_bay","orientations","booking_details","catering_restricted_from","BLD_COUNT","LVL_COUNT","generateMockLevel","level_name","generateMockBuilding","nested","level2","IGNORE_KEYS","_data$bookable","PlaceZone","_IGNORE_KEYS","Organisation","organisation_class_1","region_class_1","_regions","_active_region","_buildings","_active_building","_levels","_loaded_data","app_key","buildingsForRegion","_region_settings","_building_settings","buildingSettings","_this$building","bld_id","_organisation","_setRegion","_this$building2","loadRegionData","_setBuildingFromTimezone","_updateSettingOverrides","_this$region","loadBuildingData","_this$building3","_this$building4","_this$_organisation","Region","orgs","_this$_buildings$getV","blds","loadOrganisation","loadRegions","loadBuildings","loadSettings","loadLevels","_loadOrganisation","org_list","_yield$toPromise","queryZones","_auth$config","org_zone","_loadRegions","_this$_organisation2","_loadRegionData","_yield$Promise$all2","_loadBuildings","_this$_organisation3","_loadBuildingData","_yield$Promise$all4","_loadLevels","curr","_loadSettings","_yield$toPromise2","_this$_organisation4","_yield$toPromise3","_this$_organisation5","app_settings","global_settings","_initialiseActiveBuilding","_this$_buildings$getV2","region_id","_this4$building3","geolocation","getCurrentPosition","_this4$building","_position$coords","coords","latitude","longitude","closest_bld","_split","_split2","c_lat","c_long","_split3","_split4","b_long","pow","_setDefaultBuilding","_this4$building2","_setDefaultBuilding2","_setRegionFromTimezone","_setRegionFromTimezone2","tz_start","_region","bld_list","_this5$region","_step6","_iterator6","_this$building5","_this$region2","regionSettings","building_utilities_1","ORG_COUNT","generateMockOrganisation","default_module","card_type","BLANK_CARD","card_number","cardholder","cvv","DATE_PIPE","CardInputFieldComponent","_common_2$AsyncHandle","exp_month","exp_year","minLength","maxLength","setMonth","years","digits","_index","_this$details$value","_this$details$value2","_this$details$value3","card_focused","is_amex","activeElement","_focusChange","onInput","CardInputFieldComponent_img_9_Template","CardInputFieldComponent_mat_option_23_Template","CardInputFieldComponent_mat_option_31_Template","card_display","PaymentModalComponent_div_0_ng_container_1_ng_container_8_Template","card_details","processPayment","PaymentModalComponent_div_0_ng_container_1_Template","transaction_id","PaymentModalComponent","_processPayment","_validCardDetails","_this$card_details","_this$card_details2","PaymentModalComponent_div_0_Template","PaymentModalComponent_ng_template_2_Template","PaymentModalComponent_ng_template_4_Template","payment_modal_component_1","card_input_field_component_1","CurrencyPipe","STRIPE_MODULE","_active_card","payment_sources","_makePayment","_yield$this$_getCostO2","cost","customer_id","_getCostOfProduct","_newCustomerID","rate","_addPaymentMethod2","card","payment_method","_addPaymentMethod","_getCostOfProduct2","price","product_list","_processPayment2","_newCustomerID2","SpaceSelectItemComponent_div_0_div_6_Template","SpaceSelectItemComponent_div_0_button_7_Template","by_request","SpaceSelectItemComponent","SpaceSelectItemComponent_div_0_Template","SpaceSelectItemComponent_ng_template_1_Template","bld_r10","SpaceSelectModalComponent_mat_form_field_9_mat_option_2_Template","type_r14","SpaceSelectModalComponent_mat_form_field_10_mat_option_2_Template","space_types","_r23","space_r19","spaceSelected","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_a_space_select_item_1_Template","space_map","SpaceSelectModalComponent_ng_container_12_ng_container_1_ng_container_1_Template","SpaceSelectModalComponent_ng_container_12_ng_container_1_Template","space_r27","SpaceSelectModalComponent_div_13_ng_container_1_a_space_select_item_1_Template","SpaceSelectModalComponent_div_13_ng_container_1_Template","show_selected","SpaceSelectModalComponent","SpaceSelectModalComponent_mat_form_field_9_Template","SpaceSelectModalComponent_mat_form_field_10_Template","SpaceSelectModalComponent_ng_container_12_Template","SpaceSelectModalComponent_div_13_Template","SpaceSelectModalComponent_footer_14_Template","SpaceSelectModalComponent_ng_template_15_Template","SpaceSelectModalComponent_ng_template_17_Template","NewSpaceSelectModalComponent_space_list_16_Template","NewSpaceSelectModalComponent_button_19_Template","NewSpaceSelectModalComponent_ng_template_37_Template","feature_r7","SpaceDetailsComponent_ng_container_0_section_33_div_3_Template","SpaceDetailsComponent_ng_container_0_image_carousel_2_Template","SpaceDetailsComponent_ng_container_0_section_33_Template","SpaceDetailsComponent_ng_container_0_section_34_Template","SpaceDetailsComponent","SpaceDetailsComponent_ng_container_0_Template","SpaceDetailsComponent_ng_template_1_Template","space_filters_component_1","removeAllFeatures","feat_r5","SpaceFiltersDisplayComponent","SpaceFiltersComponent","_removeAllFeatures","SpaceFiltersDisplayComponent_button_9_Template","SpaceFiltersDisplayComponent_div_11_Template","SpaceFiltersDisplayComponent_div_22_Template","SpaceFiltersComponent_mat_form_field_13_mat_option_5_Template","lvl_r11","feat_r13","feature_display","SpaceFiltersComponent_section_48_ng_container_3_div_1_Template","hide_features","SpaceFiltersComponent_section_48_ng_container_3_Template","SpaceFiltersComponent_button_2_Template","SpaceFiltersComponent_mat_form_field_13_Template","SpaceFiltersComponent_mat_option_18_Template","SpaceFiltersComponent_section_48_Template","SpaceFiltersComponent_div_50_Template","SpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","SpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","SpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","SpaceListComponent_ng_container_5_ul_1_li_1_Template","SpaceListComponent_ng_container_5_ul_1_Template","SpaceListComponent","SpaceListComponent_ng_container_5_Template","SpaceListComponent_ng_template_7_Template","SpaceListComponent_ng_template_9_Template","SpaceLocationPinComponent","SpaceLocationPinComponent_div_15_Template","SpaceLocationPinComponent_app_icon_16_Template","space_location_pin_component_1","SpaceSelectMapComponent","SpaceSelectMapComponent_mat_option_3_Template","support_url","configurations","SPACE_LIST","EMPTY_SPACE","updateSpaceList","is_email","_this$_org","_this$_org2","showSystem","querySystemsWithEmails","in","SPACE_LIST_REQUESTS","ctrl","isValidUrl","generateSystemsFormFields","fields","validateURL","installed_ui_devices","SPACE_COUNT","linked","long_name","searchable","controlable","cost_hour","linked_rooms","image","space_details_component_1","space_list_component_1","space_filters_display_component_1","space_map_component_1","SharedSpacesModule","SPACE_PIPE","_list","_compare","_init2","loadSpaces","predicate","_loadSpace","loadSpace","_loadSpaces","valid_spaces","offset_x","current_hour","hour_r7","user_r8","offset_y","h_r12","user_r13","calendars","availability_list","availability_map","fromUnixTime","defaultIfEmpty","move_time","_start_time","_move_last","_move_size","el_rect","scrollTo","onScroll","scrollLeft","scrollTop","MouseEvent","clientX","touches","_onMovePeriod","_onMoveEnd","_onMoveDuration","change_px","change_min","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","startMovePeriod","startMoveDuration","FindAvailabilityModalComponent_div_29_Template","FindAvailabilityModalComponent_user_availability_list_35_Template","selection_left","selection_width","event_r1","UserAvailabilityComponent","UserAvailabilityComponent_div_1_Template","GUEST_ENDPOINT","queryGuests","showGuest","updateGuest","removeGuest","listGuestMeetings","generateUserForm","NewUserModalComponent_main_7_Template","NewUserModalComponent_footer_8_Template","NewUserModalComponent_ng_template_9_Template","STAFF_ENDPOINT","locateStaff","hasError","UserFormComponent_form_0_div_1_Template","UserFormComponent_form_0_div_2_Template","UserFormComponent_form_0_div_3_Template","UserFormComponent_form_0_div_4_Template","UserFormComponent_form_0_div_5_Template","UserFormComponent_form_0_div_6_Template","assistance_required","UserFormComponent","UserFormComponent_form_0_Template","_data$required","_data$resource","_data$department","_this$email","_data$visit_expected","_this$extension_data","sys_admin","support","_User","_data$booking","_data$booking2","preferred_beverage","accepted_terms_conditions","_User2","_super2","USER_LIST","UserPipe","USER_COUNT","USER_EMAILS","generateMockUser","external","delegates","delegate_count","visitor","staff_code","_user$visit_expected","generateGuestForm","find_availability_modal_component_1","user_availability_component_1","SharedUsersModule","MatCheckbox","i_r7","available_weekdays","changed","day_r6","WFHSettingsModalComponent_div_0_div_28_Template","weekdays","type_r13","WFH_SETTING_KEY","_initWeekdays","_loadOptionForToday","_saveChanges","setDay","_loadOptionForToday2","WFHSettingsModalComponent_div_0_Template","WFHSettingsModalComponent_button_3_Template","WFHSettingsModalComponent_ng_template_4_Template"],"sourceRoot":"webpack:///","sources":["./apps/outlook-addin/src/app/app-routing.module.ts","./apps/outlook-addin/src/app/app.component.ts","./apps/outlook-addin/src/app/app.module.ts","./apps/outlook-addin/src/app/components/not-found/not-found.component.ts","./apps/outlook-addin/src/app/components/shared.module.ts","./apps/outlook-addin/src/app/desks/desk-booking.component.ts","./apps/outlook-addin/src/app/desks/desk-form.component.ts","./apps/outlook-addin/src/app/desks/desk-success.component.ts","./apps/outlook-addin/src/app/meetings/meeting-booking.component.ts","./apps/outlook-addin/src/app/meetings/meeting-form.component.ts","./apps/outlook-addin/src/app/meetings/meeting-success.component.ts","./apps/outlook-addin/src/app/rooms/book.module.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.ts","./apps/outlook-addin/src/app/rooms/booking-confirmed/booking-confirmed.component.html","./apps/outlook-addin/src/app/rooms/features-filter.service.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.ts","./apps/outlook-addin/src/app/rooms/filter-space/filter-space.component.html","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.ts","./apps/outlook-addin/src/app/rooms/find-space-item/find-space-item.component.html","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.ts","./apps/outlook-addin/src/app/rooms/find-space/find-space.component.html","./apps/outlook-addin/src/app/rooms/map.service.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.ts","./apps/outlook-addin/src/app/rooms/room-booking.component.html","./apps/outlook-addin/src/app/rooms/room-confirm.service.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.ts","./apps/outlook-addin/src/app/rooms/room-confirm/room-confirm.component.html","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.ts","./apps/outlook-addin/src/app/rooms/room-details/room-details.component.html","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.ts","./apps/outlook-addin/src/app/rooms/room-tile/room-tile.component.html","./apps/outlook-addin/src/app/rooms/upcoming-bookings/upcoming-bookings.component.ts","./apps/outlook-addin/src/environments/environment.prod.ts","./apps/outlook-addin/src/main.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/new-schedule/schedule-state.service.ts","./libs/assets/src/index.ts","./libs/assets/src/lib/asset-group.pipe.ts","./libs/assets/src/lib/asset-list-field.component.ts","./libs/assets/src/lib/asset-select-modal/asset-details.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters-display.component.ts","./libs/assets/src/lib/asset-select-modal/asset-filters.component.ts","./libs/assets/src/lib/asset-select-modal/asset-list.component.ts","./libs/assets/src/lib/asset-select-modal/asset-select-modal.component.ts","./libs/assets/src/lib/asset-state.service.ts","./libs/assets/src/lib/asset.class.ts","./libs/assets/src/lib/asset.utilities.ts","./libs/assets/src/lib/assets.fn.ts","./libs/assets/src/lib/assets.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/booking.class.ts","./libs/bookings/src/lib/booking.utilities.ts","./libs/bookings/src/lib/bookings.fn.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk.service.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/calendar/src/lib/calendar.class.ts","./libs/calendar/src/lib/calendar.fn.ts","./libs/catering/src/index.ts","./libs/catering/src/lib/catering-config-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-item.class.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.class.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-rooms-state-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/common/src/index.ts","./libs/common/src/lib/angular-animations.ts","./libs/common/src/lib/api.ts","./libs/common/src/lib/application.ts","./libs/common/src/lib/async-handler.class.ts","./libs/common/src/lib/calendar-links.ts","./libs/common/src/lib/common.ts","./libs/common/src/lib/feature-available.guard.ts","./libs/common/src/lib/formatting.ts","./libs/common/src/lib/general.ts","./libs/common/src/lib/google-analytics.service.ts","./libs/common/src/lib/hotkeys.service.ts","./libs/common/src/lib/notifications.ts","./libs/common/src/lib/placeos.ts","./libs/common/src/lib/qr-code.ts","./libs/common/src/lib/remote-logging.service.ts","./libs/common/src/lib/room-configuration.interface.ts","./libs/common/src/lib/settings.service.ts","./apps/outlook-addin/src/environments/settings.ts","./libs/common/src/lib/spec-helpers.ts","./libs/common/src/lib/timezone-helpers.ts","./libs/common/src/lib/timezones.ts","./libs/common/src/lib/uploads.ts","./libs/common/src/lib/user-idle-time.service.ts","./libs/common/src/lib/user-state.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/version.ts","./libs/common/src/lib/vorlon.service.ts","./libs/components/src/index.ts","./libs/components/src/lib/accessibility-tooltip.component.ts","./libs/components/src/lib/action-icon.component.ts","./libs/components/src/lib/authenticated-image.directive.ts","./libs/components/src/lib/authorised-admin.guard.ts","./libs/components/src/lib/authorised-user.guard.ts","./libs/components/src/lib/binding.directive.ts","./libs/components/src/lib/building-select.component.ts","./libs/components/src/lib/building.pipe.ts","./libs/components/src/lib/changelog-modal.component.ts","./libs/components/src/lib/components.module.ts","./libs/components/src/lib/confirm-modal.component.ts","./libs/components/src/lib/custom-table.component.ts","./libs/components/src/lib/custom-tooltip.component.ts","./libs/components/src/lib/debug-console.component.ts","./libs/components/src/lib/duration.pipe.ts","./libs/components/src/lib/fixed.pipe.ts","./libs/components/src/lib/global-banner.component.ts","./libs/components/src/lib/global-loading.component.ts","./libs/components/src/lib/help-tooltip.component.ts","./libs/components/src/lib/icon.component.ts","./libs/components/src/lib/image-carousel.component.ts","./libs/components/src/lib/interactive-map.component.ts","./libs/components/src/lib/json-display.component.ts","./libs/components/src/lib/language-tooltip.component.ts","./libs/components/src/lib/level.pipe.ts","./libs/components/src/lib/login.component.ts","./libs/components/src/lib/map-locate-modal.component.ts","./libs/components/src/lib/map-pin.component.ts","./libs/components/src/lib/map-polygon.component.ts","./libs/components/src/lib/map-radius.component.ts","./libs/components/src/lib/misconfigured.component.ts","./libs/components/src/lib/popout-menu.component.ts","./libs/components/src/lib/redirect.component.ts","./libs/components/src/lib/region-select.component.ts","./libs/components/src/lib/safe.pipe.ts","./libs/components/src/lib/sanitise.pipe.ts","./libs/components/src/lib/status-overlay.component.ts","./libs/components/src/lib/unauthorised.component.ts","./libs/components/src/lib/upload-permissions-modal.component.ts","./libs/components/src/lib/user-avatar.component.ts","./libs/components/src/lib/user-controls.component.ts","./libs/components/src/lib/virtual-keyboard.component.ts","./libs/events/src/index.ts","./libs/events/src/lib/attendee-list.component.ts","./libs/events/src/lib/event-card.component.ts","./libs/events/src/lib/event-details-modal.component.ts","./libs/events/src/lib/event-form.service.ts","./libs/events/src/lib/event-link-modal.component.ts","./libs/events/src/lib/event.class.ts","./libs/events/src/lib/events.fn.ts","./libs/events/src/lib/events.module.ts","./libs/events/src/lib/events.ts","./libs/events/src/lib/helpers.ts","./libs/events/src/lib/setup-breakdown-modal.component.ts","./libs/events/src/lib/utilities.ts","./libs/events/src/lib/validators.ts","./libs/explore/src/index.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-desks.service.ts","./libs/explore/src/lib/explore-device-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-lockers.service.ts","./libs/explore/src/lib/explore-map-control.component.ts","./libs/explore/src/lib/explore-map-view.component.ts","./libs/explore/src/lib/explore-parking.service.ts","./libs/explore/src/lib/explore-search.component.ts","./libs/explore/src/lib/explore-search.service.ts","./libs/explore/src/lib/explore-sensor-info.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts","./libs/explore/src/lib/explore-zones.service.ts","./libs/explore/src/lib/explore-zoom-control.component.ts","./libs/explore/src/lib/explore.module.ts","./libs/explore/src/lib/explore.ts","./libs/explore/src/lib/set-datetime-modal.component.ts","./libs/form-fields/src/index.ts","./libs/form-fields/src/lib/action-field.component.ts","./libs/form-fields/src/lib/counter.component.ts","./libs/form-fields/src/lib/date-calendar.component.ts","./libs/form-fields/src/lib/date-field.component.ts","./libs/form-fields/src/lib/duration-field.component.ts","./libs/form-fields/src/lib/form-fields.module.ts","./libs/form-fields/src/lib/host-select-field.component.ts","./libs/form-fields/src/lib/image-list-field.component.ts","./libs/form-fields/src/lib/item-list-field.component.ts","./libs/form-fields/src/lib/recurrence-field.component.ts","./libs/form-fields/src/lib/recurrence-modal.component.ts","./libs/form-fields/src/lib/rich-text-input.component.ts","./libs/form-fields/src/lib/space-list-field.component.ts","./libs/form-fields/src/lib/support-ticket-modal.component.ts","./libs/form-fields/src/lib/time-field.component.ts","./libs/form-fields/src/lib/upload-file-field.component.ts","./libs/form-fields/src/lib/upload-list-field.component.ts","./libs/form-fields/src/lib/user-list-field.component.ts","./libs/form-fields/src/lib/user-search-field.component.ts","./libs/mocks/src/index.ts","./libs/mocks/src/lib/api/assets.data.ts","./libs/mocks/src/lib/api/assets.mock.ts","./libs/mocks/src/lib/api/bookings.data.ts","./libs/mocks/src/lib/api/bookings.mock.ts","./libs/mocks/src/lib/api/calendars.mock.ts","./libs/mocks/src/lib/api/catering.data.ts","./libs/mocks/src/lib/api/common.mock.ts","./libs/mocks/src/lib/api/events.data.ts","./libs/mocks/src/lib/api/events.mock.ts","./libs/mocks/src/lib/api/spaces.data.ts","./libs/mocks/src/lib/api/systems.mock.ts","./libs/mocks/src/lib/api/users.data.ts","./libs/mocks/src/lib/api/users.mock.ts","./libs/mocks/src/lib/api/zone.data.ts","./libs/mocks/src/lib/api/zones.mock.ts","./libs/mocks/src/lib/realtime/camera.ts","./libs/mocks/src/lib/realtime/capture.ts","./libs/mocks/src/lib/realtime/contact-tracing.ts","./libs/mocks/src/lib/realtime/control.ts","./libs/mocks/src/lib/realtime/desks.ts","./libs/mocks/src/lib/realtime/display.ts","./libs/mocks/src/lib/realtime/events.ts","./libs/mocks/src/lib/realtime/locker-locations.ts","./libs/mocks/src/lib/realtime/meeting.ts","./libs/mocks/src/lib/realtime/microphone.ts","./libs/mocks/src/lib/realtime/payments.ts","./libs/mocks/src/lib/realtime/video-conference.ts","./libs/mocks/src/lib/systems-bindings.mock.ts","./libs/mocks/src/mocks.ts","./libs/organisation/src/index.ts","./libs/organisation/src/lib/building.class.ts","./libs/organisation/src/lib/building.utilities.ts","./libs/organisation/src/lib/desk.class.ts","./libs/organisation/src/lib/level.class.ts","./libs/organisation/src/lib/organisation.class.ts","./libs/organisation/src/lib/organisation.service.ts","./libs/organisation/src/lib/organisation.utilities.ts","./libs/organisation/src/lib/region.class.ts","./libs/payments/src/index.ts","./libs/payments/src/lib/card-input-field.component.ts","./libs/payments/src/lib/payment-modal.component.ts","./libs/payments/src/lib/payments.module.ts","./libs/payments/src/lib/payments.service.ts","./libs/spaces/src/index.ts","./libs/spaces/src/lib/space-select-item.component.ts","./libs/spaces/src/lib/space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/new-space-select-modal.component.ts","./libs/spaces/src/lib/space-select-modal/space-details.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters-display.component.ts","./libs/spaces/src/lib/space-select-modal/space-filters.component.ts","./libs/spaces/src/lib/space-select-modal/space-list.component.ts","./libs/spaces/src/lib/space-select-modal/space-location-pin.component.ts","./libs/spaces/src/lib/space-select-modal/space-map.component.ts","./libs/spaces/src/lib/space.class.ts","./libs/spaces/src/lib/space.pipe.ts","./libs/spaces/src/lib/space.utilities.ts","./libs/spaces/src/lib/spaces.module.ts","./libs/spaces/src/lib/spaces.service.ts","./libs/spaces/src/lib/spaces.ts","./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/guests.fn.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/new-user-modal.component.ts","./libs/users/src/lib/staff.fn.ts","./libs/users/src/lib/user-form.component.ts","./libs/users/src/lib/user.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/user.utilities.ts","./libs/users/src/lib/users.module.ts","./libs/users/src/lib/wfh-settings-modal.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FindSpaceComponent } from './rooms/find-space/find-space.component';\nimport { RoomBookingComponent } from './rooms/room-booking.component';\nimport { BookingConfirmedComponent } from './rooms/booking-confirmed/booking-confirmed.component';\nimport { UpcomingBookingsComponent } from './rooms/upcoming-bookings/upcoming-bookings.component';\nimport {\n    AuthorisedUserGuard,\n    UnauthorisedComponent,\n} from '@placeos/components';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\n\nconst routes: Routes = [\n    { path: 'unauthorised', component: UnauthorisedComponent },\n    { path: '404', component: NotFoundComponent },\n    {\n        path: '',\n        canActivate: [AuthorisedUserGuard],\n        canLoad: [AuthorisedUserGuard],\n        children: [\n            {\n                path: 'ms-auth',\n                component: RoomBookingComponent,\n            },\n            {\n                path: 'book',\n                children: [\n                    { path: 'spaces', component: RoomBookingComponent },\n                    { path: 'spaces/success', component: BookingConfirmedComponent },\n                    { path: 'meeting', component: MeetingBookingComponent },\n                    { path: 'meeting/success', component: MeetingBookingSuccessComponent },\n                    { path: 'desks', component: DeskBookingComponent },\n                    { path: 'desks/success', component: DeskBookingSuccessComponent },\n                ],\n            },\n            {\n                path: 'schedule/view',\n                component: FindSpaceComponent,\n            },\n            {\n                path: 'confirm/success',\n                component: BookingConfirmedComponent,\n            },\n            {\n                path: 'upcoming',\n                component: UpcomingBookingsComponent,\n            },\n            { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n        ],\n    },\n    { path: '**', pathMatch: 'full', redirectTo: '/book/meeting' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport {\n    authority,\n    invalidateToken,\n    isMock,\n    setToken,\n    token,\n} from '@placeos/ts-client';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    setAppName,\n    setNotifyOutlet,\n    SettingsService,\n    setupCache,\n    setupPlace,\n    log,\n    notifyInfo,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { setInternalUserDomain } from 'libs/users/src/lib/user.utilities';\nimport { setDefaultCreator } from 'libs/events/src/lib/event.class';\n\nimport * as MOCKS from '@placeos/mocks';\nimport { loadAuthority } from '@placeos/ts-client/dist/esm/auth/functions';\n\ndeclare let Office: any;\ndeclare let OfficeRuntime: any;\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet></router-outlet>\n        <global-loading></global-loading>\n        <debug-console></debug-console>\n    `,\n    styles: [``],\n})\nexport class AppComponent extends AsyncHandler implements OnInit {\n    title = 'outlook-addin';\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService, // For init\n        private _cache: SwUpdate,\n        private _snackbar: MatSnackBar\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        console.info(`Initialising application...`);\n        window.history.replaceState = (data: null, unused: null) => {};\n\n        log('APP', 'MOCKS:', MOCKS);\n\n        setNotifyOutlet(this._snackbar);\n        console.info(`Waiting for application settings...`);\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        console.info(`Waiting for office library to initialise...`);\n        await Office.onReady();\n        console.info(`Initialising auth...`);\n        await this._initialiseAuth();\n        console.info(`Checking for existing auth...`);\n        if (token()) return this._finishInitialise();\n        console.info(`No existing auth...`);\n        try {\n            console.info(`Checking for office token...`);\n            this.timeout(\n                'error',\n                () => {\n                    throw 'Unable to get office token...';\n                },\n                2000\n            );\n            const get_token = Office?.auth?.getAccessToken();\n            const tkn = await (get_token || Promise.resolve());\n            this.clearTimeout('error');\n            if (!tkn) throw 'Unable to get office token...';\n            console.info(`Loaded office token. ${tkn}`);\n            sessionStorage.setItem('OFFICE.token', tkn);\n            await this._initialiseAuth(false);\n            this._finishInitialise();\n        } catch (e) {\n            console.info(JSON.stringify(e));\n            if (!Office?.context?.ui) {\n                console.info(`Error office API not loaded.`);\n                await this._initialiseAuth(false);\n            } else {\n                await this._authenticateWithOffice();\n            }\n        }\n    }\n\n    private async _initialiseAuth(local = true) {\n        setAppName(this._settings.get('app.short_name'));\n        const settings = this._settings.get('composer') || {};\n        settings.local_login = local;\n        settings.storage = 'local';\n        settings.mock =\n            !!this._settings.get('mock') ||\n            location.origin.includes('demo.place.tech');\n        await setupPlace(settings).catch((_) => console.error(_));\n    }\n\n    private async _finishInitialise() {\n        setupCache(this._cache);\n        if (!this._settings.get('composer.local_login')) {\n            this.timeout('wait_for_user', () => this.onInitError(), 30 * 1000);\n        }\n        await current_user.pipe(first((_) => !!_)).toPromise();\n        this.clearTimeout('wait_for_user');\n        setDefaultCreator(currentUser());\n        setInternalUserDomain(\n            this._settings.get('app.general.internal_user_domain') ||\n                `@${currentUser()?.email?.split('@')[1]}`\n        );\n    }\n\n    private async _authenticateWithOffice() {\n        console.info(`Authenticating with office...`);\n        this.timeout('office_auth', () => {\n            const path = `${location.origin}${location.pathname}#ms-auth=true`;\n            console.info(\n                `Opening office authentication dialog with URL: ${path}`\n            );\n            Office.context.ui.displayDialogAsync(\n                path,\n                { height: 60, width: 30 },\n                (result) => {\n                    console.info(`Authenticated with office from dialog...`);\n                    const dialog = result.value;\n                    dialog.addEventHandler(\n                        Office.EventType.DialogMessageReceived,\n                        (token) => {\n                            if (token) setToken(token);\n                            this._finishInitialise();\n                            dialog.close();\n                        }\n                    );\n                }\n            );\n        });\n        console.info(`URL: ${window.location.href}`);\n        if (\n            window.location.href.includes('ms-auth=true') ||\n            sessionStorage.getItem('ms-auth')\n        ) {\n            sessionStorage.setItem('ms-auth', 'true');\n            console.info(`Authenticating with office from a dialog...`);\n            this.clearTimeout('office_auth');\n            await this._initialiseAuth(false);\n            if (!token()) return;\n            Office.context.ui.messageParent(token() || '');\n        }\n    }\n\n    private onInitError() {\n        if (isMock() || currentUser()?.is_logged_in) return;\n        invalidateToken();\n        location.reload();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { PaymentsModule } from '@placeos/payments';\nimport { SharedExploreModule } from '@placeos/explore';\nimport { AssetsModule } from '@placeos/assets';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookModule } from './rooms/book.module';\nimport { SharedComponentModule } from './components/shared.module';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { DeskBookingComponent } from './desks/desk-booking.component';\nimport { DeskBookingFormComponent } from './desks/desk-form.component';\nimport { DeskBookingSuccessComponent } from './desks/desk-success.component';\nimport { MeetingBookingComponent } from './meetings/meeting-booking.component';\nimport { MeetingBookingFormComponent } from './meetings/meeting-form.component';\nimport { MeetingBookingSuccessComponent } from './meetings/meeting-success.component';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatSelectModule } from '@angular/material/select';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/locale/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n\n        DeskBookingComponent,\n        DeskBookingFormComponent,\n        DeskBookingSuccessComponent,\n\n        MeetingBookingComponent,\n        MeetingBookingFormComponent,\n        MeetingBookingSuccessComponent,\n        MeetingFlowConfirmComponent,\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        BookModule,\n        SharedComponentModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        FormsModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatSelectModule,\n        PaymentsModule,\n        AssetsModule,\n        FormFieldsModule,\n        ReactiveFormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'en',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        }),\n\n        ServiceWorkerModule.register('ngsw-worker.js', {\n            enabled: environment.production,\n        }),\n    ],\n    providers: [SpacePipe],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-not-found',\n    styles: [``],\n    template: `<div\n        class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\"\n    >\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 h-full items-center justify-center\"\n        >\n            <div class=\"mx-3 flex flex-row\">\n                <img\n                    src=\"assets/not-found.svg\"\n                    alt=\"graphic of magnifying glass\"\n                    width=\"200px\"\n                    class=\"items-center\"\n                />\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <div class=\"mb-3\">\n                    <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                        Page not found</span\n                    >\n                </div>\n            </div>\n            <div class=\"mx-3 flex flex-row\">\n                <span class=\"flex flex-row\">\n                    The page\n                    <span class=\"font-bold mx-1\"> {{ router.url }} </span> was\n                    not found.\n                </span>\n            </div>\n        </section>\n    </div> `,\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(public router: Router) {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule, Type } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\nimport { ComponentsModule } from '@placeos/components';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst COMPONENTS: Type<any>[] = [NotFoundComponent];\n\nconst MATERIAL_MODULES: any[] = [\n    MatButtonModule,\n    MatSnackBarModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatCheckboxModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatSliderModule,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        BrowserAnimationsModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n    exports: [\n        ...COMPONENTS,\n        ...MATERIAL_MODULES,\n        SharedBookingsModule,\n        SharedEventsModule,\n        ComponentsModule,\n    ],\n})\nexport class SharedComponentModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Desk</h3>\n                <desk-booking-form></desk-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        [disabled]=\"!form.value.asset_id\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Desk\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingComponent {\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _router: Router\n    ) {}\n\n    public async makeBooking() {\n        await this._service.confirmPost();\n        this._router.navigate(['/book', 'desks', 'success']);\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error>Booking title is required.</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\">Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\">Start Time<span>*</span></label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\">End Time<span>*</span></label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n            </section>\n            <section class=\"p-4\" *ngIf=\"allow_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public get allow_assets() {\n        return this._settings.get('app.bookings.allow_assets');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._service.setOptions({ type: 'desk' });\n        this.subscription(\n            'change',\n            this._service.form\n                .get('resources')\n                ?.valueChanges?.subscribe((list) =>\n                    list.length ? this.setBookingAsset(list[0]) : ''\n                )\n        );\n    }\n\n    private setBookingAsset(desk: Desk) {\n        if (!desk) return;\n        this._service.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n            booking_asset: desk,\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your desk booking for\n                <i>{{ last_success?.asset_name || last_success?.asset_id }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <p *ngIf=\"true\">\n                Please allow up to 5 minutes for you booking to be approved.\n            </p>\n            <a btn btn matRipple [routerLink]=\"['/book', 'desks']\" class=\"w-64\">\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: BookingFormService) {}\n}\n","import { Component } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { currentUser, getInvalidFields, notifyError } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { MeetingFlowConfirmComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component';\n\n@Component({\n    selector: 'meeting-booking',\n    template: `\n        <div class=\"absolute inset-0 bg-gray-200 dark:bg-neutral-600\">\n            <div\n                class=\"mx-auto w-full max-w-[32rem] overflow-auto max-h-screen\"\n            >\n                <h3 class=\"text-2xl p-4 font-medium\">Book Meeting</h3>\n                <meeting-booking-form></meeting-booking-form>\n                <div\n                    class=\"flex flex-col p-4 space-y-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"makeBooking()\"\n                    >\n                        Book Meeting\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-full inverse\"\n                        (click)=\"clearForm()\"\n                    >\n                        Clear Form\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingBookingComponent {\n    public sheet_ref: MatBottomSheetRef;\n\n    public readonly clearForm = () => this._service.clearForm();\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {}\n\n    public makeBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(MeetingFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'meeting', 'success']);\n                this._service.setView('success');\n            }\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\n\n@Component({\n    selector: 'meeting-booking-form',\n    template: `\n        <div\n            class=\"divide-y divide-gray-300 dark:divide-neutral-500 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\">Details</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.details = !hide_block.details\"\n                    >\n                        <app-icon>{{\n                            hide_block.details ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                >\n                    <div\n                        class=\"flex-1 min-w-[256px]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <label for=\"title\">Building</label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex items-center flex-wrap space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"title\">Add Title<span>*</span></label>\n                            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                                <input\n                                    matInput\n                                    name=\"title\"\n                                    formControlName=\"title\"\n                                    placeholder=\"e.g. Team Meeting\"\n                                />\n                                <mat-error\n                                    >Meeting title is required.</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"date\">Date<span>*</span></label>\n                            <a-date-field name=\"date\" formControlName=\"date\">\n                                Date and time must be in the future\n                            </a-date-field>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 w-1/3\">\n                            <label for=\"start-time\"\n                                >Start Time<span>*</span></label\n                            >\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 w-1/3 relative\">\n                            <label for=\"end-time\">End Time<span>*</span></label>\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form?.value?.date\"\n                                [max]=\"max_duration\"\n                            >\n                                Meeting must end at a future time.\n                            </a-duration-field>\n                            <mat-checkbox\n                                formControlName=\"all_day\"\n                                *ngIf=\"allow_all_day\"\n                                class=\"absolute -top-2 right-0\"\n                                >All Day</mat-checkbox\n                            >\n                        </div>\n                    </div>\n                    <div *ngIf=\"can_book_for_others\" class=\"w-full\">\n                        <label for=\"host\">Host<span>*</span></label>\n                        <host-select-field\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></host-select-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_attendees\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\">Attendees</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        matRipple\n                        class=\"bg-none underline text-xs text-blue-500\"\n                        (click)=\"findAvailableTime()\"\n                    >\n                        Availability\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.attendees = !hide_block.attendees\"\n                    >\n                        <app-icon>{{\n                            hide_block.attendees ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                >\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        3\n                    </div>\n                    <div class=\"text-xl\">Room</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.resources = !hide_block.resources\"\n                    >\n                        <app-icon>{{\n                            hide_block.resources ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                >\n                    <space-list-field\n                        class=\"mt-4\"\n                        formControlName=\"resources\"\n                    ></space-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"has_catering\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        4\n                    </div>\n                    <div class=\"text-xl\">Catering</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.catering = !hide_block.catering\"\n                    >\n                        <app-icon>{{\n                            hide_block.catering ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                >\n                    <catering-list-field\n                        formControlName=\"catering\"\n                        [options]=\"{\n                            date: form.value.date,\n                            duration: form.value.duration,\n                            zone_id: form.value.resources[0]?.level?.parent_id\n                        }\"\n                    ></catering-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '4' : '5' }}\n                    </div>\n                    <div class=\"text-xl\">Assets</div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"hide_block.assets = !hide_block.assets\"\n                    >\n                        <app-icon>{{\n                            hide_block.assets ? 'expand_more' : 'expand_less'\n                        }}</app-icon>\n                    </button>\n                </h3>\n                <div\n                    class=\"overflow-hidden\"\n                    [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                >\n                    <asset-list-field\n                        [date]=\"form.value.date\"\n                        [duration]=\"form.value.duration\"\n                        formControlName=\"assets\"\n                    ></asset-list-field>\n                </div>\n            </section>\n            <section class=\"p-4\" *ngIf=\"!hide_notes\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ !has_catering ? '5' : '6' }}\n                    </div>\n                    <div class=\"text-xl\">Notes</div>\n                </h3>\n                <div class=\"w-full flex flex-col\">\n                    <label for=\"notes\">General information for attendees</label>\n                    <rich-text-input\n                        name=\"notes\"\n                        formControlName=\"body\"\n                        placeholder=\"Notes...\"\n                    ></rich-text-input>\n                </div>\n            </section>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingBookingFormComponent extends AsyncHandler {\n    public readonly form = this._service.form;\n\n    public hide_block: Record<string, boolean> = {};\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.building_list;\n\n    public get has_catering() {\n        return (\n            !!this._settings.get('app.events.catering_enabled') ||\n            !!this._settings.get('app.events.has_catering')\n        );\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_assets() {\n        return this._settings.get('app.events.allow_assets');\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    constructor(\n        private _service: EventFormService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n        this._org.saveBuilding(bld.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'meeting-booking-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-white dark:bg-neutral-600 flex flex-col items-center justify-center space-y-4 p-4 text-center\"\n        >\n            <h3 class=\"text-3xl\">Booking Confirmed!</h3>\n            <img src=\"assets/tick_success.svg\" />\n            <p>\n                Your meeting booking for\n                <i>{{\n                    last_success?.location || last_success?.system?.display_name\n                }}</i>\n                has been successfully booked for the\n                {{ last_success?.date | date: 'dd MMMM yyyy' }} at\n                {{ last_success?.date | date: 'shortTime' }} -\n                {{\n                    last_success?.date + last_success?.duration * 60 * 1000\n                        | date: 'shortTime'\n                }}\n            </p>\n            <a\n                btn\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'meeting']\"\n                class=\"w-64\"\n            >\n                New Booking\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class MeetingBookingSuccessComponent {\n    public readonly last_success = this._service.last_success;\n\n    constructor(private _service: EventFormService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatNativeDateModule, NativeDateModule } from '@angular/material/core';\n\nimport { RoomBookingComponent } from './room-booking.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { FindSpaceComponent } from './find-space/find-space.component';\nimport { FindSpaceItemComponent } from './find-space-item/find-space-item.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { ComponentsModule } from '@placeos/components';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { FilterSpaceComponent } from './filter-space/filter-space.component';\nimport { BookingConfirmedComponent } from './booking-confirmed/booking-confirmed.component';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { UpcomingBookingsComponent } from './upcoming-bookings/upcoming-bookings.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'find',\n        component: FindSpaceComponent,\n    },\n];\n\n@NgModule({\n    declarations: [\n        RoomBookingComponent,\n        RoomConfirmComponent,\n        FindSpaceComponent,\n        FindSpaceItemComponent,\n        FilterSpaceComponent,\n        BookingConfirmedComponent,\n        RoomTileComponent,\n        RoomDetailsComponent,\n        UpcomingBookingsComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedComponentModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatNativeDateModule,\n        NativeDateModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatNativeDateModule,\n        MatSnackBarModule,\n        MatButtonToggleModule,\n        ComponentsModule,\n    ],\n})\nexport class BookModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { CalendarEvent } from '@placeos/events';\nimport { of, Observable } from 'rxjs';\n\n@Component({\n    selector: 'booking-confirmed',\n    templateUrl: './booking-confirmed.component.html',\n    styles: [``],\n})\nexport class BookingConfirmedComponent implements OnInit {\n    public get form() {\n        return this._state.form;\n    }\n\n    location: CalendarEvent['location'];\n    date: Observable<CalendarEvent['date']>;\n    start_time$: Observable<string>;\n    end_time$: Observable<string>;\n    duration: CalendarEvent['duration'];\n\n    constructor(private _state: EventFormService, private _router: Router) {}\n\n    ngOnInit() {\n        this.location = this._state.last_success?.location;\n        this.date = of(this._state.last_success?.date);\n        this.start_time$ = of(\n            new Date(this._state.last_success?.date).toLocaleTimeString(\n                'en-US',\n                {\n                    hour: 'numeric',\n                    minute: 'numeric',\n                    hour12: true,\n                }\n            )\n        );\n        this.duration = this._state.last_success?.duration;\n        this.end_time$ = of(\n            new Date(\n                this._state.last_success?.date + this.duration * 60 * 1000\n            ).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n    newBooking() {\n        this._router.navigate(['book/spaces']);\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 bg-gray-50 h-full overflow-y-auto\">\n    <section\n        class=\"flex border-b border-gray-300 py-5 items-center justify-content h-full\"\n    >\n        <div\n            class=\"flex flex-col items-center mx-auto w-[calc(100%-2rem)] max-w-[375px]\"\n        >\n            <div class=\"mb-3\">\n                <span class=\"text-3xl font-bold mr-auto text-gray-700\">\n                    Booking Confirmed!</span\n                >\n            </div>\n            <div>\n                <img src=\"assets/tick_success.svg\" />\n            </div>\n\n            <div class=\"mx-3 flex items-center justify-center\">\n                <span class=\"flex text-justify\"\n                    >Your room booking for\n                    {{ location }}\n                    has been successfully booked for the\n                    {{ date | async | date: 'dd MMMM yyyy' }} at\n                    {{ start_time$ | async }} -\n                    {{ end_time$ | async }}\n                </span>\n            </div>\n            <div class=\"flex items-center mt-3\">\n                <button\n                    btn\n                    matRipple\n                    (click)=\"newBooking()\"\n                    class=\"text-sm bg-white text-secondary border-secondary my-2\"\n                >\n                    <span class=\"text-sm\">New Booking</span>\n                </button>\n            </div>\n        </div>\n    </section>\n</div>\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { take, map, filter, switchMap } from 'rxjs/operators';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeaturesFilterService {\n    public spaces$: Observable<Space[]> = this._state.available_spaces;\n    public updated_spaces$: Observable<Space[]>;\n    public updated_spaces_emitter: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    features_sub: Subscription;\n    _selected_features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    selected_features$: Observable<any> =\n        this._selected_features.asObservable();\n    get selected_features() {\n        return this._selected_features.getValue();\n    }\n\n    _features: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n    features$: Observable<any> = this._features.asObservable();\n    set features(feature) {\n        this._features.next(feature);\n    }\n    get features() {\n        return this._features.getValue();\n    }\n\n    room_features: any[] = [\n        { name: 'Video Conference (VC)', id: 'VidConf', value: false },\n        { name: 'Conference Phone', id: 'ConfPhone', value: false },\n        { name: 'Wireless Content Sharing', id: 'Wireless', value: false },\n        { name: 'Video Wall', id: 'VidWall', value: false },\n        { name: 'Whiteboard', id: 'Whiteboard', value: false },\n        { name: 'Jamboard', id: 'Jamboard', value: false },\n        { name: 'Projector', id: 'Projector', value: false },\n        { name: 'Views', id: 'Views', value: false },\n    ];\n\n    constructor(private _state: EventFormService) {\n        this._features.next(this.room_features);\n    }\n\n    async getSelectedFeatures() {\n        this.selected_features$ = this.features$.pipe(\n            map((arr) => arr.filter((item) => item.value == true))\n        );\n        await this.selected_features$.pipe(take(1)).toPromise();\n        this.selected_features$?.subscribe(this._selected_features);\n    }\n    async applyFilter() {\n        await this.selected_features$.pipe(take(1)).toPromise();\n\n        const requested_features = await this.sortSelectedFeatures(\n            this.selected_features\n        );\n\n        this.updated_spaces$ = this.spaces$.pipe(\n            map((spaces: Space[]) =>\n                spaces.filter((space: Space) => {\n                    return this._sort_and_join(space.feature_list).includes(\n                        requested_features\n                    );\n                })\n            )\n        );\n        await this.updated_spaces$?.pipe(take(1)).toPromise();\n        this.updated_spaces_emitter.next(true);\n    }\n\n    _sort_and_join(array: string[]): string {\n        return array?.sort().join();\n    }\n\n    async sortSelectedFeatures(array: any[]) {\n        let features_array = await array?.map((item) => item.id);\n        return this._sort_and_join(features_array);\n    }\n\n    clearFilter() {\n        this._selected_features.next(null);\n        this.room_features?.map((feature) => (feature.value = false));\n        this._features.next(this.room_features);\n        this.updated_spaces_emitter.next(false);\n    }\n\n    OnDestroy() {\n        this.features_sub?.unsubscribe();\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport {\n    MAT_BOTTOM_SHEET_DATA,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: '[filter-space]',\n    templateUrl: './filter-space.component.html',\n    styles: [``],\n})\nexport class FilterSpaceComponent implements OnInit {\n    readonly buildings = this._org.building_list;\n    readonly building = this._org.active_building;\n    minDate: Date = new Date();\n    features$: Observable<Array<{}>>;\n    \n    public readonly setBuilding = (b) => this._org.building = b;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { data },\n        private _bottomsheetRef: MatBottomSheetRef<any>,\n        private _featuresFilterService: FeaturesFilterService,\n        private _state: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    ngOnInit() {\n        this.features$ = this._featuresFilterService.features$;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    applyFilters() {\n        this._bottomsheetRef.dismiss(this.form);\n        this._featuresFilterService.applyFilter();\n    }\n\n    getSelectedFeatures() {\n        this._featuresFilterService.getSelectedFeatures();\n    }\n\n    closeModal() {\n        this._bottomsheetRef.dismiss();\n    }\n}\n","<div class=\"flex flex-1 flex-col z-0 m-0 min-h-[800px] overflow-y-auto\">\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row items-center\">\n                    <button icon matRipple (click)=\"closeModal()\">\n                        <app-icon\n                            class=\"flex items-center justify-center text-3xl text-gray-700\"\n                            >close</app-icon\n                        >\n                    </button>\n\n                    <span class=\"flex items-center text-xl font-bold ml-6\">\n                        Space Filters</span\n                    >\n                </div>\n            </div>\n        </section>\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Details</div>\n\n                <div class=\"flex flex-col\">\n                    <label\n                        class=\"text-sm font-bold text-gray-700 mb-1\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        Location\n                    </label>\n\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full\"\n                        appearance=\"outline\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <div class=\"flex flex-col\">\n                        <label class=\"text-sm font-bold text-gray-700 mb-1\">\n                            Date\n                        </label>\n                        <a-date-field\n                            [from]=\"minDate\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n\n                        <div class=\"flex flex-row space-x-2 w-full\">\n                            <div class=\"flex flex-col flex-1 w-1/3\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    Start Time*\n                                </label>\n\n                                <a-time-field\n                                    [ngModel]=\"form?.value.date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex flex-col flex-1 w-1/3 ml-auto\">\n                                <label\n                                    class=\"text-sm font-bold text-gray-700 mb-1\"\n                                >\n                                    End Time*\n                                </label>\n                                <a-duration-field\n                                    [time]=\"form?.value.date\"\n                                    [max]=\"12 * 60\"\n                                    [min]=\"60\"\n                                    [step]=\"60\"\n                                    formControlName=\"duration\"\n                                ></a-duration-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-b border-gray-300 items-center\">\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"my-2 text-lg\">Favourites</div>\n                <div class=\"flex flex-row mb-2\">\n                    <span>Only show favourite rooms</span>\n                    <mat-checkbox class=\"ml-auto\"></mat-checkbox>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col border-gray-300\">\n            <div class=\"w-[calc(100%-2rem)] max-w-[22.5rem] mx-auto\">\n                <div class=\"my-2 text-lg\">Facilities</div>\n\n                <div *ngFor=\"let feature of features$ | async\">\n                    <div class=\"flex flex-row mb-1\">\n                        <span> {{ feature.name }}</span>\n                        <mat-checkbox\n                            [(ngModel)]=\"feature.value\"\n                            class=\"ml-auto checkbox\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            (change)=\"getSelectedFeatures()\"\n                        ></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 mt-5 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"applyFilters()\"\n                class=\"filter-button text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto text-center\"\n            >\n                <span class=\"\">Apply Filters</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Space } from '@placeos/spaces';\n\n@Component({\n    selector: 'find-space-item',\n    templateUrl: './find-space-item.component.html',\n    styles: [``],\n})\nexport class FindSpaceItemComponent {\n    @Input() public space: Space;\n    @Input() public selected: boolean = false;\n    @Output() public selectedChange = new EventEmitter<boolean>();\n\n    readonly toggleSelected = () => this.selectedChange.emit(!this.selected);\n}\n","<button\n    mat-ripple\n    class=\"flex flex-col bg-white p-4 my-2 shadow w-[375px] max-w-[calc(100%-2rem)] mx-auto rounded space-y-4\"\n    [class.bg-primary]=\"selected\"\n    [class.text-white]=\"selected\"\n    (click)=\"toggleSelected()\"\n>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">meeting_room</app-icon>\n        <div\n            >{{ space?.level?.display_name || space?.level?.name }},\n            {{ space?.display_name || space?.name }}</div\n        >\n    </div>\n    <div class=\"flex flex-row w-full items-center space-x-2\">\n        <app-icon class=\"text-lg\">group</app-icon>\n        <div>{{ space?.capacity || 0 }} People</div>\n    </div>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { EventFormService } from '@placeos/events';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { HashMap } from '@placeos/common';\nimport { Observable, combineLatest, of, BehaviorSubject } from 'rxjs';\nimport { first, take, filter, map, tap } from 'rxjs/operators';\nimport { FilterSpaceComponent } from '../filter-space/filter-space.component';\nimport { FeaturesFilterService } from '../features-filter.service';\nimport { MapService, Locatable } from '../map.service';\nimport { ViewerFeature, ViewAction, ViewerStyles } from '@placeos/svg-viewer';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { MapsList } from '../map.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'find-space',\n    templateUrl: './find-space.component.html',\n    styles: [\n        `\n            .mat-button-toggle-appearance-standard {\n                height: 2.25rem;\n            }\n            .mat-button-toggle-appearance-standard\n                .mat-button-toggle-label-content {\n                line-height: 2.25rem;\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-label-content {\n                font-size: 0.875rem;\n            }\n            .mat-button-toggle-checked {\n                border: 1px solid var(--primary);\n                border-radius: 5px;\n                box-shadow: none;\n            }\n            .mat-focus-indicator {\n                border: none;\n            }\n        `,\n    ],\n})\nexport class FindSpaceComponent extends AsyncHandler implements OnInit {\n    start_time$: Observable<any>;\n    duration_minutes: number;\n    end_time$: Observable<any>;\n    selected_features$: Observable<any>;\n    filtered_spaces: Space[] = [];\n    show_room_details$: Observable<boolean> = of(false);\n    selected_space: Space;\n    space_view?: string;\n    locatable_spaces$: Observable<Locatable[]>;\n    maps_list$: Observable<MapsList[]>;\n    map_features$: Observable<ViewerFeature[]>;\n    _map_features: BehaviorSubject<ViewerFeature[]> = new BehaviorSubject<\n        ViewerFeature[]\n    >(null);\n    map_actions$: Observable<ViewAction[]> = null;\n    map_styles$: Observable<ViewerStyles[]> = null;\n    bottomSheetRef: any;\n\n    public selected_level: any;\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly buildings = this._org.building_list;\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces$: Observable<Space[]> = this._state.available_spaces;\n    public readonly features = this._spaces.features;\n\n    public readonly setBuilding = (b) => (this._org.building = b);\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService,\n        private _mapService: MapService,\n        private _roomConfirmService: RoomConfirmService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.space_view = 'listView';\n\n        this.selected_features$ =\n            this._featuresFilterService.selected_features$;\n        this._state.setView('find');\n        this.setTimeChips();\n\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._spaces.initialised.pipe(first((_) => !!_)).toPromise();\n        await this._state.available_spaces.pipe(take(1)).toPromise();\n\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        this.subscription(\n            'features',\n            this.selected_features$?.subscribe((v) =>\n                this.setOptions({ features: v || [] })\n            )\n        );\n\n        await this._mapService.locateSpaces(this.spaces$);\n\n        this.locatable_spaces$ = this._mapService.locatable_spaces$;\n\n        this.maps_list$ = this._mapService.maps_list$?.pipe(\n            tap((maps) => (this.selected_level = maps))\n        );\n\n        await this._mapService.features_loaded$\n            .pipe(first((_) => !!_))\n            .toPromise();\n\n        this.applyMapDecorations();\n\n        this._map_features.next(this._mapService.map_features);\n        this.map_features$ = this._map_features.asObservable();\n        this.map_actions$ = this._mapService.map_actions$;\n    }\n\n    public handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space[space.id] = book;\n        this._roomConfirmService.book_space = this.book_space;\n        this._roomConfirmService.handleBookEvent(space, book);\n        this.show_room_details$ = of(true);\n        this._roomConfirmService.updateSelectedSpace(space);\n    }\n\n    openFilter() {\n        this.bottomSheetRef = this._bottomSheet.open(FilterSpaceComponent, {\n            data: this.buildings as OrganisationService['building_list'],\n        });\n    }\n\n    openRoomDetails() {\n        this._roomConfirmService.openRoomDetail(this.selected_space);\n    }\n\n    resetSpace() {\n        this.show_room_details$ = of(false);\n    }\n\n    setTimeChips() {\n        this.start_time$ = of(\n            new Date(this.form?.controls?.date?.value).toLocaleTimeString(\n                'en-US',\n                { hour: 'numeric', minute: 'numeric', hour12: true }\n            )\n        );\n        this.duration_minutes = this.form?.controls?.duration?.value;\n        const end =\n            this.form?.controls?.date?.value +\n            this.duration_minutes * 60 * 1000;\n        this.end_time$ = of(\n            new Date(end).toLocaleTimeString('en-US', {\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true,\n            })\n        );\n    }\n\n    updateSelectedLevel(e) {\n        this.selected_level = e;\n        if (!this.selected_level?.length) {\n            this.applyMapDecorations();\n        }\n    }\n\n    applyMapDecorations() {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1500\n        );\n    }\n\n    processFeature() {\n        this.map_features$ = this._mapService.map_features$;\n    }\n\n    processStyles() {\n        this.map_styles$ = of([this._mapService.style_map]);\n    }\n\n    closeModal() {\n        this._router.navigate(['/book/spaces']);\n        this._featuresFilterService.clearFilter();\n    }\n}\n","<div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50 overflow-auto\">\n    <section class=\"flex flex-col py-5\">\n        <div class=\"w-[calc(100%-2rem)] max-w-[375px] mx-auto\">\n            <div class=\"flex flex-row items-center\">\n                <button (click)=\"closeModal()\">\n                    <mat-icon\n                        class=\"flex items-center justify-center text-3xl text-gray-700\"\n                        >close</mat-icon\n                    >\n                </button>\n\n                <span class=\"flex items-center text-lg font-bold ml-6\">\n                    Find Space</span\n                >\n            </div>\n\n            <div class=\"flex flex-row justify-between mt-3 align-middle\">\n                <div class=\"flex w-7/12 justify-center\">\n                    <button\n                        btn\n                        matRipple\n                        (click)=\"openFilter()\"\n                        class=\"bg-gray-300 w-full h-9 text-sm filter-button\"\n                    >\n                        <span>Filter</span>\n\n                        <span *ngIf=\"(selected_features$ | async)?.length\">\n                            ({{ (selected_features$ | async).length }}\n                            applied)\n                        </span>\n                    </button>\n                </div>\n\n                <div class=\"flex w-4/12\">\n                    <mat-button-toggle-group\n                        aria-label=\"Map or list view\"\n                        [(ngModel)]=\"space_view\"\n                        (change)=\"resetSpace()\"\n                        class=\"flex w-full ml-auto mr-0 border-none\"\n                    >\n                        <mat-button-toggle\n                            value=\"mapView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >Map</span\n                            ></mat-button-toggle\n                        >\n                        <mat-button-toggle\n                            value=\"listView\"\n                            class=\"flex bg-gray-300 w-1/2 rounded text-sm justify-center items-center\"\n                            ><span class=\"flex leading-9 text-[0.875rem]\"\n                                >List</span\n                            ></mat-button-toggle\n                        >\n                    </mat-button-toggle-group>\n                </div>\n            </div>\n\n            <section class=\"flex flex-row\">\n                <!-- <mat-chip-list class=\"mt-2\">\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        {{ form?.controls?.date?.value | date: 'dd MMMM yyyy' }}\n                    </mat-chip>\n\n                    <div *ngIf=\"form?.controls.attendees.value.length > 0\">\n                        <mat-chip class=\"text-gray-700 text-xs\">\n                            {{ form?.controls?.attendees?.value.length }}\n                            People\n                        </mat-chip>\n                    </div>\n\n                    <mat-chip class=\"text-gray-700 text-xs\">\n                        <span>{{ start_time$ | async }}</span>\n                        -\n                        <span> {{ end_time$ | async }}</span>\n                    </mat-chip>\n                </mat-chip-list> -->\n            </section>\n\n            <section class=\"flex flex-row my-2 border-t\">\n                <div class=\"flex flex-col\">\n                    <span class=\"text-lg font-bold mt-3\"> Results</span>\n                    <span class=\"text-xs text-gray-500 mt-1\">\n                        {{ (spaces$ | async)?.length || 0 }} results found</span\n                    >\n                </div>\n            </section>\n\n            <div class=\"flex-1 w-full bg-gray-100\">\n                <ng-container *ngIf=\"!(loading | async); else load_state\">\n                    <ng-container\n                        *ngIf=\"(spaces$ | async)?.length > 0; else empty_state\"\n                    >\n                        <div *ngIf=\"space_view == 'listView'\">\n                            <find-space-item\n                                *ngFor=\"let space of spaces$ | async\"\n                                [space]=\"space\"\n                                [selected]=\"book_space[space.id]\"\n                                (selectedChange)=\"\n                                    handleBookEvent(space, $event)\n                                \"\n                                class=\"text-sm\"\n                            >\n                            </find-space-item>\n                        </div>\n                        <div\n                            *ngIf=\"\n                                space_view == 'mapView' &&\n                                (map_features$ | async)?.length > 0\n                            \"\n                            class=\"text-center h-full\"\n                        >\n                            <div *ngIf=\"(maps_list$ | async)?.length > 1\">\n                                <mat-form-field\n                                    appearance=\"outline\"\n                                    class=\"flex ml-auto m-3 text-sm\"\n                                >\n                                    <mat-select\n                                        [(ngModel)]=\"selected_level\"\n                                        (ngModelChange)=\"\n                                            updateSelectedLevel($event)\n                                        \"\n                                    >\n                                        <mat-option [value]=\"maps_list$ | async\"\n                                            >All Levels</mat-option\n                                        >\n                                        <mat-option\n                                            *ngFor=\"\n                                                let map of maps_list$ | async\n                                            \"\n                                            [value]=\"map\"\n                                            >{{ map.level }}</mat-option\n                                        >\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n\n                            <div\n                                *ngIf=\"selected_level\"\n                                class=\"m-6 max-w-screen relative\"\n                            >\n                                <!-- If 'All Levels' option is selected -->\n                                <div *ngIf=\"selected_level?.length\">\n                                    <div\n                                        *ngFor=\"let map of selected_level\"\n                                        class=\"m-3 h-[12rem] max-w-screen relative\"\n                                    >\n                                        <i-map\n                                            [src]=\"map?.map_id\"\n                                            [styles]=\"map_styles$ | async\"\n                                            [features]=\"map_features$ | async\"\n                                            [actions]=\"map_actions$ | async\"\n                                            class=\"m-1 p-1 max-w-screen\"\n                                        >\n                                        </i-map>\n                                    </div>\n                                </div>\n\n                                <!-- If an individual level is selected -->\n                                <div\n                                    *ngIf=\"!selected_level?.length\"\n                                    class=\"m-3 h-[24rem] max-w-screen relative\"\n                                >\n                                    <i-map\n                                        [src]=\"selected_level?.map_id\"\n                                        [styles]=\"map_styles$ | async\"\n                                        [features]=\"map_features$ | async\"\n                                        [actions]=\"map_actions$ | async\"\n                                        class=\"m-1 p-1 max-w-screen\"\n                                    >\n                                    </i-map>\n                                </div>\n                            </div>\n                        </div>\n\n                        <p class=\"p-2 text-sm text-center opacity-60\">\n                            End of available spaces list\n                        </p>\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #load_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-4 my-3\"\n                    >\n                        <mat-spinner [diameter]=\"32\"></mat-spinner>\n                        <p>Retrieving available spaces...</p>\n                    </div>\n                </ng-template>\n                <ng-template #empty_state>\n                    <div\n                        class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-2 text-center my-6\"\n                    >\n                        <p>\n                            No available spaces for selected time, capacity or\n                            level(s)\n                        </p>\n                    </div>\n                </ng-template>\n            </div>\n        </div>\n        <section\n            class=\"flex flex-col py-1 border-t border-gray-300 top-box-shadow items-center justify-center\"\n        >\n            <div *ngIf=\"show_room_details$ | async\">\n                <button\n                    matRipple\n                    type=\"submit\"\n                    (click)=\"openRoomDetails()\"\n                    class=\"open-details-button bg-secondary border-secondary w-[300px] my-1\"\n                >\n                    <span class=\"\">View Room</span>\n                </button>\n            </div>\n        </section>\n    </section>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take, first } from 'rxjs/operators';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { ViewerFeature, ViewerStyles, ViewAction } from '@placeos/svg-viewer';\nimport { MapPinComponent } from '@placeos/components';\nimport { Space } from '@placeos/spaces';\nimport { AsyncHandler } from '@placeos/common';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { RoomTileComponent } from './room-tile/room-tile.component';\nimport { RoomConfirmService } from './room-confirm.service';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\nexport interface MapsList {\n    map_id: string;\n    level: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class MapService extends AsyncHandler {\n    public level: BuildingLevel;\n    public style_map: ViewerStyles = {};\n    public item: Locatable;\n\n    private _map_features: BehaviorSubject<ViewerFeature[]> =\n        new BehaviorSubject<ViewerFeature[]>([]);\n    public map_features$: Observable<ViewerFeature[]> =\n        this._map_features.asObservable();\n\n    get map_features() {\n        return this._map_features.getValue();\n    }\n\n    set map_features(features: ViewerFeature[]) {\n        this._map_features.next(features);\n    }\n\n    public map_actions$: Observable<ViewAction[]>;\n\n    private _map_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly map_loaded$: Observable<boolean> = this._map_loaded.asObservable();\n\n    private _features_loaded: BehaviorSubject<boolean> =\n        new BehaviorSubject<boolean>(false);\n    readonly features_loaded$: Observable<boolean> =\n        this._features_loaded.asObservable();\n\n    selected_space$: Observable<Space> =\n        this._roomConfirmService.selected_space$;\n\n    //Store of Locatable Spaces\n    private _locatable_spaces: BehaviorSubject<Locatable[]> =\n        new BehaviorSubject<Locatable[]>([]);\n\n    locatable_spaces$: Observable<Locatable[]> =\n        this._locatable_spaces.asObservable();\n\n    set locatable_spaces(space: Locatable[]) {\n        this._locatable_spaces.next(space);\n    }\n\n    get locatable_spaces() {\n        return this._locatable_spaces.getValue();\n    }\n\n    //Store of map_id urls & level names for available_spaces\n    private _maps_list: BehaviorSubject<MapsList[]> = new BehaviorSubject<any>(\n        []\n    );\n\n    maps_list$: Observable<any> = this._maps_list.asObservable();\n\n    set maps_list(map: MapsList[]) {\n        this._maps_list.next(map);\n    }\n\n    get maps_list() {\n        return this._maps_list.getValue();\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private _roomConfirmService: RoomConfirmService\n    ) {\n        super();\n    }\n\n    async locateSpaces(available_spaces: Observable<Space[]>) {\n        await available_spaces?.pipe(take(1)).toPromise();\n\n        available_spaces?.subscribe(\n            (spaces) =>\n                (this.locatable_spaces = spaces?.map((space) => ({\n                    id: space.id,\n                    name: space.name,\n                    map_id: space.map_id,\n                    level: space.level,\n                })))\n        );\n        await this.locatable_spaces$?.pipe(first((_) => !!_)).toPromise();\n        await this.loadMap();\n        await this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n            },\n            1000\n        );\n\n        await this.processStyles();\n\n        this.map_actions$ = available_spaces?.pipe(\n            map((spaces: Space[]) =>\n                spaces.map(\n                    (space: Space) =>\n                        ({\n                            id: space.map_id,\n                            action: 'click',\n                            callback: () => {\n                                this.openRoomTile(space);\n                            },\n                        } as ViewAction)\n                )\n            )\n        );\n    }\n\n    async loadMap() {\n        this._map_loaded.next(false);\n        this.maps_list$ = this.locatable_spaces$?.pipe(\n            map((spaces: Locatable[]) =>\n                spaces.map((space: Locatable) => ({\n                    map_id: space.level.map_id,\n                    level: space.level.name,\n                }))\n            )\n        );\n\n        this.maps_list$ = this.maps_list$?.pipe(\n            map((mapsList: MapsList[]) => [\n                ...new Map(mapsList.map((v) => [v.map_id, v])).values(),\n            ])\n        );\n\n        this._map_loaded.next(true);\n    }\n\n    public processFeature(): void {\n        this._features_loaded.next(false);\n        let focus: any;\n        this.locatable_spaces$.subscribe((spaces) =>\n            spaces\n                ? (focus = spaces?.map((space) => ({\n                      location: space.map_id,\n                      content: MapPinComponent,\n                      data: { name: space.name },\n                      z_index: 99,\n                      zoom: 100,\n                  })))\n                : []\n        );\n        this.map_features = focus;\n        this._features_loaded.next(true);\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        styles[`#zones`] = { display: 'none' };\n        styles[`#Zones`] = { display: 'none' };\n        this.style_map = styles;\n    }\n    openRoomTile(space: Space) {\n        const bottomSheetRef = this._bottomSheet.open(RoomTileComponent, {\n            panelClass: 'bottom-sheet-transparent',\n            data: space,\n        });\n\n        this._roomConfirmService.handleBookEvent(space, true);\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { EventFormService } from '@placeos/events';\nimport { FeaturesFilterService } from './features-filter.service';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'room-booking',\n    templateUrl: './room-booking.component.html',\n    styles: [\n        `\n            .button-text {\n                color: var(--secondary);\n            }\n        `,\n    ],\n})\nexport class RoomBookingComponent implements OnInit {\n    public show_spaces = false;\n    public show_people = false;\n\n    min_date: Date = new Date();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this._state.clearForm();\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private _document: Document,\n        private router: Router,\n        private _state: EventFormService,\n        private _featuresFilterService: FeaturesFilterService\n    ) {}\n\n    ngOnInit(): void {\n        this._state.newForm();\n        this._featuresFilterService.clearFilter();\n    }\n\n    async findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host) this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid) return;\n        await this._state.storeForm();\n        this.router.navigate(['/schedule/view']);\n    }\n\n    downloadTemplate() {\n        window.open('assets/template.csv');\n    }\n}\n","<div\n    class=\"flex flex-1 flex-col z-0 m-0 bg-gray-50 dark:bg-neutral-600 h-full overflow-y-auto\"\n>\n    <form *ngIf=\"form\" [formGroup]=\"form\">\n        <section\n            class=\"flex flex-col border-b border-gray-300 dark:border-neutral-500 py-5 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <span class=\"flex text-xl font-bold mb-2\"> Book Room</span>\n\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>1</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Details</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Add Title*</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            placeholder=\"e.g Team meeting\"\n                            formControlName=\"title\"\n                            class=\"text-sm max-w-[22.5rem]\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">Date*</label>\n                    <a-date-field\n                        [from]=\"min_date\"\n                        formControlName=\"date\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex flex-row -mb-5 space-x-2\">\n                    <div class=\"flex flex-col w-1/2\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            Start Time*\n                        </label>\n                        <a-time-field\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col w-1/2 ml-auto\">\n                        <label class=\"text-sm font-bold mb-1\">\n                            End Time*\n                        </label>\n                        <a-duration-field\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            formControlName=\"duration\"\n                            class=\"text-sm max-w-[175px]\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section\n            class=\"flex flex-col py-3 border-b border-gray-300 dark:border-neutral-500 items-center\"\n        >\n            <div\n                class=\"flex flex-col w-[calc(100%-2rem)] max-w-[22.5rem] self-center\"\n            >\n                <div class=\"flex flex-row\">\n                    <div\n                        class=\"border border-black dark:border-neutral-500 rounded-full w-7 h-7 text-center\"\n                    >\n                        <span>2</span>\n                    </div>\n                    <div class=\"ml-2 mb-4 text-base\">Attendees</div>\n                </div>\n\n                <div class=\"flex flex-col\">\n                    <label class=\"text-sm font-bold mb-1\">\n                        Add Attendees\n                    </label>\n\n                    <a-user-list-field\n                        formControlName=\"attendees\"\n                        class=\"text-sm max-w-[22.5rem]\"\n                        [custom_template]=\"true\"\n                        (download)=\"downloadTemplate()\"\n                    ></a-user-list-field>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"flex flex-col py-3 items-center justify-center\">\n            <button\n                btn\n                matRipple\n                type=\"submit\"\n                (click)=\"findSpace()\"\n                class=\"text-sm bg-secondary border-secondary min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Find room</span>\n            </button>\n            <button\n                btn\n                matRipple\n                (click)=\"clearForm()\"\n                class=\"text-sm bg-transparent text-secondary border-secondary my-2 min-w-[300px] max-w-[calc(100% - 2rem)] mx-auto\"\n            >\n                <span class=\"text-sm\">Clear form</span>\n            </button>\n        </section>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Space, SpacesService } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { HashMap } from '@placeos/common';\nimport { RoomDetailsComponent } from './room-details/room-details.component';\nimport { RoomConfirmComponent } from './room-confirm/room-confirm.component';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomConfirmService {\n    space: Space;\n    public book_space: HashMap<boolean> = {};\n    public space_list: Space[] = [];\n\n    _selected_space: BehaviorSubject<Space> = new BehaviorSubject<Space>(null);\n    selected_space$: Observable<Space> = this._selected_space.asObservable();\n\n    get selected_space() {\n        return this._selected_space.getValue();\n    }\n\n    set selected_space(space) {\n        this._selected_space.next(space);\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _bottomSheet: MatBottomSheet,\n        private router: Router,\n        private _state: EventFormService,\n        private _spaces: SpacesService,\n        private _space_pipe: SpacePipe\n    ) {\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n    }\n\n    async openRoomDetail(space = this.selected_space) {\n        const room_details_ref = this._bottomSheet.open(RoomDetailsComponent, {\n            data: space,\n        });\n\n        await room_details_ref\n            .afterDismissed()\n            .subscribe((selectedSpace) =>\n                selectedSpace ? this.openRoomConfirm(selectedSpace) : null\n            );\n    }\n\n    openRoomConfirm(space?) {\n        if (space) {\n            const confirm_ref = this._bottomSheet.open(RoomConfirmComponent, {\n                data: space,\n            });\n        }\n    }\n\n    updateSelectedSpace(space?) {\n        if (space) this.selected_space = space;\n    }\n\n    handleBookEvent(space: Space, book: boolean = true) {\n        this.book_space = {};\n        this.book_space[space.id] = book;\n    }\n\n    async bookRoom(space?) {\n        const id_list = Object.keys(this.book_space).filter(id => this.book_space[id]);\n        const spaces = await Promise.all(id_list.map(id => this._space_pipe.transform(id)));\n        this.form.patchValue({ resources: spaces, system: spaces[0] });\n        this.space_list = this._spaces.filter((s) => this.book_space[s.id]);\n        this.postForm();\n    }\n\n    async postForm() {\n        await this._state.postForm().catch((err) => console.error(err));\n        if (this._state.last_success)\n            this.router.navigate(['/confirm/success']);\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { EventFormService } from '@placeos/events';\nimport { RoomConfirmService } from '../room-confirm.service';\nimport { CalendarEvent } from '@placeos/events';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'room-confirm',\n    templateUrl: './room-confirm.component.html',\n    styles: [``],\n})\nexport class RoomConfirmComponent implements OnInit {\n    unix_time: number;\n    start_time: string;\n    end_time: string;\n    attendees: User[];\n    space: Space;\n    title: CalendarEvent['title'];\n    show_submit_button: boolean = true;\n\n    public get form() {\n        return this._state.form;\n    }\n    public loading = this._state.loading;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomConfirmComponent>,\n        private _state: EventFormService,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    async ngOnInit() {\n        this.unix_time = this.form?.controls?.date.value;\n        this.start_time = new Date(this.unix_time).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        const durationMinutes: number = this.form?.controls?.duration.value;\n        const end = this.unix_time + durationMinutes * 60 * 1000;\n        this.end_time = new Date(end).toLocaleTimeString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true,\n        });\n        this.attendees = this.form?.controls?.attendees.value as User[];\n        this.space = this.data;\n        this.title = this.form?.controls?.title.value;\n    }\n\n    closeModal() {\n        this._bottomSheetRef.dismiss('cancel');\n    }\n\n    confirmBooking() {\n        this.show_submit_button = false;\n        this._roomConfirmService.bookRoom(this.space);\n    }\n}\n","<div\n    class=\"w-full min-h-[800px] mx-auto w-[calc(100%-2rem)] flex flex-1 flex-col z-0 overflow-y-auto\"\n>\n    <section class=\"flex flex-col border-b border-gray-300 py-2\">\n        <div class=\"flex flex-row items-center justify-content space-x-4\">\n            <button icon matRipple (click)=\"closeModal()\">\n                <app-icon\n                    class=\"flex items-center justify-center text-3xl text-gray-700\"\n                    >close</app-icon\n                >\n            </button>\n            <span class=\"text-lg font-bold mr-auto\"> Confirm Room Booking</span>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >{{ title }}\n            </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >calendar_today</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ unix_time | date: 'dd MMMM yyyy' }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >schedule</mat-icon\n                >\n                <span class=\"flex\">{{ start_time }} -{{ end_time }}</span>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row border-b border-gray-300 mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\"\n                >Attendees\n            </span>\n\n            <div\n                class=\"flex flex-row mt-2 text-sm items-center text-gray-700\"\n                *ngFor=\"let attendee of attendees\"\n            >\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span class=\"w-full\">{{ attendee?.email }}</span>\n                </div>\n            </div>\n\n            <div class=\"flex flex-row mt-2 text-sm items-center text-gray-700\">\n                <div class=\"flex flex-col\">\n                    <mat-icon class=\"flex items-center material-icons-outlined\"\n                        >people</mat-icon\n                    >\n                </div>\n                <div class=\"flex flex-col\">\n                    <span>{{ form?.controls?.creator?.value }}</span>\n                </div>\n            </div>\n        </div>\n    </section>\n\n    <section class=\"flex flex-row mt-4 pb-4 space-x-4\">\n        <div class=\"flex flex-col\">\n            <span class=\"text-base\"><img src=\"assets/tick.svg\" /> </span>\n        </div>\n        <div class=\"flex flex-col\">\n            <span class=\"flex text-base font-bold text-gray-700\">Rooms </span>\n\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >meeting_room</mat-icon\n                >\n                <span class=\"flex\">\n                    {{ space?.name }}\n                </span>\n            </div>\n            <div class=\"flex mt-2 text-sm items-center text-gray-700\">\n                <mat-icon class=\"flex items-center material-icons-outlined\"\n                    >room</mat-icon\n                >\n                <span class=\"flex\"> {{ space?.level?.name }}</span>\n            </div>\n        </div>\n    </section>\n\n    <div\n        class=\"flex flex-col border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n    >\n        <button\n            matRipple\n            (click)=\"confirmBooking()\"\n            [disabled]=\"!show_submit_button\"\n            class=\"bg-secondary border-secondary w-[300px] ml-2 mx-4\"\n        >\n            <span class=\"\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Observable, of } from 'rxjs';\nimport { Space } from '@placeos/spaces';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-room-details',\n    templateUrl: './room-details.component.html',\n    styles: [``],\n})\nexport class RoomDetailsComponent implements OnInit {\n    space: Space | any;\n    room_added: Boolean = false;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomDetailsComponent>\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    selectRoom() {\n        this.room_added = !this.room_added;\n    }\n\n    back() {\n        if (this.room_added) {\n            this._bottomSheetRef.dismiss(this.space);\n        } else {\n            this._bottomSheetRef.dismiss(null);\n        }\n    }\n}\n","<div class=\"w-full min-h-[800px] flex flex-1 flex-col z-0 overflow-hidden\">\n    <section\n        class=\"flex bg-gray-300 min-h-[300px] justify-center items-center text-gray-500\"\n        *ngIf=\"space?.images?.length > 0\"\n    >\n        <img\n            auth\n            [source]=\"space.images[0]\"\n            [alt]=\"'Image of ' + (space.display_name || space.name)\"\n            width=\"100%\"\n            height=\"100%\"\n            class=\"flex z-20 rounded-lg\"\n        />\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300\"\n    >\n        <span class=\"text-lg font-bold mt-3\"> {{ space?.name }}</span>\n\n        <div (click)=\"selectRoom()\" class=\"w-max-[375px]\">\n            <button\n                *ngIf=\"room_added == false\"\n                btn\n                matRipple\n                class=\"bg-secondary border-secondary w-full mx-auto m-3\"\n            >\n                <span class=\"text-white\">+ Add this room</span>\n            </button>\n\n            <button\n                *ngIf=\"room_added == true\"\n                btn\n                matRipple\n                class=\"bg-gray-300 border-gray-300 w-full mx-auto m-3\"\n            >\n                <span class=\"text-black\">- Remove this room</span>\n            </button>\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col mx-auto w-[calc(100%-2rem)] border-b border-gray-300 p-3 pl-0\"\n    >\n        <span class=\"text-base font-bold\">Details</span>\n        <div class=\"flex flex-row items-center text-sm mt-3\">\n            <mat-icon class=\"material-icons-outlined blue-icon\"\n                >people</mat-icon\n            >\n            <span class=\"text-gray-500 text-sm\">\n                {{ space?.capacity }} People</span\n            >\n        </div>\n        <div class=\"flex flex-row items-center text-sm mt-1\">\n            <mat-icon class=\"material-icons-outlined blue-icon\">room</mat-icon>\n            <span class=\"text-gray-500\">\n                {{ space?.level?.name }}, {{ space?.level?.parent_id }}</span\n            >\n        </div>\n    </section>\n    <section\n        class=\"flex flex-col py-3 mx-auto w-[calc(100%-2rem)]\"\n        *ngIf=\"space?.feature_list.length > 0\"\n    >\n        <span class=\"text-base font-bold mb-3\">Room Facilities</span>\n\n        <div\n            *ngFor=\"let facility of space?.feature_list\"\n            class=\"flex flex-row w-full mb-1\"\n        >\n            <div [ngSwitch]=\"facility\">\n                <div *ngSwitchCase=\"'Views'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >panorama</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Projector'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >video_camera_front</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'VidConf'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >contact_phone</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Whiteboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >drive_file_rename_outline</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Jamboard'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >draw</mat-icon\n                    >\n                </div>\n                <div *ngSwitchCase=\"'Wifi'\">\n                    <mat-icon class=\"material-symbols-outlined blue-icon\"\n                        >nest_remote_comfort_sensor</mat-icon\n                    >\n                </div>\n            </div>\n\n            <span class=\"text-sm text-gray-500\">\n                {{ facility }}\n            </span>\n        </div>\n    </section>\n    <div\n        class=\"flex flex-col bg-white border-t border-gray-300 top-box-shadow p-3\"\n    >\n        <button\n            *ngIf=\"!room_added\"\n            btn\n            matRipple\n            class=\"bg-white border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-secondary\">Back</span>\n        </button>\n        <button\n            *ngIf=\"room_added\"\n            btn\n            matRipple\n            class=\"bg-secondary border-secondary w-full mx-auto\"\n            (click)=\"back()\"\n        >\n            <span class=\"text-white\">Confirm</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n    MatBottomSheetRef,\n    MAT_BOTTOM_SHEET_DATA,\n} from '@angular/material/bottom-sheet';\nimport { Space } from '@placeos/spaces';\nimport { RoomConfirmService } from '../room-confirm.service';\n\n@Component({\n    selector: 'placeos-room-tile',\n    templateUrl: './room-tile.component.html',\n    styles: [``],\n})\nexport class RoomTileComponent implements OnInit {\n    space: Space;\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n        private _bottomSheetRef: MatBottomSheetRef<RoomTileComponent>,\n        private _roomConfirmService: RoomConfirmService\n    ) {}\n\n    ngOnInit() {\n        this.space = this.data;\n    }\n\n    openRoomDetail() {\n        this._roomConfirmService.openRoomDetail(this.space);\n    }\n\n    cancel() {\n        this._bottomSheetRef.dismiss(null);\n    }\n}\n","<div\n    class=\"w-full min-h-min min-w-[400px] flex flex-1 flex-col z-0 overflow-hidden\"\n>\n    <div\n        class=\"flex w-[calc(100%-2rem)] max-w-[375px] mx-auto items-center justify-content\"\n        (click)=\"openRoomDetail()\"\n    >\n        <div\n            class=\"flex flex-col bg-white h-full w-full border rounded-lg mx-4\"\n        >\n            <div\n                class=\"flex items-center justify-center h-44 bg-gray-200 rounded-lg m-3 text-gray-500\"\n            >\n                <img\n                    auth\n                    *ngIf=\"space?.images?.length > 0\"\n                    [source]=\"space.images[0]\"\n                    alt=\"image of building \"\n                    width=\"100%\"\n                    height=\"100%\"\n                    class=\"flex z-20 rounded-lg\"\n                />\n\n                <div *ngIf=\"space?.images?.length == 0\">\n                    <mat-icon\n                        class=\"flex items-center justify-center material-icons-outlined text-[8rem]\"\n                        >image</mat-icon\n                    >\n                </div>\n            </div>\n            <div class=\"mb-4 flex flex-col\">\n                <span class=\"text-xl font-bold mt-1 mx-3\">\n                    {{ space?.name }}</span\n                >\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >room</mat-icon\n                    >\n                    <span class=\"text-gray-500\">\n                        {{ space?.level?.name }},\n                        {{ space?.level?.parent_id }}</span\n                    >\n                </div>\n\n                <div class=\"flex flex-row items-center text-base mt-1 mx-3\">\n                    <mat-icon\n                        class=\"flex items-center material-icons-outlined blue-icon\"\n                        >people</mat-icon\n                    >\n                    <span class=\"text-gray-500\"> {{ space?.capacity }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div\n    class=\"flex flex-col bg-white h-full border-t border-gray-300 top-box-shadow p-3 mt-5 mb-10 -mx-4 items-center\"\n>\n    <button\n        btn\n        matRipple\n        (click)=\"cancel()\"\n        class=\"bg-white border-secondary w-[460px] ml-2 mx-4\"\n    >\n        <span class=\"text-secondary\">Back</span>\n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AsyncHandler, currentUser } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { ScheduleStateService } from 'apps/workplace/src/app/new-schedule/schedule-state.service';\n\n@Component({\n    selector: 'placeos-upcoming-bookings',\n    template: `\n        <div class=\"w-full h-full flex flex-1 flex-col z-0 bg-gray-50\">\n            <h3 class=\"flex items-center text-xl font-bold p-4 pl-6\">\n                Your Bookings\n            </h3>\n            <div\n                class=\"px-4 pb-4 flex-1 h-1/2 overflow-auto space-y-4\"\n                *ngIf=\"!(loading$ | async); else load_state\"\n            >\n                <ng-container\n                    *ngIf=\"(events$ | async)?.length; else empty_state\"\n                >\n                    <ng-container\n                        *ngFor=\"let item of events$ | async; trackBy: trackByFn\"\n                    >\n                        <event-card\n                            *ngIf=\"isEvent(item); else booking_card\"\n                            [event]=\"item\"\n                        ></event-card>\n                        <ng-template #booking_card>\n                            <booking-card [booking]=\"item\"></booking-card>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-4 my-6\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving bookings...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"h-3/4 w-full flex-1 flex flex-col items-center justify-center space-y-2 p-8 text-center my-6\"\n            >\n                <p>No bookings found</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class UpcomingBookingsComponent extends AsyncHandler implements OnInit {\n    public user = currentUser();\n    public readonly loading$ = this._schedule.loading;\n    public readonly events$ = this._schedule.filtered_bookings;\n\n    constructor(private _schedule: ScheduleStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._schedule.toggleType('desk', true);\n        this._schedule.toggleType('parking', true);\n        this.subscription('poll', this._schedule.startPolling());\n    }\n\n    public isEvent(item: any) {\n        return item instanceof CalendarEvent;\n    }\n\n    public trackByFn(_: number, item: any) {\n        return item?.id;\n    }\n}\n","export const environment = {\n    production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-gray-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.value as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport { endOfDay, getUnixTime, isSameDay, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            map_id: i.locker_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) =>\n            [...e, ...v, ...d, ...p, ...l].sort((a, b) => a.date - b.date)\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n","export * from './lib/assets.module';\nexport * from './lib/asset.class';\nexport * from './lib/asset.utilities';\nexport * from './lib/assets.fn';\nexport * from './lib/asset-group.pipe';\n","import { Pipe } from '@angular/core';\n\nimport { AssetGroup } from './asset.class';\nimport { showAssetGroup } from './assets.fn';\n\nconst ASSET_GROUP_LIST: AssetGroup[] = [];\n\nconst EMPTY_ASSET_GROUP = new AssetGroup();\n\nexport function updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n    for (const assetgroup of assetgroup_list) {\n        if (!ASSET_GROUP_LIST.find(({ id }) => id === assetgroup.id)) {\n            ASSET_GROUP_LIST.push(assetgroup);\n        }\n    }\n}\n\n@Pipe({\n    name: 'assetgroup',\n})\nexport class AssetGroupPipe {\n    /**\n     * Get details of the assetgroup with the given ID\n     * @param assetgroup_id ID or Email of the assetgroup\n     */\n    public async transform(group_id: string): Promise<AssetGroup> {\n        if (!group_id) return EMPTY_ASSET_GROUP;\n        let asset_group = ASSET_GROUP_LIST.find(({ id }) => id === group_id);\n        if (asset_group) return asset_group;\n        const group = await showAssetGroup(group_id)\n            .toPromise()\n            .catch((_) => null);\n        if (group) {\n            asset_group = { ...group };\n            ASSET_GROUP_LIST.push(asset_group);\n            return asset_group;\n        }\n        return EMPTY_ASSET_GROUP;\n    }\n\n    public updateAssetGroupList(assetgroup_list: AssetGroup[]) {\n        updateAssetGroupList(assetgroup_list);\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\nimport { AssetSelectModalComponent } from 'libs/assets/src/lib/asset-select-modal/asset-select-modal.component';\nimport { AssetGroup } from 'libs/assets/src/lib/asset.class';\nimport { AssetStateService } from './asset-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `asset-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let asset of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"asset.images?.length; else placeholder\"\n                        [source]=\"asset.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/asset-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            (asset.id | assetgroup | async)?.name ||\n                                'AssetGroup'\n                        }}\n                    </div>\n                    <div i18n>{{ asset.amount }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"addAssetGroups(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeAssetGroup(asset)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addAssetGroups()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Asset</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => AssetListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class AssetListFieldComponent implements ControlValueAccessor {\n    @Input() public date = Date.now();\n    @Input() public duration = 30;\n    public items: AssetGroup[] = [];\n    public disabled = false;\n\n    private _onChange: (_: AssetGroup[]) => void;\n    private _onTouch: (_: AssetGroup[]) => void;\n    public selected: AssetGroup[] = [];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _state: AssetStateService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date || changes.duration) {\n            this._state.setOptions({\n                date: this.date,\n                duration: this.duration,\n            });\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: AssetGroup[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: AssetGroup[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: AssetGroup[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: AssetGroup[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeAssetGroup(asset: AssetGroup) {\n        const updated_list = this.items.filter((_) => _.id !== asset.id);\n        this.setValue(updated_list);\n    }\n\n    public addAssetGroups(asset?: AssetGroup) {\n        const ref = this._dialog.open(AssetSelectModalComponent, {\n            data: this.items,\n        });\n        ref.afterClosed().subscribe((items?: AssetGroup[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            items = items.map((item) => ({ ...item }));\n            for (const item of items) {\n                item.assets = item.assets.slice(0, item.amount);\n            }\n            this.setValue(items);\n        });\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetGroup } from '../asset.class';\nimport { flatten } from '@placeos/common';\n\n@Component({\n    selector: 'asset-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>\n                        {{ fav ? 'favorite' : 'favorite_border' }}\n                    </app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p>{{ item.assets?.length || 0 }} Available</p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.amount\"\n                        (ngModelChange)=\"countChange.emit($event)\"\n                        [min]=\"1\"\n                        [max]=\"item.assets?.length || 1\"\n                    ></a-counter>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <p>{{ item.description || 'No description' }}</p>\n                    </div>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    select\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">\n                            {{ active ? 'remove' : 'add' }}\n                        </app-icon>\n                        <p>\n                            {{\n                                active ? 'Remove this asset' : 'Add this asset'\n                            }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    Select an asset to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class AssetDetailsComponent {\n    @Input() public item?: AssetGroup;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public countChange = new EventEmitter<number>();\n    @Output() public close = new EventEmitter<void>();\n\n    public ngOnInit() {\n        if (this.item && !this.item.amount) this.item.amount = 1;\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            if (!this.item.amount) this.item.amount = 1;\n        }\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters-display',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersDisplayComponent {\n    \n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'asset-filters',\n    template: ``,\n    styles: [``]\n})\nexport class AssetFiltersComponent {\n    \n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AssetStateService } from '../asset-state.service';\nimport { AssetGroup } from '../asset.class';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'asset-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-auto py-2 bg-black/5 dark:bg-white/10 dark:border-neutral-500\"\n        >\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-4 px-2\">\n                {{ (assets | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(assets | async)?.length; else empty_state\"\n                >\n                    <li\n                        asset\n                        *ngFor=\"let asset of assets | async\"\n                        matRipple\n                        class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                    >\n                        <button\n                            select\n                            class=\"w-full h-full flex items-center pr-10\"\n                            (click)=\"selectAsset(asset)\"\n                        >\n                            <div\n                                class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 flex items-center justify-center overflow-hidden border border-black/10\"\n                            >\n                                <div\n                                    class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                    *ngIf=\"selected.includes(asset.id)\"\n                                >\n                                    <span class=\"text-xs\">\n                                        {{ asset.amount || 1 }}\n                                    </span>\n                                </div>\n                                <img\n                                    auth\n                                    *ngIf=\"\n                                        asset.images?.length;\n                                        else placeholder\n                                    \"\n                                    class=\"object-cover h-full\"\n                                    [source]=\"asset.images[0]\"\n                                />\n                                <ng-template #placeholder>\n                                    <img\n                                        class=\"m-auto\"\n                                        src=\"assets/icons/asset-placeholder.svg\"\n                                    />\n                                </ng-template>\n                            </div>\n                            <div class=\"space-y-2 text-left flex-1\">\n                                <div\n                                    class=\"font-medium flex items-center justify-between\"\n                                >\n                                    <div>{{ asset.name || 'Asset' }}</div>\n                                    <div class=\"opacity-60 text-xs\">\n                                        {{ asset.category }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"flex items-center text-sm space-x-2\"\n                                >\n                                    <p>\n                                        {{ asset.assets?.length || '0' }}\n                                        Available\n                                    </p>\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            fav\n                            class=\"absolute top-1 right-1\"\n                            [class.text-blue-400]=\"isFavourite(asset.id)\"\n                            (click)=\"toggleFav.emit(asset)\"\n                        >\n                            <app-icon>{{\n                                isFavourite(asset.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </li>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available assets for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available assets...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class AssetListComponent {\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Input() public selected_items: AssetGroup[] = [];\n    @Output() public toggleFav = new EventEmitter<AssetGroup>();\n    @Output() public onSelect = new EventEmitter<AssetGroup>();\n\n    public readonly counts = new BehaviorSubject<Record<string, number>>({});\n\n    public readonly loading = this._asset_state.loading;\n    public readonly assets = combineLatest([\n        this.counts,\n        this._asset_state.filtered_assets,\n    ]).pipe(\n        map(([counts, assets]) => {\n            for (const item of assets) {\n                item.amount = counts[item.id] || 0;\n                const selected = this.selected_items.find(\n                    (i) => i.id === item.id\n                );\n                if (selected) selected.assets = item.assets;\n            }\n            return assets;\n        })\n    );\n\n    constructor(private _asset_state: AssetStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items && this.selected_items?.length) {\n            const counts = {};\n            for (const item of this.selected_items) {\n                counts[item.id] = item.amount;\n            }\n            this.counts.next(counts);\n        }\n    }\n\n    public isFavourite(asset_id: string) {\n        return this.favorites.includes(asset_id);\n    }\n\n    public selectAsset(asset: AssetGroup) {\n        this.onSelect.emit(asset);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { Asset, AssetGroup } from '../asset.class';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'asset-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3>Add Assets</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <asset-filters class=\"h-full hidden sm:block\"></asset-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:min-w-[20rem] sm:h-[65vh]\"\n                >\n                    <asset-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500 dark:bg-neutral-700\"\n                    ></asset-filters-display>\n                    <asset-list\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        [selected_items]=\"selected\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></asset-list>\n                </div>\n                <asset-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] bg-white  dark:bg-neutral-700 z-20\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    (countChange)=\"updateSelectedCount($event)\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></asset-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    back-btn\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\">Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\">{{ count }} asset(s) added</p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">\n                            {{ isSelected(displayed?.id) ? 'remove' : 'add' }}\n                        </app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AssetSelectModalComponent {\n    public displayed: AssetGroup | null = null;\n    public selected: AssetGroup[] = [...(this._items || [])];\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_assets') || EMPTY_FAVS;\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i: any) => t + i.amount, 0);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _items: AssetGroup[]\n    ) {}\n\n    public setSelected(group: AssetGroup, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== group.id);\n        if (state) list.push(group);\n        this.selected = [...list];\n    }\n\n    public updateSelectedCount(count: number) {\n        if (!this.displayed) return;\n        const item = this.selected.find((_) => _.id === this.displayed.id);\n        if (item) item.amount = count;\n        item.assets = this.displayed.assets;\n    }\n\n    public toggleFavourite(asset: AssetGroup) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(asset.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_assets', [\n                ...fav_list,\n                asset.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_assets',\n                fav_list.filter((_) => _ !== asset.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryAssets, queryGroupAvailability } from './assets.fn';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport {\n    addMinutes,\n    endOfDay,\n    endOfMinute,\n    getUnixTime,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { AssetGroup } from './asset.class';\nimport { updateAssetGroupList } from './asset-group.pipe';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface AssetOptions {\n    zone?: string;\n    date: number;\n    duration?: number;\n    ignore?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetStateService {\n    private _options = new BehaviorSubject<AssetOptions>({ date: Date.now() });\n    private _search = new BehaviorSubject<string>('');\n    private _loading = new BehaviorSubject<string>('');\n\n    public readonly search = this._search.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public readonly asset_list = of(0).pipe(\n        switchMap(() => {\n            this._loading.next(this._loading.getValue() + '[Assets]');\n            return queryAssets();\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Assets\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly asset_bookings = this._options.pipe(\n        debounceTime(300),\n        switchMap(({ zone, date }) => {\n            this._loading.next(this._loading.getValue() + '[Bookings]');\n            return queryBookings({\n                zones: zone || '',\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'asset-request',\n            });\n        }),\n        tap((_) =>\n            this._loading.next(\n                this._loading.getValue().replace(/\\[Bookings\\]/g, '')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly available_groups = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([{ zone, date, duration, ignore }, bld]) => {\n            return queryGroupAvailability(\n                {\n                    zones: bld.id || zone || '',\n                    period_start: getUnixTime(startOfMinute(date)),\n                    period_end: getUnixTime(\n                        endOfMinute(addMinutes(date, duration || 30))\n                    ),\n                    type: 'asset-request',\n                } as any,\n                ignore\n            ).pipe(catchError(() => of([] as AssetGroup[])));\n        }),\n        map((list) => list.sort((a, b) => a.name.localeCompare(b.name))),\n        tap((_) => updateAssetGroupList(_)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_assets = combineLatest([\n        this._search,\n        this.available_groups,\n    ]).pipe(\n        map(([search, assets]) => {\n            const s = search.toLowerCase();\n            return assets.filter(\n                (_) =>\n                    _.assets?.length &&\n                    (_.name.toLowerCase().includes(s) ||\n                        _.description.toLowerCase().includes(s))\n            );\n        }),\n        shareReplay(1)\n    );\n\n    constructor(private _org: OrganisationService) {}\n\n    public setSearch(value: string) {\n        this._search.next(`${value}`);\n    }\n\n    public setOptions(options: Partial<AssetOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n}\n","export class AssetCategory {\n    id: string = '';\n    name: string = '';\n    description: string = '';\n    parent_category_id?: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<AssetCategory>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetPurchaseOrder {\n    id: string;\n    order_number: string;\n    invoice_number: string;\n    purchase_date: number;\n    unit_price: number;\n    expected_service_start_date: number;\n    expected_service_end_date: number;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetPurchaseOrder>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class AssetGroup {\n    id: string;\n    category_id: string;\n    brand: string;\n    name: string;\n    in_use: number;\n    description: string;\n    asset_count: number;\n    category?: AssetCategory;\n    assets?: Asset[];\n    images: string[] = [];\n    purchase_orders?: AssetPurchaseOrder[];\n    amount?: number;\n    zone_id: string;\n    created_at: number;\n    updated_at: number;\n\n    constructor(data?: Partial<AssetGroup>) {\n        Object.assign(this, data);\n    }\n}\n\nexport class Asset {\n    id: string = '';\n    type_id: string = '';\n    description: string = '';\n    serial_number: string = '';\n    barcode: string = '';\n    identifier: string = '';\n    other_data: Record<string, any> = {};\n    purchase_order_id: string = '';\n    created_at: number = Date.now();\n    updated_at: number = Date.now();\n\n    constructor(data?: Partial<Asset>) {\n        Object.assign(this, data);\n    }\n}\n","import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { flatten } from '@placeos/common';\n\nexport function generateAssetCategoryForm(category: AssetCategory = {} as any) {\n    return new FormGroup({\n        id: new FormControl(category.id),\n        name: new FormControl(category.name || '', [Validators.required]),\n        parent_category_id: new FormControl(category.parent_category_id),\n    });\n}\n\nexport function generateAssetPurchaseOrderForm(\n    order: AssetPurchaseOrder = {} as any\n) {\n    return new FormGroup({\n        id: new FormControl(order.id),\n        order_number: new FormControl(\n            order.order_number || (order as any).purchase_order_number || '',\n            [Validators.required]\n        ),\n        invoice_number: new FormControl(order.invoice_number || ''),\n        unit_price: new FormControl(order.unit_price || 0),\n        purchase_date: new FormControl(order.purchase_date * 1000 || null),\n        expected_service_start_date: new FormControl(\n            order.expected_service_start_date * 1000 ||\n                (order as any).depreciation_start_date ||\n                null\n        ),\n        expected_service_end_date: new FormControl(\n            order.expected_service_end_date * 1000 ||\n                (order as any).depreciation_end_date ||\n                null\n        ),\n    });\n}\n\nexport function generateAssetGroupForm(group: AssetGroup = new AssetGroup()) {\n    return new FormGroup({\n        id: new FormControl(group.id),\n        category_id: new FormControl(group.category_id || '', [\n            Validators.required,\n        ]),\n        images: new FormControl(group.images || []),\n        brand: new FormControl(group.brand || ''),\n        name: new FormControl(group.name || '', [Validators.required]),\n        description: new FormControl(group.description || ''),\n    });\n}\n\nexport function generateAssetForm(asset: Asset = new Asset()) {\n    return new FormGroup({\n        id: new FormControl(asset.id),\n        type_id: new FormControl(asset.type_id || '', [Validators.required]),\n        description: new FormControl(asset.description || ''),\n        serial_number: new FormControl(asset.serial_number || ''),\n        barcode: new FormControl(asset.barcode || ''),\n        identifier: new FormControl(asset.identifier || ''),\n        other_data: new FormControl(asset.other_data || {}),\n        purchase_order_id: new FormControl(asset.purchase_order_id),\n    });\n}\n\nexport function assetsToGroups(assets: Asset[]) {\n    const groups: AssetGroup[] = [];\n    for (const asset of assets) {\n        const group = groups.find((_) => _.id === (asset as any).asset_type_id);\n        if (group) {\n            group.assets.push(asset);\n        } else {\n            groups.push({\n                id: (asset as any).asset_type_id,\n                name: (asset as any).name,\n                assets: [asset],\n            } as AssetGroup);\n        }\n    }\n    for (const group of groups) {\n        group.amount = group.assets.length;\n    }\n    return groups;\n}\n\nexport function groupsToAssets(groups: AssetGroup[]) {\n    return flatten(\n        groups.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n}\n","import { cleanObject, del, get, post, put } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { catchError, map } from 'rxjs/operators';\nimport {\n    Asset,\n    AssetCategory,\n    AssetGroup,\n    AssetPurchaseOrder,\n} from './asset.class';\nimport { combineLatest, of } from 'rxjs';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport {\n    BookingsQueryParams,\n    createBooking,\n    queryBookings,\n    removeBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { flatten } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nconst BASE_ENDPOINT = '/api/engine/v2';\n\n////////////////////////////////\n////    Asset Categories    ////\n////////////////////////////////\n\nexport function queryAssetCategories(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_categories${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetCategory[])\n    );\n}\n\nexport function addAssetCategory(category: AssetCategory) {\n    return post(\n        `${BASE_ENDPOINT}/asset_categories`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function updateAssetCategory(\n    id: string,\n    category: Partial<AssetCategory>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_categories/${id}`,\n        cleanObject(category, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetCategory));\n}\n\nexport function saveAssetCategory(category: AssetCategory) {\n    return category.id\n        ? updateAssetCategory(category.id, category)\n        : addAssetCategory(category);\n}\n\nexport function showAssetCategory(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_categories/${id}`).pipe(\n        map((_) => _ as AssetCategory)\n    );\n}\n\nexport function deleteAssetCategory(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_categories/${id}`);\n}\n\n//////////////////////////////\n////     Asset Groups     ////\n//////////////////////////////\n\nexport function queryAssetGroups(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/asset_types${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as AssetGroup[])\n    );\n}\n\nexport function addAssetGroup(product: AssetGroup) {\n    return post(\n        `${BASE_ENDPOINT}/asset_types`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function updateAssetGroup(id: string, product: Partial<AssetGroup>) {\n    return put(\n        `${BASE_ENDPOINT}/asset_types/${id}`,\n        cleanObject(product, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetGroup));\n}\n\nexport function saveAssetGroup(product: AssetGroup) {\n    return product.id\n        ? updateAssetGroup(product.id, product)\n        : addAssetGroup(product);\n}\n\nexport function showAssetGroup(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_types/${id}`).pipe(\n        map((_) => _ as AssetGroup)\n    );\n}\n\nexport function deleteAssetGroup(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_types/${id}`);\n}\n\n////////////////////////////////\n////          Assets        ////\n////////////////////////////////\n\nexport function queryAssets(query: any = {}) {\n    const q = toQueryString(query);\n    return get(`${BASE_ENDPOINT}/assets${q ? '?' + q : ''}`).pipe(\n        map((_) => _ as Asset[])\n    );\n}\n\nexport function addAsset(asset: Asset) {\n    return post(\n        `${BASE_ENDPOINT}/assets`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function updateAsset(id: string, asset: Partial<Asset>) {\n    return put(\n        `${BASE_ENDPOINT}/assets/${id}`,\n        cleanObject(asset, [undefined, null, ''])\n    ).pipe(map((_) => _ as Asset));\n}\n\nexport function saveAsset(asset: Asset) {\n    return asset.id\n        ? updateAsset(asset.id, {\n              ...asset,\n              asset_type_id: asset.type_id,\n          } as any)\n        : addAsset({ ...asset, asset_type_id: asset.type_id } as any);\n}\n\nexport function showAsset(id: string) {\n    return get(`${BASE_ENDPOINT}/assets/${id}`).pipe(map((_) => _ as Asset));\n}\n\nexport function deleteAsset(id: string) {\n    return del(`${BASE_ENDPOINT}/assets/${id}`);\n}\n\n////////////////////////////////\n////      Assets (Bulk)     ////\n////////////////////////////////\n\nexport function addAssetsInBulk(assets: Asset[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return post(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function updateAssetsInBulk(assets: Partial<Asset>[]) {\n    assets.map((_: any) => (_.asset_type_id = _.type_id));\n    return put(\n        `${BASE_ENDPOINT}/assets/bulk`,\n        assets.map((_) => cleanObject(_, [undefined, null, '']))\n    ).pipe(map((_) => _ as Asset[]));\n}\n\nexport function saveAssetsInBulk(assets: Asset[]) {\n    if (!assets?.length) return of([]);\n    return assets.every((item) => item?.id)\n        ? updateAssetsInBulk(assets)\n        : addAssetsInBulk(assets);\n}\n\nexport function deleteAssetsInBulk(id_list: string[]) {\n    return del(`${BASE_ENDPOINT}/assets/bulk`, { body: { id_list } });\n}\n\n/////////////////////////////////\n////  Asset Purchase Orders  ////\n/////////////////////////////////\n\nexport function queryAssetPurchaseOrders(query: any = {}) {\n    const q = toQueryString(query);\n    return get(\n        `${BASE_ENDPOINT}/asset_purchase_orders${q ? '?' + q : ''}`\n    ).pipe(map((_) => _ as AssetPurchaseOrder[]));\n}\n\nexport function addAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return post(\n        `${BASE_ENDPOINT}/asset_purchase_orders`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function updateAssetPurchaseOrder(\n    id: string,\n    order: Partial<AssetPurchaseOrder>\n) {\n    return put(\n        `${BASE_ENDPOINT}/asset_purchase_orders/${id}`,\n        cleanObject(order, [undefined, null, ''])\n    ).pipe(map((_) => _ as AssetPurchaseOrder));\n}\n\nexport function saveAssetPurchaseOrder(order: AssetPurchaseOrder) {\n    return order.id\n        ? updateAssetPurchaseOrder(order.id, {\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any)\n        : addAssetPurchaseOrder({\n              ...order,\n              purchase_order_number: order.order_number,\n          } as any);\n}\n\nexport function showAssetPurchaseOrder(id: string) {\n    return get(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`).pipe(\n        map((_) => _ as AssetPurchaseOrder)\n    );\n}\n\nexport function deleteAssetPurchaseOrder(id: string) {\n    return del(`${BASE_ENDPOINT}/asset_purchase_orders/${id}`);\n}\n\n//////////////////////////////////////\n////     Asset Helper Methods     ////\n//////////////////////////////////////\n\nexport function getGroupsWithAssets(query: any = {}) {\n    return combineLatest([queryAssetGroups(query)]).pipe(\n        map(([products]) => products)\n    );\n}\n\nexport function showGroupFull(id: string, query: any = {}) {\n    return combineLatest([\n        showAssetGroup(id),\n        queryAssetCategories(),\n        queryAssets({ ...query, type_id: id, limit: 1000 }),\n        queryAssetPurchaseOrders(),\n    ]).pipe(\n        map(([product, categories, assets, purchase_orders]) => {\n            product.category = categories.find(\n                (category) => category.id === product.category_id\n            );\n            product.assets = assets.filter(\n                (asset) =>\n                    asset.type_id === product.id ||\n                    (asset as any).asset_type_id === product.id\n            );\n            for (const asset of product.assets) {\n                (asset as any).order_number = (purchase_orders as any).find(\n                    (_) => _.id === asset.purchase_order_id\n                )?.purchase_order_number;\n            }\n            product.purchase_orders = purchase_orders.filter((order) =>\n                product.assets.find(\n                    (asset) => asset.purchase_order_id === order.id\n                )\n            );\n            return product;\n        })\n    );\n}\n\nexport function queryAvailableAssets(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    query.type = 'asset-request';\n    return combineLatest([queryAssets(query), queryBookings(query)]).pipe(\n        map(([assets, bookings]) =>\n            assets.filter(\n                (asset) =>\n                    ignore?.includes(asset.id) ||\n                    !bookings.find((booking) => booking.asset_id === asset.id)\n            )\n        )\n    );\n}\n\nexport function queryGroupAvailability(\n    query: BookingsQueryParams,\n    ignore?: string[]\n) {\n    return combineLatest([\n        queryAssetGroups(),\n        queryAvailableAssets(query, ignore),\n    ]).pipe(\n        map(([products, assets]) => {\n            for (const product of products) {\n                product.assets = assets.filter(\n                    (asset) =>\n                        asset.type_id === product.id ||\n                        (asset as any).asset_type_id === product.id\n                );\n            }\n            return products;\n        })\n    );\n}\n\nexport async function removeAssetRequests(id: string) {\n    const requests = await queryBookings({\n        period_start: getUnixTime(startOfDay(new Date())),\n        period_end: getUnixTime(endOfDay(new Date())),\n        type: 'asset-request',\n    }).toPromise();\n    return Promise.all(\n        requests\n            .filter((_) => _.asset_id === id)\n            .map((request) => removeBooking(request.id).toPromise())\n    );\n}\n\nexport async function updateAssetRequestsForResource(\n    { id, ical_uid }: Partial<CalendarEvent>,\n    {\n        date,\n        duration,\n        host,\n        location_name,\n        location_id,\n        zones,\n    }: {\n        date: number;\n        duration: number;\n        host: string;\n        location_name?: string;\n        location_id?: string;\n        zones?: string[];\n    },\n    new_assets: AssetGroup[],\n    old_assets: Asset[]\n) {\n    const assets: Asset[] = flatten(\n        new_assets.map((_) =>\n            _.assets\n                .slice(0, (_ as any).amount)\n                .map((asset) => ({ ...asset, name: _.name }))\n        )\n    );\n    const bookings = await queryBookings({\n        period_start: getUnixTime(startOfDay(date)),\n        period_end: getUnixTime(endOfDay(date)),\n        type: 'asset-request',\n        email: host,\n        event_id: id,\n        ical_uid,\n    }).toPromise();\n    const filtered = bookings.filter(\n        (item) =>\n            item.extension_data.parent_id === id &&\n            !assets.find((_) => _.id === item.asset_id)\n    );\n    await Promise.all(\n        filtered.map((item) => removeBooking(item.id).toPromise())\n    );\n    await Promise.all(\n        assets\n            .filter(({ id }) => !old_assets?.find((_) => _.id === id))\n            .map((item) =>\n                createBooking(\n                    new Booking({\n                        type: 'asset-request',\n                        booking_type: 'asset-request',\n                        date,\n                        duration,\n                        description: location_name,\n                        user_email: host,\n                        asset_id: item.id,\n                        asset_name: (item as any).name,\n                        title: (item as any).name,\n                        extension_data: { parent_id: id, location_id },\n                        zones: zones || [],\n                    }),\n                    { ical_uid, event_id: id }\n                ).toPromise()\n            )\n    );\n    return assets;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '@placeos/components';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AssetSelectModalComponent } from './asset-select-modal/asset-select-modal.component';\nimport { AssetDetailsComponent } from './asset-select-modal/asset-details.component';\nimport { AssetFiltersComponent } from './asset-select-modal/asset-filters.component';\nimport { AssetFiltersDisplayComponent } from './asset-select-modal/asset-filters-display.component';\nimport { AssetListComponent } from './asset-select-modal/asset-list.component';\nimport { AssetGroupPipe } from './asset-group.pipe';\nimport { AssetListFieldComponent } from './asset-list-field.component';\n\nexport * from './asset-select-modal/asset-select-modal.component';\n\nconst COMPONENTS = [AssetSelectModalComponent, AssetListFieldComponent];\n\nconst MODULE_COMPONENTS = [\n    AssetDetailsComponent,\n    AssetFiltersComponent,\n    AssetFiltersDisplayComponent,\n    AssetListComponent,\n    AssetGroupPipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...MODULE_COMPONENTS],\n    imports: [\n        CommonModule,\n        FormFieldsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class AssetsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    ResourceRestriction,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<ResourceRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const restriction_list = restrictions.filter(\n                                (_) =>\n                                    _.items?.includes(asset.id) ||\n                                    (_ as any).assets?.includes(asset.id)\n                            );\n                            const is_restricted = restriction_list.find(\n                                (rest) =>\n                                    (start >= rest.start && start < rest.end) ||\n                                    (end <= rest.end && end > rest.start)\n                            );\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    (!booking.url.includes('book') ||\n                        !BOOKING_TYPES.find((_) => booking.url.includes(_)))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        if (value.all_day) {\n            value.date = set(value.date, { hours: 6, minutes: 0 }).valueOf();\n            value.duration = 13 * 60;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { capitalizeFirstLetter, removeEmptyFields } from '@placeos/common';\nimport { User } from 'libs/users/src/lib/user.class';\nimport {\n    add,\n    addHours,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n} from 'date-fns';\n\nexport type BookingType =\n    | 'desk'\n    | 'parking'\n    | 'locker'\n    | 'room'\n    | 'visitor'\n    | 'asset-request'\n    | 'staff'\n    | 'wfh-setting'\n    | ' ';\nconst IGNORE_EXT_KEYS = ['user', 'booked_by', 'resources', 'assets', 'members'];\n\nexport interface BookingComplete extends Booking {\n    members?: User[];\n}\n\nexport interface LinkedCalendarEvent {\n    system_id: string;\n    resource_calendar: string;\n    event_id: string;\n    host_email: string;\n}\n\n/** General purpose booking class */\nexport class Booking {\n    /** Unique Identifier of the object */\n    public readonly id: string;\n    /** Identifier of the parent booking */\n    public readonly parent_id: string;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_start: number;\n    /** Unix epoch for the start time of the booking in seconds */\n    public readonly booking_end: number;\n    /** ID of the user who owns the booking */\n    public readonly booked_by_id: string;\n    /** Email of the user who owns the booking */\n    public readonly booked_by_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly booked_by_name: string;\n    /** ID of the user who owns the booking */\n    public readonly user_id: string;\n    /** Email of the user who owns the booking */\n    public readonly user_email: string;\n    /** Display name of the user who owns the booking */\n    public readonly user_name: string;\n    /** ID of an associated calendar event */\n    public readonly event_id?: string;\n    /** Identifier of the physical asset assocated with the booking */\n    public readonly asset_id: string;\n    /** Name of the physical asset assocated with the booking */\n    public readonly asset_name: string;\n    /** Zones associated with the asset ID */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: BookingType;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Extra non-standard metadata associated with the booking */\n    public readonly extension_data: Record<string, any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative' | 'ended';\n    /** New deleted field */\n    public readonly deleted: boolean;\n    /** List of attendees for the booking */\n    public readonly attendees: User[];\n    /** Time  */\n    public readonly checked_out_at?: number;\n\n    public readonly linked_event?: LinkedCalendarEvent;\n\n    public get group() {\n        return this.extension_data.group || '';\n    }\n\n    public get is_all_day() {\n        return (\n            this.all_day ||\n            (new Date(this.date).getHours() <= 12 && this.duration > 12 * 60)\n        );\n    }\n\n    constructor(data: Partial<BookingComplete> = {}) {\n        this.id = data.id || '';\n        this.parent_id = data.parent_id || '';\n        this.asset_id = data.asset_id || '';\n        this.asset_name =\n            data.asset_name ||\n            data.extension_data?.asset_name ||\n            data.extension_data?.name ||\n            data.description ||\n            '';\n        this.zones = data.zones || [];\n        this.booking_start =\n            Math.floor(data.date / 1000) ||\n            data.booking_start ||\n            getUnixTime(\n                roundToNearestMinutes(addMinutes(Date.now(), 5), {\n                    nearestTo: 5,\n                })\n            );\n        this.booking_end =\n            Math.floor(data.date / 1000) + data.duration * 60 ||\n            data.booking_end ||\n            getUnixTime(\n                addMinutes(this.booking_start * 1000, data.duration || 60)\n            );\n        this.booking_type = data.booking_type || ' ';\n        this.type = data.type || data.booking_type || 'booking';\n        this.date = data.date || this.booking_start * 1000 || Date.now();\n        this.duration =\n            data.duration ||\n            Math.abs(\n                differenceInMinutes(\n                    this.booking_start * 1000,\n                    this.booking_end * 1000\n                )\n            ) ||\n            60;\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.user_email = data.user_email || '';\n        this.user_id = data.user_id || '';\n        this.user_name = data.user_name || '';\n        this.title =\n            data.title ??\n            (this.booking_type\n                ? `${capitalizeFirstLetter(this.booking_type)} Booking`.trim()\n                : '');\n        this.description = data.description || '';\n        this.checked_in = !!data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.deleted = !!data.deleted;\n        this.booked_by_id = data.booked_by_id || '';\n        this.booked_by_name = data.booked_by_name || '';\n        this.booked_by_email = data.booked_by_email || '';\n        this.approver_id = data.approver_id || '';\n        this.approver_email = data.approver_email || '';\n        this.approver_name = data.approver_name || '';\n        this.extension_data = data.extension_data || {};\n        this.access = !!data.extension_data?.access;\n        this.event_id = data.event_id;\n        this.attendees = data.attendees || data.members || [];\n        this.all_day = data.all_day ?? this.duration >= 12 * 60;\n        this.checked_out_at = data.checked_out_at;\n        this.linked_event = data.linked_event || null;\n        this.status =\n            this.checked_out_at > 0\n                ? 'ended'\n                : this.rejected\n                ? 'declined'\n                : this.approved\n                ? 'approved'\n                : 'tentative';\n        for (const key in data) {\n            if (!(key in this) && !IGNORE_EXT_KEYS.includes(key) && data[key]) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n    }\n\n    public toJSON(this: Booking): Partial<Booking> {\n        const data = { ...this };\n        if (!this.id) delete data.id;\n        delete data.date;\n        delete data.duration;\n        removeEmptyFields(data);\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    /** Whether the booking occurs today */\n    public get is_today(): boolean {\n        return isSameDay(this.date, new Date());\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = new Date();\n        const end = this.all_day\n            ? addHours(this.date, 24)\n            : addMinutes(this.date, this.duration);\n        const checked_out =\n            (this.checked_out_at || this.extension_data.checked_out_at || 0) *\n            1000;\n        let end_time = end.getTime();\n        if (checked_out && Date.now() > checked_out) return true;\n        return isAfter(start, new Date(end_time));\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { currentUser } from '@placeos/common';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { endInFuture } from 'libs/events/src/lib/validators';\nimport {\n    createViewer,\n    getViewer,\n    Point,\n    removeViewer,\n} from '@placeos/svg-viewer';\nimport { Booking } from './booking.class';\nimport { roundToNearestMinutes, setHours, setMinutes } from 'date-fns';\n\nfunction setBookingAsset(form: FormGroup, resource: any) {\n    if (!resource) return form.patchValue({ asset_id: undefined });\n    form.patchValue(\n        {\n            asset_id: resource.id,\n            asset_name: resource.name,\n            map_id: resource.map_id || resource.id,\n            description: resource.name,\n            zones: resource.zone\n                ? [resource.zone?.parent_id, resource.zone?.id]\n                : [],\n            booking_asset: resource,\n        },\n        { emitEvent: false }\n    );\n}\n\nexport function generateBookingForm(booking: Booking = new Booking()) {\n    const form = new FormGroup({\n        id: new FormControl(booking.id || ''),\n        parent_id: new FormControl(booking.parent_id || ''),\n        date: new FormControl(booking.date, [Validators.required]),\n        all_day: new FormControl(booking.all_day ?? false),\n        name: new FormControl(\n            booking.extension_data.name || booking.asset_name || ''\n        ),\n        duration: new FormControl(booking.duration, [endInFuture]),\n        booking_type: new FormControl(booking.booking_type),\n        zones: new FormControl(booking.zones),\n        title: new FormControl(booking.title),\n        description: new FormControl(booking.description),\n        booking_asset: new FormControl(null),\n        resources: new FormControl([]),\n        company: new FormControl(''),\n        asset_id: new FormControl(booking.asset_id, [Validators.required]),\n        asset_name: new FormControl(booking.description),\n        assets: new FormControl(booking.extension_data?.assets || []),\n        attendees: new FormControl(booking.attendees || []),\n        map_id: new FormControl(booking.extension_data?.map_id),\n        user: new FormControl(currentUser()),\n        user_id: new FormControl(booking.user_id),\n        group: new FormControl(booking.group),\n        user_email: new FormControl(booking.user_email),\n        booked_by: new FormControl(currentUser()),\n        booked_by_id: new FormControl(booking.booked_by_id),\n        booked_by_email: new FormControl(booking.booked_by_email),\n        secondary_resource: new FormControl(\n            booking.extension_data?.other_asset_type ||\n                booking.extension_data?.secondary_resource\n        ),\n    });\n    let previous_time = form.value.date;\n    let previous_duration = form.value.duration;\n    let previous_all_day = form.value.all_day;\n    form.valueChanges.subscribe((v) => {\n        const user = v.user;\n        const booker = v.booked_by || currentUser();\n        booker || user\n            ? form.patchValue(\n                  {\n                      user_id: user?.id || booker?.id,\n                      user_email: user?.email || booker?.id,\n                      booked_by_id: booker?.id,\n                      booked_by_email: booker?.email,\n                  },\n                  { emitEvent: false }\n              )\n            : '';\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (!('all_day' in v)) {\n            previous_time = v.date || previous_time;\n            previous_duration = v.duration || previous_duration;\n        }\n        previous_all_day = v.all_day ?? previous_all_day;\n    });\n    form.controls.resources.valueChanges.subscribe((resources) =>\n        setBookingAsset(form, (resources || [])[0])\n    );\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date > Date.now() || form.value.id) return;\n        form.patchValue(\n            {\n                date: roundToNearestMinutes(Date.now(), {\n                    nearestTo: 5,\n                    roundingMethod: 'ceil',\n                }).valueOf(),\n            },\n            { emitEvent: false }\n        );\n    });\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) {\n            previous_time = form.value.date;\n            previous_duration = form.value.duration;\n            form.patchValue({\n                date: setHours(setMinutes(previous_time, 0), 6).valueOf(),\n                duration: 13 * 60,\n            });\n            form.controls.duration.disable();\n        } else if (previous_all_day && !all_day) {\n            form.controls.duration.enable();\n            form.patchValue({\n                date: Math.max(Date.now() - 1, previous_time),\n                duration: previous_duration,\n            });\n        }\n    });\n    if (booking.state === 'started') form.get('date').disable();\n    return form;\n}\n\nexport async function findNearbyFeature(\n    map_url: string,\n    centered_at: Point | string,\n    desk_ids: string[] = []\n): Promise<string> {\n    const element = document.createElement('div');\n    element.style.position = 'absolute';\n    element.style.top = '-9999px';\n    element.style.width = '1000px';\n    element.style.height = '1000px';\n    document.body.appendChild(element);\n    const id = await createViewer({\n        url: map_url,\n        element,\n    });\n    const viewer = getViewer(id);\n    const point = (typeof centered_at === 'string'\n        ? viewer.mappings[centered_at]\n        : centered_at) || { x: 0.5, y: 0.5 };\n    let dist = 10;\n    let closest = '';\n    for (const desk of desk_ids) {\n        const { x, y } = viewer.mappings[desk] || { x: 2, y: 2 };\n        const d = Math.sqrt(\n            (x - point.x) * (x - point.x) + (y - point.y) * (y - point.y)\n        );\n        if (d < dist) {\n            dist = d;\n            closest = desk;\n        }\n    }\n    document.body.removeChild(element);\n    removeViewer(id);\n    return closest;\n}\n\nexport function newBookingFromCalendarEvent(event: CalendarEvent) {\n    return new Booking({\n        id: event.id,\n        user_email: event.host,\n        asset_id: event.system?.id,\n        asset_name: event.system?.display_name || event.system?.name,\n        booking_type: 'room',\n        approved: event.status === 'approved',\n        extension_data: {\n            ...event,\n        },\n    });\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Booking, BookingType } from './booking.class';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: BookingType;\n    /** Include checked out bookings in the response */\n    include_checked_out?: boolean;\n    /** Include deleted bookings in the response */\n    deleted?: boolean;\n    /**  */\n    event_id?: string;\n    /**  */\n    ical_uid?: string;\n    /** Set the size of the page */\n    limit?: number;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * Get a single page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item))),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * List bookings with link to next page of bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryPagedBookings(q: BookingsQueryParams) {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    });\n}\n\n/**\n * List all bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryAllBookings(\n    q: BookingsQueryParams\n): Observable<Booking[]> {\n    return query<Booking>({\n        query_params: q,\n        fn: (item) => new Booking(item),\n        endpoint: BOOKINGS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(\n    data: Partial<Booking>,\n    q?: { event_id?: string; ical_uid?: string }\n) {\n    const query = toQueryString(q);\n    return post(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n    q?: { booking_id?: string; event_id?: string; ical_uid?: string }\n) => (data.id ? updateBooking(data.id, data) : createBooking(data, q));\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBookingAttendee(\n    id: string,\n    email: string,\n    state: boolean\n) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${encodeURIComponent(email)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Filter list of resources based of the bookings found in the given query\n * @param asset_id_list List of resource IDs\n * @param query Booking query\n */\nexport function queryResourceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n): Observable<boolean[]> {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((_) =>\n            id_list.map(\n                (id) =>\n                    !_.find(\n                        (b) => b.asset_id === id && (!ignore || ignore !== b.id)\n                    )\n            )\n        )\n    );\n}\n\nexport function isResourceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string,\n    type: BookingType = 'room'\n) {\n    return queryBookings({\n        type,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map(\n            (_) =>\n                _.filter((_) => _.asset_id === id && _.id !== ignore).length ===\n                0\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [force_time]=\"\n                                form.value.all_day ? all_day_time : ''\n                            \"\n                            [use_24hr]=\"use_24hr\"\n                            [disabled]=\"form.value.all_day\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                            [force]=\"form.value.all_day ? 'All Day' : ''\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n    public readonly all_day_time = set(Date.now(), {\n        hours: 6,\n        minutes: 0,\n    }).valueOf();\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.booking.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <i-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ space.location }}</p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { differenceInMinutes } from 'date-fns';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nimport { CalendarAvailability } from './calendar.interfaces';\n\nexport class Calendar {\n    /** ID of the calendar */\n    public readonly id: string;\n    /** Name of the calendar */\n    public readonly name: string;\n    /** System associated with the calendar */\n    public readonly resource: Space;\n    /** Primary calendar of the user */\n    public readonly primary: boolean;\n    /** Summary */\n    public readonly summary: string;\n    /** Whether the user can edit events associated to this calendar */\n    public readonly can_edit: boolean;\n    /** Availability */\n    public readonly availability: CalendarAvailability[];\n    /** Whether calendar should be hidden from the user */\n    public readonly hidden: boolean;\n\n    constructor(data: Partial<Calendar> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.primary = !!data.primary;\n        this.summary = data.summary || '';\n        this.can_edit = !!data.can_edit;\n        this.resource = new Space(data.resource || (data as any).system);\n        this.availability = (data.availability || []).map(\n            ({ starts_at, ends_at, date, duration, status }: any) => {\n                return {\n                    date: new Date(date || starts_at * 1000).valueOf(),\n                    duration:\n                        duration ||\n                        differenceInMinutes(ends_at * 1000, starts_at * 1000),\n                    status: status,\n                };\n            }\n        );\n        this.hidden = !!data.hidden;\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { toQueryString } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { Calendar } from './calendar.class';\nimport { CalendarAvailabilityQueryParams } from './calendar.interfaces';\n\nconst CALENDAR_ENDPOINT = '/api/staff/v1/calendars';\n\n/** List calendars associated with the logged in user */\nexport function queryCalendars(): Observable<Calendar[]> {\n    return get(CALENDAR_ENDPOINT).pipe(\n        map((i) => i.map((c) => new Calendar(c)))\n    );\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function queryCalendarAvailability(\n    q: CalendarAvailabilityQueryParams\n): Observable<Calendar[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/availability${query ? '?' + query : ''}`\n    ).pipe(map((i) => i.map((c) => new Calendar(c))));\n}\n\nconst calendarsToSpaces = (org?) =>\n    map((list: Calendar[]) =>\n        list\n            .filter((cal) => !!cal.resource)\n            .map(\n                (cal) =>\n                    new Space({\n                        ...cal.resource,\n                        level: org?.levelWithID(cal.resource.zones),\n                        availability: cal.availability,\n                    })\n            )\n            .filter((space) => space.bookable)\n    );\n\n/** List available spaces based on the given query */\nexport function querySpaceCalendarAvailability(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    return queryCalendarAvailability(q).pipe(calendarsToSpaces(org));\n}\n\nexport function queryUserFreeBusy(q: CalendarAvailabilityQueryParams) {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(map((i) => i as Calendar[]));\n}\n\n/** List room calendars for available spaces based on the given query */\nexport function querySpaceFreeBusy(\n    q: CalendarAvailabilityQueryParams,\n    org?: OrganisationService\n): Observable<Space[]> {\n    const query = toQueryString(q);\n    return get(\n        `${CALENDAR_ENDPOINT}/free_busy${query ? '?' + query : ''}`\n    ).pipe(\n        map((i) => i.map((c) => new Calendar(c))),\n        calendarsToSpaces(org)\n    );\n}\n","export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DialogEvent, Identity } from 'libs/common/src/lib/types';\n\nimport { CateringRuleset, RULE_TYPES } from './catering.interfaces';\n\nexport interface CateringConfigModalData {\n    /** List of catering rules */\n    config: CateringRuleset[];\n    /** List of available categories and tags */\n    types?: string[];\n    require_notes?: boolean;\n    saveNotes?: (v: boolean) => void;\n}\n\n@Component({\n    selector: 'catering-config-modal',\n    template: `\n        <header>\n            <h3>Edit Catering Configuration</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto text-center max-w-lg px-4 pt-2 pb-4\">\n            <mat-checkbox\n                class=\"m-2\"\n                [ngModel]=\"require_notes\"\n                (ngModelChange)=\"saveNotesSetting($event)\"\n            >\n                Require notes for orders\n            </mat-checkbox>\n            <br />\n            <button\n                matRipple\n                (click)=\"rulesets.push({ id: new_id, rules: [] })\"\n            >\n                New Ruleset\n            </button>\n            <div *ngFor=\"let set of rulesets; let i = index\" class=\"ruleset\">\n                <div class=\"flex\">\n                    <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Zone ID, Category or Tag\"\n                            [(ngModel)]=\"set.name\"\n                            required\n                        />\n                        <mat-error>Ruleset name is required</mat-error>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"set.rules.push(['', '']); show_rules = set.id\"\n                    >\n                        <app-icon>add</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        [disabled]=\"!set.rules.length\"\n                        (click)=\"\n                            show_rules = show_rules !== set.id ? set.id : ''\n                        \"\n                    >\n                        <app-icon>{{\n                            show_rules === set.id\n                                ? 'expand_less'\n                                : 'expand_more'\n                        }}</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        class=\"mb-6\"\n                        (click)=\"rulesets.splice(i, 1)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n                <div\n                    name=\"rules\"\n                    class=\"bg-gray-100 rounded overflow-hidden\"\n                    [style.height]=\"\n                        (show_rules === set.id ? 5 * set.rules.length : 0) +\n                        'em'\n                    \"\n                >\n                    <div\n                        class=\"flex items-center px-2 h-20 space-x-2\"\n                        *ngFor=\"let rule of set.rules; let i = index\"\n                    >\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <mat-select\n                                name=\"booking-type\"\n                                [(ngModel)]=\"rule[0]\"\n                                placeholder=\"Select Rule\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let type of rule_types\"\n                                    [value]=\"type.id\"\n                                >\n                                    {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field class=\"flex-1\" appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"value\"\n                                placeholder=\"Rule value\"\n                                [(ngModel)]=\"rule[1]\"\n                                required\n                            />\n                            <mat-error>Rule value is required</mat-error>\n                        </mat-form-field>\n                        <button\n                            icon\n                            matRipple\n                            class=\"mb-6\"\n                            (click)=\"set.rules.splice(i, 1)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button btn matRipple class=\"mx-auto w-32\" (click)=\"saveChanges()\">\n                Save Changes\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            [name='rules'] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringConfigModalComponent extends AsyncHandler {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = false;\n    /** Whether to show rules for a ruleset */\n    public show_rules: string;\n    public require_notes = this._data.require_notes;\n\n    public readonly rulesets: CateringRuleset[];\n\n    public readonly rule_types: readonly Identity[] = RULE_TYPES;\n\n    public get new_id() {\n        return 'ruleset-' + Math.floor(Math.random() * 9999_9999);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringConfigModalData\n    ) {\n        super();\n        this.rulesets = (_data.config || []).map((set) => {\n            set.rules = set.rules.map((i) => [\n                i[0],\n                JSON.stringify(i[1]),\n            ]) as any;\n            return set;\n        });\n    }\n\n    public saveNotesSetting(value: boolean) {\n        this.timeout(\n            'save-notes',\n            () => (this._data.saveNotes ? this._data.saveNotes(value) : ''),\n            1000\n        );\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        const rulesets = this.rulesets.map((set) => {\n            return {\n                ...set,\n                rules: set.rules.map((i) => {\n                    let value = i[1];\n                    try {\n                        value = JSON.parse(i[1] as any);\n                    } catch (e) {}\n                    return [i[0], value];\n                }) as any,\n            };\n        });\n        this.event.emit({ reason: 'done', metadata: rulesets });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-gray-200 border-dashed rounded-xl hover:bg-gray-100 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-gray-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { CateringOption } from './catering.interfaces';\n\nexport class CateringItem {\n    /** ID of the catering item */\n    public readonly id: string;\n    /** Display name for the catering item */\n    public readonly name: string;\n    /** Category that this item is associated */\n    public readonly category: string;\n    /** Description of the contents of the catering item */\n    public readonly description: string;\n    /** Unit price in cents for the catering item */\n    public readonly unit_price: number;\n    /** Number of item in the associated order */\n    public readonly quantity: number;\n    /** List of options for the catering item */\n    public readonly options: CateringOption[];\n    /** List of attributes assoicated with the catering item */\n    public readonly tags: string[];\n    /** Whether catering items can be purchased using points */\n    public readonly accept_points: boolean;\n    /** Max percentage of the cost that can be covered using points */\n    public readonly discount_cap: number;\n    /** Total cost for the item */\n    public readonly total_cost: number;\n    /** String list of available options */\n    public readonly options_string: string;\n    /** List of images for the catering item */\n    public readonly images: string[];\n    /** List of active options for the item */\n    public readonly option_list: CateringOption[];\n    /** Price per unit with selected options */\n    public readonly unit_price_with_options: number;\n    /** Zones in which this item is not allow to be ordered in */\n    public readonly hide_for_zones: string[];\n    /** Whether item in part of an order */\n    public readonly in_order: boolean;\n\n    public get custom_id() {\n        const options = this.option_list.map((_) => _.id).join('+');\n        return `${this.id}[${options}]${!this.in_order ? 'menu' : ''}`;\n    }\n\n    constructor(data: Partial<CateringItem> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || data.id || '';\n        this.category = data.category || '';\n        this.unit_price = data.unit_price || 0;\n        this.description = data.description || '';\n        this.quantity = data.quantity || 0;\n        this.discount_cap = data.discount_cap || 0;\n        this.accept_points = !!data.accept_points;\n        this.tags = data.tags || [];\n        this.images = data.images || [];\n        this.options = data.options || [];\n        const has_options = this.options.some((_) => _.active === true);\n        this.option_list =\n            (has_options\n                ? this.options.filter((_) => _.active === true)\n                : data.option_list) || [];\n        this.hide_for_zones = data.hide_for_zones || [];\n        this.unit_price_with_options =\n            this.unit_price +\n            this.option_list\n                .map((i) => i.unit_price || 0)\n                .reduce((c, a) => c + a, 0);\n        this.total_cost = this.unit_price_with_options * this.quantity;\n        this.options_string =\n            this.options\n                ?.map((_) => _.id || '')\n                .sort((a, b) => a.localeCompare(b))\n                .join(',') || '';\n        this.in_order = data.in_order ?? false;\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: ` <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div\n                    class=\"w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"pb-4\">\n                    <div class=\"font-medium flex items-center\">\n                        {{ item.name || 'Item' }}\n                        <span\n                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                            *ngIf=\"item.option_list?.length\"\n                            [matTooltip]=\"optionList(item)\"\n                        >\n                            {{ item.option_list?.length || '0' }} option(s)\n                        </span>\n                    </div>\n                    <div>{{ item.quantity }} requested</div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-catering-item\"\n                            class=\"clear\"\n                            (click)=\"addItems(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-catering-item\"\n                            class=\"clear\"\n                            (click)=\"removeItem(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-full inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"addItems()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Item</span>\n            </div>\n        </button>`,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        zone_id?: string;\n    } = {};\n    public items: CateringItem[] = [];\n    public disabled = false;\n\n    private _onChange: (_: CateringItem[]) => void;\n    private _onTouch: (_: CateringItem[]) => void;\n    public selected: CateringItem[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringItem[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringItem[]) {\n        this.items = value || [];\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringItem[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringItem[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeItem(item: CateringItem) {\n        const updated_list = this.items.filter((_) => _.id !== item.id);\n        this.setValue(updated_list);\n    }\n\n    public addItems(item?: CateringItem) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [this.items, this.options],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            if (!items) return;\n            this.setValue(items);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-white dark:bg-neutral-700 border border-gray-300 dark:border-neutral-500 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-white rounded bg-primary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-gray-100 dark:bg-neutral-700 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-gray-300 dark:border-neutral-500 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-gray-400 dark:bg-neutral-600\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-gray-300\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-gray-400 dark:border-neutral-500 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-gray-300 dark:border-neutral-500 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-gray-300 dark:border-neutral-500 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-black/10 w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-yellow-300 text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-gray-300 bg-white dark:bg-neutral-800 dark:border-neutral-500\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-gray-300 dark:border-neutral-500\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p>No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<CateringRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-gray-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-gray-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-gray-50\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--primary);\n                border-bottom: 2px solid var(--primary);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly CateringRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-black/20\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-gray-200 dark:bg-neutral-500 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [`\n        :host {\n            min-width: 16rem;\n        }\n    `],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-black]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-black/20 mr-4 overflow-hidden border border-gray-100 dark:border-neutral-600 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-white rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-gray-100\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-green-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-blue-400 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-yellow-500 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-black/20\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-white dark:bg-neutral-700\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: [CateringItem[], any]\n    ) {\n        this._order.setFilters(this._data[1]);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-gray-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { randomInt } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport class CateringOrder {\n    /** ID of the order */\n    public readonly id: string;\n    /** ID of the space the order is associated */\n    public readonly system_id: string;\n    /** ID of the event the order is associated */\n    public readonly event_id: string;\n    /** List of items associated with the order */\n    public readonly items: readonly CateringItem[];\n    /** Number of items in the order */\n    public readonly item_count: number;\n    /** Total cost of order */\n    public readonly total_cost: number;\n    /** Invoice number associated with the order */\n    public readonly invoice_number: string;\n    /** Charge code for the order */\n    public readonly charge_code: string;\n    /** Unix epoch in seconds of order delivery time */\n    public readonly deliver_at: number;\n    /** Notes associated with the order */\n    public readonly notes: string;\n    /** Current status of the order */\n    public readonly status: CateringOrderStatus;\n    /** Event associated with the order */\n    public readonly event: CalendarEvent | null;\n\n    constructor(data: Partial<CateringOrder> = {}) {\n        this.id = data.id || `order-${randomInt(9_999_999, 1_000_000)}`;\n        this.system_id = data.system_id || '';\n        this.event_id = data.event_id || data.event?.id || '';\n        this.items = (data.items || []).map((i) => new CateringItem(i));\n        this.item_count = this.items.reduce(\n            (amount, item) => amount + item.quantity,\n            0\n        );\n        this.total_cost = this.items.reduce(\n            (amount, item) => amount + (item.total_cost || 0),\n            0\n        );\n        this.charge_code = data.charge_code || '';\n        this.status = data.status || 'accepted';\n        this.invoice_number = data.invoice_number || '';\n        this.event = data.event || null;\n        this.notes = data.notes || '';\n        this.deliver_at =\n            data.deliver_at ||\n            (data as any).date ||\n            this.event?.date ||\n            Date.now();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2 dark:bg-neutral-700\"\n            [class.bg-gray-100]=\"!show_items\"\n            [class.bg-gray-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-gray-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-gray-400 dark:bg-neutral-800 p-2 text-2xl text-black dark:text-white opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: time_format }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space.display_name ||\n                        order.event?.space.name ||\n                        '~ No Location ~'\n                }}\n            </div>\n            <div class=\"w-56\">\n                {{\n                    order.event?.organiser?.name ||\n                        order.event?.host ||\n                        '~ Unknown Host ~'\n                }}\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '~ No Invoice ~' }}\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [order_id]=\"order?.id\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, debounceTime, tap, shareReplay } from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime } from 'date-fns';\n\nimport { AsyncHandler, flatten } from '@placeos/common';\nimport { queryEvents, saveEvent } from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            });\n        }),\n        map((events) => flatten(events.map((event) => event.ext('catering')))),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...order.event.ext('catering').filter((o) => o.id !== order.id),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const booking = await saveEvent(event.toJSON()).toPromise();\n        this._poll.next(Date.now());\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Component } from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering';\n\n@Component({\n    selector: 'catering-rooms-state-modal',\n    template: `\n        <div>\n            <header class=\"flex items-center justify-between p-2\">\n                <h3 class=\"p-2\">Set Catering Availability for Rooms</h3>\n                <button icon mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                class=\"max-h-[65vh] overflow-auto\"\n                *ngIf=\"!loading; else load_state\"\n            >\n                <table class=\"min-w-[32rem]\">\n                    <thead\n                        class=\"border-b border-gray-200 dark:border-neutral-500\"\n                    >\n                        <tr>\n                            <td class=\"w-12\" (click)=\"toggleRoom('*')\">\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"\n                                        (rooms | async)?.length ===\n                                        selected.length\n                                    \"\n                                    [indeterminate]=\"\n                                        selected.length > 0 &&\n                                        (rooms | async)?.length !==\n                                            selected.length\n                                    \"\n                                ></mat-checkbox>\n                            </td>\n                            <td></td>\n                            <td class=\"text-right text-xs\">\n                                {{ (rooms | async)?.length }} Room(s)\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr\n                            *ngFor=\"let space of rooms | async\"\n                            class=\"hover:bg-black/10 dark:hover:bg-white/5\"\n                            (click)=\"toggleRoom(space.id)\"\n                        >\n                            <td>\n                                <mat-checkbox\n                                    class=\"pointer-events-none\"\n                                    [checked]=\"selected.includes(space.id)\"\n                                ></mat-checkbox>\n                            </td>\n                            <td>{{ space.display_name || space.name }}</td>\n                            <td class=\"text-right\">\n                                <span\n                                    class=\"px-2 py-1 rounded-2xl\"\n                                    [class.bg-green-600]=\"\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                    [class.bg-red-600]=\"\n                                        (availability | async)?.includes(\n                                            space.id\n                                        )\n                                    \"\n                                >\n                                    {{\n                                        !(availability | async)?.includes(\n                                            space.id\n                                        )\n                                            ? 'Enabled'\n                                            : 'Disabled'\n                                    }}\n                                </span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </main>\n            <footer\n                class=\"flex items-center p-2 justify-end space-x-2 border-t border-gray-200 dark:border-neutral-500\"\n            >\n                <button btn matRipple (click)=\"enableSelected()\">\n                    Enable Selected\n                </button>\n                <button btn matRipple (click)=\"disableSelected()\">\n                    Disable Selected\n                </button>\n            </footer>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"w-64 h-48 p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving disabled room list...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            td {\n                padding: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringRoomsStateModalComponent {\n    public loading = false;\n    public selected: string[] = [];\n    public readonly rooms = requestSpacesForZone(this._org.building.id);\n    public readonly availability = this._catering.availability;\n\n    constructor(\n        private _catering: CateringStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async toggleRoom(id: string) {\n        if (id === '*') {\n            const rooms = await this.rooms.pipe(take(1)).toPromise();\n            if (this.selected.length !== rooms.length)\n                this.selected = rooms.map((_) => _.id);\n            else this.selected = [];\n        } else {\n            if (this.selected.includes(id))\n                this.selected = this.selected.filter((_) => _ !== id);\n            else this.selected = [...this.selected, id];\n        }\n    }\n\n    public async enableSelected() {\n        this.loading = true;\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = disabled_list.filter((_) => !this.selected.includes(_));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n\n    public async disableSelected() {\n        const disabled_list = await this.availability.pipe(take(1)).toPromise();\n        const list = unique(disabled_list.concat(this.selected));\n        await this._catering\n            .saveSettings({ disabled_rooms: list })\n            .catch(() => null);\n        this.loading = false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    CateringConfigModalComponent,\n    CateringConfigModalData,\n} from './catering-config-modal.component';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption, CateringRuleset } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            CateringConfigModalComponent,\n            CateringConfigModalData\n        >(CateringConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        return updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<CateringRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: CateringRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Identity } from '@placeos/common';\n\n// Event catering order interfaces\nexport type CateringOrderStatus =\n    | 'accepted'\n    | 'preparing'\n    | 'ready'\n    | 'delivered'\n    | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n\nexport type CateringRule =\n    | ['after_hour' | 'before_hour' | 'is_before' | 'within_hours', number]\n    | ['min_length' | 'max_length' | 'visitor_type', string]\n    | ['groups', string[]];\n\nexport interface CateringRuleset {\n    /** ID of the ruleset. Zone ID, category or tag */\n    id: string;\n    /** Descriptive name of the ruleset */\n    name: string;\n    /** List of rules for the id */\n    rules: CateringRule[];\n}\n\nexport const RULE_TYPES: Identity[] = [\n    { id: 'after_hour', name: 'After Hour of Day' },\n    { id: 'before_hour', name: 'Before Hour of Day' },\n    { id: 'min_length', name: 'Min. Meeting Length' },\n    { id: 'max_length', name: 'Max. Meeting Length' },\n    { id: 'is_before', name: 'Is Hours before Meeting' },\n    { id: 'within_hours', name: 'Within Hours before Meeting' },\n    { id: 'visitor_type', name: 'Visitor Type' },\n    { id: 'groups', name: 'User in Groups' },\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringConfigModalComponent } from './catering-config-modal.component';\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { CateringRoomsStateModalComponent } from './catering-rooms-state-modal.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringConfigModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringRoomsStateModalComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-config-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-black/10 px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-gray-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { stringToMinutes } from 'libs/events/src/lib/helpers';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { CateringRuleset } from './catering.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\n\nconst RULE_REQUESTS: Record<string, Observable<CateringRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as CateringRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as CateringRuleset[]\n            ),\n            catchError((e) => of([] as CateringRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: CateringRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","export * from './lib/common';\nexport * from './lib/uploads';\nexport * from './lib/feature-available.guard';\nexport * from './lib/remote-logging.service';\nexport * from './lib/timezone-helpers';\nexport * from './lib/user-idle-time.service';\n","import { trigger, transition, style, animate, state } from '@angular/animations';\n\nexport const ANIMATION_SHOW_ENTER_LEAVE = trigger('show', [\n    transition(':enter', [\n        style({ opacity: 0, height: 0 }),\n        animate(300, style({ opacity: 1, height: '*' }))\n    ]),\n    transition(':leave', [\n        style({ opacity: 1, height: '*' }),\n        animate(300, style({ opacity: 0, height: 0 }))\n    ])\n]);\n\nexport const ANIMATION_SHOW_CONTRACT_EXPAND = trigger('show', [\n    state('show', style({ opacity: 1, height: '*' })),\n    state('hide', style({ opacity: 0, height: 0, 'pointer-events': 'none' })),\n    transition('show <=> hide', animate('200ms ease-in'))\n]);\n","import { HashMap } from './types';\n\nconst IGNORE_VALUES = [undefined, null, ''];\n\n/**\n * Convert map into a query string\n * @param map Key value pairs to convert\n */\nexport function toQueryString(map: HashMap) {\n    let str = '';\n    if (map) {\n        for (const key in map) {\n            if (key in map && !IGNORE_VALUES.includes(map[key])) {\n                str += `${str ? '&' : ''}${key}=${encodeURIComponent(\n                    map[key]\n                )}`;\n            }\n        }\n    }\n    return str;\n}\n","import { SwUpdate } from '@angular/service-worker';\n\nimport { log } from './general';\nimport { notifyInfo } from './notifications';\n\nlet _timer: number;\nlet _new_version = false;\n\nexport function hasNewVersion() {\n    return _new_version;\n}\n\n/**\n * Setup handler for cache change events\n * @param cache Angular Service worker service\n * @param notify Function to call on changes to the cache\n * @param interval Time interval to check the cache for changes\n */\nexport function setupCache(cache: SwUpdate, interval: number = 5 * 60 * 1000) {\n    if (cache.isEnabled) {\n        if (_timer) clearInterval(_timer);\n        _timer = <any>setInterval(() => {\n            log('CACHE', `Checking for updates...`);\n            activateUpdate(cache);\n        }, interval);\n    }\n}\n\nexport function clearCacheCheck() {\n    if (_timer) clearInterval(_timer);\n}\n\n/**\n * Update the cache and reload the page\n *\n */\nasync function activateUpdate(cache: SwUpdate) {\n    if (cache.isEnabled && (await cache.checkForUpdate())) {\n        log('CACHE', `Activating changes to the cache...`);\n        if (!(await cache.activateUpdate())) return;\n        _new_version = true;\n        notifyInfo(\n            'Newer version of the application is available',\n            'Refresh',\n            () => location.reload()\n        );\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\n\ntype VoidFn = () => void;\n\n/**\n * Class for handling cleanup of async methods when components are destroyed.\n * Async methods include Subscriptions, Timeouts and Intervals\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class AsyncHandler implements OnDestroy {\n    /** Store for named timers */\n    protected _timers: { [name: string]: number } = {};\n    /** Store for named intervals */\n    protected _intervals: { [name: string]: number } = {};\n    /** Store for named subscription unsub callbacks */\n    protected _subscriptions: {\n        [name: string]: Subscription | VoidFn;\n    } = {};\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n\n    /** Whether the object has been initialised */\n    public get is_initialised(): boolean {\n        return this._initialised.getValue();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    protected destroy() {\n        for (const key in this._timers) {\n            if (key in this._timers) {\n                this.clearTimeout(key);\n            }\n        }\n        for (const key in this._intervals) {\n            if (key in this._intervals) {\n                this.clearInterval(key);\n            }\n        }\n        for (const key in this._subscriptions) {\n            if (key in this._subscriptions) {\n                this.unsub(key);\n            }\n        }\n    }\n\n    /**\n     * Creates a named timer\n     * @param name Name of the timer\n     * @param fn Callback function for the timer\n     * @param delay Callback delay\n     */\n    protected timeout(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearTimeout(name);\n            this._timers[name] = <any>setTimeout(() => {\n                fn();\n                delete this._timers[name];\n            }, delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named timeout without a name'\n                    : 'Cannot create a timeout without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named timer\n     * @param name Timer name\n     */\n    protected clearTimeout(name: string) {\n        if (this._timers[name]) {\n            clearTimeout(this._timers[name]);\n            delete this._timers[name];\n        }\n    }\n\n    /**\n     * Creates a named interval\n     * @param name Name of the interval\n     * @param fn Callback function for the interval\n     * @param delay Callback delay\n     */\n    protected interval(name: string, fn: () => void, delay: number = 300) {\n        if (name && fn && fn instanceof Function) {\n            this.clearInterval(name);\n            this._intervals[name] = <any>setInterval(() => fn(), delay);\n        } else {\n            throw new Error(\n                name\n                    ? 'Cannot create named interval without a name'\n                    : 'Cannot create a interval without a callback'\n            );\n        }\n    }\n\n    /**\n     * Clears the named interval\n     * @param name Timer name\n     */\n    protected clearInterval(name: string) {\n        if (this._intervals[name]) {\n            clearInterval(this._intervals[name]);\n            delete this._intervals[name];\n        }\n    }\n\n    /**\n     * Store named subscription\n     * @param name Name of the subscription\n     * @param unsub Unsubscribe callback or Subscription object\n     */\n    protected subscription(name: string, unsub: Subscription | VoidFn) {\n        this.unsub(name);\n        this._subscriptions[name] = unsub;\n    }\n\n    protected hasSubscription(name: string) {\n        return (\n            this._subscriptions[name] instanceof Subscription ||\n            !!this._subscriptions[name]\n        );\n    }\n\n    /**\n     * Call unsubscribe callback with the given name\n     * @param name\n     */\n    protected unsub(name: string) {\n        if (name in this._subscriptions) {\n            if (this._subscriptions[name] instanceof Subscription) {\n                (this._subscriptions[name] as any).unsubscribe();\n            } else if (this._subscriptions[name]) {\n                (this._subscriptions[name] as any)();\n            }\n            delete this._subscriptions[name];\n        }\n    }\n\n    /** Unsubscribe to the items with names containing the given string */\n    protected unsubWith(contains: string) {\n        const subs = Object.keys(this._subscriptions).filter((k) =>\n            k.includes(contains)\n        );\n        for (const key of subs) {\n            this.unsub(key);\n        }\n    }\n}\n","import { User } from 'libs/users/src/lib/user.class';\nimport { addMinutes, endOfDay, format, startOfDay } from 'date-fns';\nimport { toQueryString } from './api';\nimport { localToTimezone } from './timezone-helpers';\nimport { unique } from './general';\nimport { PlaceSystem } from '@placeos/ts-client';\n\nexport interface CalEvent {\n    title: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    body: string;\n    location: string;\n    host: string;\n    organiser: User;\n    user_name?: string;\n    user_email?: string;\n    attendees: string[];\n    resources?: string[];\n    meeting_url?: string;\n    system?: PlaceSystem;\n}\n\nfunction formatUTC(date: Date | number) {\n    const utc_date = localToTimezone(date, 'UTC');\n    return `${format(utc_date, 'yyyyMMdd')}T${format(utc_date, 'HHmmss')}Z`;\n}\n\nfunction formatAllDay(date: Date | number) {\n    return `${format(date, 'yyyyMMdd')}`;\n}\n\nexport function generateCalendarFileLink(event: CalEvent): string {\n    const chunks: [string, any][] = [];\n    const description = formatCalFileText(`${event.body}`);\n    const location = formatCalFileText(`${event.location}`);\n    chunks.push(['BEGIN', 'VCALENDAR']);\n    chunks.push(['VERSION', '2.0']);\n    chunks.push(['BEGIN', 'VEVENT']);\n    chunks.push(['URL', `${event.meeting_url}`]);\n    chunks.push([\n        'DTSTART',\n        `${new Date(\n            event.all_day ? startOfDay(event.date) : event.date\n        ).toISOString()}`,\n    ]);\n    chunks.push([\n        'DTEND',\n        `${\n            event.all_day\n                ? endOfDay(event.date)\n                : addMinutes(event.date, event.duration ?? 60).toISOString()\n        }`,\n    ]);\n    chunks.push(['SUMMARY', `${event.title}`]);\n    chunks.push(['DESCRIPTION', description]);\n    chunks.push(['LOCATION', location]);\n    const host =\n        event.organiser?.name ||\n        event.host?.split('@') ||\n        event.user_name ||\n        'User';\n    chunks.push([\n        'ORGANIZER',\n        `CN=${host}:MAILTO:${event.host || event.user_email}`,\n    ]);\n    const url_data = chunks\n        .map(([key, value]) => `${key}:${encodeURIComponent(value)}`)\n        .join('\\n');\n    return `data:text/calendar;charset=utf8,${url_data}`;\n}\n\nexport function generateGoogleCalendarLink(event: CalEvent): string {\n    const fmt = event.all_day ? formatAllDay : formatUTC;\n    const details: any = {\n        action: 'TEMPLATE',\n        text: event.title,\n        details: event.body,\n        location: event.location,\n        trp: false,\n        dates: `${fmt(event.date)}/${fmt(\n            addMinutes(event.date, event.duration ?? 60)\n        )}`,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        details.add = unique([...emails, ...resources]).join();\n    return `https://calendar.google.com/calendar/render?${toQueryString(\n        details\n    )}`;\n}\n\nexport function generateMicrosoftCalendarLink(\n    event: CalEvent,\n    type: 'outlook' | 'office' = 'office'\n): string {\n    if (!event.date) event.date = Date.now();\n    const data: any = {\n        path: '/calendar/action/compose',\n        rru: 'addevent',\n        startdt: new Date(event.date).toISOString(),\n        enddt: addMinutes(event.date, event.duration ?? 60).toISOString(),\n        subject: event.title,\n        body: event.body,\n        location: event.location,\n        allday: event.all_day ?? false,\n    };\n    const emails = (event.attendees || []).map((_: any) => _.email || _);\n    const resources = (\n        (event.resources?.length ? event.resources : null) || [event.system]\n    ).map((_: any) => _?.email || _);\n    if (emails.length || resources.length)\n        data.to = unique([...emails, ...resources]).join();\n    return type === 'office'\n        ? `https://outlook.office.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`\n        : `https://outlook.live.com/calendar/0/action/compose?${toQueryString(\n              data\n          )}`;\n}\n\nfunction formatCalFileText(str: string) {\n    return str\n        .replace(/,/gm, ',')\n        .replace(/;/gm, ';')\n        .replace(/\\r\\n/gm, '\\n')\n        .replace(/\\n/gm, '\\\\n')\n        .replace(/(\\\\n)[\\s\\t]+/gm, '\\\\n');\n}\n","export { AsyncHandler as AsyncHandler } from './async-handler.class';\nexport { GoogleAnalyticsService } from './google-analytics.service';\nexport { HotkeysService } from './hotkeys.service';\nexport { SettingsService } from './settings.service';\nexport { VorlonService } from './vorlon.service';\nexport { VERSION } from './version';\n\nexport * from './angular-animations';\nexport * from './api';\nexport * from './application';\nexport * from './formatting';\nexport * from './general';\nexport * from './notifications';\nexport * from './placeos';\nexport * from './room-configuration.interface';\nexport * from './settings';\nexport * from './types';\nexport * from './user-state';\nexport * from './spec-helpers';\nexport * from './timezones';\n","import { Injectable } from '@angular/core';\nimport { UrlTree, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeatureAvailableGuard  {\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {}\n\n    public async canActivate(): Promise<boolean | UrlTree> {\n        return this.checkFeature();\n    }\n\n    public async canLoad(): Promise<boolean> {\n        return this.checkFeature();\n    }\n\n    private async checkFeature() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        const features = this._settings.get('app.disabled_features') || [];\n        const can_activate = !features.find((_) =>\n            this._router.url.includes(_)\n        );\n        if (!can_activate) {\n            this._router.navigate(['/']);\n        }\n        return !!can_activate;\n    }\n}\n","\nimport { format } from 'date-fns';\n\nimport { RecurrenceDetails } from '@placeos/events';\n\nexport function formatRecurrence(details: RecurrenceDetails): string {\n    let pattern: string = details.pattern || '';\n    pattern = pattern.charAt(0).toUpperCase() + pattern.slice(1);\n    return pattern ? `${pattern} until ${format(new Date(details.end), 'do MMM yyyy')}` : '<No Recurrence>';\n}\n","import { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { first } from 'rxjs/operators';\nimport {\n    ConfirmModalComponent,\n    ConfirmModalData,\n    CONFIRM_METADATA,\n} from '../../../components/src/lib/confirm-modal.component';\nimport { HashMap } from './types';\n\n/** Available console output streams. */\nexport type ConsoleStream = 'debug' | 'warn' | 'log' | 'error';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        jest: any;\n    }\n}\n\nlet _app_name = 'APP';\n\nexport function setAppName(name: string) {\n    _app_name = name;\n}\n\n/**\n * Log data to the browser console\n * @param type Type of message\n * @param msg Message body\n * @param args array of argments to log to the console\n * @param stream Stream to emit the console on. 'debug', 'log', 'warn' or 'error'\n * @param force Whether to force message to be emitted when debug is disabled\n */\nexport function log(\n    type: string,\n    msg: string,\n    args?: any,\n    stream: ConsoleStream = 'debug',\n    force: boolean = false,\n    app_name: string = _app_name\n) {\n    if (window.jest) return;\n    if (window.debug || force) {\n        const colors: string[] = [\n            'color: #E91E63',\n            'color: #3F51B5',\n            'color: default',\n        ];\n        if (args) {\n            console[stream](\n                `%c[${app_name}]%c[${type}] %c${msg}`,\n                ...colors,\n                args\n            );\n        } else {\n            console[stream](`%c[${app_name}]%c[${type}] %c${msg}`, ...colors);\n        }\n    }\n}\n\n/**\n * Get item from the nested object\n * @param keys List of sub-keys to search for\n * @param map Object to search\n */\nexport function getItemWithKeys(keys: string[], map: HashMap) {\n    const key = keys[0];\n    if (map && key in map) {\n        return keys.length > 1\n            ? getItemWithKeys(keys.slice(1), map[key] || {})\n            : map[key];\n    }\n    return null;\n}\n\n/**\n * Remove duplicates from the given array\n * @param array List of items to remove duplicates from\n * @param key Key on array objects to compare for uniqueness\n */\nexport function unique<T = any>(array: T[] = [], key: string = ''): T[] {\n    const keys = [];\n    return array.filter((el) => {\n        const id = key ? el[key] : el;\n        const exists = keys.includes(id);\n        if (!exists) keys.push(id);\n        return !exists;\n    });\n}\n\n/**\n * Generate a random number\n * @param ceil Biggest value to generate not inclusive\n * @param floor Smallest value to generate. Defaults to 0\n */\nexport function randomInt(ceil: number, floor: number = 0) {\n    return Math.floor(Math.random() * (ceil - floor)) + floor;\n}\n\n/**\n * Pad string to the given length\n * @param str Base string\n * @param length Length to pad the string\n */\nexport function padString(str: string | number, length: number = 5) {\n    str = `${str}`;\n    while (str.length < length) str = `0${str}`;\n    return str;\n}\n\n/**\n * Generate a random string\n * @param length Length of the string\n * @param chars Available characters to use in the string\n */\nexport function randomString(\n    length: number,\n    chars: string = 'abcdefghijklmnopqrstwvxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n) {\n    let str = '';\n    for (let i = 0; i < length; i++) {\n        str += chars[randomInt(chars.length)];\n    }\n    return str;\n}\n\nexport interface ConfirmRepsonse {\n    reason: 'done' | '' | null;\n    loading: (_: string) => void;\n    close: () => void;\n}\n\nexport async function openConfirmModal(\n    data: ConfirmModalData,\n    dialog: MatDialog\n): Promise<ConfirmRepsonse> {\n    const ref = dialog.open<ConfirmModalComponent, ConfirmModalData>(\n        ConfirmModalComponent,\n        {\n            ...CONFIRM_METADATA,\n            data,\n        }\n    );\n    return {\n        ...(await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ])),\n        loading: (s) => (ref.componentInstance.loading = s),\n        close: () => ref.close(),\n    };\n}\n\n/**\n * Parse raw CSV data into a JSON object\n * @param csv CSV data to parse\n */\nexport function csvToJson(csv: string, delimiter: string = ','): HashMap[] {\n    const objPattern = new RegExp(\n        '(\\\\,|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\\\\,\\\\r\\\\n]*))',\n        'gi'\n    );\n    let arrMatches = null;\n    const arrData = [[]];\n    while ((arrMatches = objPattern.exec(csv))) {\n        if (arrMatches[1].length && arrMatches[1] !== ',') arrData.push([]);\n        arrData[arrData.length - 1].push(\n            arrMatches[2]\n                ? arrMatches[2].replace(new RegExp('\"\"', 'g'), '\"')\n                : arrMatches[3]\n        );\n    }\n    const headers: string[] = arrData.splice(0, 1)[0];\n    const elements = arrData.map((row) => {\n        const element = {};\n        for (let i = 0; i < row.length; i++) {\n            const key = (headers[i] || '').split(' ').join('_').toLowerCase();\n            try {\n                element[key] = JSON.parse(row[i].replace('|', ','));\n            } catch (e) {\n                element[key] = row[i] || '';\n            }\n            if (element[key] === 'TRUE' || element[key] === 'FALSE')\n                element[key] = element[key] === 'TRUE';\n        }\n        return element;\n    });\n    return elements;\n}\n\nexport function loadTextFileFromInputEvent(event: InputEvent) {\n    return new Promise<string>((resolve, reject) => {\n        /* istanbul ignore else */\n        if (event.target) {\n            const element = event.target as HTMLInputElement;\n            const file = element.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    resolve((evt.srcElement as any).result);\n                    element.value = '';\n                });\n                reader.addEventListener('error', (_) => {\n                    this.loading = '';\n                    reject(['Error loading file', _]);\n                });\n            }\n        }\n    });\n}\n\n/**\n * Convert javascript array to CSV string\n * @param json Javascript array to convert\n */\nexport function jsonToCsv(json: HashMap[]) {\n    if (json instanceof Array && json.length > 0) {\n        const keys = Object.keys(json[0]);\n        const valid_keys = keys.filter((key) => key in json[0]);\n        return `${valid_keys.join(',')}\\n${json\n            .map((item) =>\n                valid_keys\n                    .map((key) => JSON.stringify(item[key]).replace(',', '|'))\n                    .join(',')\n            )\n            .join('\\n')}`;\n    }\n    return '';\n}\n\n/**\n * Downloads a file to the users computer with the given filename and contents\n * @param filename Name of the file to download\n * @param contents Contents of the file to download\n */\nexport function downloadFile(filename: string, contents: string) {\n    const element = document.createElement('a');\n    element.setAttribute(\n        'href',\n        'data:text/plain;charset=utf-8,' + encodeURIComponent(contents)\n    );\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\nexport function parseJWT(token: string) {\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split('')\n            .map((c) => {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n    return JSON.parse(jsonPayload);\n}\n\n/* istanbul ignore next */\n/**\n * Flatten nested array\n * @param an_array Array to flatten\n */\nexport function flatten<T = any>(an_array: any[]): T[] {\n    const stack = [...an_array];\n    const res = [];\n    while (stack.length) {\n        // pop value from stack\n        const next = stack.pop();\n        if (Array.isArray(next)) {\n            // push back array items, won't modify the original input\n            stack.push(...next);\n        } else {\n            res.push(next);\n        }\n    }\n    // reverse to restore input order\n    return res.reverse();\n}\n\n/**\n * Check whether two time periods intersect with each other\n * @param start1 Unix epoch in ms of the first period's start time\n * @param end1 Unix epoch in ms of the first period's end time\n * @param start2 Unix epoch in ms of the second period's start time\n * @param end2 Unix epoch in ms of the second period's end time\n */\nexport function timePeriodsIntersect(start1, end1, start2, end2) {\n    return (\n        (start1 >= start2 && start1 < end2) ||\n        (end1 > start2 && end1 < end2) ||\n        (start2 >= start1 && start2 < end1) ||\n        (end2 > start1 && end2 <= end1)\n    );\n}\n\nconst seed = xmur3('PlaceOS');\nconst rand = sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed());\n\nexport function predictableRandomInt(ceil: number = 100, floor: number = 0) {\n    return Math.floor(rand() * (ceil - floor)) + floor;\n}\n\n// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\nfunction xmur3(str) {\n    let h = 1779033703 ^ str.length;\n    for (let i = 0; i < str.length; i++)\n        (h = Math.imul(h ^ str.charCodeAt(i), 3432918353)),\n            (h = (h << 13) | (h >>> 19));\n    return function () {\n        h = Math.imul(h ^ (h >>> 16), 2246822507);\n        h = Math.imul(h ^ (h >>> 13), 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    };\n}\n\nfunction sfc32(a, b, c, d) {\n    return function () {\n        a >>>= 0;\n        b >>>= 0;\n        c >>>= 0;\n        d >>>= 0;\n        let t = (a + b) | 0;\n        a = b ^ (b >>> 9);\n        b = (c + (c << 3)) | 0;\n        c = (c << 21) | (c >>> 11);\n        d = (d + 1) | 0;\n        t = (t + d) | 0;\n        c = (c + t) | 0;\n        return (t >>> 0) / 4294967296;\n    };\n}\n\n/** Get time format string for locale */\nexport function timeFormatString(): string {\n    return is24HourTime() ? 'HH:mm' : 'h:mm a';\n}\n\n/** Whether locale string is displayed in 24 hour time */\nexport function is24HourTime(): boolean {\n    const date = new Date();\n    const localeString = date\n        .toLocaleTimeString(\n            document.querySelector('html').getAttribute('lang') ||\n                navigator.language\n        )\n        .toLowerCase();\n    return localeString.indexOf('am') < 0 && localeString.indexOf('pm') < 0;\n}\n\nexport function getInvalidFields(form: FormGroup, prefix: string = '') {\n    let invalid = [];\n    for (const key in form.controls) {\n        if (form.controls[key] instanceof FormGroup) {\n            invalid = [\n                ...invalid,\n                ...getInvalidFields(form.controls[key] as FormGroup, `${key}.`),\n            ];\n        } else if (!form.controls[key].valid) {\n            invalid.push(`${prefix}${key}`);\n        }\n    }\n    return invalid;\n}\n\nexport function removeEmptyFields(obj: Record<string, any>) {\n    for (const key in obj) {\n        if (obj[key] === undefined || obj[key] === null || obj[key] === '') {\n            delete obj[key];\n        }\n    }\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n    return `${word[0].toUpperCase()}${word.substring(1)}`;\n}\n\nexport function cleanArray(\n    array: any[],\n    removal_items: any[] = [undefined, null, '']\n) {\n    return array.filter((_) => !removal_items.includes(_));\n}\n\nexport function isMobileSafari() {\n    return (\n        [\n            'iPad Simulator',\n            'iPhone Simulator',\n            'iPod Simulator',\n            'iPad',\n            'iPhone',\n            'iPod',\n        ].includes(navigator.platform) ||\n        // iPad on iOS 13 detection\n        (navigator.userAgent.includes('Mac') && 'ontouchend' in document)\n    );\n}\n\nexport function isNestedFrame() {\n    return window.location !== window.parent.location;\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { log } from './general';\n\ndeclare global {\n    interface Window {\n        ga: any;\n        gtag: any;\n        dataLayer: any[];\n        debug: boolean;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GoogleAnalyticsService {\n    /** Google Analytics API object */\n    private service: any;\n    /** Application prefix to add to event categories */\n    public app_prefix: string;\n    /** Whether posting analytics events is enabled */\n    public enabled = true;\n    /** Name of the application */\n    public app_name = 'GA_APP';\n\n    /** Last route posted to the API */\n    private last_route: string;\n    /** Store for timer ids */\n    private timers: { [name: string]: number } = {};\n\n    constructor(private title: Title) {}\n\n    public init(tracking_id: string = '') {\n        if (!window.gtag) {\n            window.dataLayer = window.dataLayer || [];\n            (function (w, d, s, l, i) {\n                w[l] = w[l] || [];\n                w[l].push({\n                    'gtm.start': new Date().getTime(),\n                    event: 'gtm.js',\n                });\n                var f = d.getElementsByTagName(s)[0],\n                    j = d.createElement(s) as any,\n                    dl = l != 'dataLayer' ? '&l=' + l : '';\n                j.async = true;\n                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n                f.parentNode.insertBefore(j, f);\n            })(window, document, 'script', 'dataLayer', tracking_id);\n            log('Analytics', 'Service', 'Injected Google Analytics into page');\n        }\n        this.service = window.gtag;\n    }\n\n    public push(obj: Record<string, any>) {\n        window.dataLayer.push(obj);\n    }\n\n    /**\n     * Initialise Google Analytics\n     * @param tracking_id GA Tracking ID\n     */\n    public load(tracking_id: string) {\n        if (!this.enabled) {\n            throw new Error(\n                'Google Analytics needs to be enabled before being initialised'\n            );\n        }\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        log('Analytics', 'Service', `Setup with tracking ID: ${tracking_id}`);\n        this.page('');\n    }\n    /**\n     * Set User ID for the Google Analytics session\n     * @param id Identifier of the User\n     */\n    public setUser(id: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `user|${id}`,\n                () => {\n                    log('Analytics', 'Service', `Set user ID: ${id}`);\n                    this.service('set', 'userId', id);\n                    this.event('authentication', 'user-id available');\n                },\n                100\n            );\n        }\n    }\n\n    public send(type: string, value: Record<string, any>) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(`end|${type}`, () => {\n                this.push({\n                    ...value,\n                    event: 'event',\n                });\n            });\n        }\n    }\n\n    /**\n     * Post event to Google Analytics API\n     * @param category Event Category\n     * @param action Event Action\n     * @param label Event Label\n     * @param value Event Value\n     */\n    public event(\n        category: string,\n        action: string,\n        label?: string,\n        value?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `event|${category}|${action}|${label}|${value}`,\n                () => {\n                    const l = label ? ', ' + label : '';\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Event: ${category}, ${action}${l}${\n                            value ? ', ' + value : ''\n                        }`\n                    );\n                    const prefix = this.app_prefix ? this.app_prefix + '_' : '';\n                    this.push({\n                        event: 'event',\n                        category: category,\n                        action: action,\n                        label: label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post screen change event to Google Analytics API\n     * @param name\n     * @param app_name\n     */\n    public screen(name: string, app_name?: string) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (name && this.enabled) {\n            this.timeout(\n                `event|${name}|${app_name || this.app_name}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Screen: ${name}${app_name ? ', ' + app_name : ''}`\n                    );\n                    this.push({\n                        event: 'screenview',\n                        appName: app_name || this.app_name,\n                        screenName: name,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post routing event to Google Analytics API\n     * @param route Activated route\n     * @param origin Add origin to routh path\n     */\n    public page(route: string, origin: boolean = false) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.last_route = route || '/';\n            this.timeout(\n                `page|${route}`,\n                () => {\n                    log('Analytics', 'Service', `Page: ${route}`);\n                    this.push({\n                        event: 'pageview',\n                        url: `${origin ? location.origin : ''}${route}`,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Post timing event to Google Analytics API\n     * @param category\n     * @param variable\n     * @param value\n     * @param label\n     */\n    public timing(\n        category: string,\n        variable: string,\n        value: string,\n        label?: string\n    ) {\n        if (!this.service) {\n            throw new Error(\n                \"Google Analytics hasn't been installed on this page\"\n            );\n        }\n        if (this.enabled) {\n            this.timeout(\n                `page|${category}|${variable}|${value}|${label}`,\n                () => {\n                    log(\n                        'Analytics',\n                        'Service',\n                        `Timing: ${category}, ${variable}, ${value}${\n                            label ? ', ' + label : ''\n                        }`\n                    );\n                    this.push({\n                        event: 'timing',\n                        category,\n                        variable,\n                        value,\n                        label,\n                    });\n                },\n                100\n            );\n        }\n    }\n\n    /**\n     * Creates a timeout for the given name used for preventing duplicate events in quick succession\n     * @param name Name of timer\n     * @param fn Timer callback\n     * @param delay Timer delay\n     */\n    private timeout(name: string, fn: () => void, delay: number = 300) {\n        if (this.timers[name]) {\n            clearTimeout(this.timers[name]);\n            delete this.timers[name];\n        }\n        this.timers[name] = <any>setTimeout(() => {\n            if (fn instanceof Function) {\n                fn();\n            }\n            delete this.timers[name];\n        }, delay);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nimport { HashMap } from './types';\nimport { unique } from './general';\n\n/** List of keys that cannot be in a combination by themselves or with each other */\nconst INVALID_STANDALONE_KEYS: string[] = ['control', 'shift', 'alt', 'meta', 'os'];\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    /** Map of subjects which store press states of keys */\n    private keydown_states: HashMap<BehaviorSubject<number>> = {};\n    /** Map of obserers for key state subjects */\n    private keydown_observers: HashMap<Observable<number>> = {};\n    /** List of keys at the end of a combination */\n    private combo_end: string[] = [];\n    /** List of registered hotkey combinations */\n    private registered_combos: string[][] = [];\n    /** Counter for the number of keydown events. Used for checking order of key presses */\n    private counter: number = 0;\n    /** Last key code to be pressed */\n    private last_down: string;\n\n    constructor() {\n        window.addEventListener('keydown', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            if (this.last_down !== code) {\n                if (!this.keydown_states[code]) {\n                    this.keydown_states[code] = new BehaviorSubject(null);\n                    this.keydown_observers[code] = this.keydown_states[code].asObservable();\n                }\n                this.keydown_states[code].next(++this.counter);\n                if (this.combo_end.indexOf(code) >= 0) {\n                    event.preventDefault();\n                }\n                this.last_down = code;\n            }\n        });\n\n        window.addEventListener('keyup', (event: KeyboardEvent) => {\n            const code = this.mapKey((event.code || '').toLowerCase());\n            this.keydown_states[code].next(null);\n            if (this.last_down === code) {\n                this.last_down = null;\n            }\n        });\n    }\n\n    /**\n     * Listen to the given key combination\n     * @param combo Array of key codes to listen to or a hotkey string e.g. `Alt+Shift+KeyK`\n     * @param next Callback for combination presses\n     */\n    public listen(combo: string | string[], next: () => void): Subscription {\n        combo = (combo instanceof Array ? combo : combo.split('+'));\n        const combination: string[] = combo.map(i => this.mapKey(i.toLowerCase()));\n        if (combination.length > 0 && this.validCombination(combination)) {\n            this.registered_combos.push(combination);\n            const last_key = combination[combination.length - 1];\n            if (!this.keydown_states[last_key]) {\n                this.keydown_states[last_key] = new BehaviorSubject(null);\n                this.keydown_observers[last_key] = this.keydown_states[last_key].asObservable();\n            }\n            this.updateCombinationEndList();\n            return this.keydown_observers[last_key].subscribe((count) => {\n                if (count) {\n                    const presses: number[] = [];\n                    if (combination.length > 0) {\n                        // Check that keys are pressed\n                        for (const key of combination) {\n                            const state = this.keydown_states[key];\n                            presses.push(state ? state.getValue() || -1 : -1);\n                        }\n                        // Check that keys are pressed in the correct order\n                        for (let i = 0; i < combination.length - 1; i++) {\n                            if (presses[i] > presses[i + 1]) { return; }\n                        }\n                    }\n                    const total = presses.reduce((a, v) => a + (v > 0 ? 1 : -1), 0);\n                    if (total >= combination.length) {\n                        next();\n                    }\n                }\n            });\n        }\n        return null;\n    }\n\n    /**\n     * Map key codes with multiple versions to simple form\n     * @param code Code to transform\n     */\n    private mapKey(code: string): string {\n        if (code.indexOf('alt') >= 0 || code.indexOf('shift') >= 0 || code.indexOf('control') >= 0) {\n            return code.replace('left', '').replace('right', '');\n        }\n        return code;\n    }\n\n    /**\n     * Update the list of the last keys in combinations to allow for prevent default actions on pre-existing hotkeys\n     */\n    private updateCombinationEndList(): void {\n        const key_list = [];\n        for (const combo of this.registered_combos) {\n            this.combo_end.push(combo[combo.length - 1]);\n        }\n        this.combo_end = unique(key_list);\n    }\n\n    /**\n     * Checks if the given hotkey combination is allowed and valid\n     * @param combo Array of key codes\n     */\n    private validCombination(combo: string[]): boolean {\n        let non_meta = 0;\n        for (const key of combo) {\n            if (INVALID_STANDALONE_KEYS.indexOf(key) < 0) {\n                non_meta++;\n            }\n        }\n        return non_meta > 0;\n    }\n}\n","import { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nlet _service: MatSnackBar;\nlet _disable_logging = false;\n\ndeclare let jest: any;\n\nexport function setNotifyOutlet(\n    snackbar: MatSnackBar,\n    disable_logging = false\n) {\n    _service = snackbar;\n    _disable_logging = disable_logging;\n}\n\n/**\n * Create notification popup\n * @param type CSS Class to add to the notification\n * @param message Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notify(\n    type: string,\n    message: string,\n    action: string = 'OK',\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    if (!_service) {\n        return (\n            !_disable_logging &&\n            console.warn(\"Snackbar service hasn't been initialised\")\n        );\n    }\n    const snackbar_ref = _service.open(message, action, {\n        panelClass: [type],\n        duration: 5000,\n        ...config,\n    });\n    if (action) {\n        on_action = on_action || (() => snackbar_ref.dismiss());\n        snackbar_ref.onAction().subscribe(() => on_action());\n    }\n}\n\n/**\n * Create success notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifySuccess(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.debug(msg);\n    if (typeof msg !== 'string') msg = 'Success';\n    notify('success', msg, action, on_action, config);\n}\n\n/**\n * Create error notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyError(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.error(msg);\n    if (typeof msg !== 'string')\n        msg =\n            (msg as any)?.error || (msg as any)?.message || 'An error occurred';\n    notify('error', msg, action, on_action, config);\n}\n\n/**\n * Create warning notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyWarn(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.warn(msg);\n    notify('warn', msg, action, on_action, config);\n}\n\n/**\n * Create info notification popup\n * @param msg Message to display on the notificaiton\n * @param action Display text for the callback action\n * @param on_action Callback of action on the notification\n * @param config Configuration details to pass to the snackbar\n */\nexport function notifyInfo(\n    msg: string,\n    action?: string,\n    on_action?: () => void,\n    config: Partial<MatSnackBarConfig> = {}\n): void {\n    !_disable_logging && console.info(msg);\n    notify('info', msg, action, on_action, config);\n}\n","import { PlaceAuthOptions, setup } from '@placeos/ts-client';\nimport { notifyInfo } from './notifications';\n\nexport interface PlaceSettings {\n    /** Protocol used by the application server */\n    protocol: 'http:' | 'https:';\n    /** Domain that the API server lies  */\n    domain: string;\n    /** Port number of the API server */\n    port: number;\n    /** Route on domain application rests */\n    route: string;\n    /** Whether to use the settings domain for auth */\n    use_domain: boolean;\n    /** Whether login is handled locally by the application */\n    local_login: boolean;\n    /** Whether application should mock out API requests */\n    mock: boolean;\n\n    storage?: 'session' | 'local';\n}\n\n/**\n * Initialise the PlaceOS API library\n */\nexport async function setupPlace(settings: PlaceSettings): Promise<void> {\n    const protocol = settings.protocol || location.protocol;\n    const host = settings.domain || location.hostname;\n    const port = settings.port || location.port;\n    const url = settings.use_domain\n        ? `${protocol}//${host}:${port}`\n        : location.origin;\n    const route = (location.pathname + '/').replace('//', '/');\n    const mock =\n        settings.mock ||\n        location.href.includes('mock=true') ||\n        localStorage.getItem('mock') === 'true';\n    // Generate configuration object\n    const config: PlaceAuthOptions = {\n        auth_type: 'auth_code',\n        scope: 'public',\n        host: `${host}${port ? ':' + port : ''}`,\n        auth_uri: `${url}/auth/oauth/authorize`,\n        token_uri: `${url}/auth/oauth/token`,\n        redirect_uri: `${location.origin}${route}oauth-resp.html`,\n        handle_login: !settings.local_login,\n        use_iframe: true,\n        mock,\n    };\n    if (localStorage) {\n        localStorage.setItem(\n            'mock',\n            `${!!mock && !location.href.includes('mock=false')}`\n        );\n    }\n    if (mock) {\n        notifyInfo('Application in mock mode.');\n    }\n    return setup(config);\n}\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of, Subject } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { randomInt } from './general';\n\nexport interface ClientEvent {\n    id: string;\n    type: 'network' | 'console' | 'dom';\n    subtype: string;\n    timestamp: number;\n    data: any;\n}\n\nfunction hookMethod<T, K extends keyof T>(\n    rootObject: T,\n    functionToHook: K,\n    hookingFunction: (...args: any[]) => void\n): T[K] {\n    var previousFunction = rootObject[functionToHook];\n    (rootObject as any)[functionToHook] = (...args: any[]) => {\n        hookingFunction(args);\n        (previousFunction as any).call(rootObject, ...args);\n    };\n    return previousFunction;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RemoteLoggingService extends AsyncHandler {\n    private _system_id = new BehaviorSubject<string>('');\n    private _events = new Subject<ClientEvent>();\n\n    private _event_history = this._events.pipe(shareReplay(1000));\n\n    private _logging_bindings = this._system_id.pipe(\n        filter((_) => !!_),\n        switchMap((id) => combineLatest([of(id), this._bindTo(id, 'enabled')])),\n        filter(([_, enabled]) => !!enabled),\n        map(([id]) =>\n            this.subscription(\n                'post_events',\n                this._event_history.subscribe((d) =>\n                    getModule(id, 'Logger').execute('post_event', [d])\n                )\n            )\n        )\n    );\n\n    public readonly history = this._event_history;\n\n    constructor() {\n        super();\n        this._patchConsoleMethods();\n        this._logging_bindings.subscribe();\n    }\n\n    public setSystem(id: string) {\n        this._system_id.next(id);\n    }\n\n    private _patchConsoleMethods() {\n        const types: (keyof Console)[] = [\n            'log',\n            'debug',\n            'info',\n            'warn',\n            'error',\n        ];\n        for (const key of types) {\n            hookMethod(console, key, (...args) => this._handleEvent(key, args));\n        }\n    }\n\n    private _handleEvent(type: string, data: any, event_type: any = 'console') {\n        data[0] =\n            typeof data[0] === 'string' ? data[0].replace(/%c/g, '') : data[0];\n        this._events.next({\n            id: `${event_type}-${randomInt(99999_99999)}`,\n            type: event_type,\n            subtype: type,\n            timestamp: Date.now(),\n            data: data.filter(\n                (_) => typeof _ !== 'string' || !_.startsWith('color:')\n            ),\n        });\n    }\n\n    /** List to binding */\n    private _bindTo(id: string, name: string, mod: string = 'Logger') {\n        const module = getModule(id, mod).binding(name);\n        this.subscription(`bind:${name}`, module.bind());\n        return module.listen();\n    }\n}\n","export interface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport const mergeRoomConfig = (a: RoomConfiguration, b: RoomConfiguration): RoomConfiguration => {\n    const c: RoomConfiguration = { ...a, ...b };\n    return c;\n};\n\nexport const roomConfigBuilder = (\n    buildingConfigs: RoomConfiguration[] = [],\n    roomConfigs: RoomConfiguration[] = []\n): RoomConfiguration[] => {\n    const map = {};\n    buildingConfigs.forEach((f) => (map[f.id] = f));\n    const output: RoomConfiguration[] = [];\n    roomConfigs.forEach((r) => {\n        if (!!map[r.id]) {\n            output.push(mergeRoomConfig(map[r.id], r));\n        }\n    });\n    return output;\n};\n","import { Injectable, Optional } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { format, isSameDay } from 'date-fns';\nimport { first } from 'rxjs/operators';\n\nimport { log, getItemWithKeys, setAppName } from './general';\nimport { DEFAULT_SETTINGS } from './settings';\nimport { HashMap } from './types';\nimport { AsyncHandler } from './async-handler.class';\n\nimport { VERSION } from './version';\nimport { currentUser, current_user } from './user-state';\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\ndeclare global {\n    interface Window {\n        debug: boolean;\n        application: HashMap;\n    }\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SettingsService extends AsyncHandler {\n    /** Name of the application */\n    private _app_name = 'PlaceOS';\n    /** List of override settings in order of priority */\n    private _overrides = new BehaviorSubject<HashMap[]>([]);\n    /** User's personal settings */\n    private _user_settings = new BehaviorSubject<HashMap>({});\n    /** Mapping of behaviour subjects */\n    private _subjects: HashMap<BehaviorSubject<any>> = {};\n    /** Mapping of observables */\n    private _observables: HashMap<Observable<any>> = {};\n    /** Mapping of pending settings */\n    private _pending_settings: HashMap = {};\n\n    /**\n     * @hidden\n     */\n    public set overrides(value: HashMap[]) {\n        this._overrides.next(value);\n        this._applyCssVariables();\n    }\n\n    /** Get observable for key */\n    public listen<T = any>(name: string): Observable<T> {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        return this._observables[name];\n    }\n\n    /** Update observable value for key */\n    public post<T>(name: string, value: T): void {\n        if (!this._observables[name]) {\n            this._subjects[name] = new BehaviorSubject<T>(null);\n            this._observables[name] = this._subjects[name].asObservable();\n        }\n        this._subjects[name].next(value);\n    }\n\n    public value<T = any>(name: string): T {\n        return !this._observables[name]\n            ? null\n            : this._subjects[name].getValue();\n    }\n\n    /** Page title */\n    public get title() {\n        return this._title.getTitle();\n    }\n    public set title(value: string) {\n        this._title.setTitle(\n            `${value} | ${this.get('app.name') || this._app_name}`\n        );\n        const tracking_id = this.get('app.analytics.tracking_id');\n        if (!tracking_id) return;\n        this._analytics?.send('pagename', { title: value });\n    }\n\n    constructor(\n        private _title: Title,\n        @Optional() private _analytics: GoogleAnalyticsService\n    ) {\n        super();\n        const now = new Date();\n        const time = new Date(VERSION.time);\n        const built = isSameDay(now, time)\n            ? `Today at ${format(time, 'h:mma')}`\n            : format(time, 'do MMM yyyy, h:mma');\n        log('CORE', `${VERSION.semver}`, null, 'debug', true);\n        log('APP', `${VERSION.hash} | Built: ${built}`, null, 'debug', true);\n        this.init();\n    }\n\n    /**\n     * Initialise the settings\n     */\n    public async init() {\n        this._setDarkMode();\n        if (this.get('debug')) window.debug = true;\n        if (this.get('app')?.name) {\n            this._app_name = this.get('app').name;\n        }\n        this._app_name =\n            location.pathname.replace(/[\\\\\\/]/g, '').trim() || this._app_name;\n        setAppName(this._app_name.split('-').join('_').toUpperCase());\n        log('Settings', 'Successfully loaded settings');\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.settings = this;\n        }\n        this.subscription(\n            'user_settings',\n            this._user_settings.subscribe((_) => this._applyUserSettings(_))\n        );\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const data = await showMetadata(user.id, 'settings').toPromise();\n        this._user_settings.next(data.details || {});\n        this._setDarkMode();\n        this._setFontSize();\n    }\n\n    /** Whether settings service has initialised */\n    public get app_name() {\n        return this._app_name;\n    }\n\n    public get time_format(): string {\n        return this.get('app.use_24_hour_time') ? 'HH:mm' : 'h:mm a';\n    }\n\n    /**\n     * Get a setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public get<T = any>(key: string): T {\n        const keys = key.split('.');\n        if (keys[0] !== 'app') {\n            return (\n                getItemWithKeys(keys, this._pending_settings) ??\n                getItemWithKeys(keys, this._user_settings.getValue()) ??\n                getItemWithKeys(keys, DEFAULT_SETTINGS)\n            );\n        }\n        const override_settings = [...this._overrides.getValue()];\n        for (const override of override_settings) {\n            const value = getItemWithKeys(keys.slice(1), override);\n            if (value != null) {\n                return value;\n            }\n        }\n        return getItemWithKeys(keys, DEFAULT_SETTINGS);\n    }\n\n    public saveUserSetting<T>(name: string, value: T) {\n        this._pending_settings[name] = value;\n        if (name === 'dark_mode') this._setDarkMode();\n        if (name === 'font_size') this._setFontSize();\n        this.timeout('save_settings', () => this._savePendingChanges(), 5000);\n    }\n\n    public overrideCssVariable(\n        key: string,\n        value: string,\n        important: boolean = false\n    ) {\n        let element = document.getElementById(`css-var-overrides+${key}`);\n        if (!element) {\n            element = document.createElement('style');\n            element.id = `css-var-overrides+${key}`;\n            document.head.appendChild(element);\n        }\n        element.innerText = `html, body { --${key}: ${value} ${\n            important ? '!important' : ''\n        }}`;\n    }\n\n    private _applyCssVariables() {\n        const variable_map = this.get('app.css_variables') || {};\n        let css_string = 'body { ';\n        for (const key in variable_map) {\n            css_string += `--${key}: ${variable_map[key]}; `;\n        }\n        css_string += '}';\n        let element = document.getElementById('css-var-overrides');\n        if (!element) {\n            element = document.createElement('style');\n            element.id = 'css-var-overrides';\n            document.head.appendChild(element);\n        }\n        element.innerText = css_string;\n    }\n\n    private async _savePendingChanges() {\n        const user = currentUser();\n        if (!user?.id || !Object.keys(this._pending_settings).length) return;\n        await updateMetadata(user.id, {\n            name: 'settings',\n            description: '',\n            details: {\n                ...this._user_settings.getValue(),\n                ...this._pending_settings,\n            },\n        }).toPromise();\n        this._user_settings.next({\n            ...this._user_settings.getValue(),\n            ...this._pending_settings,\n        });\n        this._pending_settings = {};\n    }\n\n    private async _applyUserSettings(settings: HashMap) {\n        if (settings.font_size) {\n        }\n    }\n\n    private _setFontSize() {\n        if (!this.get('font_size')) return;\n        this.overrideCssVariable('font-size', `${this.get('font_size')}px`);\n    }\n\n    private _setDarkMode() {\n        // const os_dark = false; // window?.matchMedia ? window?.matchMedia('(prefers-color-scheme: dark)')?.matches : false;\n        // if (this.get('dark_mode') ?? os_dark) {\n        //     document.body.classList.add('dark');\n        // } else {\n        //     document.body.classList.remove('dark');\n        // }\n    }\n}\n","/**\n * GENERAL APPLICATION SETTINGS\n */\nconst general: any = {\n    banner: {\n        id: '2',\n        type: 'info',\n        content: ``,\n    },\n    copyright: 'PlaceOS',\n    position: 'right',\n};\n/**\n * HELP/SUPPORT SETTINGS\n */\nconst help: any = {\n    tiles: [\n        {\n            name: 'About PlaceOS',\n            link: 'https://place.technology/resources',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'dns',\n            },\n            background:\n                'https://static1.squarespace.com/static/52142586e4b0c09536a144ad/5c8ed203a4222fa1927bbab3/5cb7cba66e9a7f63584b4d39/1555549341622/too-many-buttons.jpg?format=2500w',\n        },\n        {\n            name: 'General Enquiries',\n            link: 'mailto:equiries@place.technology?subject=Staff%20App%20Demo',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'mail',\n            },\n            background: 'assets/img/it-banner.jpg',\n        },\n        {\n            name: 'Contact PlaceOS',\n            link: 'https://place.technology/contact-1',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'call',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569984759306-M6ZOKD64OG009U68MYUL/ke17ZwdGBToddI8pDm48kCX-V5vw-8h9IBXN10-_8XN7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0p4Wyba38KfG317vYluk45_zZdtnDCZTLKcP2mivxmYi50xvY5saIGKMgOza9mH4XA/image-asset.jpeg?format=2500w',\n        },\n        {\n            name: 'About Us',\n            link: 'https://place.technology/',\n            icon: {\n                type: 'icon',\n                class: 'material-icons',\n                content: 'business',\n            },\n            background:\n                'https://images.squarespace-cdn.com/content/v1/52142586e4b0c09536a144ad/1569985184499-QF839PTJ2EV30KIZF59X/ke17ZwdGBToddI8pDm48kLkXF2pIyv_F2eUT9F60jBl7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0iyqMbMesKd95J-X4EagrgU9L3Sa3U8cogeb0tjXbfawd0urKshkc5MgdBeJmALQKw/image-asset.jpeg?format=2500w',\n        },\n    ],\n    columns: 2,\n};\n/**\n * BOOKING FLOW SETTINGS\n */\nconst events: any = {\n    multiple_spaces: false,\n    desk_start: 9,\n    can_book_for_others: false,\n    has_catering: true,\n};\n/*===========================*\\\n||  SPACE LISTING SETTINGS   ||\n\\*===========================*/\nconst space_display: any = {\n    show_images: false,\n};\n/*===========================*\\\n||  USER DIRECTORY SETTINGS  ||\n\\*===========================*/\nconst directory: any = {\n    show_avatars: true,\n    min_search_length: 3,\n};\n/*===========================*\\\n||    SCHEULDE SETTINGS   ||\n\\*===========================*/\nconst schedule = {\n    legend: [\n        { name: 'Accepted', color: '#21A453' },\n        { name: 'Pending', color: '#ffbf1f' },\n        { name: 'Rejected', color: '#f44336' },\n    ],\n};\n/*===========================*\\\n||    EXPLORE MAP SETTINGS   ||\n\\*===========================*/\nconst explore: any = {\n    colors: {\n        'space-free': '#43a047',\n        'space-pending': '#ffb300',\n        'space-busy': '#e53935',\n        'space-not-bookable': '#ccc',\n        'space-unknown': '#000',\n        // 'desk-available': '#43a047',\n        // 'desk-available-stroke': '#1b5e20',\n        // 'desk-unavailable': '#e53935',\n        // 'desk-unavailable-stroke': '#b71c1c',\n        // 'desk-reserved': '#ffb300',\n        // 'desk-reserved-stroke': '#ff6f00',\n        // 'desk-not-bookable': '#fff',\n        // 'desk-not-bookable-stroke': '#ccc',\n        'zone-low': '#43a047',\n        'zone-medium': '#ffb300',\n        'zone-high': '#e53935',\n    },\n    can_select_building: true,\n    show_legend_group_names: true,\n    legend: {\n        Spaces: [\n            { key: 'space-free', name: 'Space Available' },\n            { key: 'space-pending', name: 'Space Pending' },\n            { key: 'space-busy', name: 'Space in Use' },\n            { key: 'space-not-bookable', name: 'Space not Bookable' },\n            { key: 'space-unknown', name: 'Unknown' },\n        ],\n    },\n};\n/**\n * ROOT APPLICATION SETTINGS\n */\nconst app: any = {\n    name: 'Workplace',\n    title: 'Workplace Application',\n    description: 'PlaceOS Workplace UI written with Angular Framework',\n    short_name: 'STAFF',\n    logo_light: {\n        type: 'img',\n        src: 'assets/logo-light.svg',\n    },\n    logo_dark: {\n        type: 'img',\n        src: 'assets/logo-dark.svg',\n    },\n    features: ['spaces', 'desks', 'explore', 'parking', 'help', 'schedule'],\n    can_deliver: true,\n    general,\n    help,\n    events,\n    space_display,\n    directory,\n    explore,\n    desks: {\n        can_book_for_others: true,\n        allow_groups: true,\n        auto_allocation: false,\n    },\n    analytics: {\n        enabled: true,\n        tracking_id: '',\n    },\n    hide_contacts: false,\n    schedule,\n    departments: {\n        user: { level: 'bld-01_lvl-10', centered_at: 'table-10.008' },\n    },\n};\n\n/**\n * ROOT SETTIGNS\n */\nexport const DEFAULT_SETTINGS: any = {\n    debug: true,\n    composer: {\n        domain: '',\n        route: '/staff',\n        protocol: '',\n        port: '',\n        use_domain: false,\n        local_login: false,\n    },\n    app,\n};\n","import { Type } from '@angular/core';\nimport { Spectator } from '@ngneat/spectator/jest';\n\nexport async function whenChangesStable<T = Type<any>>(spectator: Spectator<T>) {\n    spectator.detectChanges();\n    await spectator.fixture.whenStable()\n    spectator.detectChanges();\n}\n","import { addMilliseconds } from 'date-fns';\nimport { getTimezoneOffset } from 'date-fns-tz';\n\n\nexport const LOCAL_TIMEZONE = Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || 'Australia/Sydney';\n\nexport function localToTimezone(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(tz) - getTimezoneOffset(LOCAL_TIMEZONE);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n\nexport function timezoneToLocal(date: Date | number, tz: string = LOCAL_TIMEZONE) {\n    const offset_diff = getTimezoneOffset(LOCAL_TIMEZONE) - getTimezoneOffset(tz);\n    return addMilliseconds(date, offset_diff).valueOf();\n}\n","import { flatten, unique } from \"./general\";\n\nexport const TIMEZONES = [\n    {\n      \"value\": \"Dateline Standard Time\",\n      \"abbr\": \"DST\",\n      \"offset\": -12,\n      \"isdst\": false,\n      \"text\": \"(UTC-12:00) International Date Line West\",\n      \"utc\": [\n        \"Etc/GMT+12\"\n      ]\n    },\n    {\n      \"value\": \"UTC-11\",\n      \"abbr\": \"U\",\n      \"offset\": -11,\n      \"isdst\": false,\n      \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n      \"utc\": [\n        \"Etc/GMT+11\",\n        \"Pacific/Midway\",\n        \"Pacific/Niue\",\n        \"Pacific/Pago_Pago\"\n      ]\n    },\n    {\n      \"value\": \"Hawaiian Standard Time\",\n      \"abbr\": \"HST\",\n      \"offset\": -10,\n      \"isdst\": false,\n      \"text\": \"(UTC-10:00) Hawaii\",\n      \"utc\": [\n        \"Etc/GMT+10\",\n        \"Pacific/Honolulu\",\n        \"Pacific/Johnston\",\n        \"Pacific/Rarotonga\",\n        \"Pacific/Tahiti\"\n      ]\n    },\n    {\n      \"value\": \"Alaskan Standard Time\",\n      \"abbr\": \"AKDT\",\n      \"offset\": -8,\n      \"isdst\": true,\n      \"text\": \"(UTC-09:00) Alaska\",\n      \"utc\": [\n        \"America/Anchorage\",\n        \"America/Juneau\",\n        \"America/Nome\",\n        \"America/Sitka\",\n        \"America/Yakutat\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time (Mexico)\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-08:00) Baja California\",\n      \"utc\": [\n        \"America/Santa_Isabel\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Daylight Time\",\n      \"abbr\": \"PDT\",\n      \"offset\": -7,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\"\n      ]\n    },\n    {\n      \"value\": \"Pacific Standard Time\",\n      \"abbr\": \"PST\",\n      \"offset\": -8,\n      \"isdst\": false,\n      \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n      \"utc\": [\n        \"America/Dawson\",\n        \"America/Los_Angeles\",\n        \"America/Tijuana\",\n        \"America/Vancouver\",\n        \"America/Whitehorse\",\n        \"PST8PDT\"\n      ]\n    },\n    {\n      \"value\": \"US Mountain Standard Time\",\n      \"abbr\": \"UMST\",\n      \"offset\": -7,\n      \"isdst\": false,\n      \"text\": \"(UTC-07:00) Arizona\",\n      \"utc\": [\n        \"America/Creston\",\n        \"America/Dawson_Creek\",\n        \"America/Hermosillo\",\n        \"America/Phoenix\",\n        \"Etc/GMT+7\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time (Mexico)\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n      \"utc\": [\n        \"America/Chihuahua\",\n        \"America/Mazatlan\"\n      ]\n    },\n    {\n      \"value\": \"Mountain Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -6,\n      \"isdst\": true,\n      \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n      \"utc\": [\n        \"America/Boise\",\n        \"America/Cambridge_Bay\",\n        \"America/Denver\",\n        \"America/Edmonton\",\n        \"America/Inuvik\",\n        \"America/Ojinaga\",\n        \"America/Yellowknife\",\n        \"MST7MDT\"\n      ]\n    },\n    {\n      \"value\": \"Central America Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Central America\",\n      \"utc\": [\n        \"America/Belize\",\n        \"America/Costa_Rica\",\n        \"America/El_Salvador\",\n        \"America/Guatemala\",\n        \"America/Managua\",\n        \"America/Tegucigalpa\",\n        \"Etc/GMT+6\",\n        \"Pacific/Galapagos\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n      \"utc\": [\n        \"America/Chicago\",\n        \"America/Indiana/Knox\",\n        \"America/Indiana/Tell_City\",\n        \"America/Matamoros\",\n        \"America/Menominee\",\n        \"America/North_Dakota/Beulah\",\n        \"America/North_Dakota/Center\",\n        \"America/North_Dakota/New_Salem\",\n        \"America/Rainy_River\",\n        \"America/Rankin_Inlet\",\n        \"America/Resolute\",\n        \"America/Winnipeg\",\n        \"CST6CDT\"\n      ]\n    },\n    {\n      \"value\": \"Central Standard Time (Mexico)\",\n      \"abbr\": \"CDT\",\n      \"offset\": -5,\n      \"isdst\": true,\n      \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n      \"utc\": [\n        \"America/Bahia_Banderas\",\n        \"America/Cancun\",\n        \"America/Merida\",\n        \"America/Mexico_City\",\n        \"America/Monterrey\"\n      ]\n    },\n    {\n      \"value\": \"Canada Central Standard Time\",\n      \"abbr\": \"CCST\",\n      \"offset\": -6,\n      \"isdst\": false,\n      \"text\": \"(UTC-06:00) Saskatchewan\",\n      \"utc\": [\n        \"America/Regina\",\n        \"America/Swift_Current\"\n      ]\n    },\n    {\n      \"value\": \"SA Pacific Standard Time\",\n      \"abbr\": \"SPST\",\n      \"offset\": -5,\n      \"isdst\": false,\n      \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n      \"utc\": [\n        \"America/Bogota\",\n        \"America/Cayman\",\n        \"America/Coral_Harbour\",\n        \"America/Eirunepe\",\n        \"America/Guayaquil\",\n        \"America/Jamaica\",\n        \"America/Lima\",\n        \"America/Panama\",\n        \"America/Rio_Branco\",\n        \"Etc/GMT+5\"\n      ]\n    },\n    {\n      \"value\": \"Eastern Standard Time\",\n      \"abbr\": \"EDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n      \"utc\": [\n        \"America/Detroit\",\n        \"America/Havana\",\n        \"America/Indiana/Petersburg\",\n        \"America/Indiana/Vincennes\",\n        \"America/Indiana/Winamac\",\n        \"America/Iqaluit\",\n        \"America/Kentucky/Monticello\",\n        \"America/Louisville\",\n        \"America/Montreal\",\n        \"America/Nassau\",\n        \"America/New_York\",\n        \"America/Nipigon\",\n        \"America/Pangnirtung\",\n        \"America/Port-au-Prince\",\n        \"America/Thunder_Bay\",\n        \"America/Toronto\",\n        \"EST5EDT\"\n      ]\n    },\n    {\n      \"value\": \"US Eastern Standard Time\",\n      \"abbr\": \"UEDT\",\n      \"offset\": -4,\n      \"isdst\": true,\n      \"text\": \"(UTC-05:00) Indiana (East)\",\n      \"utc\": [\n        \"America/Indiana/Marengo\",\n        \"America/Indiana/Vevay\",\n        \"America/Indianapolis\"\n      ]\n    },\n    {\n      \"value\": \"Venezuela Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": -4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:30) Caracas\",\n      \"utc\": [\n        \"America/Caracas\"\n      ]\n    },\n    {\n      \"value\": \"Paraguay Standard Time\",\n      \"abbr\": \"PYT\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Asuncion\",\n      \"utc\": [\n        \"America/Asuncion\"\n      ]\n    },\n    {\n      \"value\": \"Atlantic Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n      \"utc\": [\n        \"America/Glace_Bay\",\n        \"America/Goose_Bay\",\n        \"America/Halifax\",\n        \"America/Moncton\",\n        \"America/Thule\",\n        \"Atlantic/Bermuda\"\n      ]\n    },\n    {\n      \"value\": \"Central Brazilian Standard Time\",\n      \"abbr\": \"CBST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Cuiaba\",\n      \"utc\": [\n        \"America/Campo_Grande\",\n        \"America/Cuiaba\"\n      ]\n    },\n    {\n      \"value\": \"SA Western Standard Time\",\n      \"abbr\": \"SWST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n      \"utc\": [\n        \"America/Anguilla\",\n        \"America/Antigua\",\n        \"America/Aruba\",\n        \"America/Barbados\",\n        \"America/Blanc-Sablon\",\n        \"America/Boa_Vista\",\n        \"America/Curacao\",\n        \"America/Dominica\",\n        \"America/Grand_Turk\",\n        \"America/Grenada\",\n        \"America/Guadeloupe\",\n        \"America/Guyana\",\n        \"America/Kralendijk\",\n        \"America/La_Paz\",\n        \"America/Lower_Princes\",\n        \"America/Manaus\",\n        \"America/Marigot\",\n        \"America/Martinique\",\n        \"America/Montserrat\",\n        \"America/Port_of_Spain\",\n        \"America/Porto_Velho\",\n        \"America/Puerto_Rico\",\n        \"America/Santo_Domingo\",\n        \"America/St_Barthelemy\",\n        \"America/St_Kitts\",\n        \"America/St_Lucia\",\n        \"America/St_Thomas\",\n        \"America/St_Vincent\",\n        \"America/Tortola\",\n        \"Etc/GMT+4\"\n      ]\n    },\n    {\n      \"value\": \"Pacific SA Standard Time\",\n      \"abbr\": \"PSST\",\n      \"offset\": -4,\n      \"isdst\": false,\n      \"text\": \"(UTC-04:00) Santiago\",\n      \"utc\": [\n        \"America/Santiago\",\n        \"Antarctica/Palmer\"\n      ]\n    },\n    {\n      \"value\": \"Newfoundland Standard Time\",\n      \"abbr\": \"NDT\",\n      \"offset\": -2.5,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:30) Newfoundland\",\n      \"utc\": [\n        \"America/St_Johns\"\n      ]\n    },\n    {\n      \"value\": \"E. South America Standard Time\",\n      \"abbr\": \"ESAST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Brasilia\",\n      \"utc\": [\n        \"America/Sao_Paulo\"\n      ]\n    },\n    {\n      \"value\": \"Argentina Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Buenos Aires\",\n      \"utc\": [\n        \"America/Argentina/La_Rioja\",\n        \"America/Argentina/Rio_Gallegos\",\n        \"America/Argentina/Salta\",\n        \"America/Argentina/San_Juan\",\n        \"America/Argentina/San_Luis\",\n        \"America/Argentina/Tucuman\",\n        \"America/Argentina/Ushuaia\",\n        \"America/Buenos_Aires\",\n        \"America/Catamarca\",\n        \"America/Cordoba\",\n        \"America/Jujuy\",\n        \"America/Mendoza\"\n      ]\n    },\n    {\n      \"value\": \"SA Eastern Standard Time\",\n      \"abbr\": \"SEST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n      \"utc\": [\n        \"America/Araguaina\",\n        \"America/Belem\",\n        \"America/Cayenne\",\n        \"America/Fortaleza\",\n        \"America/Maceio\",\n        \"America/Paramaribo\",\n        \"America/Recife\",\n        \"America/Santarem\",\n        \"Antarctica/Rothera\",\n        \"Atlantic/Stanley\",\n        \"Etc/GMT+3\"\n      ]\n    },\n    {\n      \"value\": \"Greenland Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": -3,\n      \"isdst\": true,\n      \"text\": \"(UTC-03:00) Greenland\",\n      \"utc\": [\n        \"America/Godthab\"\n      ]\n    },\n    {\n      \"value\": \"Montevideo Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Montevideo\",\n      \"utc\": [\n        \"America/Montevideo\"\n      ]\n    },\n    {\n      \"value\": \"Bahia Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": -3,\n      \"isdst\": false,\n      \"text\": \"(UTC-03:00) Salvador\",\n      \"utc\": [\n        \"America/Bahia\"\n      ]\n    },\n    {\n      \"value\": \"UTC-02\",\n      \"abbr\": \"U\",\n      \"offset\": -2,\n      \"isdst\": false,\n      \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n      \"utc\": [\n        \"America/Noronha\",\n        \"Atlantic/South_Georgia\",\n        \"Etc/GMT+2\"\n      ]\n    },\n    {\n      \"value\": \"Mid-Atlantic Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": -1,\n      \"isdst\": true,\n      \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n      \"utc\": []\n    },\n    {\n      \"value\": \"Azores Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 0,\n      \"isdst\": true,\n      \"text\": \"(UTC-01:00) Azores\",\n      \"utc\": [\n        \"America/Scoresbysund\",\n        \"Atlantic/Azores\"\n      ]\n    },\n    {\n      \"value\": \"Cape Verde Standard Time\",\n      \"abbr\": \"CVST\",\n      \"offset\": -1,\n      \"isdst\": false,\n      \"text\": \"(UTC-01:00) Cape Verde Is.\",\n      \"utc\": [\n        \"Atlantic/Cape_Verde\",\n        \"Etc/GMT+1\"\n      ]\n    },\n    {\n      \"value\": \"Morocco Standard Time\",\n      \"abbr\": \"MDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Casablanca\",\n      \"utc\": [\n        \"Africa/Casablanca\",\n        \"Africa/El_Aaiun\"\n      ]\n    },\n    {\n      \"value\": \"UTC\",\n      \"abbr\": \"UTC\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Coordinated Universal Time\",\n      \"utc\": [\n        \"America/Danmarkshavn\",\n        \"Etc/GMT\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GMT\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"British Summer Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Edinburgh, London\",\n      \"utc\": [\n        \"Europe/Isle_of_Man\",\n        \"Europe/Guernsey\",\n        \"Europe/Jersey\",\n        \"Europe/London\"\n      ]\n    },\n    {\n      \"value\": \"GMT Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 1,\n      \"isdst\": true,\n      \"text\": \"(UTC) Dublin, Lisbon\",\n      \"utc\": [\n        \"Atlantic/Canary\",\n        \"Atlantic/Faeroe\",\n        \"Atlantic/Madeira\",\n        \"Europe/Dublin\",\n        \"Europe/Lisbon\"\n      ]\n    },\n    {\n      \"value\": \"Greenwich Standard Time\",\n      \"abbr\": \"GST\",\n      \"offset\": 0,\n      \"isdst\": false,\n      \"text\": \"(UTC) Monrovia, Reykjavik\",\n      \"utc\": [\n        \"Africa/Abidjan\",\n        \"Africa/Accra\",\n        \"Africa/Bamako\",\n        \"Africa/Banjul\",\n        \"Africa/Bissau\",\n        \"Africa/Conakry\",\n        \"Africa/Dakar\",\n        \"Africa/Freetown\",\n        \"Africa/Lome\",\n        \"Africa/Monrovia\",\n        \"Africa/Nouakchott\",\n        \"Africa/Ouagadougou\",\n        \"Africa/Sao_Tome\",\n        \"Atlantic/Reykjavik\",\n        \"Atlantic/St_Helena\"\n      ]\n    },\n    {\n      \"value\": \"W. Europe Standard Time\",\n      \"abbr\": \"WEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n      \"utc\": [\n        \"Arctic/Longyearbyen\",\n        \"Europe/Amsterdam\",\n        \"Europe/Andorra\",\n        \"Europe/Berlin\",\n        \"Europe/Busingen\",\n        \"Europe/Gibraltar\",\n        \"Europe/Luxembourg\",\n        \"Europe/Malta\",\n        \"Europe/Monaco\",\n        \"Europe/Oslo\",\n        \"Europe/Rome\",\n        \"Europe/San_Marino\",\n        \"Europe/Stockholm\",\n        \"Europe/Vaduz\",\n        \"Europe/Vatican\",\n        \"Europe/Vienna\",\n        \"Europe/Zurich\"\n      ]\n    },\n    {\n      \"value\": \"Central Europe Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n      \"utc\": [\n        \"Europe/Belgrade\",\n        \"Europe/Bratislava\",\n        \"Europe/Budapest\",\n        \"Europe/Ljubljana\",\n        \"Europe/Podgorica\",\n        \"Europe/Prague\",\n        \"Europe/Tirane\"\n      ]\n    },\n    {\n      \"value\": \"Romance Standard Time\",\n      \"abbr\": \"RDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n      \"utc\": [\n        \"Africa/Ceuta\",\n        \"Europe/Brussels\",\n        \"Europe/Copenhagen\",\n        \"Europe/Madrid\",\n        \"Europe/Paris\"\n      ]\n    },\n    {\n      \"value\": \"Central European Standard Time\",\n      \"abbr\": \"CEDT\",\n      \"offset\": 2,\n      \"isdst\": true,\n      \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n      \"utc\": [\n        \"Europe/Sarajevo\",\n        \"Europe/Skopje\",\n        \"Europe/Warsaw\",\n        \"Europe/Zagreb\"\n      ]\n    },\n    {\n      \"value\": \"W. Central Africa Standard Time\",\n      \"abbr\": \"WCAST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) West Central Africa\",\n      \"utc\": [\n        \"Africa/Algiers\",\n        \"Africa/Bangui\",\n        \"Africa/Brazzaville\",\n        \"Africa/Douala\",\n        \"Africa/Kinshasa\",\n        \"Africa/Lagos\",\n        \"Africa/Libreville\",\n        \"Africa/Luanda\",\n        \"Africa/Malabo\",\n        \"Africa/Ndjamena\",\n        \"Africa/Niamey\",\n        \"Africa/Porto-Novo\",\n        \"Africa/Tunis\",\n        \"Etc/GMT-1\"\n      ]\n    },\n    {\n      \"value\": \"Namibia Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 1,\n      \"isdst\": false,\n      \"text\": \"(UTC+01:00) Windhoek\",\n      \"utc\": [\n        \"Africa/Windhoek\"\n      ]\n    },\n    {\n      \"value\": \"GTB Standard Time\",\n      \"abbr\": \"GDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Athens, Bucharest\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\"\n      ]\n    },\n    {\n      \"value\": \"Middle East Standard Time\",\n      \"abbr\": \"MEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Beirut\",\n      \"utc\": [\n        \"Asia/Beirut\"\n      ]\n    },\n    {\n      \"value\": \"Egypt Standard Time\",\n      \"abbr\": \"EST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Cairo\",\n      \"utc\": [\n        \"Africa/Cairo\"\n      ]\n    },\n    {\n      \"value\": \"Syria Standard Time\",\n      \"abbr\": \"SDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Damascus\",\n      \"utc\": [\n        \"Asia/Damascus\"\n      ]\n    },\n    {\n      \"value\": \"E. Europe Standard Time\",\n      \"abbr\": \"EEDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) E. Europe\",\n      \"utc\": [\n        \"Asia/Nicosia\",\n        \"Europe/Athens\",\n        \"Europe/Bucharest\",\n        \"Europe/Chisinau\",\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Nicosia\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n\n      ]\n    },\n    {\n      \"value\": \"South Africa Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Harare, Pretoria\",\n      \"utc\": [\n        \"Africa/Blantyre\",\n        \"Africa/Bujumbura\",\n        \"Africa/Gaborone\",\n        \"Africa/Harare\",\n        \"Africa/Johannesburg\",\n        \"Africa/Kigali\",\n        \"Africa/Lubumbashi\",\n        \"Africa/Lusaka\",\n        \"Africa/Maputo\",\n        \"Africa/Maseru\",\n        \"Africa/Mbabane\",\n        \"Etc/GMT-2\"\n      ]\n    },\n    {\n      \"value\": \"FLE Standard Time\",\n      \"abbr\": \"FDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n      \"utc\": [\n        \"Europe/Helsinki\",\n        \"Europe/Kiev\",\n        \"Europe/Mariehamn\",\n        \"Europe/Riga\",\n        \"Europe/Sofia\",\n        \"Europe/Tallinn\",\n        \"Europe/Uzhgorod\",\n        \"Europe/Vilnius\",\n        \"Europe/Zaporozhye\"\n      ]\n    },\n    {\n      \"value\": \"Turkey Standard Time\",\n      \"abbr\": \"TDT\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Istanbul\",\n      \"utc\": [\n        \"Europe/Istanbul\"\n      ]\n    },\n    {\n      \"value\": \"Israel Standard Time\",\n      \"abbr\": \"JDT\",\n      \"offset\": 3,\n      \"isdst\": true,\n      \"text\": \"(UTC+02:00) Jerusalem\",\n      \"utc\": [\n        \"Asia/Jerusalem\"\n      ]\n    },\n    {\n      \"value\": \"Libya Standard Time\",\n      \"abbr\": \"LST\",\n      \"offset\": 2,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Tripoli\",\n      \"utc\": [\n        \"Africa/Tripoli\"\n      ]\n    },\n    {\n      \"value\": \"Jordan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Amman\",\n      \"utc\": [\n        \"Asia/Amman\"\n      ]\n    },\n    {\n      \"value\": \"Arabic Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Baghdad\",\n      \"utc\": [\n        \"Asia/Baghdad\"\n      ]\n    },\n    {\n      \"value\": \"Kaliningrad Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+02:00) Kaliningrad\",\n      \"utc\": [\n        \"Europe/Kaliningrad\"\n      ]\n    },\n    {\n      \"value\": \"Arab Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n      \"utc\": [\n        \"Asia/Aden\",\n        \"Asia/Bahrain\",\n        \"Asia/Kuwait\",\n        \"Asia/Qatar\",\n        \"Asia/Riyadh\"\n      ]\n    },\n    {\n      \"value\": \"E. Africa Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Nairobi\",\n      \"utc\": [\n        \"Africa/Addis_Ababa\",\n        \"Africa/Asmera\",\n        \"Africa/Dar_es_Salaam\",\n        \"Africa/Djibouti\",\n        \"Africa/Juba\",\n        \"Africa/Kampala\",\n        \"Africa/Khartoum\",\n        \"Africa/Mogadishu\",\n        \"Africa/Nairobi\",\n        \"Antarctica/Syowa\",\n        \"Etc/GMT-3\",\n        \"Indian/Antananarivo\",\n        \"Indian/Comoro\",\n        \"Indian/Mayotte\"\n      ]\n    },\n    {\n      \"value\": \"Moscow Standard Time\",\n      \"abbr\": \"MSK\",\n      \"offset\": 3,\n      \"isdst\": false,\n      \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n      \"utc\": [\n          \"Europe/Kirov\",\n        \"Europe/Moscow\",\n        \"Europe/Simferopol\",\n        \"Europe/Volgograd\",\n        \"Europe/Minsk\"\n      ]\n    },\n    {\n      \"value\": \"Samara Time\",\n      \"abbr\": \"SAMT\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n      \"utc\": [\n          \"Europe/Astrakhan\",\n        \"Europe/Samara\",\n          \"Europe/Ulyanovsk\"\n      ]\n    },\n    {\n      \"value\": \"Iran Standard Time\",\n      \"abbr\": \"IDT\",\n      \"offset\": 4.5,\n      \"isdst\": true,\n      \"text\": \"(UTC+03:30) Tehran\",\n      \"utc\": [\n        \"Asia/Tehran\"\n      ]\n    },\n    {\n      \"value\": \"Arabian Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n      \"utc\": [\n        \"Asia/Dubai\",\n        \"Asia/Muscat\",\n        \"Etc/GMT-4\"\n      ]\n    },\n    {\n      \"value\": \"Azerbaijan Standard Time\",\n      \"abbr\": \"ADT\",\n      \"offset\": 5,\n      \"isdst\": true,\n      \"text\": \"(UTC+04:00) Baku\",\n      \"utc\": [\n        \"Asia/Baku\"\n      ]\n    },\n    {\n      \"value\": \"Mauritius Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Port Louis\",\n      \"utc\": [\n        \"Indian/Mahe\",\n        \"Indian/Mauritius\",\n        \"Indian/Reunion\"\n      ]\n    },\n    {\n      \"value\": \"Georgian Standard Time\",\n      \"abbr\": \"GET\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Tbilisi\",\n      \"utc\": [\n        \"Asia/Tbilisi\"\n      ]\n    },\n    {\n      \"value\": \"Caucasus Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 4,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:00) Yerevan\",\n      \"utc\": [\n        \"Asia/Yerevan\"\n      ]\n    },\n    {\n      \"value\": \"Afghanistan Standard Time\",\n      \"abbr\": \"AST\",\n      \"offset\": 4.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+04:30) Kabul\",\n      \"utc\": [\n        \"Asia/Kabul\"\n      ]\n    },\n    {\n      \"value\": \"West Asia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n      \"utc\": [\n        \"Antarctica/Mawson\",\n        \"Asia/Aqtau\",\n        \"Asia/Aqtobe\",\n        \"Asia/Ashgabat\",\n        \"Asia/Dushanbe\",\n        \"Asia/Oral\",\n        \"Asia/Samarkand\",\n        \"Asia/Tashkent\",\n        \"Etc/GMT-5\",\n        \"Indian/Kerguelen\",\n        \"Indian/Maldives\"\n      ]\n    },\n    {\n      \"value\": \"Yekaterinburg Time\",\n      \"abbr\": \"YEKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Yekaterinburg\",\n      \"utc\": [\n        \"Asia/Yekaterinburg\"\n      ]\n    },\n    {\n      \"value\": \"Pakistan Standard Time\",\n      \"abbr\": \"PKT\",\n      \"offset\": 5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n      \"utc\": [\n        \"Asia/Karachi\"\n      ]\n    },\n    {\n      \"value\": \"India Standard Time\",\n      \"abbr\": \"IST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n      \"utc\": [\n        \"Asia/Kolkata\"\n      ]\n    },\n    {\n      \"value\": \"Sri Lanka Standard Time\",\n      \"abbr\": \"SLST\",\n      \"offset\": 5.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n      \"utc\": [\n        \"Asia/Colombo\"\n      ]\n    },\n    {\n      \"value\": \"Nepal Standard Time\",\n      \"abbr\": \"NST\",\n      \"offset\": 5.75,\n      \"isdst\": false,\n      \"text\": \"(UTC+05:45) Kathmandu\",\n      \"utc\": [\n        \"Asia/Kathmandu\"\n      ]\n    },\n    {\n      \"value\": \"Central Asia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n      \"utc\": [\n        \"Antarctica/Vostok\",\n        \"Asia/Almaty\",\n        \"Asia/Bishkek\",\n        \"Asia/Qyzylorda\",\n        \"Asia/Urumqi\",\n        \"Etc/GMT-6\",\n        \"Indian/Chagos\"\n      ]\n    },\n    {\n      \"value\": \"Bangladesh Standard Time\",\n      \"abbr\": \"BST\",\n      \"offset\": 6,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:00) Dhaka\",\n      \"utc\": [\n        \"Asia/Dhaka\",\n        \"Asia/Thimphu\"\n      ]\n    },\n    {\n      \"value\": \"Myanmar Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 6.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n      \"utc\": [\n        \"Asia/Rangoon\",\n        \"Indian/Cocos\"\n      ]\n    },\n    {\n      \"value\": \"SE Asia Standard Time\",\n      \"abbr\": \"SAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n      \"utc\": [\n        \"Antarctica/Davis\",\n        \"Asia/Bangkok\",\n        \"Asia/Hovd\",\n        \"Asia/Jakarta\",\n        \"Asia/Phnom_Penh\",\n        \"Asia/Pontianak\",\n        \"Asia/Saigon\",\n        \"Asia/Vientiane\",\n        \"Etc/GMT-7\",\n        \"Indian/Christmas\"\n      ]\n    },\n    {\n      \"value\": \"N. Central Asia Standard Time\",\n      \"abbr\": \"NCAST\",\n      \"offset\": 7,\n      \"isdst\": false,\n      \"text\": \"(UTC+07:00) Novosibirsk\",\n      \"utc\": [\n        \"Asia/Novokuznetsk\",\n        \"Asia/Novosibirsk\",\n        \"Asia/Omsk\"\n      ]\n    },\n    {\n      \"value\": \"China Standard Time\",\n      \"abbr\": \"CST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n      \"utc\": [\n        \"Asia/Hong_Kong\",\n        \"Asia/Macau\",\n        \"Asia/Shanghai\"\n      ]\n    },\n    {\n      \"value\": \"North Asia Standard Time\",\n      \"abbr\": \"NAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Krasnoyarsk\",\n      \"utc\": [\n        \"Asia/Krasnoyarsk\"\n      ]\n    },\n    {\n      \"value\": \"Singapore Standard Time\",\n      \"abbr\": \"MPST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n      \"utc\": [\n        \"Asia/Brunei\",\n        \"Asia/Kuala_Lumpur\",\n        \"Asia/Kuching\",\n        \"Asia/Makassar\",\n        \"Asia/Manila\",\n        \"Asia/Singapore\",\n        \"Etc/GMT-8\"\n      ]\n    },\n    {\n      \"value\": \"W. Australia Standard Time\",\n      \"abbr\": \"WAST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Perth\",\n      \"utc\": [\n        \"Antarctica/Casey\",\n        \"Australia/Perth\"\n      ]\n    },\n    {\n      \"value\": \"Taipei Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Taipei\",\n      \"utc\": [\n        \"Asia/Taipei\"\n      ]\n    },\n    {\n      \"value\": \"Ulaanbaatar Standard Time\",\n      \"abbr\": \"UST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Ulaanbaatar\",\n      \"utc\": [\n        \"Asia/Choibalsan\",\n        \"Asia/Ulaanbaatar\"\n      ]\n    },\n    {\n      \"value\": \"North Asia East Standard Time\",\n      \"abbr\": \"NAEST\",\n      \"offset\": 8,\n      \"isdst\": false,\n      \"text\": \"(UTC+08:00) Irkutsk\",\n      \"utc\": [\n        \"Asia/Irkutsk\"\n      ]\n    },\n    {\n      \"value\": \"Japan Standard Time\",\n      \"abbr\": \"JST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n      \"utc\": [\n        \"Asia/Dili\",\n        \"Asia/Jayapura\",\n        \"Asia/Tokyo\",\n        \"Etc/GMT-9\",\n        \"Pacific/Palau\"\n      ]\n    },\n    {\n      \"value\": \"Korea Standard Time\",\n      \"abbr\": \"KST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Seoul\",\n      \"utc\": [\n        \"Asia/Pyongyang\",\n        \"Asia/Seoul\"\n      ]\n    },\n    {\n      \"value\": \"Cen. Australia Standard Time\",\n      \"abbr\": \"CAST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Adelaide\",\n      \"utc\": [\n        \"Australia/Adelaide\",\n        \"Australia/Broken_Hill\"\n      ]\n    },\n    {\n      \"value\": \"AUS Central Standard Time\",\n      \"abbr\": \"ACST\",\n      \"offset\": 9.5,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:30) Darwin\",\n      \"utc\": [\n        \"Australia/Darwin\"\n      ]\n    },\n    {\n      \"value\": \"E. Australia Standard Time\",\n      \"abbr\": \"EAST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Brisbane\",\n      \"utc\": [\n        \"Australia/Brisbane\",\n        \"Australia/Lindeman\"\n      ]\n    },\n    {\n      \"value\": \"AUS Eastern Standard Time\",\n      \"abbr\": \"AEST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n      \"utc\": [\n        \"Australia/Melbourne\",\n        \"Australia/Sydney\"\n      ]\n    },\n    {\n      \"value\": \"West Pacific Standard Time\",\n      \"abbr\": \"WPST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n      \"utc\": [\n        \"Antarctica/DumontDUrville\",\n        \"Etc/GMT-10\",\n        \"Pacific/Guam\",\n        \"Pacific/Port_Moresby\",\n        \"Pacific/Saipan\",\n        \"Pacific/Truk\"\n      ]\n    },\n    {\n      \"value\": \"Tasmania Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 10,\n      \"isdst\": false,\n      \"text\": \"(UTC+10:00) Hobart\",\n      \"utc\": [\n        \"Australia/Currie\",\n        \"Australia/Hobart\"\n      ]\n    },\n    {\n      \"value\": \"Yakutsk Standard Time\",\n      \"abbr\": \"YST\",\n      \"offset\": 9,\n      \"isdst\": false,\n      \"text\": \"(UTC+09:00) Yakutsk\",\n      \"utc\": [\n        \"Asia/Chita\",\n        \"Asia/Khandyga\",\n        \"Asia/Yakutsk\"\n      ]\n    },\n    {\n      \"value\": \"Central Pacific Standard Time\",\n      \"abbr\": \"CPST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n      \"utc\": [\n        \"Antarctica/Macquarie\",\n        \"Etc/GMT-11\",\n        \"Pacific/Efate\",\n        \"Pacific/Guadalcanal\",\n        \"Pacific/Kosrae\",\n        \"Pacific/Noumea\",\n        \"Pacific/Ponape\"\n      ]\n    },\n    {\n      \"value\": \"Vladivostok Standard Time\",\n      \"abbr\": \"VST\",\n      \"offset\": 11,\n      \"isdst\": false,\n      \"text\": \"(UTC+11:00) Vladivostok\",\n      \"utc\": [\n        \"Asia/Sakhalin\",\n        \"Asia/Ust-Nera\",\n        \"Asia/Vladivostok\"\n      ]\n    },\n    {\n      \"value\": \"New Zealand Standard Time\",\n      \"abbr\": \"NZST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Auckland, Wellington\",\n      \"utc\": [\n        \"Antarctica/McMurdo\",\n        \"Pacific/Auckland\"\n      ]\n    },\n    {\n      \"value\": \"UTC+12\",\n      \"abbr\": \"U\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n      \"utc\": [\n        \"Etc/GMT-12\",\n        \"Pacific/Funafuti\",\n        \"Pacific/Kwajalein\",\n        \"Pacific/Majuro\",\n        \"Pacific/Nauru\",\n        \"Pacific/Tarawa\",\n        \"Pacific/Wake\",\n        \"Pacific/Wallis\"\n      ]\n    },\n    {\n      \"value\": \"Fiji Standard Time\",\n      \"abbr\": \"FST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Fiji\",\n      \"utc\": [\n        \"Pacific/Fiji\"\n      ]\n    },\n    {\n      \"value\": \"Magadan Standard Time\",\n      \"abbr\": \"MST\",\n      \"offset\": 12,\n      \"isdst\": false,\n      \"text\": \"(UTC+12:00) Magadan\",\n      \"utc\": [\n        \"Asia/Anadyr\",\n        \"Asia/Kamchatka\",\n        \"Asia/Magadan\",\n        \"Asia/Srednekolymsk\"\n      ]\n    },\n    {\n      \"value\": \"Kamchatka Standard Time\",\n      \"abbr\": \"KDT\",\n      \"offset\": 13,\n      \"isdst\": true,\n      \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n      \"utc\": [\n        \"Asia/Kamchatka\"\n      ]\n    },\n    {\n      \"value\": \"Tonga Standard Time\",\n      \"abbr\": \"TST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Nuku'alofa\",\n      \"utc\": [\n        \"Etc/GMT-13\",\n        \"Pacific/Enderbury\",\n        \"Pacific/Fakaofo\",\n        \"Pacific/Tongatapu\"\n      ]\n    },\n    {\n      \"value\": \"Samoa Standard Time\",\n      \"abbr\": \"SST\",\n      \"offset\": 13,\n      \"isdst\": false,\n      \"text\": \"(UTC+13:00) Samoa\",\n      \"utc\": [\n        \"Pacific/Apia\"\n      ]\n    }\n  ];\n\nexport const TIMEZONES_IANA = unique(flatten(TIMEZONES.map(_ => _.utc))).sort();\n","import {\n    uploadFiles,\n    Upload,\n    humanReadableByteCount,\n} from '@placeos/cloud-uploads';\nimport { Observable } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { randomInt } from './general';\n\nimport * as blobUtil from 'blob-util';\n\nexport interface UploadDetails {\n    /** Unique ID for the upload */\n    id: number;\n    /** Name of the file uploaded */\n    name: string;\n    /** Progress of the file upload */\n    progress: number;\n    /** Link to the uploaded file */\n    link: string;\n    /** Formatted file size */\n    formatted_size: string;\n    /** Size of the file being uploaded */\n    size: number;\n    /** Error with upload request */\n    error?: string;\n    /** Upload object associated with the file */\n    upload: Upload;\n}\n\nexport type UploadPermissions = 'none' | 'support' | 'admin';\n\n/**\n * Upload the given file to the cloud\n * @param file File to upload\n */\nexport function uploadFile(\n    file: File,\n    pub: boolean = true,\n    permissions: UploadPermissions = 'none'\n): Observable<UploadDetails> {\n    return new Observable((observer) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], {\n                file_name: file.name,\n                permissions,\n                public: pub,\n            } as any);\n            const upload = upload_list[0];\n            const upload_details: UploadDetails = {\n                id: randomInt(9999_9999_9999),\n                name: file.name,\n                progress: 0,\n                link: '',\n                formatted_size: humanReadableByteCount(file.size),\n                size: file.size,\n                upload,\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url) {\n                        upload_details.link = !pub\n                            ? `${\n                                  location.origin\n                              }/api/engine/v2/uploads/${encodeURIComponent(\n                                  upload.id\n                              )}/url`\n                            : upload.access_url;\n                    }\n                    upload_details.progress = state.progress;\n                    observer.next(upload_details);\n                    if (state.status === 'error')\n                        observer.error({\n                            ...upload_details,\n                            error: state.error,\n                        });\n                    if (state.status === 'complete') observer.complete();\n                });\n            observer.next(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    });\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval } from 'rxjs';\nimport { first, map, tap, throttleTime } from 'rxjs/operators';\n\nconst EVENTS_NAMES = ['keypress', 'mousemove', 'touchmove', 'scroll', 'wheel'];\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserIdleTimeService {\n    private _last_action = new BehaviorSubject(Date.now());\n    private _update = (e?) => this._onUserInteraction();\n    private _event_names = EVENTS_NAMES;\n\n    public readonly last_action = combineLatest([\n        this._last_action,\n        interval(1000),\n    ]).pipe(\n        throttleTime(300),\n        map(([last_action]) => last_action)\n    );\n\n    public readonly idle_time = this.last_action.pipe(\n        map((time) => Date.now() - time)\n    );\n\n    private _onUserInteraction() {\n        this._last_action.next(Date.now());\n    }\n\n    public idleFor(time_ms: number) {\n        const stop = this.startListening();\n        return this.idle_time.pipe(\n            first((t) => t >= time_ms),\n            tap(() => stop())\n        );\n    }\n\n    public startListening() {\n        this._last_action.next(Date.now());\n        for (const name of this._event_names) {\n            document.body.addEventListener(name, this._update);\n        }\n        return () => this.stopListening();\n    }\n\n    public stopListening() {\n        for (const name of this._event_names) {\n            document.body.removeEventListener(name, this._update);\n        }\n    }\n}\n","import { showUser } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { delay, map, retry } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nconst EMPTY_USER = new StaffUser();\n\nconst _current_user = new BehaviorSubject<StaffUser>(null);\n\nexport const current_user = _current_user.asObservable();\n\ndeclare let jest;\n\nsetTimeout(() => {\n    try {\n        if (jest) return;\n    } catch {}\n    showUser('current')\n        .pipe(\n            delay(1000),\n            retry(10),\n            map((i) => new StaffUser(i))\n        )\n        .subscribe((user) => _current_user.next(user));\n}, 300);\n\n/** Get the current user details */\nexport function currentUser() {\n    return _current_user.getValue() || EMPTY_USER;\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"b142674\",\n    \"hash\": \"b142674\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"b142674\",\n    \"semverString\": null,\n    \"version\": \"1.12.0\",\n    \"time\": 1695360562146\n};\n/* tslint:enable */\n","import { Injectable } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from './async-handler.class';\nimport { SettingsService } from './settings.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VorlonService extends AsyncHandler {\n    /** DOM Element containing the Vorlon Script */\n    private _script: HTMLScriptElement;\n\n    constructor(private _settings: SettingsService) {\n        super();\n        this.load();\n    }\n\n    private async load() {\n        const system = this._settings.get('app.vorlon.system');\n        if (system) {\n            const module = getModule(system, 'Vorlon');\n            if (module) {\n                const binding = module.binding('enabled');\n                this.subscription('binding', binding.bind());\n                this.subscription(\n                    'binding_value',\n                    binding.listen().subscribe((state) => {\n                        state\n                            ? this.injectVorlonScript()\n                            : this.removeVorlonScript();\n                    })\n                );\n            }\n        }\n    }\n\n    private injectVorlonScript() {\n        this.removeVorlonScript();\n        this._script = document.createElement('script');\n        const url = this._settings.get('app.vorlon.url');\n        this._script.src = url || `./assets/vorlon.js`;\n        document.head.appendChild(this._script);\n    }\n\n    private removeVorlonScript() {\n        if (this._script) {\n            this._script.parentNode.removeChild(this._script);\n            delete this._script;\n            this._script = null;\n        }\n    }\n}\n","export * from './lib/components.module';\n\nexport * from './lib/action-icon.component';\nexport * from './lib/binding.directive';\nexport * from './lib/confirm-modal.component';\nexport * from './lib/icon.component';\nexport * from './lib/login.component';\nexport * from './lib/popout-menu.component';\nexport * from './lib/unauthorised.component';\nexport * from './lib/user-avatar.component';\nexport * from './lib/interactive-map.component';\nexport * from './lib/map-pin.component';\nexport * from './lib/map-radius.component';\nexport * from './lib/misconfigured.component';\nexport * from './lib/status-overlay.component';\nexport * from './lib/custom-table.component';\nexport * from './lib/custom-tooltip.component';\nexport * from './lib/fixed.pipe';\nexport * from './lib/safe.pipe';\nexport * from './lib/sanitise.pipe';\nexport * from './lib/virtual-keyboard.component';\nexport * from './lib/global-loading.component';\nexport * from './lib/map-locate-modal.component';\nexport * from './lib/image-carousel.component';\nexport * from './lib/redirect.component';\nexport * from './lib/changelog-modal.component';\nexport * from './lib/user-controls.component';\n\nexport * from './lib/authorised-admin.guard';\nexport * from './lib/authorised-user.guard';\n","import { Component, Inject } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'accessibility-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 overflow-hidden dark:bg-neutral-700 dark:text-white\"\n        >\n            <div class=\"flex items-center space-x-2 p-2\" (click)=\"close()\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Display & Accessibility</div>\n            </div>\n            <div\n                action\n                *ngIf=\"can_change_dark_mode\"\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800 my-2\"\n                >\n                    <app-icon class=\"text-xl\">mode_night</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Dark Mode</div>\n                <mat-slide-toggle\n                    [ngModel]=\"dark_mode\"\n                    (ngModelChange)=\"applySetting('dark_mode', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <div\n                action\n                class=\"flex items-center space-x-2 w-full text-left h-auto px-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800 my-2\"\n                >\n                    <app-icon class=\"text-xl\">playlist_add</app-icon>\n                </div>\n                <div class=\"flex-1 text-sm\" i18n>Large Accessibility Sizes</div>\n                <mat-slide-toggle\n                    [ngModel]=\"accessible\"\n                    (ngModelChange)=\"applySetting('accessible', $event)\"\n                ></mat-slide-toggle>\n            </div>\n            <ng-container *ngIf=\"accessible\">\n                <div\n                    class=\"px-8 py-4 bg-gray-200 dark:bg-neutral-600 text-center\"\n                    i18n\n                >\n                    Adjust your preferred reading size below.\n                </div>\n                <div class=\"flex items-center px-4 space-x-4\">\n                    <span class=\"text-sm\">A</span>\n                    <mat-slider\n                        class=\"flex-1 w-1/2 text-[16px]\"\n                        [min]=\"10\"\n                        [max]=\"24\"\n                        [step]=\"2\"\n                    >\n                        <input\n                            matSliderThumb\n                            class=\"text-[16px]\"\n                            [ngModel]=\"font_size\"\n                            (ngModelChange)=\"applySetting('font_size', $event)\"\n                        />\n                    </mat-slider>\n                    <span class=\"text-2xl\">A</span>\n                    <span\n                        class=\"text-base py-1 px-2 rounded bg-gray-700 text-white my-2\"\n                    >\n                        {{ font_size }}px\n                    </span>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host > div > [action] {\n                border-top: 1px solid #ccc;\n            }\n        `,\n    ],\n})\nexport class AccessibilityTooltipComponent extends AsyncHandler {\n    public get dark_mode() {\n        return !!this._settings.get('dark_mode');\n    }\n\n    public get can_change_dark_mode() {\n        return !!this._settings.get('app.general.dark_mode');\n    }\n\n    public get accessible() {\n        return !!this._settings.get('accessible');\n    }\n\n    public get font_size() {\n        return this._settings.get('font_size') || 16;\n    }\n\n    public readonly applySetting = (n, v) =>\n        this.timeout(\n            'apply_setting',\n            () => this._settings.saveUserSetting(n, v),\n            1000\n        );\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'action-icon',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"relative\"\n            [class.success]=\"state === 'success'\"\n            [disabled]=\"loading || disabled\"\n            title=\"\"\n        >\n            <app-icon root [className]=\"className\" [icon]=\"icon\">\n                {{ content }}\n                <ng-content></ng-content>\n            </app-icon>\n            <div [class]=\"'state center ' + state\" *ngIf=\"!loading && state\">\n                <app-icon>\n                    {{ state === 'success' ? 'done' : 'close' }}\n                </app-icon>\n            </div>\n            <div class=\"loader center\" *ngIf=\"loading\">\n                <mat-spinner [diameter]=\"16\"></mat-spinner>\n            </div>\n        </button>\n    `,\n    styles: [\n        `\n            .action-icon.fade > app-icon {\n                opacity: 0.35;\n            }\n\n            .success {\n                pointer-events: none;\n            }\n\n            .success app-icon[root] {\n                opacity: 0.2;\n            }\n\n            .state.success {\n                color: #388e3c;\n            }\n\n            .state.error {\n                color: #e53935;\n            }\n        `,\n    ],\n})\nexport class ActionIconComponent {\n    /** Icon to display */\n    @Input() public icon: ApplicationIcon;\n    /** Icon to display */\n    @Input() public className: string = 'material-icons';\n    /** Icon to display */\n    @Input() public content: string;\n    /** Whether action is being processed */\n    @Input() public loading: boolean;\n    /** Whether action is being processed */\n    @Input() public disabled: boolean;\n    /** State of the action */\n    @Input() public state: 'success' | 'error' | '' = '';\n}\n","import {\n    Directive,\n    ElementRef,\n    Host,\n    Input,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { apiKey, token } from '@placeos/ts-client';\n\nconst IMAGE_STORE = new Map<string, string>();\n\n@Directive({\n    selector: 'img [auth]',\n})\nexport class AuthenticatedImageDirective extends AsyncHandler {\n    @Input() public source: string;\n\n    constructor(private _image_el: ElementRef<HTMLImageElement>) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.source && this.source) this._loadImage();\n    }\n\n    private async _loadImage() {\n        if (!this._image_el) {\n            return this.timeout('load', () => this._loadImage(), 300);\n        }\n        // If not an API call, just load the image\n        if (!this.source.includes('/api/engine/v2/uploads')) {\n            this._image_el.nativeElement.src = this.source;\n            return;\n        }\n        // If image has already been loaded, just use the cached version\n        if (IMAGE_STORE.has(this.source)) {\n            this._image_el.nativeElement.src = IMAGE_STORE.get(this.source);\n            return;\n        }\n        const tkn = token();\n        document.cookie = `${\n            tkn === 'x-api-key'\n                ? 'api-key=' + encodeURIComponent(apiKey())\n                : 'bearer_token=' + encodeURIComponent(tkn)\n        };max-age=60;path=/api/;samesite=strict;${\n            location.protocol === 'https:' ? 'secure;' : ''\n        }`;\n        const response = await fetch(this.source);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        IMAGE_STORE.set(this.source, url);\n        this._image_el.nativeElement.src = url;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedAdminGuard  {\n    constructor(private _router: Router) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user = await current_user.pipe(first((_) => !!_)).toPromise();\n        const can_activate = user && user.groups.includes('placeos_admin');\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return can_activate;\n    }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n    Route,\n    UrlSegment,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    UrlTree,\n    Router,\n} from '@angular/router';\nimport { onlineState } from '@placeos/ts-client';\nimport { current_user } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { StaffUser } from '../../../users/src/lib/user.class';\n\nexport abstract class PLACEOS_APP_ACCESS {\n    public readonly group: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthorisedUserGuard {\n    constructor(\n        private _router: Router,\n        @Optional() private _access: PLACEOS_APP_ACCESS\n    ) {}\n\n    public async canActivate(\n        next?: ActivatedRouteSnapshot,\n        state?: RouterStateSnapshot\n    ): Promise<boolean | UrlTree> {\n        return this.checkUser();\n    }\n\n    public async canLoad(\n        route?: Route,\n        segments?: UrlSegment[]\n    ): Promise<boolean> {\n        return this.checkUser();\n    }\n\n    private async checkUser() {\n        await onlineState()\n            .pipe(first((_) => _))\n            .toPromise();\n        const user: StaffUser = await current_user\n            .pipe(first((_) => !!_))\n            .toPromise();\n        const can_activate = !!(\n            user &&\n            (!this._access?.group || user.groups.includes(this._access.group))\n        );\n        if (!can_activate) {\n            this._router.navigate(['/unauthorised']);\n        }\n        return !!can_activate;\n    }\n}\n","import {\n    Directive,\n    Input,\n    SimpleChanges,\n    OnInit,\n    OnChanges,\n    OnDestroy,\n    ElementRef,\n    Renderer2,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { onlineState, authority, getModule } from '@placeos/ts-client';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { filter, first } from 'rxjs/operators';\n\n@Directive({\n    selector: 'i[bind], [binding], co-bind',\n})\nexport class BindingDirective<T = any>\n    extends AsyncHandler\n    implements OnInit, OnChanges, OnDestroy\n{\n    /** ID of the system to bind */\n    @Input() public sys: string = '';\n    /** Class name of the module to bind */\n    @Input() public mod: string = '';\n    /** Index of the system to bind */\n    @Input() public index = 1;\n    /** Status variable to bind to */\n    @Input() public bind: string = '';\n    /** Method to execute */\n    @Input() public exec: string = '';\n    /** Method to execute */\n    @Input() public delay: number = 100;\n    /** Event to listen for on the parent */\n    @Input('onEvent') public on_event: string = '';\n    /** ID of the system to bind to */\n    @Input() public params: any[] = null;\n    @Input() public ignore: boolean = false;\n    /** Current value of the binding */\n    @Input() public model: T | null = null;\n    /** Emitter for changes to the value of the binding */\n    @Output() public modelChange = new EventEmitter<T | null>();\n\n    private _binding = false;\n    private _old_model: T | null = null;\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _renderer: Renderer2\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        onlineState()\n            ?.pipe(first((_) => _))\n            .subscribe((_) => this.bindVariable());\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sys || changes.mod || changes.bind) {\n            this.bindVariable();\n        }\n        if (\n            changes.model &&\n            this._old_model !== this.model &&\n            this.model != null\n        ) {\n            this._old_model = this.model;\n            this.execute();\n        }\n        if (changes.on_event && this.on_event) {\n            this.subscription(\n                'on_event',\n                this._renderer.listen(\n                    this._element.nativeElement,\n                    this.on_event,\n                    () => this.execute()\n                )\n            );\n        }\n    }\n\n    /** Bind to set status variable */\n    private bindVariable() {\n        if (\n            authority() &&\n            this.bind &&\n            this.sys &&\n            this.mod &&\n            !this._binding\n        ) {\n            this.timeout(\n                'bind',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    const binding = module.binding(this.bind);\n                    this._binding = true;\n                    this.subscription('binding', binding.bind());\n                    this.subscription(\n                        'on_changes',\n                        binding\n                            .listen()\n                            .pipe(filter((_) => _ != null))\n                            .subscribe((value) => {\n                                setTimeout(() => {\n                                    this._binding = false;\n                                    this.clearTimeout('bound');\n                                    if (this.ignore) return;\n                                    this.model = value;\n                                    this._old_model = this.model;\n                                    this.modelChange.emit(this.model);\n                                }, 10);\n                            })\n                    );\n                    this.timeout('bound', () => (this._binding = false), 200);\n                },\n                20\n            );\n        }\n    }\n\n    /** Excute the set method on the module */\n    private execute() {\n        if (\n            authority() &&\n            this.exec &&\n            this.sys &&\n            this.mod &&\n            !this._timers['execute']\n        ) {\n            this.timeout(\n                'execute',\n                () => {\n                    const module = getModule(this.sys, this.mod, this.index);\n                    let params = this.params;\n                    if (this.bind) params = this.params || [this.model];\n                    module.execute(this.exec, params || []).then((result) => {\n                        // Emit exec result if not bound to status variable\n                        if (!this.bind) {\n                            this.model = result;\n                            this._old_model = this.model;\n                            this.modelChange.emit(this.model);\n                        }\n                    });\n                },\n                this.delay\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow p-2 relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (building | async)?.display_name ||\n                            (building | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>\n                Select a building location\n            </div>\n            <mat-radio-group\n                [ngModel]=\"(building | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let bld of buildings | async\"\n                    [value]=\"bld.id\"\n                    (click)=\"setBuilding(bld)\"\n                >\n                    {{ bld.display_name || bld.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class BuildingSelectComponent {\n    public readonly buildings = this._org.active_buildings;\n    public readonly building = this._org.active_building;\n\n    public readonly setBuilding = (b) => {\n        this._org.building = b;\n        this._org.saveBuilding(b.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'building',\n})\nexport class BuildingPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): Building {\n        return this._org.buildings.find((bld) =>\n            id instanceof Array ? id.includes(bld.id) : bld.id === id\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { marked } from 'marked';\n\nexport interface ChangelogModalData {\n    changelog: string;\n}\n\n@Component({\n    selector: 'changelog-modal',\n    template: `\n        <header>\n            <h3 mat-dialog-title>Changelog</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 markdown max-h-[65vh] max-w-[80vw] overflow-auto\"\n            *ngIf=\"changelog; else empty_state\"\n            [innerHTML]=\"changelog | safe: 'html'\"\n        ></main>\n        <ng-template #empty_state>\n            <div class=\"flex items-center justify-center flex-col space-y-2\">\n                <app-icon class=\"text-3xl\">close</app-icon>\n                <div class=\"text\">No changelog</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChangelogModalComponent {\n    /** Whether the changelog is loading */\n    public loading: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: ChangelogModalData) {}\n\n    /** HTML string for rendering the change log */\n    public get changelog(): string {\n        return marked(this._data.changelog || '');\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BindingDirective } from './binding.directive';\nimport { ActionIconComponent } from './action-icon.component';\nimport { IconComponent } from './icon.component';\nimport { PopoutMenuComponent } from './popout-menu.component';\nimport { UserAvatarComponent } from './user-avatar.component';\n\nimport { ConfirmModalComponent } from './confirm-modal.component';\nimport {\n    InteractiveMapComponent,\n    MAP_FEATURE_DATA,\n} from './interactive-map.component';\nimport { MapPinComponent } from './map-pin.component';\nimport { MapRadiusComponent } from './map-radius.component';\nimport { StatusOverlayComponent } from './status-overlay.component';\nimport { FixedPipe } from './fixed.pipe';\nimport { SafePipe } from './safe.pipe';\nimport { SanitizePipe } from './sanitise.pipe';\nimport { CustomTableComponent } from './custom-table.component';\nimport { CustomTooltipComponent } from './custom-tooltip.component';\nimport { VirtualKeyboardComponent } from './virtual-keyboard.component';\nimport { GlobalLoadingComponent } from './global-loading.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MapPolygonComponent } from './map-polygon.component';\nimport { GlobalBannerComponent } from './global-banner.component';\nimport { MapLocateModalComponent } from './map-locate-modal.component';\nimport { ImageCarouselComponent } from './image-carousel.component';\nimport { DurationPipe } from './duration.pipe';\nimport { RedirectComponent } from './redirect.component';\nimport { DebugConsoleComponent } from './debug-console.component';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { JsonDisplayComponent } from './json-display.component';\nimport { ChangelogModalComponent } from './changelog-modal.component';\nimport { LevelPipe } from './level.pipe';\nimport { BuildingPipe } from './building.pipe';\nimport { UserControlsComponent } from './user-controls.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { AuthenticatedImageDirective } from './authenticated-image.directive';\nimport { UploadPermissionsModalComponent } from './upload-permissions-modal.component';\n\nconst MAT_MODULES: any[] = [\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRippleModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatInputModule,\n    ClipboardModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatPaginatorModule,\n    CdkTableModule,\n    PortalModule,\n    MatSortModule,\n    ScrollingModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n];\n\nconst COMPONENTS: Type<any>[] = [\n    ActionIconComponent,\n    IconComponent,\n    PopoutMenuComponent,\n    UserAvatarComponent,\n\n    ConfirmModalComponent,\n    InteractiveMapComponent,\n    MapPinComponent,\n    MapRadiusComponent,\n    MapPolygonComponent,\n    StatusOverlayComponent,\n    CustomTableComponent,\n    CustomTooltipComponent,\n    VirtualKeyboardComponent,\n    GlobalLoadingComponent,\n    GlobalBannerComponent,\n    MapLocateModalComponent,\n    ImageCarouselComponent,\n    RedirectComponent,\n    DebugConsoleComponent,\n    JsonDisplayComponent,\n    ChangelogModalComponent,\n\n    FixedPipe,\n    SafePipe,\n    SanitizePipe,\n    DurationPipe,\n    LevelPipe,\n    BuildingPipe,\n\n    UserControlsComponent,\n    BuildingSelectComponent,\n    RegionSelectComponent,\n    HelpTooltipComponent,\n    AccessibilityTooltipComponent,\n    LanguageSelectComponent,\n    UploadPermissionsModalComponent,\n];\n\nconst DIRECTIVES: Type<any>[] = [BindingDirective, AuthenticatedImageDirective];\n\n@NgModule({\n    declarations: [...COMPONENTS, ...DIRECTIVES],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule.forChild(),\n        ...MAT_MODULES,\n    ],\n    providers: [{ provide: MAP_FEATURE_DATA, useValue: {} }],\n    exports: [...COMPONENTS, ...DIRECTIVES, ...MAT_MODULES, TranslateModule],\n})\nexport class ComponentsModule {}\n","import { Component, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ApplicationIcon, DialogEvent } from 'libs/common/src/lib/types';\n\nexport interface ConfirmModalData {\n    /** Title of the modal */\n    title: string;\n    /** Contents of the modal */\n    content: string;\n    /** Text displaed on the confirmation button */\n    confirm_text?: string;\n    /** Text displaed on the confirmation button */\n    cancel_text?: string;\n    /** Icon to display on the modal */\n    icon: ApplicationIcon;\n}\n\nexport const CONFIRM_METADATA = {\n    height: 'auto',\n    width: '24em',\n    maxHeight: 'calc(100vh - 2em)',\n    maxWidth: 'calc(100vw - 2em)',\n};\n\n@Component({\n    selector: 'confirm-modal',\n    template: `\n        <header>\n            <h3>{{ title }}</h3>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"flex flex-col items-center space-y-2 p-4\"\n        >\n            <app-icon [icon]=\"icon\" class=\"text-5xl\"></app-icon>\n            <p\n                content\n                class=\"text-center text-sm w-[22rem]\"\n                [innerHTML]=\"content\"\n            ></p>\n        </main>\n        <footer\n            class=\"flex items-center justify-center p-2 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                {{ cancel_text }}\n            </button>\n            <button\n                btn\n                matRipple\n                name=\"accept\"\n                class=\"w-32\"\n                (click)=\"onConfirm()\"\n            >\n                {{ confirm_text }}\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main loading>\n                <div\n                    class=\"w-full h-48 flex flex-col items-center justify-center space-y-2\"\n                >\n                    <mat-spinner diameter=\"32\"></mat-spinner>\n                    <p>{{ loading }}</p>\n                </div>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ConfirmModalComponent {\n    /** Loading state */\n    public loading: string;\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Title of the confirm modal */\n    public readonly title: string = this._data.title || 'Confirm';\n    /** Body of the confirm modal */\n    public readonly content: string = this._data.content || 'Are you sure?';\n    /** Display text on the confirm button */\n    public readonly confirm_text: string = this._data.confirm_text || 'Accept';\n    /** Display text on the cancel button */\n    public readonly cancel_text: string = this._data.cancel_text || 'Cancel';\n    /** Display icon properties */\n    public readonly icon: ApplicationIcon = this._data.icon || {\n        class: 'material-icons',\n        content: 'done',\n    };\n    /** Prevent user from closing the modal */\n    public readonly disableClose = () => (this._dialog_ref.disableClose = true);\n    /** Allow the user to close the modal */\n    public readonly enableClose = () => (this._dialog_ref.disableClose = false);\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ConfirmModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: ConfirmModalData\n    ) {}\n\n    /** User confirmation of the content of the modal */\n    public onConfirm() {\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'custom-table',\n    template: `\n        <cdk-table\n            [dataSource]=\"data_source\"\n            matSort\n            class=\"block border border-gray-300 divide-y divide-gray-300 dark:border-neutral-500 text-sm\"\n        >\n            <ng-container *ngFor=\"let column of columns; let i = index\">\n                <ng-container [cdkColumnDef]=\"column\">\n                    <div\n                        cdk-header-cell\n                        class=\"capitalize p-2 h-12 bg-black/5 flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkHeaderCellDef\n                        mat-sort-header\n                    >\n                        {{ display_column[i] || column }}\n                    </div>\n                    <div\n                        cdk-cell\n                        class=\"p-2 truncate flex items-center\"\n                        [style.width]=\"(column_size[i] || '8') + 'em'\"\n                        [style.flex]=\"column_size[i] === 'flex' ? '1' : ''\"\n                        *cdkCellDef=\"let row\"\n                        [title]=\"row[column]\"\n                    >\n                        <ng-container\n                            *ngIf=\"!template[column]; else cell_outlet\"\n                            >{{ row[column]\n                            }}<span\n                                *ngIf=\"\n                                    row[column] == null || row[column] === ''\n                                \"\n                                class=\"opacity-30\"\n                            >\n                                N/A\n                            </span></ng-container\n                        >\n                        <ng-template #cell_outlet>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    template[column];\n                                    context: {\n                                        data: row[column],\n                                        row: row,\n                                        key: column,\n                                        name: display_column[i] || column\n                                    }\n                                \"\n                            ></ng-container>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n\n            <cdk-header-row\n                class=\"sticky flex items-center bg-white dark:bg-neutral-700 top-0 z-10\"\n                *cdkHeaderRowDef=\"columns\"\n            ></cdk-header-row>\n            <cdk-row\n                row\n                class=\"flex z-0 relative hover:bg-black/5 dark:hover:bg-white/5 divide-x divide-gray-300\"\n                (click)=\"row_clicked.emit(row)\"\n                *cdkRowDef=\"let row; columns: columns\"\n            ></cdk-row>\n            <ng-template cdkNoDataRow>\n                <p class=\"w-full p-4 text-center opacity-30\">\n                    {{ empty || 'No data to display' }}\n                </p>\n            </ng-template>\n        </cdk-table>\n        <div footer [hidden]=\"!pagination\">\n            <mat-paginator\n                [pageSize]=\"page_size\"\n                [hidePageSize]=\"true\"\n                [showFirstLastButtons]=\"true\"\n            >\n            </mat-paginator>\n        </div>\n    `,\n    styles: [\n        `\n            cdk-header-row {\n                font-weight: 500;\n                text-transform: capitalize;\n                min-height: 3rem;\n            }\n        `,\n    ],\n})\nexport class CustomTableComponent<T extends {} = any>\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges\n{\n    /** Data source to render in the table */\n    @Input() public dataSource: T[] | Observable<T[]>;\n    /** Whether table should use pagination */\n    @Input() public pagination = false;\n    /** Number of items to display on pagination pages */\n    @Input() public page_size = 7;\n    /** Filter string to apply to table listings */\n    @Input() public filter: string;\n    /** Values to display for column headers */\n    @Input() public display_column: string[];\n    /** List of columns to display in the table */\n    @Input() public columns: string[];\n    /** Size of the columns in em or flex for a flexible size */\n    @Input() public column_size: string[] = [];\n    /** Displayed value when the table is empty */\n    @Input() public empty: string;\n    /** Displayed value when the table is empty */\n    @Input() public template: Record<string, TemplateRef<any>> = {};\n\n    @Output() public row_clicked = new EventEmitter<T>();\n\n    public readonly data_source: MatTableDataSource<T> = new MatTableDataSource(\n        []\n    );\n\n    @ViewChild(MatPaginator) private _paginator: MatPaginator;\n    @ViewChild(MatSort) private _sort: MatSort;\n\n    public ngAfterViewInit() {\n        this.data_source.sort = this._sort;\n        this.data_source.paginator = this.pagination ? this._paginator : null;\n        this.data_source.filterPredicate = (i: any, s) => {\n            for (const key in i) {\n                if (\n                    typeof i[key] === 'string' &&\n                    i[key].toLowerCase().includes(s.toLowerCase())\n                ) {\n                    return true;\n                } else if (i[key] === s) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.dataSource && this.dataSource) {\n            if (this.dataSource instanceof Observable) {\n                this.subscription(\n                    'data',\n                    this.dataSource.subscribe(\n                        (data) => (this.data_source.data = data)\n                    )\n                );\n            } else {\n                this.data_source.data = this.dataSource;\n            }\n        }\n        if (changes.pagination) {\n            this.data_source.paginator = this.pagination\n                ? this._paginator\n                : null;\n        }\n        if (changes.filter) {\n            this.data_source.filter = (this.filter || '').trim().toLowerCase();\n        }\n        if (changes.columns && this.columns) {\n            this.display_column = this.columns.map(\n                (_, idx) =>\n                    (this.display_column || [])[idx] || _.split('_').join(' ')\n            );\n        }\n        if (!this.column_size) {\n            this.column_size = [];\n        }\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Injectable,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\n@Injectable()\nexport class CustomTooltipData<T = any> {\n    data: T;\n    close: () => void;\n    constructor(d) {\n        this.data = d.data;\n        this.close = d.close || (() => null);\n    }\n}\n\n@Component({\n    selector: '[customTooltip]',\n    template: `\n        <ng-content></ng-content>\n\n        <ng-template cdk-portal>\n            <div custom-tooltip class=\"relative\" [ngSwitch]=\"type\">\n                <ng-container *ngSwitchCase=\"'component'\">\n                    <ng-container\n                        *ngComponentOutlet=\"content; injector: injector\"\n                    ></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'html'\">\n                    <div [innerHTML]=\"content | sanitize\"></div>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <ng-container\n                        *ngTemplateOutlet=\"content; context: data\"\n                    ></ng-container>\n                </ng-container>\n            </div>\n        </ng-template>\n    `,\n})\nexport class CustomTooltipComponent<T = any>\n    extends AsyncHandler\n    implements OnChanges, OnDestroy\n{\n    /** Horizontal position of the rendered overlay */\n    @Input('xPosition') public x_pos: 'start' | 'center' | 'end';\n    /** Vertical position of the rendered overlay */\n    @Input('yPosition') public y_pos: 'top' | 'center' | 'bottom';\n    /** Content to render in the tooltip */\n    @Input() public content: TemplateRef<any> | Type<any> | string;\n    /** Data associated with the tooltip content */\n    @Input() public data: T;\n    /** Whether tooltip has a backdrop */\n    @Input() public backdrop = true;\n    /** Whether tooltip has a backdrop */\n    @Input() public hover = false;\n    /** Delay time in milliseconds to close after hover */\n    @Input() public delay = 0;\n    /** Type of content to render */\n    public type: 'template' | 'component' | 'html' = 'template';\n\n    public injector: Injector;\n\n    private _overlay_ref: OverlayRef = null;\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('click') public readonly onClick = () => this.open();\n    @HostListener('touchend') public readonly onTouch = () => this.open();\n    @HostListener('mouseenter') public readonly onEnter = () =>\n        this.hover ? this.open() : '';\n    @HostListener('mouseleave') public readonly onLeave = () =>\n        this.hover ? this.close() : '';\n\n    constructor(\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay,\n        private _injector: Injector\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        this._updateInjector();\n        if (\n            this._overlay_ref &&\n            (changes.x_pos || changes.y_pos || changes.content)\n        ) {\n            this.open();\n        }\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public open() {\n        if (!this.content) return;\n        this.timeout(\n            'open',\n            () => {\n                if (this.hover && this.delay) {\n                    this.timeout('onclose', () => this.close(), this.delay);\n                }\n                this._updateType();\n                if (this._overlay_ref) this.close();\n                if (!this._portal) return;\n                const pos = this._element.nativeElement.getBoundingClientRect();\n                const default_x = 'end';\n                const default_y = 'top';\n                this._overlay_ref = this._overlay.create({\n                    hasBackdrop: !!this.backdrop,\n                    positionStrategy: this._overlay\n                        .position()\n                        .flexibleConnectedTo(this._element)\n                        .withPositions([\n                            {\n                                originX: this.x_pos || default_x,\n                                originY:\n                                    (this.y_pos === 'top'\n                                        ? 'bottom'\n                                        : this.y_pos == 'bottom'\n                                        ? 'top'\n                                        : this.y_pos) || default_y,\n                                overlayX: this.x_pos || default_x,\n                                overlayY: this.y_pos || default_y,\n                            },\n                        ]),\n                });\n                this._overlay_ref.attach(this._portal);\n                if (this.backdrop) {\n                    this.subscription(\n                        'backdrop',\n                        this._overlay_ref\n                            .backdropClick()\n                            .subscribe(() => this.close())\n                    );\n                }\n            },\n            50\n        );\n    }\n\n    public close() {\n        this.clearTimeout('open');\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    private _updateType() {\n        this.type =\n            typeof this.content === 'string'\n                ? 'html'\n                : this.content instanceof TemplateRef\n                ? 'template'\n                : 'component';\n    }\n\n    private _updateInjector() {\n        this.injector = Injector.create({\n            providers: [\n                {\n                    provide: CustomTooltipData,\n                    useValue: { data: this.data, close: () => this.close() },\n                },\n            ],\n            parent: this._injector,\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { HotkeysService } from 'libs/common/src/lib/hotkeys.service';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport {\n    ClientEvent,\n    RemoteLoggingService,\n} from 'libs/common/src/lib/remote-logging.service';\nimport { JsonDisplayComponent } from './json-display.component';\n\nconst COLOR_MAP = {\n    console: 'bg-purple-600/30',\n    network: 'bg-green-600/30',\n    dom: 'bg-indigo-600/30',\n\n    log: `bg-cyan-600/50`,\n    info: `bg-blue-600/50`,\n    warn: `bg-orange-600/50`,\n    debug: `bg-gray-600/50`,\n    error: `bg-red-600/50`,\n};\n\nconst URL_STARTS = [\n    'tel:',\n    'mailto:',\n    'http:',\n    'https:',\n    'ftp:',\n    'ws:',\n    'wss:',\n];\n\n@Component({\n    selector: `debug-console`,\n    template: `\n        <div\n            class=\"absolute bottom-2 inset-x-2 bg-black/80 text-white shadow rounded overflow-hidden h-[32rem] max-h-65vh flex flex-col z-[998]\"\n            *ngIf=\"show\"\n        >\n            <cdk-virtual-scroll-viewport\n                itemSize=\"32\"\n                class=\"flex-1 h-[30rem] max-h-full w-full\"\n            >\n                <div\n                    class=\"font-mono h-8 truncate p-2 text-sm flex items-center max-w-full hover:bg-white/10 space-x-1\"\n                    *cdkVirtualFor=\"\n                        let log of filtered_logs | async;\n                        trackBy: trackByFn\n                    \"\n                >\n                    <div\n                        class=\"uppercase text-xs p-1 bg-white/10 rounded font-mono\"\n                    >\n                        {{ log.timestamp | date: 'MMM d HH:mm:ss' }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'uppercase text-xs p-1 ' +\n                            colors[log.type] +\n                            ' rounded font-mono'\n                        \"\n                    >\n                        {{ log.type }}\n                    </div>\n                    <div\n                        [class]=\"\n                            'capitalize text-xs p-1 ' +\n                            colors[log.subtype] +\n                            ' rounded font-mono w-16 text-center'\n                        \"\n                    >\n                        {{ log.subtype }}\n                    </div>\n                    <div\n                        class=\"font-mono\"\n                        *ngFor=\"let obj of log.data\"\n                        [attr.data-type]=\"type(obj)\"\n                    >\n                        <ng-container [ngSwitch]=\"type(obj)\">\n                            <ng-container *ngSwitchCase=\"'link'\">\n                                <a\n                                    class=\"font-mono\"\n                                    [href]=\"obj | sanitize\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferer\"\n                                    >{{ obj }}</a\n                                >\n                            </ng-container>\n                            <ng-container *ngSwitchCase=\"'object'\">\n                                [<span\n                                    class=\"underline font-mono hover:text-blue-500\"\n                                    customTooltip\n                                    xPosition=\"center\"\n                                    yPosition=\"bottom\"\n                                    [content]=\"json_tooltip\"\n                                    [data]=\"obj\"\n                                    [hover]=\"true\"\n                                    [backdrop]=\"false\"\n                                    >Object</span\n                                >]\n                            </ng-container>\n                            <ng-container *ngSwitchDefault>{{\n                                obj\n                            }}</ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </cdk-virtual-scroll-viewport>\n            <div\n                class=\"absolute bottom-0 right-2 rounded-t-lg bg-black/90 p-2 flex items-center space-x-2 w-[20rem]\"\n            >\n                <input\n                    #search_input\n                    name=\"log-filter\"\n                    [ngModel]=\"filter | async\"\n                    (ngModelChange)=\"filter.next($event)\"\n                    placeholder=\"Filter logs...\"\n                    class=\"border-none bg-white/10 flex-1 text-sm px-2 py-1 font-mono rounded\"\n                />\n                <div class=\"font-mono text-xs px-2 text-center\">\n                    <span class=\"font-mono\" *ngIf=\"(filter | async)?.length\">\n                        {{ (filtered_logs | async)?.length || '0' }} of\n                    </span>\n                    {{ (logs | async)?.length }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DebugConsoleComponent extends AsyncHandler {\n    @Input() public show = false;\n    public readonly colors = COLOR_MAP;\n    public readonly json_tooltip = JsonDisplayComponent;\n    public readonly filter = new BehaviorSubject<string>('');\n    public readonly logs = new BehaviorSubject<ClientEvent[]>([]);\n    public readonly filtered_logs = combineLatest([\n        this.filter,\n        this.logs,\n    ]).pipe(\n        map(([s, logs]) =>\n            logs.filter(\n                (_) =>\n                    _.type.toLowerCase().includes(s.toLowerCase()) ||\n                    _.subtype.toLowerCase().includes(s.toLowerCase()) ||\n                    `${_.data}`.toLowerCase().includes(s.toLowerCase())\n            )\n        )\n    );\n\n    constructor(\n        private _logs: RemoteLoggingService,\n        private _hotkey: HotkeysService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'logs',\n            this._logs.history.subscribe((event) =>\n                this.logs.next([...this.logs.getValue(), event])\n            )\n        );\n        this.subscription(\n            'toggle',\n            this._hotkey.listen(\n                ['Control', 'Backquote'],\n                () => (this.show = !this.show)\n            )\n        );\n    }\n\n    public type(item: any) {\n        if (\n            typeof item === 'string' &&\n            URL_STARTS.find((start) => item.startsWith(start))\n        ) {\n            return 'link';\n        } else if (item instanceof Object) {\n            return 'object';\n        }\n        return 'string';\n    }\n\n    public trackByFn(_: number, item: ClientEvent) {\n        return item?.timestamp;\n    }\n}\n","import { Pipe } from \"@angular/core\";\nimport { formatDuration } from \"date-fns\";\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe {\n\n    /**\n     * Format the duration value\n     * @param length Duration to format in minutes\n     * @param shorten Whether to shorten the period names e.g. `hours` as `h`\n     */\n    public transform(length: number, shorten: boolean = false): string {\n        let duration = formatDuration({ hours: Math.floor(length / 60), minutes: length % 60 });\n        if (shorten) {\n            duration = duration.replace('hour', 'h').replace('minute', 'm').replace(/s/gi, '');\n        }\n        return duration;\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'toFixed',\n})\nexport class FixedPipe implements PipeTransform {\n\n    /**\n     * Fixed a number to x decimal places\n     * @param value number to convert\n     * @param places Number of decimal places to convert\n     */\n    public transform(value: number, places: number = 2): string {\n        return value.toFixed(places);\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nexport interface BannerDetails {\n    id: string;\n    type?: 'info' | 'warn' | 'error';\n    content: string;\n}\n\n@Component({\n    selector: 'global-banner',\n    template: `\n        <div\n            class=\"flex items-center w-full text-white p-4 space-x-4\"\n            [class.bg-blue-600]=\"banner.type === 'info' || !banner.type\"\n            [class.bg-pending]=\"banner.type === 'warn'\"\n            [class.bg-error]=\"banner.type === 'error'\"\n            *ngIf=\"!has_viewed\"\n        >\n            <div class=\"flex-1\">{{ banner?.content }}</div>\n            <button icon (click)=\"close()\">\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class GlobalBannerComponent {\n    public get has_viewed() {\n        return (\n            !this.banner?.content ||\n            localStorage.getItem('PLACE.last_banner') === this.banner.id\n        );\n    }\n\n    public get banner(): BannerDetails {\n        return this._settings.get('app.general.banner');\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public close() {\n        localStorage.setItem('PLACE.last_banner', this.banner?.id || '');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { isOnline, token } from '@placeos/ts-client';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'global-loading',\n    template: `\n        <div\n            *ngIf=\"!online\"\n            class=\"fixed bottom-2 left-1/2 -translate-x-1/2 shadow rounded-3xl px-4 py-2 bg-error text-white text-xs\"\n        >\n            Unable to reach server... Some features may not work.\n        </div>\n        <div\n            *ngIf=\"loading\"\n            loader\n            class=\"fixed inset-0 flex items-center justify-center pointer-events-auto bg-white dark:bg-neutral-600\"\n        >\n            <mat-spinner [diameter]=\"64\"></mat-spinner>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: none;\n            }\n\n            :host > [loader] {\n                z-index: 997;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='36' height='36' viewBox='0 0 36 36' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M36 0H0v36h36V0zM15.126 2H2v13.126c.367.094.714.24 1.032.428L15.554 3.032c-.188-.318-.334-.665-.428-1.032zM18 4.874V18H4.874c-.094-.367-.24-.714-.428-1.032L16.968 4.446c.318.188.665.334 1.032.428zM22.874 2h11.712L20 16.586V4.874c1.406-.362 2.512-1.468 2.874-2.874zm10.252 18H20v13.126c.367.094.714.24 1.032.428l12.522-12.522c-.188-.318-.334-.665-.428-1.032zM36 22.874V36H22.874c-.094-.367-.24-.714-.428-1.032l12.522-12.522c.318.188.665.334 1.032.428zm0-7.748V3.414L21.414 18h11.712c.362-1.406 1.468-2.512 2.874-2.874zm-18 18V21.414L3.414 36h11.712c.362-1.406 1.468-2.512 2.874-2.874zM4.874 20h11.712L2 34.586V22.874c1.406-.362 2.512-1.468 2.874-2.874z' fill='%23000000' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n        `,\n    ],\n})\nexport class GlobalLoadingComponent extends AsyncHandler implements OnInit {\n    public loading: boolean;\n\n    public get online() {\n        return isOnline();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.interval(\n            'has_token',\n            () => {\n                if (token()) {\n                    this.loading = false;\n                    this.clearInterval('has_token');\n                }\n            },\n            1000\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ApplicationLink, SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'help-tooltip',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white divide-y divide-gray-300 dark:divide-neutral-500\"\n            (click)=\"close()\"\n        >\n            <div\n                class=\"flex items-center space-x-2 p-2 border-b dark:border-neutral-500\"\n            >\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\" i18n>Help & Support</div>\n            </div>\n            <a\n                btn\n                matRipple\n                *ngFor=\"let tile of tiles\"\n                class=\"clear w-full text-left h-auto\"\n                target=\"_blank\"\n                ref=\"noreferer noopener\"\n                [href]=\"tile.link\"\n            >\n                <div\n                    class=\"flex items-center space-x-2 dark:text-white py-2 w-full\"\n                >\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                    >\n                        <app-icon class=\"text-xl\" [icon]=\"tile.icon\"></app-icon>\n                    </div>\n                    <div class=\"flex-1\">{{ tile.name }}</div>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            a:not(:last-child) {\n                border-bottom-width: 1px !important;\n                border-bottom-style: solid !important;\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class HelpTooltipComponent {\n    /** Tiles to display on the help page */\n    public get tiles(): ApplicationLink[] {\n        return this._settings.get('app.help') || [];\n    }\n\n    public readonly close = () => {\n        this._data?.close();\n    };\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationIcon } from 'libs/common/src/lib/types';\n\n@Component({\n    selector: 'app-icon,icon',\n    template: `\n        <div class=\"flex items-center justify-center h-[1.25em] w-[1.25em]\">\n            <i\n                *ngIf=\"!icon || icon.type !== 'img'\"\n                [class]=\"icon?.class || className\"\n            >\n                {{ icon?.content }}\n                <ng-content></ng-content>\n            </i>\n            <img\n                class=\"h-[1em] w-[1em]\"\n                *ngIf=\"icon && icon.type === 'img'\"\n                [src]=\"icon.src | safe: 'resource'\"\n            />\n        </div>\n    `,\n    styles: [\n        `\n            i {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class IconComponent {\n    @Input() public className: string = 'material-icons';\n    /** Icon details */\n    @Input() public icon: ApplicationIcon;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'image-carousel',\n    template: `\n        <div class=\"h-full w-full relative overflow-hidden flex\">\n            <div\n                image\n                class=\"h-full min-w-full relative flex items-center justify-center overflow-hidden\"\n                *ngFor=\"let image of images\"\n                [style.transform]=\"'translateX(-' + offset * 100 + '%)'\"\n            >\n                <img\n                    auth\n                    class=\"h-full object-contain\"\n                    *ngIf=\"image\"\n                    [source]=\"image.url || image\"\n                />\n            </div>\n            <div\n                class=\"h-full w-full relative flex flex-col items-center justify-center opacity-30 space-y-2\"\n                *ngIf=\"!images?.length\"\n            >\n                <app-icon class=\"text-5xl\">image_not_supported</app-icon>\n                <p>No images</p>\n            </div>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute left-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset === 0\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_left</app-icon>\n            </button>\n            <button\n                matRipple\n                *ngIf=\"images?.length\"\n                class=\"opacity-0 hover:opacity-30 flex items-center justify-center absolute right-0 inset-y-0 w-1/3 bg-black/60 text-white\"\n                [disabled]=\"offset >= images?.length - 1\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon class=\"text-4xl\">chevron_right</app-icon>\n            </button>\n            <div\n                class=\"absolute bottom-1 left-1/2 -translate-x-1/2 text-sm opacity-30 space-x-2\"\n                *ngIf=\"images?.length\"\n            >\n                <button\n                    matRipple\n                    [class.!bg-white]=\"offset === i\"\n                    *ngFor=\"let img of images; let i = index\"\n                    class=\"h-4 w-4 rounded-full bg-gray-400 shadow\"\n                ></button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                height: 100%;\n                width: 100%;\n            }\n\n            [image] {\n                transition: transform 300ms;\n            }\n        `,\n    ],\n})\nexport class ImageCarouselComponent {\n    @Input() public images: string[] = [];\n\n    public offset = 0;\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    InjectionToken,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nimport {\n    applyGlobalStyles,\n    createViewer,\n    getViewer,\n    Point,\n    Viewer,\n    removeViewer,\n    updateViewer,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n    listenToViewerChanges,\n} from '@placeos/svg-viewer';\nimport { apiKey, token } from '@placeos/ts-client';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport const MAP_FEATURE_DATA = new InjectionToken<any>(\n    'Data for Map Features'\n);\n\nfunction isSamePoint(p1: Point, p2: Point): boolean {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n@Component({\n    selector: `i-map,interactive-map`,\n    template: `\n        <div\n            #outlet\n            tabindex=\"0\"\n            role=\"map\"\n            class=\"absolute inset-0\"\n            [class.hidden]=\"!src\"\n        ></div>\n        <ng-container *ngIf=\"src; else empty_state\">\n            <mat-spinner\n                *ngIf=\"!viewer || loading\"\n                class=\"absolute\"\n                [diameter]=\"48\"\n            ></mat-spinner>\n        </ng-container>\n        <div hidden *ngIf=\"injectors?.length\">\n            <ng-container\n                *ngFor=\"\n                    let element of features;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <div *ngIf=\"element\">\n                    <div\n                        #feature\n                        class=\"pointer-events-none\"\n                        [attr.no-scale]=\"element.no_scale\"\n                        [attr.el-id]=\"element.location\"\n                        [attr.track-id]=\"element.track_id\"\n                        [attr.view-id]=\"viewer\"\n                        [ngSwitch]=\"type(element.content)\"\n                    >\n                        <ng-container *ngSwitchCase=\"'component'\">\n                            <ng-container\n                                *ngComponentOutlet=\"\n                                    element.content;\n                                    injector: injectors[i]\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"'html'\">\n                            <div [innerHTML]=\"element.content | sanitize\"></div>\n                        </ng-container>\n                        <ng-container *ngSwitchDefault>\n                            <ng-container\n                                *ngTemplateOutlet=\"\n                                    element.content;\n                                    context: element.data\n                                \"\n                            ></ng-container>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex items-center justify-center\">\n                <div class=\"opacity-30\">No map</div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            mat-spinner {\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        `,\n    ],\n})\nexport class InteractiveMapComponent\n    extends AsyncHandler\n    implements AfterViewInit, OnChanges, OnInit, OnDestroy\n{\n    /** URL to the SVG file */\n    @Input() public src: string;\n    /** Custom CSS styles to apply to the SVG file */\n    @Input() public styles: ViewerStyles;\n    /** Zoom level to apply to the SVG */\n    @Input() public zoom = 1;\n    /** Zoom level to apply to the SVG */\n    @Input() public center: Point = { x: 0.5, y: 0.5 };\n    /** List of features to renderer over the SVG */\n    @Input() public features: ViewerFeature[];\n    /** List of labels to renderer over the SVG */\n    @Input() public labels: ViewerLabel[];\n    /** List of available user actions for the SVG */\n    @Input() public actions: ViewAction[];\n\n    @Input() public options: any;\n\n    @Input() public focus: string;\n\n    @Output() public zoomChange = new EventEmitter<number>();\n\n    @Output() public centerChange = new EventEmitter<Point>();\n\n    public loading: boolean;\n\n    public injectors: Injector[] = [];\n\n    public feature_list: ViewerFeature[] = [];\n\n    /** ID of the active SVG Viewer */\n    public viewer: string;\n    /** Observable for changes on the SVG viewer */\n    private _on_changes: BehaviorSubject<Viewer> = new BehaviorSubject(null);\n\n    private _extra_data = {\n        ratio$: this._on_changes.pipe(map((_) => _.ratio)),\n        svg_ratio$: this._on_changes.pipe(map((_) => _.svg_ratio)),\n        zoom$: this._on_changes.pipe(map((_) => _.zoom)),\n        position: this._on_changes.pipe(map((_) => _.center)),\n    };\n\n    @ViewChild('outlet') private _outlet_el: ElementRef<HTMLDivElement>;\n    @ViewChildren('feature') private _feature_list: QueryList<\n        ElementRef<HTMLDivElement>\n    >;\n\n    @HostListener('window:resize') public onResize() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n        this.updateDisplay();\n    }\n\n    public type(\n        content: string | TemplateRef<any> | Type<any>\n    ): 'html' | 'template' | 'component' {\n        return typeof content === 'string'\n            ? 'html'\n            : content instanceof TemplateRef\n            ? 'template'\n            : 'component';\n    }\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    public ngOnInit() {\n        applyGlobalStyles();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.viewer) {\n            removeViewer(this.viewer);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.src && this.src) {\n            this.createView().catch((e) => console.warn(e));\n        }\n        if (changes.features) {\n            this.updateInjectors();\n        }\n        if (this.viewer) {\n            if (changes.focus && this.focus) {\n                this.focusOn(this.focus);\n            } else if (\n                (changes.zoom &&\n                    changes.zoom.previousValue != changes.zoom.currentValue) ||\n                (changes.center &&\n                    !isSamePoint(\n                        changes.center.previousValue,\n                        changes.center.currentValue\n                    ))\n            ) {\n                this.updateDisplay();\n            }\n            if (\n                changes.styles ||\n                changes.features ||\n                changes.labels ||\n                changes.actions\n            ) {\n                this.timeout('update_view', () => this.updateView());\n            }\n        }\n    }\n\n    public ngAfterViewInit() {\n        this.createView().catch((e) => console.warn(e));\n    }\n\n    /** Update overlays, styles and actions of viewer */\n    private updateView() {\n        try {\n            if (!getViewer(this.viewer) || this.loading) {\n                return this.timeout('update_view', () => this.updateView());\n            }\n            this.updateFeatureList();\n            updateViewer(this.viewer, {\n                styles: this.styles,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    /** Update zoom and center position of viewer */\n    private updateDisplay() {\n        try {\n            updateViewer(this.viewer, {\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                desired_center: this.center,\n                options: this.options,\n            });\n        } catch (e) {}\n    }\n\n    private async createView() {\n        if (this.src && this._outlet_el?.nativeElement && !this.loading) {\n            this.loading = true;\n            if (this.viewer) {\n                updateViewer(this.viewer, {\n                    styles: this.styles,\n                    features: [],\n                    labels: this.labels,\n                    actions: this.actions,\n                    options: this.options,\n                });\n                removeViewer(this.viewer);\n            }\n            this.updateFeatureList();\n            const tkn = token();\n            document.cookie = `${\n                tkn === 'x-api-key'\n                    ? 'api-key=' + encodeURIComponent(apiKey())\n                    : 'bearer_token=' + encodeURIComponent(tkn)\n            };max-age=60;path=/api/;samesite=strict;${\n                location.protocol === 'https:' ? 'secure;' : ''\n            }`;\n            this.viewer = await createViewer({\n                element: this._outlet_el?.nativeElement,\n                url: this.src,\n                styles: this.styles,\n                zoom: this.zoom,\n                desired_zoom: this.zoom,\n                center: this.center,\n                features: this.feature_list,\n                labels: this.labels,\n                actions: this.actions,\n                options: this.options,\n            });\n            this.loading = false;\n            this.subscription(\n                'view_changes',\n                listenToViewerChanges(this.viewer)?.subscribe((v) => {\n                    const box =\n                        this._outlet_el.nativeElement.getBoundingClientRect();\n                    this._on_changes.next({ ...v } as any);\n                    this.zoomChange.emit(v.zoom);\n                    this.centerChange.emit(v.center);\n                })\n            );\n            if (this.focus) this.focusOn(this.focus);\n        } else if (\n            (this.src && !this._outlet_el?.nativeElement) ||\n            this.loading\n        ) {\n            this.timeout('create_view', () =>\n                this.createView().catch((e) => console.warn(e))\n            );\n        }\n    }\n\n    private focusOn(id: string) {\n        if (!id || !this.viewer) return;\n        const viewer: Viewer = getViewer(this.viewer);\n        if (!viewer) return;\n        const rect = viewer.mappings[id];\n        if (!rect) return;\n        this.center = {\n            x: 1 - (rect.x + rect.w / 2),\n            y: 1 - (rect.y + rect.h / 4),\n        };\n        this.updateDisplay();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, feature: ViewerFeature) {\n        return feature?.track_id;\n    }\n\n    private updateFeatureList() {\n        this.feature_list = (this.features || [])\n            .map((f, idx) => ({\n                ...f,\n                content: this._feature_list.toArray()[idx]?.nativeElement,\n            }))\n            .filter((f) => f.content);\n    }\n\n    private updateInjectors() {\n        const old_injectors = this.injectors || [];\n        this.injectors = (this.features || []).map(\n            (f: any) =>\n                old_injectors.find(\n                    (_) =>\n                        _.get(MAP_FEATURE_DATA)?.track_id &&\n                        _.get(MAP_FEATURE_DATA)?.track_id === f.track_id\n                ) ||\n                Injector.create({\n                    providers: [\n                        {\n                            provide: MAP_FEATURE_DATA,\n                            useValue: {\n                                track_id: f.track_id,\n                                ...f.data,\n                                ...this._extra_data,\n                            },\n                        },\n                    ],\n                    parent: this._injector,\n                })\n        );\n    }\n}\n","import { Component, Input, Optional, SimpleChanges } from \"@angular/core\";\nimport { CustomTooltipData } from \"./custom-tooltip.component\";\n\n@Component({\n    selector: 'json-display',\n    template: `\n        <div class=\"bg-white dark:bg-neutral-600 shadow rounded overflow-auto max-w-[80vw] max-h-[80vh] p-2\">\n            <pre class=\"font-mono text-sm bg-black/10 p-2\">{{ formatted_json }}</pre>\n        </div>\n    `\n})\nexport class JsonDisplayComponent {\n    @Input() public json: Object;\n\n    public formatted_json: string;\n\n    constructor(@Optional() _data: CustomTooltipData) {\n        this.json = _data?.data || '';\n        this._updateFormatting();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.json) {\n            this._updateFormatting();\n        }\n    }\n\n    private _updateFormatting() {\n        this.formatted_json = JSON.stringify(this.json, undefined, 4);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsService } from '@placeos/common';\nimport { CustomTooltipData } from '@placeos/components';\n\n@Component({\n    selector: 'language-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2  p-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">{{ 'COMMON.LANGUAGE' | translate }}</div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2 p-4\">\n                {{ 'COMMON.LANGUAGE_SELECT' | translate }}\n            </div>\n            <button\n                *ngFor=\"let lang of locales\"\n                class=\"w-full p-4 border-t border-gray-200 dark:border-neutral-500 text-left\"\n                (click)=\"setLocale(lang.id)\"\n            >\n                {{ lang.name }} - {{ lang.flag }}\n            </button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class LanguageSelectComponent {\n    public readonly setLocale = (code: string) => {\n        this._translation.use(code);\n        localStorage.setItem('PLACEOS.locale', code);\n    };\n\n    public get locales() {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _settings: SettingsService,\n        private _translation: TranslateService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\n\n@Pipe({\n    name: 'level',\n})\nexport class LevelPipe implements PipeTransform {\n    constructor(private _org: OrganisationService) {}\n\n    public transform(id: string | string[]): BuildingLevel {\n        return this._org.levelWithID(id instanceof Array ? id : [id]);\n    }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ApplicationIcon, SettingsService } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-login',\n    template: `\n        <div class=\"fixed inset-0 overflow-auto\">\n            <form\n                class=\"flex flex-col items-center overflow-hidden mx-auto my-4 bg-white rounded shadow p-4\"\n            >\n                <div\n                    class=\"flex items-center justify-center\"\n                    [style.background-color]=\"logo?.background\"\n                >\n                    <i *ngIf=\"logo?.type === 'icon'\" [class]=\"logo.class\">\n                        {{ logo.content }}\n                    </i>\n                    <img\n                        *ngIf=\"logo?.type === 'img'\"\n                        [src]=\"logo.src | safe: 'resource'\"\n                    />\n                </div>\n                <div class=\"w-full relative h-1/3 flex-1\">\n                    <ng-container *ngIf=\"!loading; else loading_state\">\n                        <div class=\"flex flex-col\">\n                            <label\n                                for=\"username\"\n                                [class.focused]=\"\n                                    username || focus === 'username'\n                                \"\n                                [class.in-focus]=\"focus === 'username'\"\n                            >\n                                Username\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #username\n                                    formControlName=\"username\"\n                                    (keyup.enter)=\"toPassword()\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"password\">Password</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    #pass_field\n                                    formControlName=\"password\"\n                                    (keyup.enter)=\"login()\"\n                                />\n                                <mat-error\n                                    >Invalid username or password</mat-error\n                                >\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                </div>\n                <div\n                    class=\"flex items-center justify-center w-full\"\n                    *ngIf=\"!loading\"\n                >\n                    <button btn matRipple color=\"primary\" (click)=\"login()\">\n                        Login\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #loading_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"64\"></mat-spinner>\n                <p>Checking user credentials...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                background-color: #f0f0f0;\n                background-image: url(\"data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%23ad1457' fill-opacity='0.2' fill-rule='evenodd'/%3E%3C/svg%3E\");\n            }\n\n            form {\n                width: 20rem;\n                max-width: calc(100vw - 2rem);\n            }\n\n            img {\n                max-height: 3.75rem;\n                max-width: 15rem;\n            }\n        `,\n    ],\n})\nexport class LoginComponent implements OnInit {\n    /** Whether the user credentials are being checked */\n    public loading: boolean;\n\n    public readonly form = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required]),\n    });\n\n    /** Password field element */\n    @ViewChild('pass_field', { static: true })\n    private pwd_field: ElementRef<HTMLInputElement>;\n\n    /** Logo of the application organisation */\n    public get logo(): ApplicationIcon {\n        return this._settings.get('app.logo_dark') || { type: 'icon' };\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public async ngOnInit() {\n        this.loading = true;\n        await this._settings.initialised.pipe(first((_) => _)).toPromise();\n        this.loading = false;\n    }\n\n    /** Focus on the password field */\n    public toPassword() {\n        if (this.pwd_field && this.pwd_field.nativeElement) {\n            this.pwd_field.nativeElement.focus();\n        }\n    }\n\n    /** Perform user login */\n    public login() {\n        this.loading = true;\n        // this._users.login({\n        //     username: this.username,\n        //     password: this.password\n        // }, { form: true }).then(() => {\n        //     this.loading = false;\n        // }, () => {\n        //     this.loading = false;\n        //     this.error = true;\n        // });\n        this.form.setErrors({ password: 'Invalid username or password' });\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewerFeature, ViewerStyles } from '@placeos/svg-viewer';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { MapPinComponent } from './map-pin.component';\n\nexport interface Locatable {\n    id: string;\n    name: string;\n    display_name?: string;\n    map_id: string;\n    level: BuildingLevel;\n    zones?: string[];\n}\n\n@Component({\n    selector: 'map-locate-modal',\n    template: `\n        <div class=\"h-[calc(100vh-4rem)] w-screen sm:h-auto sm:w-auto\">\n            <header class=\"p-4\">\n                <app-icon class=\"text-2xl\">place</app-icon>\n                <h1 class=\"ml-2 text-xl font-medium\">\n                    {{ item.display_name || item.name }}\n                </h1>\n            </header>\n            <div\n                body\n                class=\"relative overflow-hidden h-[65vh] w-full sm:max-h-[65vh]\"\n                *ngIf=\"level\"\n            >\n                <i-map\n                    [src]=\"level.map_id\"\n                    [styles]=\"style_map\"\n                    [features]=\"features\"\n                >\n                    <mat-spinner diameter=\"64\"></mat-spinner>\n                </i-map>\n                <div\n                    class=\"absolute top-2 right-2 py-2 px-4 bg-white rounded-3xl shadow border border-gray-200\"\n                >\n                    {{ level?.display_name || level?.name }}\n                </div>\n            </div>\n            <footer\n                class=\"w-full border-t border-gray-200 flex items-center justify-center p-2\"\n            >\n                <button btn matRipple class=\"inverse w-32\" mat-dialog-close>\n                    Close\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [\n        `\n            [body] {\n                min-width: 80vw !important;\n            }\n        `,\n    ],\n})\nexport class MapLocateModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter();\n    /** Space to show the location of on the map */\n    public item: Locatable = this._data.item;\n    /** Features of the map */\n    public features: ViewerFeature[];\n    /** Mapping of elements to CSS styles */\n    public style_map: ViewerStyles = {};\n\n    public get level(): BuildingLevel {\n        return this.item.level || this._org.levelWithID(this.item.zones || []);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Locatable },\n        private _org: OrganisationService\n    ) {\n        super();\n        if (!this.item.level?.id) {\n            delete this.item.level;\n        }\n    }\n\n    public ngOnInit(): void {\n        this.timeout(\n            'init',\n            () => {\n                this.processFeature();\n                this.processStyles();\n            },\n            1000\n        );\n    }\n\n    public processStyles(): void {\n        const styles: ViewerStyles = {};\n        if (this.item?.map_id) {\n            styles[`#zones`] = { display: 'none' };\n            styles[`#Zones`] = { display: 'none' };\n        }\n        this.style_map = styles;\n    }\n\n    /** Point on map to focus on */\n    public processFeature(): void {\n        if (!this.item) return null;\n        const focus = {\n            location: this.item.map_id,\n            track_id: `focus_item`,\n            content: MapPinComponent,\n            data: {\n                name: this.item.name,\n            },\n            z_index: 99,\n            zoom: 100,\n        };\n        this.features = [focus];\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPinData {\n    message: string;\n    fill: string;\n    stroke: string;\n    action?: () => void;\n}\n\n@Component({\n    selector: '[map-pin]',\n    template: `\n        <div\n            name=\"message\"\n            *ngIf=\"message && show_message\"\n            class=\"p-2 m-2 rounded bg-white text-gray-700 shadow\"\n        >\n            {{ message }}\n        </div>\n        <svg\n            *ngIf=\"show\"\n            name=\"pin\"\n            viewBox=\"0 0 380 560\"\n            [class.action]=\"action\"\n            (click)=\"action()\"\n        >\n            <g>\n                <path\n                    [style.fill]=\"fill\"\n                    [style.stroke]=\"stroke\"\n                    stroke-width=\"25\"\n                    d=\"M182.9,551.7c0,0.1,0.2,0.3,0.2,0.3S358.3,283,358.3,194.6c0-130.1-88.8-186.7-175.4-186.9\n            C96.3,7.9,7.5,64.5,7.5,194.6c0,88.4,175.3,357.4,175.3,357.4S182.9,551.7,182.9,551.7z M122.2,187.2c0-33.6,27.2-60.8,60.8-60.8\n            c33.6,0,60.8,27.2,60.8,60.8S216.5,248,182.9,248C149.4,248,122.2,220.8,122.2,187.2z\"\n                />\n            </g>\n        </svg>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                bottom: 50%;\n                left: 50%;\n                width: 24rem;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                transform: translateX(-50%);\n                z-index: -1;\n            }\n\n            div {\n                animation: fade-in-top 1s;\n            }\n\n            .action {\n                pointer-events: auto;\n            }\n\n            svg {\n                width: 2rem;\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translateY(-100%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapPinComponent implements OnInit {\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#fff';\n    /** Action to perform when clicking pin */\n    public readonly action = this._details.action || null;\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: MapPinData) {}\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n}\n","import { ChangeDetectorRef, Component, Inject, OnInit } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapPolygonData {\n    /** Name of the region */\n    name: string;\n    /** Color to display region in on overlay */\n    color: string;\n    /** Array of points that define the shape of the region */\n    points: [number, number][];\n    /**  */\n    ratio?: number;\n    svg_ratio?: number;\n    zoom_value?: number;\n    ratio$?: Observable<number>;\n    svg_ratio$?: Observable<number>;\n    zoom$?: Observable<number>;\n    data$?: Observable<MapPolygonData>;\n}\n\n@Component({\n    selector: '[map-polygon]',\n    template: `\n        <div\n            polygon\n            class=\"absolute w-full h-full transform -translate-x-1/2 -translate-y-1/2 -top-1 -left-1\"\n            [style.transform]=\"'scale(' + scale * zoom + ')'\"\n        >\n            <div\n                class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n                [style.width]=\"width + '%'\"\n                [style.height]=\"height + '%'\"\n            >\n                <svg\n                    [attr.viewBox]=\"\n                        '0 0 ' +\n                        (this.width / 20 || 1) +\n                        ' ' +\n                        (this.height / 20 || 1)\n                    \"\n                    preserveAspectRatio=\"none\"\n                    class=\"relative w-full h-full\"\n                >\n                    <polygon\n                        [attr.points]=\"points\"\n                        [style.fill]=\"fill\"\n                        [style.stroke]=\"stroke\"\n                    />\n                    <!-- <circle\n                        *ngFor=\"let point of point_list\"\n                        [attr.cx]=\"point[0] || 0\"\n                        [attr.cy]=\"point[1] || 0\"\n                        [attr.r]=\"4\"\n                        [style.stroke]=\"'#000'\"\n                        [style.fill]=\"'#fffd'\"\n                    /> -->\n                </svg>\n            </div>\n        </div>\n        <div\n            text\n            class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-shadow text-white text-xl text-center whitespace-pre-line\"\n        >\n            {{ name }}\n        </div>\n    `,\n    styles: [\n        `\n            [polygon] {\n                will-change: transform;\n            }\n\n            polygon {\n                stroke-width: 2;\n            }\n            circle {\n                stroke-width: 2;\n            }\n\n            [text] {\n                width: 32rem;\n                max-width: 65vw;\n            }\n        `,\n    ],\n})\nexport class MapPolygonComponent extends AsyncHandler implements OnInit {\n    /** Message to display above the pin */\n    public name = this._details.name;\n    /** Fill colour for the pin SVG */\n    public fill = `${this._details.color || '#e53935'}88`;\n    /** Stroke colour for the pin SVG */\n    public stroke = this._details.color || '#e53935';\n    public padding = 32;\n    public width = 1;\n    public height = 1;\n    public readonly svg_scale = 20;\n\n    public get scale() {\n        return this._details.svg_ratio || 1;\n    }\n\n    public get zoom() {\n        return this._details.zoom_value || 1;\n    }\n\n    /** List of points for drawing the polygon */\n    public points = `0,0 0,${this.height} ${this.width},${this.height} ${this.width},0`;\n\n    public point_list: [number, number][] = [];\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapPolygonData,\n        private _cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        if (this._details.data$) {\n            this.subscription(\n                'data',\n                this._details.data$.subscribe((_) => {\n                    this.name = _.name;\n                    this.fill = `${_.color || '#e53935'}88`;\n                    this.stroke = _.color || '#e53935';\n                    this.processPoints(_.points);\n                })\n            );\n        }\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => {\n                this._details.ratio = _;\n                this.processPoints(this._details.points);\n            })\n        );\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe(\n                (_) => (this._details.zoom_value = _)\n            )\n        );\n        this.subscription(\n            'svg_ratio',\n            this._details.svg_ratio$?.subscribe(\n                (_) => (this._details.svg_ratio = _)\n            )\n        );\n        this.processPoints(this._details.points);\n    }\n\n    public processPoints(points: [number, number][]) {\n        const diff: Record<string, number> = points.reduce(\n            (m, [x, y]) => ({\n                x_min: x < m.x_min ? x : m.x_min,\n                x_max: x > m.x_max ? x : m.x_max,\n                y_min: y < m.y_min ? y : m.y_min,\n                y_max: y > m.y_max ? y : m.y_max,\n            }),\n            {\n                x_min: 100,\n                x_max: -100,\n                y_min: 100,\n                y_max: -100,\n            }\n        );\n        const range = {\n            x: diff.x_max - diff.x_min,\n            y: diff.y_max - diff.y_min,\n        };\n        const { ratio } = this._details;\n        this.width = range.x * 100;\n        this.height = range.y * 100 * (ratio || 1);\n        this.width = Math.floor(this.width * 100);\n        this.height = Math.floor(this.height * 100);\n        this.points = points\n            .reduce(\n                (s, [x, y]) =>\n                    `${s}${s ? ' ' : ''}${\n                        (((x - diff.x_min) / range.x) * this.width) / 20\n                    },${(((y - diff.y_min) / range.y) * this.height) / 20}`,\n                ''\n            )\n            .replace(/NaN/g, '0');\n        this.point_list = points.map(([x, y]) => [\n            (((x - diff.x_min) / range.x) * this.width) / 20,\n            (((y - diff.y_min) / range.y) * this.height) / 20,\n        ]);\n        this._cdr.detectChanges();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { MAP_FEATURE_DATA } from './interactive-map.component';\n\nexport interface MapRadiusData {\n    message: string;\n    radius: number;\n    fill: string;\n    stroke: string;\n    last_seen?: number;\n    zoom$: Observable<number>;\n}\n\n@Component({\n    selector: '[map-radius]',\n    template: `\n        <ng-container *ngIf=\"show && radius\" (window:resize)=\"updateRadius()\">\n            <div\n                radius\n                class=\"center border-4 rounded-full border-dashed\"\n                [style.border-color]=\"stroke\"\n                [style.background-color]=\"fill + '40'\"\n                [style.width]=\"radius * zoom + 'px'\"\n                [style.height]=\"radius * zoom + 'px'\"\n            ></div>\n            <div\n                *ngIf=\"message && show_message\"\n                message\n                [style.top]=\"'-' + (radius / 2) * zoom + 'px'\"\n                class=\"p-2 m-2 rounded bg-white text-gray-700 shadow absolute top-0 whitespace-no-wrap flex flex-col w-64\"\n            >\n                {{ message }}\n                <span *ngIf=\"last_seen\" class=\"text-xs\">\n                    Last updated: {{ last_seen_at }}\n                </span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                height: 100%;\n                width: 100%;\n            }\n\n            [message] {\n                transform: translate(-50%, -120%);\n                animation: fade-in-top 1s;\n            }\n\n            @keyframes fade-in-top {\n                0% {\n                    opacity: 0;\n                    transform: translate(-50%, -220%);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translate(-50%, -120%);\n                }\n            }\n        `,\n    ],\n})\nexport class MapRadiusComponent implements OnInit {\n    public zoom = 1;\n    /** Size of the area marked by this component */\n    public radius = this._details.radius || 10;\n    /** Message to display above the pin */\n    public readonly message = this._details.message;\n    /** Fill colour for the pin SVG */\n    public readonly fill = this._details.fill || '#e53935';\n    /** Stroke colour for the pin SVG */\n    public readonly stroke = this._details.stroke || '#e53935';\n\n    public readonly last_seen: number = this._details.last_seen || 0;\n\n    public get last_seen_at() {\n        return formatDistanceToNow(this.last_seen * 1000) + ' ago';\n    }\n\n    public show: boolean;\n    public show_message: boolean;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: MapRadiusData,\n        private _el: ElementRef<HTMLElement>\n    ) {\n        this._details.zoom$?.subscribe((v) =>\n            Math.max(0.5, (this.zoom = v || 1))\n        );\n    }\n\n    public ngOnInit() {\n        setTimeout(() => (this.show = true), 300);\n        setTimeout(() => (this.show_message = true), 1000);\n    }\n\n    public ngAfterViewInit() {\n        this.updateRadius();\n    }\n\n    public updateRadius() {\n        const box = this._el.nativeElement.getBoundingClientRect();\n        if (!box.width) return setTimeout(() => this.updateRadius(), 300);\n        this.radius = Math.max(\n            64,\n            (this._details.radius || 10) * (box.width || 10)\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-misconfigured',\n    template: `\n        <div\n            content\n            class=\"rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h3 class=\"text-2xl\" i18n=\"@@forbiddenLabel\">\n                Application Misconfigured.\n            </h3>\n            <p class=\"py-4\" i18n=\"@@invalidPermissionLabel\">\n                This application requires a zone of type org, building and level\n                to operate.\n            </p>\n            <p i18n=\"@@contactAdminLabel\">\n                If this issue persists please contact your administrator.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            [content] {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                [content] {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class MisconfiguredComponent {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { ApplicationIcon, AsyncHandler } from '@placeos/common';\n\nexport interface PopoutAction extends ApplicationIcon {\n    /** ID of the action */\n    id: string;\n}\n\n@Component({\n    selector: 'a-popout-menu',\n    template: `\n        <button\n            icon\n            matRipple\n            class=\"small absolute text-base center shadow\"\n            *ngFor=\"let item of actions; let i = index\"\n            [style.top]=\"show ? -110 * i - 60 + '%' : ''\"\n            (click)=\"action.emit(item.id); show = false\"\n        >\n            <app-icon [icon]=\"item\"></app-icon>\n        </button>\n        <button\n            name=\"root\"\n            icon\n            matRipple\n            [class.show]=\"show\"\n            (click)=\"show = !show\"\n            (window:click)=\"show ? close() : ''\"\n        >\n            <app-icon>{{ show ? 'add' : 'more_vert' }}</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n\n            app-icon {\n                transition: transform 200ms;\n            }\n\n            button {\n                background-color: #fff;\n                color: rgba(#000, 0.85);\n                font-size: 1.25rem;\n                height: 2.5em;\n                width: 2.5em;\n            }\n\n            button.show app-icon {\n                transform: rotate(45deg);\n            }\n\n            button.small {\n                transition: top 200ms, left 200ms;\n            }\n        `,\n    ],\n})\nexport class PopoutMenuComponent extends AsyncHandler {\n    /** List of available actions */\n    @Input() public actions: PopoutAction[] = [];\n    /** Emitter for user actions */\n    @Output() public action = new EventEmitter<string>();\n    /** Whether actions should show */\n    public show: boolean;\n\n    public close() {\n        this.timeout('close', () => (this.show = false));\n    }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SettingsService } from \"@placeos/common\";\nimport { OrganisationService } from \"libs/organisation/src/lib/organisation.service\";\n\n@Component({\n    selector: 'page-redirect',\n    template: ``,\n    styles: [``]\n})\nexport class RedirectComponent implements OnInit {\n    constructor(private _settings: SettingsService, private _org: OrganisationService, private _router: Router) {}\n\n    public async ngOnInit() {\n        await this._settings.initialised.pipe(first(_ => _)).toPromise();\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        if (!this._settings.get('app.default_route')) return;\n        this._router.navigate(this._settings.get('app.default_route').split('/'));\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { CustomTooltipData } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'region-select',\n    template: `\n        <div\n            class=\"flex flex-col w-[18.5rem] rounded bg-white shadow p-2 relative -top-12 -right-1 dark:bg-neutral-700 dark:text-white overflow-auto max-h-[65vh]\"\n            (click)=\"close()\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <app-icon class=\"text-2xl\">arrow_back</app-icon>\n                <div class=\"\">\n                    {{\n                        (region | async)?.display_name || (region | async)?.name\n                    }}\n                </div>\n            </div>\n            <div class=\"text-xs opacity-60 mb-4 px-2\" i18n>Select a region</div>\n            <mat-radio-group\n                [ngModel]=\"(region | async)?.id\"\n                class=\"flex flex-col space-y-2 px-2\"\n            >\n                <mat-radio-button\n                    *ngFor=\"let item of regions | async\"\n                    [value]=\"item.id\"\n                    (click)=\"setRegion(item)\"\n                >\n                    {{ item.display_name || item.name }}\n                </mat-radio-button>\n            </mat-radio-group>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RegionSelectComponent {\n    public readonly regions = this._org.region_list;\n    public readonly region = this._org.active_region;\n\n    public readonly setRegion = async (i) => {\n        await this._org.setRegion(i);\n        this._org.saveBuilding(this._org.building.id);\n        this._data?.close();\n    };\n\n    public readonly close = () => this._data?.close();\n\n    constructor(\n        @Inject(CustomTooltipData) private _data: any,\n        private _org: OrganisationService\n    ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    /**\n     * Sanitizes the string allowing it to be injected into a template\n     * @param value String to sanitize\n     * @param type Type of value to sanitise. `resource`, `url`, `script`, `style` or `html`\n     */\n    public transform(\n        value: string,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            default:\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle } from '@angular/platform-browser';\n\nenum SecurityContext {\n    NONE = 0,\n    HTML = 1,\n    STYLE = 2,\n    SCRIPT = 3,\n    URL = 4,\n    RESOURCE_URL = 5\n}\n\n@Pipe({\n    name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(\n        value: any,\n        type: 'resource' | 'url' | 'script' | 'style' | 'html' = 'html'\n    ): SafeHtml | SafeResourceUrl | SafeScript | SafeStyle {\n        switch (type) {\n            case 'resource':\n                return this.sanitizer.sanitize(SecurityContext.RESOURCE_URL, value);\n            case 'url':\n                return this.sanitizer.sanitize(SecurityContext.URL, value);\n            case 'script':\n                return this.sanitizer.sanitize(SecurityContext.SCRIPT, value);\n            case 'style':\n                return this.sanitizer.sanitize(SecurityContext.STYLE, value);\n            default:\n                return this.sanitizer.sanitize(SecurityContext.HTML, value);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { ApplicationLink } from '@placeos/common';\n\n@Component({\n    selector: 'status-overlay',\n    template: `\n        <div\n            status-overlay\n            class=\"fixed inset-0 flex flex-col bg-secondary items-center justify-center z-50 text-white\"\n        >\n            <ng-container *ngIf=\"!loading; else load_state\">\n                <div\n                    class=\"text-4xl rounded-full bg-white mb-4\"\n                    [class.text-success]=\"!error\"\n                    [class.text-error]=\"error\"\n                >\n                    <app-icon>{{ error ? 'close' : 'done' }}</app-icon>\n                </div>\n                <div class=\"text-center text-lg mb-4\">\n                    <ng-container *ngIf=\"!error; else error_msg\">\n                        <ng-content></ng-content>\n                    </ng-container>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <a\n                        button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        *ngFor=\"let link of links\"\n                        [routerLink]=\"[link.route]\"\n                    >\n                        {{ link.name }}\n                    </a>\n                </div>\n            </ng-container>\n        </div>\n        <ng-template #error_msg\n            ><p error>{{ error }}</p></ng-template\n        >\n        <ng-template #load_state>\n            <mat-spinner [diameter]=\"32\" class=\"mb-4\"></mat-spinner>\n            <p loading class=\"text-center text-lg\">{{ loading }}</p>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class StatusOverlayComponent {\n    /** Whether overlay is loading */\n    @Input() public loading: string = '';\n    /** Details about any errors that have occurred */\n    @Input() public error: string = '';\n    /** Links to display on success */\n    @Input() public links: ApplicationLink[] = [];\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-unauthorised',\n    template: `\n        <div\n            class=\"unauthorised rounded m-4 text-center bg-white text-black border border-gray-400 p-4 shadow\"\n        >\n            <h1 class=\"text-4xl\">403</h1>\n            <h3 class=\"text-2xl\" i18n>Access forbidden.</h3>\n            <p class=\"py-4\" i18n>\n                You do not have permission to view this page and your access\n                attempt has been recorded.\n            </p>\n            <p i18n>\n                Contact your Administrator if you feel that you should have\n                access.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n\n            .unauthorised {\n                width: 28em;\n                max-width: calc(100vw - 1rem);\n            }\n\n            @media (prefers-color-scheme: dark) {\n                .unauthorised {\n                    background-color: #262626;\n                    color: #fff;\n                }\n            }\n        `,\n    ],\n})\nexport class UnauthorisedComponent {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { UploadPermissions } from '@placeos/common';\n\n@Component({\n    selector: 'upload-permissions-modal',\n    template: `\n        <header>\n            <h2>Upload File</h2>\n            <button btn icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 min-w-[20rem]\">\n            <div class=\"flex flex-col space-y-2\">\n                <label>File Name</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [ngModel]=\"file.name\"\n                        disabled=\"true\"\n                        placeholder=\"File Name\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"pb-4\">\n                <mat-checkbox [(ngModel)]=\"is_public\">Public</mat-checkbox>\n            </div>\n            <div class=\"flex flex-col space-y-2\" *ngIf=\"!is_public\">\n                <label>Permissions</label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"permissions\">\n                        <mat-option value=\"none\">None</mat-option>\n                        <mat-option value=\"support\">Support</mat-option>\n                        <mat-option value=\"admin\">Admin</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end space-x-2 px-4 py-2 border-t border-gray-200\"\n        >\n            <button btn class=\"inverse w-32\" mat-dialog-close>Cancel</button>\n            <button\n                btn\n                class=\"w-32\"\n                [mat-dialog-close]=\"{ file, is_public, permissions }\"\n            >\n                Upload\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class UploadPermissionsModalComponent {\n    /** File to upload */\n    public readonly file: File = this._data.file;\n    /** Whether file should be public */\n    public is_public: boolean = true;\n    /** Permissions for file */\n    public permissions: UploadPermissions = 'none';\n\n    constructor(\n        private _dialog_ref: MatDialogRef<UploadPermissionsModalComponent>,\n        @Inject(MAT_DIALOG_DATA) private _data: { file: File }\n    ) {\n        this.file = this._data.file;\n    }\n\n    public close() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'a-user-avatar',\n    template: `\n        <div\n            class=\"flex items-center justify-center rounded-full overflow-hidden border-2 border-white\"\n            *ngIf=\"user\"\n            [attr.user-id]=\"user.id\"\n        >\n            <div\n                initials\n                class=\"text-white text-opacity-80 uppercase\"\n                *ngIf=\"!user.photo; else image_state\"\n            >\n                {{ initials }}\n            </div>\n        </div>\n        <ng-template #image_state>\n            <img\n                auth\n                class=\"h-full w-full\"\n                [source]=\"user.photo | safe: 'resource'\"\n            />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host > div {\n                height: 2.5em;\n                width: 2.5em;\n                background-color: var(--secondary);\n                overflow: hidden;\n                border: 2px solid white;\n            }\n\n            .initials {\n                font-size: 1em;\n            }\n        `,\n    ],\n})\nexport class UserAvatarComponent {\n    /** User to display avatar for */\n    @Input() public user: User;\n\n    public get initials(): string {\n        if (!this.user) return 'NA';\n        const name = this.user.name || '';\n        const parts = name.replace(/[()[\\]\\-+=\\\\/]+/gi, '').split(' ');\n        return parts.length > 1\n            ? `${parts[0][0]}${parts[parts.length - 1][0]}`\n            : name.slice(0, 2);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    currentUser,\n    hasNewVersion,\n    SettingsService,\n    VERSION,\n} from '@placeos/common';\nimport { ChangelogModalComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { logout } from '@placeos/ts-client';\nimport { WFHSettingsModalComponent } from 'libs/users/src/lib/wfh-settings-modal.component';\nimport { AccessibilityTooltipComponent } from './accessibility-tooltip.component';\nimport { BuildingSelectComponent } from './building-select.component';\nimport { HelpTooltipComponent } from './help-tooltip.component';\nimport { LanguageSelectComponent } from './language-tooltip.component';\nimport { RegionSelectComponent } from './region-select.component';\nimport { SupportTicketModalComponent } from 'libs/form-fields/src/lib/support-ticket-modal.component';\n\nexport interface AppLocale {\n    id: string;\n    name: string;\n    flag: string;\n}\n\n@Component({\n    selector: 'user-controls',\n    template: `\n        <div\n            class=\"rounded bg-white dark:bg-neutral-700 dark:text-white shadow mt-1 flex flex-col relative divide-y divide-gray-300 dark:divide-neutral-500\"\n        >\n            <div avatar class=\"flex flex-col items-center p-2 w-[18rem]\">\n                <a-user-avatar\n                    class=\"text-2xl\"\n                    [user]=\"user\"\n                    [matTooltip]=\"groups\"\n                ></a-user-avatar>\n                <div class=\"\">{{ user?.name }}</div>\n                <div class=\"text-xs opacity-60 truncate\">{{ user?.email }}</div>\n            </div>\n            <div\n                customTooltip\n                *ngIf=\"(regions | async).length\"\n                [content]=\"region_select\"\n                class=\"relative\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>layers</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (region | async)?.display_name ||\n                                    (region | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div customTooltip [content]=\"building_select\" class=\"relative\">\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>business</app-icon>\n                        </div>\n                        <div class=\"flex-1 truncate w-px\">\n                            {{\n                                (building | async)?.display_name ||\n                                    (building | async)?.name\n                            }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\">\n                            chevron_right\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"help_tooltip\"\n                *ngIf=\"features.includes('help')\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>help</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Help & Support</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"features.includes('wfh')\">\n                <button\n                    btn\n                    matRipple\n                    class=\"clear w-full text-left h-[3.5rem]\"\n                    (click)=\"openWfhModal()\"\n                >\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>share_location</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Work Location Settings</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"accessibility_tooltip\"\n                [class.!border-b]=\"!locales?.length\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>Display & Accessibility</div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <div\n                customTooltip\n                [content]=\"language_tooltip\"\n                *ngIf=\"locales?.length\"\n                class=\"!border-b\"\n            >\n                <button btn matRipple class=\"clear w-full text-left h-[3.5rem]\">\n                    <div\n                        class=\"w-full flex items-center space-x-2 dark:text-white\"\n                    >\n                        <div\n                            class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                        >\n                            <app-icon>mode_night</app-icon>\n                        </div>\n                        <div class=\"flex-1\" i18n>\n                            {{ 'COMMON.LANGUAGE_LABEL' | translate }}:\n                            {{ 'COMMON.LANGUAGE' | translate }}\n                        </div>\n                        <app-icon class=\"opacity-60 text-2xl\"\n                            >chevron_right</app-icon\n                        >\n                    </div>\n                </button>\n            </div>\n            <button\n                btn\n                matRipple\n                class=\"clear w-full text-left h-[3.5rem]\"\n                *ngIf=\"features.includes('support-ticket')\"\n                (click)=\"newSupportTicket()\"\n            >\n                <div class=\"w-full flex items-center space-x-2 dark:text-white\">\n                    <div\n                        class=\"flex items-center justify-center rounded-full w-8 h-8 bg-gray-200 dark:bg-neutral-800\"\n                    >\n                        <app-icon>support_agent</app-icon>\n                    </div>\n                    <div class=\"flex-1\" i18n>Raise a support ticket</div>\n                </div>\n            </button>\n            <div class=\"flex flex-col items-center p-4\">\n                <div class=\"flex items-center justify-center space-x-2 mb-4\">\n                    <button\n                        btn\n                        matRipple\n                        i18n\n                        class=\"inverse\"\n                        (click)=\"logout()\"\n                    >\n                        Sign Out\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"has_new_version\"\n                        (click)=\"reloadPage()\"\n                    >\n                        New Version\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    <ng-container i18n>Version: </ng-container>\n                    <button\n                        class=\"underline p-0 m-0 bg-none border-none text-xs\"\n                        (click)=\"viewChangelog()\"\n                    >\n                        {{ version.hash }}\n                    </button>\n                </div>\n                <div class=\"text-xs opacity-60 w-full\">\n                    {{ version.time | date: 'longDate' }}\n                    ({{ version.time | date: 'shortTime' }})\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class UserControlsComponent {\n    public readonly building = this._org.active_building;\n    public readonly region = this._org.active_region;\n    public readonly regions = this._org.region_list;\n\n    public readonly region_select = RegionSelectComponent;\n    public readonly building_select = BuildingSelectComponent;\n    public readonly help_tooltip = HelpTooltipComponent;\n    public readonly accessibility_tooltip = AccessibilityTooltipComponent;\n    public readonly language_tooltip = LanguageSelectComponent;\n\n    public get user() {\n        return currentUser();\n    }\n\n    public get groups() {\n        return this.user.groups.join('\\n');\n    }\n\n    public get version() {\n        return VERSION;\n    }\n\n    public get features(): string[] {\n        return this._settings.get('app.features') || [];\n    }\n\n    public get locales(): [] {\n        return this._settings.get('app.locales') || [];\n    }\n\n    public get has_new_version() {\n        return hasNewVersion();\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public logout() {\n        logout();\n    }\n\n    public reloadPage() {\n        location.reload();\n    }\n\n    public newSupportTicket() {\n        if (this._settings.get('app.external_support_url')) {\n            window.open(\n                this._settings.get('app.external_support_url'),\n                '_blank'\n            );\n        } else {\n            this._dialog.open(SupportTicketModalComponent);\n        }\n    }\n\n    public openWfhModal() {\n        this._dialog.open(WFHSettingsModalComponent);\n    }\n\n    public async viewChangelog() {\n        const changelog = await (\n            await fetch(\n                'https://raw.githubusercontent.com/PlaceOS/user-interfaces/develop/CHANGELOG.md'\n            )\n        ).text();\n        this._dialog.open(ChangelogModalComponent, { data: { changelog } });\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    OnDestroy,\n    ViewChild,\n} from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\n\nconst DEFAULT_KEYS = [\n    '0123456789'.split(''),\n    'qwertyuiop'.split(''),\n    'asdfghjkl'.split(''),\n    'zxcvbnm'.split(''),\n    ['{caps}', '{space}', '{backspace}'],\n];\n\n@Component({\n    selector: 'input[keyboard],textarea[keyboard]',\n    template: `\n        <ng-content></ng-content>\n        <ng-template cdk-portal>\n            <div\n                keyboard-view\n                class=\"w-screen flex flex-col space-y-4 bg-gray-200 p-2 border-t border-gray-400\"\n            >\n                <div\n                    row\n                    class=\"flex items-center justify-center space-x-2\"\n                    *ngFor=\"let row of keyset\"\n                >\n                    <ng-container *ngFor=\"let key of row\">\n                        <div\n                            [attr.key]=\"key\"\n                            tabindex=\"0\"\n                            class=\"rounded-xl p-2 border border-gray-300 relative cursor-pointer bg-white\"\n                            [class.special]=\"key[0] === '{' && key.length > 1\"\n                            [class.space]=\"key === '{space}'\"\n                            (focus)=\"focusInput()\"\n                            (click)=\"handleKeyPress(key)\"\n                        >\n                            {{\n                                key === '{space}'\n                                    ? 'Space'\n                                    : key === '{caps}'\n                                    ? 'Caps Lock'\n                                    : key === '{backspace}'\n                                    ? 'Backspace'\n                                    : key\n                            }}\n                            <div\n                                *ngIf=\"key === '{caps}'\"\n                                dot\n                                class=\"absolute top-2 right-2 h-2 w-2 rounded-full bg-gray-300\"\n                                [class.bg-success]=\"state === 'shift'\"\n                            ></div>\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [key] {\n                height: 3.5rem;\n                width: 4rem;\n                transition: box-shadow 200ms, top 200ms;\n                box-shadow: 0 4px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key].special {\n                width: 10rem;\n            }\n\n            [key].space {\n                flex: 1;\n                min-width: 10rem;\n                max-width: 25rem;\n            }\n\n            [key]:hover {\n                top: 2px;\n                box-shadow: 0 2px 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n\n            [key]:active {\n                top: 4px;\n                box-shadow: 0 0 0 0.04px rgba(0, 0, 0, 0.1);\n            }\n        `,\n    ],\n})\nexport class VirtualKeyboardComponent\n    extends AsyncHandler\n    implements OnDestroy\n{\n    /** Whether virtual keyboard should activate */\n    public static enabled: boolean;\n    /** List of rows of keys to display on the keyboard */\n    @Input() public keyset = DEFAULT_KEYS;\n    /** Current state of the displayed keyset */\n    public state: 'normal' | 'caps' | 'shift' = 'normal';\n    /** References to the overlay containing the keyboard */\n    private _overlay_ref: OverlayRef = null;\n    /** Portal with the keyboard contents */\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n\n    @HostListener('focus') public onFocus = () => {\n        if (!VirtualKeyboardComponent.enabled) return;\n        this.open();\n        this.clearTimeout('blur');\n    };\n    @HostListener('blur') public onBlur = () =>\n        this.timeout('blur', () => this.close());\n\n    constructor(\n        private _element: ElementRef<HTMLInputElement | HTMLTextAreaElement>,\n        private _overlay: Overlay\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.close();\n    }\n\n    public focusInput() {\n        this._element?.nativeElement?.blur();\n        this._element?.nativeElement?.focus();\n    }\n\n    public open() {\n        if (this._overlay_ref) return;\n        if (!this._portal) return;\n        this._overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .global()\n                .bottom()\n                .centerHorizontally(),\n        });\n        this._overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this._overlay_ref) {\n            this._overlay_ref.dispose();\n            this._overlay_ref = null;\n        }\n    }\n\n    public handleKeyPress(key: string) {\n        let cursor_pos = this._element.nativeElement.selectionStart;\n        const str = this._element.nativeElement.value || '';\n        switch (key.toLowerCase()) {\n            case '{caps}':\n            case '{shift}':\n                this.state = 'shift';\n                break;\n            case '{backspace}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos - 1\n                )}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos = Math.max(0, cursor_pos - 1);\n                break;\n            case '{space}':\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${' '}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n                break;\n            default:\n                if (this.state === 'shift') this.state = 'normal';\n                this._element.nativeElement.value = `${str.substr(\n                    0,\n                    cursor_pos\n                )}${key}${str.substr(cursor_pos, str.length)}`;\n                cursor_pos += 1;\n        }\n        this._element.nativeElement.dispatchEvent(new InputEvent('input'));\n        this.updateKeyState();\n        this.timeout(\n            'focus',\n            () => {\n                this.focusInput();\n                this._element.nativeElement.selectionStart = cursor_pos;\n                this._element.nativeElement.selectionEnd = cursor_pos;\n            },\n            50\n        );\n    }\n\n    public updateKeyState() {\n        this.keyset = this.keyset.map((_) =>\n            _.map((k) =>\n                k.length > 1\n                    ? k\n                    : k[\n                          this.state !== 'normal'\n                              ? 'toUpperCase'\n                              : 'toLowerCase'\n                      ]()\n            )\n        );\n    }\n}\n","export * from './lib/events';\nexport * from './lib/events.module';\nexport * from './lib/event-details-modal.component';\nexport * from './lib/event-card.component';\nexport * from './lib/setup-breakdown-modal.component';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'attendee-list',\n    template: `\n        <div\n            class=\"w-full h-full overflow-hidden flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <div\n                class=\"flex items-center border-b border-gray-200 dark:border-neutral-500 p-2\"\n            >\n                <button close icon matRipple (click)=\"close.emit()\">\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <div class=\"flex-1 text-center pr-12 font-medium\" i18n>\n                    {{ list.length }} { list.length, plural, =1 { Attendee }\n                    other { Attendees } }\n                </div>\n            </div>\n            <div class=\"flex-1 w-full overflow-auto\">\n                <div\n                    attendee\n                    class=\"flex items-center p-2 space-x-2\"\n                    *ngFor=\"let user of list\"\n                >\n                    <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    <div class=\"\">\n                        <div>{{ user.name }}</div>\n                        <div class=\"opacity-60\">\n                            <span *ngIf=\"host === user.email\" i18n>Host</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class AttendeeListComponent {\n    @Input() public host: string = '';\n    @Input() public list: any[] = [];\n    @Output() public close = new EventEmitter();\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'event-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"event\" date>\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ event?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ event?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-event-details\"\n            class=\"w-full cursor-pointer relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ event: event?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"event\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ event?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            event.state !== 'done' &&\n                            event?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"event.state === 'done'\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"event.state === 'done'\"\n                        >\n                            <app-icon>\n                                {{\n                                    event.state === 'done'\n                                        ? 'not_interested'\n                                        : event?.status === 'approved'\n                                        ? 'done'\n                                        : event?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>meeting_room</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ location }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>person_outline</app-icon>\n                        <div class=\"mx-2\">\n                            {{\n                                event?.organiser?.name ||\n                                    event?.organiser?.email\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-4\"\n                        *ngIf=\"event?.ext('catering')?.length\"\n                    >\n                        <app-icon>restaurant</app-icon>\n                        <div class=\"mx-2\">Catered</div>\n                    </div>\n                    <div class=\"flex items-center px-4\">\n                        <app-icon>people</app-icon>\n                        <div class=\"mx-2\">\n                            {{ event?.attendees?.length }}\n                            {{\n                                event?.attendees?.length === 1\n                                    ? 'Person'\n                                    : 'People'\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute bottom-2 right-2 sm:bottom-auto sm:top-2 text-sm sm:text-base flex items-center pr-4\"\n                    *ngIf=\"event?.attendees?.length\"\n                >\n                    <div\n                        class=\"h-10 w-6\"\n                        *ngFor=\"\n                            let user of event?.attendees\n                                | slice\n                                    : 0\n                                    : (event?.attendees?.length === 6 ? 6 : 5)\n                        \"\n                    >\n                        <a-user-avatar [user]=\"user\"></a-user-avatar>\n                    </div>\n                    <div class=\"h-10 w-6\" *ngIf=\"event?.attendees?.length > 6\">\n                        <div\n                            class=\"bg-secondary rounded-full h-10 w-10 border-2 border-white flex items-center justify-center text-white\"\n                        >\n                            +{{ event?.attendees?.length - 5 }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class EventCardComponent extends AsyncHandler {\n    @Input() public event: CalendarEvent;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public location = '';\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('event') && this.event?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n        this.location = await this.getLocationString();\n    }\n\n    public async ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            this.location = await this.getLocationString();\n        }\n    }\n\n    public get day() {\n        const date = this.event?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public async getLocationString() {\n        const system =\n            this.event?.resources[0] ||\n            this.event?.system ||\n            this.event?.space ||\n            ({} as any);\n        const space = await this._space_pipe.transform(\n            system.id || system.email\n        );\n        const zone_list = space?.zones || [];\n        const zone =\n            this._org.levelWithID(zone_list) ||\n            this._org.buildings.find((_) => zone_list.includes(_.id));\n        return `${zone ? (zone.display_name || zone.name) + ', ' : ''} ${\n            space?.display_name || space?.name\n        }`;\n    }\n\n    public get period() {\n        if (this.event?.is_all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.event) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(EventDetailsModalComponent, {\n                data: this.event,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe((_) =>\n                    this.remove.emit(_)\n                )\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addMinutes, format, formatDuration, getUnixTime } from 'date-fns';\n\nimport { CalendarEvent } from './event.class';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { getModule } from '@placeos/ts-client';\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\n\nconst EMPTY_ACTIONS = [];\n\n@Component({\n    selector: 'event-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <i\n                    binding\n                    [(model)]=\"room_status\"\n                    [sys]=\"space?.id\"\n                    mod=\"Bookings\"\n                    bind=\"status\"\n                ></i>\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!event?.system?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"event?.system?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"event?.system?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!event?.system?.images?.length\"\n                >\n                    {{ event.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                event.state !== 'done' &&\n                                event?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"event.state === 'done'\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    event.state !== 'done' &&\n                                    event?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"\n                                    event.state === 'done'\n                                \"\n                            >\n                                <app-icon>\n                                    {{\n                                        event.state === 'done'\n                                            ? 'not_interested'\n                                            : event?.status === 'approved'\n                                            ? 'done'\n                                            : event?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"event.state !== 'done'\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10\"\n                            *ngIf=\"\n                                room_status &&\n                                event?.can_check_in &&\n                                room_status !== 'free'\n                            \"\n                            [class.bg-green-600]=\"room_status !== 'pending'\"\n                            [class.border-none]=\"room_status !== 'pending'\"\n                            [class.pointer-events-none]=\"\n                                room_status !== 'pending'\n                            \"\n                            (click)=\"checkin()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                            >\n                                <app-icon>{{\n                                    room_status === 'pending'\n                                        ? 'arrow_back'\n                                        : 'done'\n                                }}</app-icon>\n                                <div class=\"mr-4\" i18n>\n                                    {{\n                                        room_status === 'pending'\n                                            ? 'Check in'\n                                            : 'Checked in'\n                                    }}\n                                </div>\n                            </div>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                            *ngIf=\"allow_edit\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem] space-y-2\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ event.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            <ng-container *ngIf=\"level\">\n                                {{ level?.display_name || level?.name }},\n                            </ng-container>\n                            {{\n                                event?.system?.display_name ||\n                                    event?.system?.name ||\n                                    event?.location\n                            }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex items-center px-2 space-x-2\"\n                        *ngIf=\"building\"\n                    >\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }},\n                            {{ building?.address }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <div\n                        class=\"mx-3 border-t border-gray-300 sm:border-none dark:border-neutral-500 flex items-center justify-between\"\n                    >\n                        <h3 class=\"text-lg font-medium\" i18n>Attendees</h3>\n                        <button\n                            matRipple\n                            show-attendees\n                            class=\"clear text-xs underline\"\n                            (click)=\"show_attendees = true\"\n                            i18n\n                        >\n                            See All\n                        </button>\n                    </div>\n                    <div class=\"flex items-center p-1\">\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ accept_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Yes</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ declined_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>No</div>\n                        </div>\n                        <div\n                            class=\"flex flex-col flex-1 items-center justify-center space-y-1\"\n                        >\n                            <div class=\"text-lg\">{{ pending_count || 0 }}</div>\n                            <div class=\"text-sm uppercase\" i18n>Pending</div>\n                        </div>\n                    </div>\n                    <h3\n                        class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Host\n                    </h3>\n                    <div class=\"px-2 flex items-center space-x-2\" host>\n                        <a-user-avatar [user]=\"event.organiser\"></a-user-avatar>\n                        <div class=\"text-sm flex-1 w-px\">\n                            <div>{{ event.organiser?.name }}</div>\n                            <div\n                                class=\"opacity-60 truncate w-full\"\n                                [title]=\"event.host\"\n                            >\n                                {{ event.host }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_catering\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 mt-2 pt-2 text-lg font-medium border-t border-gray-300 dark:border-neutral-500\"\n                            i18n\n                        >\n                            Catering\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                catering-item\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.ext('catering')[0].items\n                                \"\n                            >\n                                <div\n                                    count\n                                    class=\"flex items-center justify-center h-6 w-6 rounded-full bg-gray-200 text-sm font-medium\"\n                                >\n                                    {{ item.quantity }}\n                                </div>\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">{{ item.name }}</div>\n                                    <div\n                                        class=\"text-xs opacity-40\"\n                                        *ngFor=\"let opt of item.options\"\n                                    >\n                                        {{ opt.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:mt-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white sm:dark:bg-neutral-700 m-2 flex-grow-[3] min-w-1/3 p-2 w-[calc(100%-1rem)] sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n                <div\n                    class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    *ngIf=\"event.body\"\n                >\n                    <h3\n                        class=\"mx-3 text-lg font-medium border-t sm:border-none border-gray-300 dark:border-neutral-500\"\n                        i18n\n                    >\n                        Notes\n                    </h3>\n                    <div\n                        notes\n                        class=\"mx-4 overflow-hidden max-w-full\"\n                        *ngIf=\"event.body\"\n                        [innerHTML]=\"\n                            (event.body | sanitize) ||\n                            'Unable to sanitize notes contents'\n                        \"\n                    ></div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3\n                            class=\"mx-3 pt-2 text-lg font-medium dark:border-neutral-500\"\n                            i18n\n                        >\n                            Assets ({{\n                                event.extension_data.assets?.length || 0\n                            }})\n                        </h3>\n                        <div class=\"flex flex-col px-4 space-y-2\">\n                            <div\n                                asset\n                                class=\"flex space-x-2\"\n                                *ngFor=\"\n                                    let item of event.extension_data.assets ||\n                                        []\n                                \"\n                            >\n                                <div details class=\"pt-0.5\">\n                                    <div class=\"text-sm\">\n                                        {{ item.name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-2 left-2 bg-black/30 text-white\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <div class=\"absolute inset-0 z-50\" *ngIf=\"show_attendees\">\n                    <attendee-list\n                        [list]=\"event.attendees\"\n                        [host]=\"event.host\"\n                        (click)=\"show_attendees = false\"\n                    ></attendee-list>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button\n                    mat-menu-item\n                    mat-dialog-close\n                    (click)=\"edit.emit(space)\"\n                    *ngIf=\"!hide_edit\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>edit</app-icon>\n                        <div i18n>Edit event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"remove.emit()\">\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete event</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngIf=\"event.recurring_event_id\"\n                    (click)=\"remove.emit(true)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>delete</app-icon>\n                        <div i18n>Delete Series</div>\n                    </div>\n                </button>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let act of custom_actions\"\n                    (click)=\"action.emit(act.id)\"\n                >\n                    <div class=\"flex items-center space-x-2 text-base\">\n                        <app-icon>{{ act.icon }}</app-icon>\n                        <div i18n>{{ act.name }}</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class EventDetailsModalComponent {\n    @Output() public action = new EventEmitter();\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n\n    public room_status = '';\n    public hide_map = false;\n    public hide_edit = false;\n    public show_attendees: boolean = false;\n    public readonly event = this._event;\n    public features = [\n        {\n            location: this.event?.system?.map_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public readonly has_catering = this.event?.ext('catering')?.length > 0;\n    public readonly has_assets = !!this.event?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public level: BuildingLevel = new BuildingLevel();\n    public building: Building = new Building();\n    public space: Space = new Space();\n\n    public accept_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'accepted' ? 1 : 0),\n        0\n    );\n    public declined_count = this._event.attendees.reduce(\n        (count, user) => (count += user.response_status === 'declined' ? 1 : 0),\n        0\n    );\n    public pending_count = this._event.attendees.reduce(\n        (count, user) =>\n            (count +=\n                user.response_status === 'tentative' ||\n                user.response_status === 'needsAction'\n                    ? 1\n                    : 0),\n        0\n    );\n\n    public get allow_edit() {\n        return !this._settings.get('app.events.booking_unavailable');\n    }\n\n    public get custom_actions(): [string, string][] {\n        return this._settings.get('app.events.custom_actions') || EMPTY_ACTIONS;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        this._load().then();\n    }\n\n    public get period() {\n        if (this.event?.is_all_day) return 'All Day';\n        const start = this.event?.date || Date.now();\n        const duration = this.event?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async checkin() {\n        const mod = getModule(this.space?.id, 'Bookings');\n        if (!mod) return;\n        await mod\n            .execute('checkin', [getUnixTime(this.event.date)])\n            .catch((e) => notifyError(`Error checking in booking. ${e}`));\n        this.room_status = 'busy';\n    }\n\n    private async _load() {\n        this.space = await this._space_pipe.transform(\n            this._event.system?.id || this._event.system?.email\n        );\n        this.level = this._org.levelWithID(this.space.zones);\n        this.building = this._org.buildings.find((bld) =>\n            this.space.zones.includes(bld.id)\n        );\n        this.features = [\n            {\n                location: this.space.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { addMinutes, differenceInDays, getUnixTime } from 'date-fns';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    ResourceRestriction,\n    SettingsService,\n    unique,\n} from '@placeos/common';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    queryResourceAvailability,\n    saveBooking,\n} from 'libs/bookings/src/lib/bookings.fn';\nimport { CalendarEvent } from './event.class';\nimport { querySpaceAvailability, saveEvent, showEvent } from './events.fn';\nimport { generateEventForm, newCalendarEventFromBooking } from './utilities';\nimport { newBookingFromCalendarEvent } from 'libs/bookings/src/lib/booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { requestSpacesForZone } from 'libs/spaces/src/lib/space.utilities';\nimport { periodInFreeTimeSlot } from './helpers';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { Validators } from '@angular/forms';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { filterSpacesFromRules } from './helpers';\nimport {\n    assetsToGroups,\n    groupsToAssets,\n} from 'libs/assets/src/lib/asset.utilities';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\nimport { removeEvent } from './events.fn';\nimport { querySpaceFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\n\nconst BOOKING_URLS = [\n    'book/rooms',\n    'book/spaces',\n    'book/meeting',\n    'schedule/view',\n    'confirm/success',\n    'upcoming',\n];\n\nconst MINUTES = 60 * 1000;\n\nexport type EventFlowView =\n    | 'form'\n    | 'find'\n    | 'catering'\n    | 'confirm'\n    | 'success';\n\nexport interface EventFlowOptions {\n    /** Calendar to associate event with */\n    calendar_id?: string;\n    /** List of features to filter spaces on */\n    features: string[];\n    /** List of zones to filter spaces on */\n    zone_ids?: string[];\n    /** Minimum number of attendees to filter space on */\n    capacity?: number;\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<EventFlowView>('form');\n    private _options = new BehaviorSubject<EventFlowOptions>({\n        zone_ids: [],\n        features: [],\n    });\n    private _form = generateEventForm();\n    private _date = new BehaviorSubject(Date.now());\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    private _loading = new BehaviorSubject<string>('');\n    private _space_pipe: SpacePipe;\n\n    public last_success: CalendarEvent = new CalendarEvent(\n        JSON.parse(sessionStorage.getItem('PLACEOS.last_booked_event') || '{}')\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.asObservable();\n\n    public readonly restrictions: Observable<ResourceRestriction[]> =\n        this.options.pipe(\n            switchMap(() => {\n                return showMetadata(\n                    this._org.building.id,\n                    `room_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly spaces: Observable<Space[]> = combineLatest([\n        this._options.pipe(distinctUntilKeyChanged('zone_ids')),\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n    ]).pipe(\n        debounceTime(300),\n        tap((_) => this.unsubWith('bind:')),\n        switchMap(([{ zone_ids }]) => {\n            this._loading.next('Loading space list for location...');\n            if (!zone_ids?.length) zone_ids = [this._org.building?.id];\n            return forkJoin(\n                zone_ids.map((id) =>\n                    requestSpacesForZone(id).pipe(catchError(() => of([])))\n                )\n            );\n        }),\n        map((l) => flatten(l)),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly features = this.spaces.pipe(\n        map((l) => unique(flatten(l.map((_) => _.features))))\n    );\n\n    public readonly filtered_spaces = combineLatest([\n        this.spaces,\n        this.options,\n    ]).pipe(\n        map(([spaces, { show_fav, features, capacity }]) =>\n            spaces\n                .filter((s: Space) => {\n                    const domain = (currentUser()?.email || '@').split('@')[1];\n                    const zone = (this._settings.get(\n                        'app.events.restrict_spaces'\n                    ) || {})[domain];\n                    const limit_map =\n                        this._settings.get('app.events.limit_spaces') || {};\n                    const limited_zones = Object.keys(limit_map);\n                    const zone_limit = s.zones.find((_) =>\n                        limited_zones.includes(_)\n                    );\n                    return (\n                        s.bookable &&\n                        (!zone || s.zones.includes(zone)) &&\n                        (!zone_limit || limit_map[zone_limit] === domain) &&\n                        (!show_fav || this.favorite_spaces.includes(s.id)) &&\n                        features.every((f) => s.features.includes(f)) &&\n                        s.capacity >= Math.max(0, capacity || 0)\n                    );\n                })\n                .slice(0, Math.min(100, spaces.length))\n        ),\n        shareReplay(1)\n    );\n\n    private _space_bookings = combineLatest([\n        this.spaces,\n        this.filtered_spaces,\n    ]).pipe(\n        distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n        switchMap(([_, list]) => {\n            return combineLatest(\n                (list || []).map((_) => {\n                    const binding = getModule(_.id, 'Bookings').binding(\n                        'bookings'\n                    );\n                    const obs = binding\n                        .listen()\n                        .pipe(\n                            map((_) =>\n                                (_ || []).map((i) => new CalendarEvent(i))\n                            )\n                        );\n                    if (!this.hasSubscription(`bind:${_.id}`)) {\n                        this.subscription(`bind:${_.id}`, binding.bind());\n                    }\n                    return obs;\n                })\n            );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly current_available_spaces = combineLatest([\n        this.filtered_spaces,\n        this._space_bookings,\n        this.restrictions,\n        merge(this.form.valueChanges, timer(1000)),\n    ]).pipe(\n        map(([list, bookings, restrictions]) => {\n            this._loading.next('Updating available spaces...');\n            let { date, duration } = this._form.getRawValue();\n            let start = date;\n            let end = addMinutes(date, duration).valueOf();\n            list = filterSpacesFromRules(\n                list,\n                { date, duration, space: null, host: currentUser() },\n                this._org.building.booking_rules\n            );\n            return (list || [])\n                .filter((space, idx) => {\n                    const restriction_list = restrictions.filter((_) =>\n                        _.items.includes(space.id)\n                    );\n                    const is_restricted = restriction_list.find(\n                        (rest) =>\n                            (start >= rest.start && start < rest.end) ||\n                            (end <= rest.end && end > rest.start)\n                    );\n                    return (\n                        !is_restricted &&\n                        periodInFreeTimeSlot(\n                            date,\n                            date + duration * MINUTES,\n                            bookings[idx] || []\n                        )\n                    );\n                })\n                .sort((a, b) => a.capacity - b.capacity);\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly future_available_spaces: Observable<Space[]> =\n        combineLatest([this.filtered_spaces]).pipe(\n            filter(() => !this._loading.getValue()),\n            debounceTime(300),\n            switchMap(([spaces]) => {\n                if (!spaces.length) return of([]);\n                this._loading.next('Retrieving available spaces...');\n                let { date, duration } = this._form.getRawValue();\n                const availability_method = this.has_calendar\n                    ? querySpaceAvailability\n                    : queryResourceAvailability;\n                spaces = filterSpacesFromRules(\n                    spaces,\n                    { date, duration, space: null, host: currentUser() },\n                    this._org.building.booking_rules\n                );\n                return availability_method(\n                    spaces.map(({ id }) => id),\n                    date,\n                    duration,\n                    this.event?.id || undefined\n                ).pipe(\n                    map((availability) => {\n                        var list = spaces.filter((_, i) => availability[i]);\n                        list = filterSpacesFromRules(\n                            list,\n                            {\n                                date,\n                                duration,\n                                space: null,\n                                host: currentUser(),\n                            },\n                            this._org.building.booking_rules\n                        );\n                        return list;\n                    }),\n                    catchError((_) => [])\n                );\n            }),\n            tap((_) => this._loading.next('')),\n            shareReplay(1)\n        );\n\n    public readonly available_spaces = this._date.pipe(\n        switchMap((d) => {\n            const diff = Math.abs(differenceInDays(d, Date.now()));\n            return diff <\n                (this._settings.get('app.events.cache_duration_in_days') || 14)\n                ? this.current_available_spaces\n                : this.future_available_spaces;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n    public get form() {\n        return this._form;\n    }\n    public get event() {\n        return this._event.getValue();\n    }\n\n    public get favorite_spaces() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    public get has_calendar() {\n        return this._settings.get('app.events.use_bookings') !== true;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _router: Router,\n        private _payments: PaymentsService,\n        private _settings: SettingsService,\n        private _assets: AssetStateService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this._space_pipe = new SpacePipe(this._org);\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((event: Event) => {\n                if (\n                    event instanceof NavigationEnd &&\n                    !BOOKING_URLS.some((_) => event.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this.subscription(\n            'form_change',\n            this._form.valueChanges.subscribe(({ date, catering, assets }) => {\n                this._assets.setOptions({\n                    date: this.form.value.date,\n                    duration: this.form.value.duration,\n                });\n                if (date && date !== this._date.getValue())\n                    this._date.next(date);\n                this.storeForm();\n            })\n        );\n        let count = 0;\n        this.interval(\n            'catering',\n            () => {\n                const catering = this._form.value.catering;\n                if (count === catering?.length) return;\n                count = catering?.length;\n                if (\n                    catering?.length &&\n                    (this._settings.get('app.events.catering_notes_required') ||\n                        this._settings.value('require_catering_notes'))\n                ) {\n                    this._form\n                        .get('catering_notes')\n                        ?.setValidators([Validators.required]);\n                    this._form\n                        .get('catering_notes')\n                        .patchValue(this._form.value.catering_notes);\n                } else {\n                    this._form.get('catering_notes')?.clearValidators();\n                    this._form.get('catering_notes').setErrors(null);\n                }\n                this._form.updateValueAndValidity();\n            },\n            500\n        );\n    }\n\n    public listenForStatusChanges() {\n        this.subscription('status:rooms', this.available_spaces.subscribe());\n    }\n\n    public setView(value: EventFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<EventFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public async newForm(event: CalendarEvent = new CalendarEvent()) {\n        this._event.next(event);\n        if (event.recurring_event_id) {\n            const master = await showEvent(\n                event.recurring_event_id\n            ).toPromise();\n            (this._event.getValue() as any).recurrence = {\n                ...master.recurrence,\n                _pattern: master.recurrence.pattern,\n            };\n        }\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        for (const idx in event.resources) {\n            const space = event.resources[idx];\n            event.resources[idx] = await this._space_pipe.transform(\n                space.id || space.email\n            );\n        }\n        this._date.next(event.date);\n        this.resetForm();\n    }\n\n    public resetForm() {\n        this._form.reset();\n        const event =\n            this._event.getValue() ||\n            ({ extension_data: {} } as Partial<CalendarEvent>);\n\n        this._assets.setOptions({\n            ignore: event.extension_data.assets?.map((_) => _.id),\n        });\n        const has_catering = !!event.extension_data.catering[0];\n        this._form.patchValue({\n            ...event.extension_data,\n            ...event,\n            host: event?.host || currentUser().email,\n            organiser:\n                event?.organiser ||\n                currentUser() ||\n                new User({ email: event?.host }),\n            catering: event.extension_data.catering[0]?.items || [],\n            catering_charge_code:\n                event.extension_data.catering[0]?.charge_code ||\n                (event.id && has_catering ? ' ' : ''),\n            assets: assetsToGroups(event.extension_data.assets || []),\n        });\n        this._options.next({ features: [] });\n        this.storeForm();\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.event_form');\n        this.unsubWith('status:');\n        this.unsubWith('bind:');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.event_form',\n            JSON.stringify(this._form.getRawValue() || {})\n        );\n    }\n\n    public loadForm() {\n        const form_data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.event_form') || '{}'\n        );\n        this._form.patchValue({\n            ...form_data,\n            assets:\n                (form_data.assets?.length && form_data.assets[0].type_id\n                    ? assetsToGroups(form_data.assets)\n                    : form_data.assets) || [],\n        });\n    }\n\n    public readonly cancelPostForm = () => this.unsub('post-event-form');\n\n    public openEventLinkModal(force: boolean = false) {\n        const form = this._form;\n        form.markAllAsTouched();\n        if (!form.valid && !force) return;\n        const event = new CalendarEvent({ ...form.getRawValue(), assets: [] });\n        const ref = this._dialog.open(EventLinkModalComponent, { data: event });\n        ref.afterClosed().subscribe((d) =>\n            d ? this._router.navigate(['/']) : ''\n        );\n    }\n\n    public postForm(force: boolean = false) {\n        return new Promise<CalendarEvent>(async (resolve, reject) => {\n            this._loading.next('Creating event...');\n            const form = this._form;\n            form.markAllAsTouched();\n            const event = this.event || new CalendarEvent();\n            if (!form.valid && !force) {\n                this._loading.next('');\n                return reject(\n                    `Some form fields are invalid. [${getInvalidFields(\n                        form\n                    ).join(', ')}]`\n                );\n            }\n            const ical_uid = this.event?.ical_uid;\n            let {\n                id,\n                host,\n                date,\n                duration,\n                creator,\n                all_day,\n                assets,\n                recurrence,\n            } = form.getRawValue();\n            const spaces = form.get('resources')?.value || [];\n            let catering = form.get('catering')?.value || [];\n            if (recurrence?._pattern && recurrence?._pattern !== 'none') {\n                this.form.patchValue({ recurring: true });\n            }\n            if (\n                (!id || date !== event.date || duration !== event.duration) &&\n                spaces.length\n            ) {\n                const start = getUnixTime(event.date);\n                await this.checkSelectedSpacesAreAvailable(\n                    spaces,\n                    date,\n                    duration,\n                    id\n                        ? { start, end: start + event.duration * 60 }\n                        : undefined,\n                    ical_uid || id || ''\n                ).catch((_) => {\n                    this._loading.next('');\n                    reject(_);\n                    throw _;\n                });\n            }\n            const is_owner =\n                host === currentUser()?.email ||\n                creator === currentUser()?.email;\n            const space_id = spaces[0]?.id;\n            const query: any = id\n                ? {\n                      system_id:\n                          this.event?.resources[0]?.id ||\n                          this.event?.system?.id ||\n                          space_id,\n                  }\n                : {};\n            if (is_owner) query.calendar = host || creator;\n            const value = this._form.getRawValue();\n            if (this._payments.payment_module && spaces.length) {\n                const receipt = await this._payments.makePayment({\n                    type: 'space',\n                    resource_name: spaces[0].display_name || spaces[0].name,\n                    date,\n                    duration,\n                    all_day,\n                });\n                if (!receipt?.success) return this._loading.next('');\n                (value as any).extension_data = {\n                    invoice: receipt,\n                    invoice_id: receipt.invoice_id,\n                };\n            }\n            const d = value.date;\n            if (catering.length && !('items' in catering[0])) {\n                const items = catering.map((_) => ({\n                    ..._,\n                    options: _.options.map((o) => ({ ...o, active: false })),\n                }));\n                catering = [\n                    new CateringOrder({\n                        deliver_at: d,\n                        items,\n                        notes: value.catering_notes,\n                        charge_code: value.catering_charge_code,\n                    }),\n                ];\n            } else {\n                catering.notes = value.catering_notes;\n                catering.charge_code = value.catering_charge_code;\n            }\n            const attendees = unique(\n                [...value.attendees, value.organiser || currentUser()],\n                'email'\n            );\n            if (spaces.length) {\n                let [setup, breakdown] = [0, 0];\n                for (const space of spaces) {\n                    const overflow = this._settings.get(\n                        `app.events.overflow.${space.id}`\n                    );\n                    if (overflow?.setup) setup = overflow.setup;\n                    if (overflow?.breakdown) breakdown = overflow.breakdown;\n                }\n                (value as any).setup = value.setup || setup;\n                (value as any).breakdown = value.breakdown || breakdown;\n            }\n            const result = await this._makeBooking(\n                new CalendarEvent({\n                    ...value,\n                    old_system: this.event?.system,\n                    host:\n                        this._settings.get('app.events.force_host') ||\n                        (this._settings.get('app.events.room_as_host')\n                            ? value.resources[0].email\n                            : '') ||\n                        value.host,\n                    title: value.title || 'Space Booking',\n                    attendees,\n                    date: d,\n                    catering,\n                    assets: groupsToAssets(assets),\n                    extension_data:\n                        this._settings.get('app.events.force_host') ||\n                        this._settings.get('app.events.room_as_host')\n                            ? {\n                                  host_override: value.host,\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              }\n                            : {\n                                  department:\n                                      value.organiser?.department ||\n                                      currentUser()?.department,\n                              },\n                }),\n                query\n            ).catch((e) => {\n                reject(e);\n                this._loading.next('');\n                throw e;\n            });\n            if (assets?.length || event.extension_data.assets?.length) {\n                await updateAssetRequestsForResource(\n                    result,\n                    {\n                        date,\n                        duration,\n                        host,\n                        location_name:\n                            spaces[0]?.display_name || spaces[0]?.name || '',\n                        location_id: spaces[0]?.id || '',\n                        zones: spaces[0]?.zones || [\n                            this._org.building?.id,\n                            this._org.building?.parent_id,\n                        ],\n                    },\n                    assets,\n                    event.extension_data.assets\n                ).catch(async (e) => {\n                    if (!this.form.value.id) {\n                        await removeEvent(\n                            result.id,\n                            spaces.length\n                                ? {\n                                      calendar:\n                                          this.form.value.host ||\n                                          currentUser()?.email,\n                                      system_id: spaces[0].id,\n                                  }\n                                : {}\n                        ).toPromise();\n                        notifyError('Unable to book the selected assets.');\n                        this._loading.next('');\n                    }\n                    throw e;\n                });\n            }\n            this.clearForm();\n            this.last_success = result;\n            sessionStorage.setItem(\n                'PLACEOS.last_booked_event',\n                JSON.stringify(result)\n            );\n            this.setView('success');\n            resolve(result);\n            this._loading.next('');\n        });\n    }\n\n    private async _makeBooking(\n        event: CalendarEvent,\n        query: Record<string, any>\n    ) {\n        this._updateVisitorList(event.attendees);\n        return (\n            !this.has_calendar\n                ? saveBooking(\n                      newBookingFromCalendarEvent({\n                          ...event.toJSON(),\n                          status: this._settings.get('app.bookings.no_approval')\n                              ? 'approved'\n                              : 'tentative',\n                      } as any)\n                  ).pipe(map((_) => newCalendarEventFromBooking(_)))\n                : saveEvent(event.toJSON(), query)\n        ).toPromise();\n    }\n\n    private async checkSelectedSpacesAreAvailable(\n        spaces: Space[],\n        date: number,\n        duration: number,\n        exclude?: { start: number; end: number },\n        ignore?: string\n    ) {\n        if (!spaces?.length) return true;\n        const query: any = {\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + (duration * 60 * 1000 || 30 * 1000)),\n        };\n        if (exclude) query.exclude_range = `${exclude.start}...${exclude.end}`;\n        if (this.has_calendar) {\n            const response = await querySpaceFreeBusy(\n                { ...query, system_ids: spaces.map((_) => _.id) },\n                this._org\n            ).toPromise();\n            let count = 0;\n            for (const space of response) {\n                if (!spaces.find(({ id }) => id === space.id)) continue;\n                const busy = space.availability.filter(\n                    (_) =>\n                        _.status === 'busy' &&\n                        (!exclude || getUnixTime(_.date) !== exclude?.start)\n                );\n                if (busy.length <= 0) count++;\n            }\n            if (count !== spaces.length) {\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } is not available at the selected time`;\n            }\n        } else {\n            const availability = await queryResourceAvailability(\n                spaces.map((_) => _.id),\n                date,\n                duration,\n                ignore\n            ).toPromise();\n            if (!availability.every((_) => _))\n                throw `${\n                    spaces.length > 1\n                        ? 'The selected space'\n                        : 'Some of the selected spaces'\n                } are not available at the selected time`;\n        }\n        return true;\n    }\n\n    private _updateVisitorList(attendees: User[]) {\n        const visitors = attendees.filter((user) => user.is_external);\n        if (!visitors?.length) return;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting(\n            'visitor-invitees',\n            unique([\n                ...old_visitors.filter((_) => !_.includes(_.email)),\n                ...visitors.map(\n                    (_) => `${_.email}|${_.name}|${_.organisation}`\n                ),\n            ])\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { CalendarEvent } from './event.class';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'event-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\" i18n>Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n                (click)=\"has_actioned = true\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n            <button class=\"w-64\" btn matRipple (click)=\"close()\" i18n>\n                Close\n            </button>\n        </div>\n        <button\n            icon\n            matRipple\n            [mat-dialog-close]=\"has_actioned\"\n            class=\"absolute top-2 right-0\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class EventLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    public has_actioned = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog: MatDialogRef<EventLinkModalComponent>\n    ) {}\n\n    public close() {\n        if (!this.has_actioned) {\n            return notifyError(\n                'You need to select a calendar option to finish creating this booking'\n            );\n        }\n        this._dialog.close(true);\n    }\n}\n","import { Identity, removeEmptyFields, unique } from '@placeos/common';\nimport { PlaceSystem } from '@placeos/ts-client';\nimport {\n    add,\n    addMinutes,\n    differenceInMinutes,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n} from 'date-fns';\nimport { CateringOrder } from 'libs/catering/src/lib/catering-order.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { GuestUser, User } from 'libs/users/src/lib/user.class';\nimport {\n    EventExtensionData,\n    FileDetails,\n    RecurrenceDetails,\n} from './event.interfaces';\nimport { eventStatus, parseRecurrence } from './helpers';\n\nlet _default_user: Identity = { id: 'default', name: 'Default User' };\n\nexport function setDefaultCreator(user: Identity) {\n    if (user) _default_user = user;\n}\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport interface LinkedBooking {\n    id: string;\n    asset_id: string;\n    asset_name: string;\n    user_id: string;\n    user_name: string;\n    description: string;\n    booking_type: string;\n}\n\ntype CalendarEventExtended = CalendarEvent & EventExtensionData;\n\n/** User's calendar event/booking */\nexport class CalendarEvent {\n    /** ID of the calendar event */\n    public readonly id: string;\n    /** Status of the event */\n    public readonly status: 'approved' | 'tentative' | 'declined' | 'none';\n    /** Email address of the host */\n    public readonly host: string;\n    /** ID of the calendar associated with the event */\n    public readonly calendar: string;\n    /** Email address of the event creator */\n    public readonly creator: string;\n    /** List of attendees of the event */\n    public readonly attendees: User[];\n    /** List of attendees of the event */\n    public readonly resources: Space[];\n    /** Summary of the event details */\n    public readonly title: string;\n    /** Extended details of the event */\n    public readonly body: string;\n    /** Unix epoch in seconds of the start time of the event */\n    public readonly event_start: number;\n    /** Unix epoch in seconds of the end time of the event */\n    public readonly event_end: number;\n    /** Whether event occurs over the full day */\n    public readonly all_day: boolean;\n    /** Unix epoch of the start time of the event */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** IANA timezone string for the event location */\n    public readonly timezone: string;\n    /** Location details for the event */\n    public readonly location: string;\n    /** URL of the associated meeting */\n    public readonly meeting_url: string;\n    /** URL of the associated meeting */\n    public readonly meeting_id: string;\n    /** URL of the associated meeting */\n    public readonly meeting_provider: string;\n    /** Whether this event is recurring */\n    public readonly recurring: boolean;\n    /** Details about the event's recurrence */\n    public readonly recurrence: RecurrenceDetails;\n    /** ID of the parent recurring event */\n    public readonly recurring_event_id: string;\n    /** Whether event details should be private */\n    public readonly private: boolean;\n    /** File attachements for the event */\n    public readonly attachments: FileDetails[];\n    /** Extra data associated with the event */\n    public readonly extension_data: Partial<EventExtensionData>;\n    /** System associated with the event */\n    public readonly system: PlaceSystem;\n    /** Previous system associated with the event */\n    public readonly old_system: PlaceSystem;\n    /** Host user details of the event */\n    public readonly organiser: User;\n    /** Type of event */\n    public readonly type: 'cancelled' | 'external' | 'internal';\n    /** Whether this event was from a PlaceOS booking instead of a user calendar */\n    public readonly from_bookings: boolean;\n    /** Master event */\n    public master?: CalendarEvent;\n    /** Unique identifier of the event */\n    public readonly ical_uid: string;\n    /** Mailbox email address of the event */\n    public readonly mailbox: string;\n\n    public readonly linked_bookings: LinkedBooking[];\n\n    public readonly update_master: boolean;\n\n    public get is_all_day() {\n        return (\n            this.all_day ||\n            (new Date(this.date).getHours() <= 12 && this.duration > 12 * 60)\n        );\n    }\n\n    /** Get field from extension data */\n    public ext<K extends keyof EventExtensionData>(key: K) {\n        return this.extension_data[key];\n    }\n\n    constructor(data: Partial<CalendarEventExtended> = {}) {\n        this.id = data.id || '';\n        this.event_start =\n            data.event_start ||\n            getUnixTime(\n                data.date ||\n                    roundToNearestMinutes(addMinutes(new Date(), 3), {\n                        nearestTo: 5,\n                    })\n            );\n        this.event_end =\n            data.event_end ||\n            getUnixTime(\n                addMinutes(this.event_start * 1000, data.duration || 30)\n            );\n        this.calendar = data.calendar || '';\n        this.creator =\n            (data.creator || _default_user.email)?.toLowerCase() || '';\n        this.host = (\n            data.host ||\n            this.creator ||\n            _default_user.email ||\n            ''\n        ).toLowerCase();\n        const attendees = data.attendees || [];\n        this.attendees = attendees\n            .filter((user: any) => !user.resource)\n            .map((u) => new User(u));\n        this.resources =\n            unique(\n                data.resources ||\n                    attendees\n                        .filter((user) => (user as any).resource)\n                        .map((s) => new Space(s as any)),\n                'email'\n            ) || [];\n        this.title = data.title;\n        this.body = data.body || '';\n        this.private = !!data.private;\n        this.all_day = !!data.all_day;\n        this.date = this.event_start * 1000 || this.date;\n        this.duration = this.all_day\n            ? 24 * 60\n            : data.duration ||\n              differenceInMinutes(data.event_end * 1000, this.date) ||\n              30;\n        if (this.all_day) {\n            (this as any).date = startOfDay(this.date).getTime();\n        }\n        this.timezone =\n            data.timezone || Intl.DateTimeFormat().resolvedOptions().timeZone;\n        this.meeting_url = data.meeting_url || data.online_meeting_url || '';\n        this.meeting_id = data.meeting_id || data.online_meeting_id || '';\n        this.meeting_provider =\n            data.meeting_provider || data.online_meeting_provider || '';\n        this.recurring = !!data.recurring;\n        this.recurring_event_id = data.recurring_event_id || '';\n        this.organiser = this.attendees.find(\n            (user) => user.email === this.host\n        );\n        this.from_bookings = data.from_bookings ?? false;\n        this.master = data.master ? new CalendarEvent(data.master) : null;\n        this.mailbox = data.mailbox || '';\n        this.ical_uid = data.ical_uid;\n        this.linked_bookings = data.linked_bookings || [];\n        this.update_master = data.update_master ?? false;\n        if (data.recurring) {\n            this.recurrence = {\n                start:\n                    this.event_start * 1000 ||\n                    new Date(\n                        (data.recurrence as any).range_start * 1000\n                    ).valueOf(),\n                end:\n                    data.recurrence.end ||\n                    new Date(\n                        (data.recurrence as any).range_end * 1000\n                    ).valueOf(),\n                interval: data.recurrence.interval,\n                pattern: data.recurrence.pattern,\n                occurrences: data.recurrence.occurrences,\n                days_of_week:\n                    data.recurrence.days_of_week?.map((_) =>\n                        typeof _ === 'number' ? _ : DAYS_OF_WEEK.indexOf(_)\n                    ) || [],\n            };\n        } else {\n            this.recurrence = {} as any;\n        }\n        const system = data.system;\n        if (\n            system?.email &&\n            !this.resources.find((_) => _.email === system.email)\n        ) {\n            this.resources.push(new Space(system as any));\n        }\n        this.system = system || (this.resources[0] as any) || null;\n        this.old_system = data.old_system || data.system;\n        this.attachments = data.attachments || [];\n        this.extension_data = data.extension_data || {};\n        this.status = eventStatus({ ...data, ...this }) || 'none';\n        this.location =\n            data.location || this.space?.display_name || this.space?.name || '';\n        this.type =\n            this.status === 'declined'\n                ? 'cancelled'\n                : this.attendees.find((_) => _.is_external)\n                ? 'external'\n                : 'internal';\n        for (const key in data) {\n            if (!(key in this)) {\n                this.extension_data[key] =\n                    data[key] || this.extension_data[key];\n            }\n        }\n        this.extension_data.catering = (this.extension_data.catering || []).map(\n            (i) =>\n                new CateringOrder({ ...i, event: this, date: this.date } as any)\n        );\n    }\n\n    /** List of external attendees associated with the event */\n    public get guests() {\n        return this.attendees.filter((f) => !!f.is_external) as GuestUser[];\n    }\n    /** Primary space associated with the booking */\n    public get space() {\n        return this.resources[0] || null;\n    }\n    public get is_today(): boolean {\n        return isSameDay(this.date, Date.now());\n    }\n\n    /**\n     * Convert class data to simple JSON object\n     */\n    public toJSON(): Record<string, any> {\n        const obj: Record<string, any> = { ...this };\n        const end = getUnixTime(addMinutes(this.date, this.duration));\n        const date = this.all_day ? set(this.date, { hours: 12 }) : this.date;\n        obj.event_start = getUnixTime(date);\n        obj.event_end = end;\n        const attendees = this.attendees;\n        (this as any).recurring =\n            this.recurrence?.pattern && this.recurrence._pattern !== 'none';\n        if (this.recurring) {\n            obj.recurrence = parseRecurrence({\n                ...this.recurrence,\n                start: this.date,\n            });\n            delete obj.recurrence.start;\n            delete obj.recurrence.end;\n        }\n        obj.recurrence = obj.recurrence\n            ? Object.keys(obj.recurrence).length\n                ? obj.recurrence\n                : null\n            : null;\n        obj.attendees = unique(\n            [\n                ...attendees,\n                ...this.resources.map((_) => ({ ..._, resource: true })),\n            ],\n            'email'\n        );\n        if (this.all_day) {\n            delete obj.extension_data.setup;\n            delete obj.extension_data.breakdown;\n        }\n        obj.extension_data.catering = obj.extension_data.catering.map(\n            (i) => new CateringOrder({ ...i, event: null })\n        );\n        obj.system_id = this.system?.id;\n        delete obj.catering;\n        delete obj.date;\n        delete obj.duration;\n        delete obj.status;\n        if (!obj.update_master) delete obj.recurring_event_id;\n        removeEmptyFields(obj);\n        return obj;\n    }\n\n    /** Status of the booking */\n    public get state():\n        | 'future'\n        | 'upcoming'\n        | 'done'\n        | 'started'\n        | 'in_progress' {\n        const now = new Date();\n        const date = this.date;\n        if (isBefore(now, add(date, { minutes: -15 }))) return 'future';\n        if (isBefore(now, date)) return 'upcoming';\n        if (isBefore(now, add(date, { minutes: 15 }))) return 'started';\n        if (isBefore(now, add(date, { minutes: this.duration })))\n            return 'in_progress';\n        return 'done';\n    }\n\n    public get can_check_in(): boolean {\n        const now = new Date();\n        return (\n            this.is_today ||\n            (isAfter(now, addMinutes(this.date, -5)) &&\n                isBefore(now, addMinutes(this.date, this.duration)))\n        );\n    }\n}\n","import { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from 'libs/users/src/lib/user.class';\n\nimport { CalendarEvent } from './event.class';\nimport { addMinutes, getUnixTime } from 'date-fns';\nimport { queryCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { EventExtensionData } from './event.interfaces';\n\nexport interface CalendarEventQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Comma seperated list of calendar ids to check availability */\n    calendars?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Whether to include cancelled events in the returned list */\n    include_cancelled?: boolean;\n    /** ical UID associated with the booking */\n    ical_uid?: string;\n    limit?: number;\n}\n\nexport interface CalendarEventShowParams {\n    /** ID of the personal calendar to grab the events details from */\n    calendar?: string;\n    /** ID of the system/space to get the associated calendar ID */\n    system_id?: string;\n}\n\nconst EVENTS_ENDPOINT = `/api/staff/v1/events`;\n\n/**\n * List events\n * @param q Parameters to pass to the API request\n */\nexport function queryEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    const query = toQueryString(q);\n    return get(`${EVENTS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((e) => new CalendarEvent(e))),\n        catchError((_) => of([]))\n    );\n}\n\nexport function queryAllEvents(\n    q: CalendarEventQueryParams\n): Observable<CalendarEvent[]> {\n    return query<CalendarEvent>({\n        query_params: q,\n        fn: (item) => new CalendarEvent(item),\n        endpoint: EVENTS_ENDPOINT,\n        path: '',\n    }).pipe(\n        switchMap(async ({ data, next }) => {\n            let list = [...data];\n            while (next) {\n                const resp = await next().toPromise();\n                data = resp.data;\n                next = resp.next;\n                list = [...list, ...data];\n            }\n            return list;\n        }),\n        catchError((_) => of([]))\n    );\n}\n\n/**\n * Get event details\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function showEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Create new calendar event and add it to the database\n * @param data New calendar event fields\n */\nexport function createEvent(data: Partial<CalendarEvent>) {\n    return post(`${EVENTS_ENDPOINT}`, new CalendarEvent(data).toJSON()).pipe(\n        map((item) => new CalendarEvent(item))\n    );\n}\n\n/**\n * Update an existing calendar event\n * @param id ID of the event to update\n * @param data New values for event fields\n * @param q Parameters to pass to the API request\n * @param method HTTP verb to use with API request\n */\nexport function updateEvent(\n    id: string,\n    data: Partial<CalendarEvent>,\n    q: CalendarEventShowParams = {},\n    method: 'put' | 'patch' = 'patch'\n) {\n    const query = toQueryString(q);\n    return (method === 'patch' ? patch : put)(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        method === 'patch' ? data : new CalendarEvent(data).toJSON()\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Save changes to or create a calendar event\n * @param data State of the calendar event\n * @param q Parameters to pass to the API request\n */\nexport const saveEvent = (\n    data: Partial<CalendarEvent>,\n    q?: CalendarEventShowParams\n) => {\n    delete (data as any)?.status;\n    return data.id\n        ? updateEvent(\n              data.update_master ? data.recurring_event_id || data.id : data.id,\n              { ...data, id: data.recurring_event_id || data.id },\n              q\n          )\n        : createEvent(data);\n};\n\n/**\n * Remove calendar event from the database\n * @param id ID of the event to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeEvent(id: string, q: CalendarEventShowParams = {}) {\n    const query = toQueryString(q);\n    return del(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}${\n            query ? '?' + query : ''\n        }`,\n        {\n            response_type: 'void',\n        }\n    );\n}\n\n/**\n * Set the approval state of the event to approved\n * @param id ID of the event to approve\n * @param system_id Associated system to approve\n */\nexport function approveEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/approve?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Set the approval state of the event to rejected\n * @param id ID of the event to reject\n * @param system_id Associated system to reject\n */\nexport function rejectEvent(id: string, system_id: string) {\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/reject?system_id=${encodeURIComponent(system_id)}`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * Decline the given event\n * @param id ID of the event to decline\n * @returns\n */\nexport function declineEvent(id: string, query: CalendarEventShowParams = {}) {\n    const q = toQueryString(query);\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/decline${\n            q ? '?' + q : ''\n        }`,\n        ''\n    ).pipe(map((item) => new CalendarEvent(item)));\n}\n\n/**\n * List guests for event\n * @param id ID of the event to grab\n * @param q Parameters to pass to the API request\n */\nexport function queryEventGuests(\n    id: string,\n    q: CalendarEventShowParams = {}\n): Observable<GuestUser[]> {\n    const query = toQueryString(q);\n    return get(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(id)}/guests${\n            query ? '?' + query : ''\n        }`\n    ).pipe(map((list) => list.map((item) => new GuestUser(item))));\n}\n\n/**\n * Set the checkin state of an event guest\n * @param id ID of the event to grab\n * @param guest_id ID of the guest to update\n * @param state New checkin state of the guest\n * @param q Parameters to pass to the API request\n */\nexport function checkinEventGuest(\n    id: string,\n    guest_id: string,\n    state: boolean,\n    q: CalendarEventShowParams = {}\n) {\n    const query = toQueryString({ ...q, state });\n    return post(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/guests/${guest_id}/checkin${query ? '?' + query : ''}`,\n        ''\n    ).pipe(map((item) => new GuestUser(item)));\n}\n\n/**\n * Update the extension data for an event\n * @param id ID of the event\n * @param system_id ID of the system associated with the event\n * @param metadata New metadata value to merge to exisiting\n * @param query Extra query parameters to pass to the API request\n */\nexport function updateEventMetadata(\n    id: string,\n    system_id: string,\n    metadata: Partial<EventExtensionData>,\n    query: { ical_uid?: string } = {}\n) {\n    const q = toQueryString({ ...query });\n    return patch(\n        `${EVENTS_ENDPOINT}/${encodeURIComponent(\n            id\n        )}/metadata/${encodeURIComponent(system_id)}${q ? '?' + q : ''}`,\n        metadata\n    ).pipe(map((item) => item as EventExtensionData));\n}\n\n/**\n * Check whether a selected space is available\n * @param id ID of the space to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function isSpaceAvailable(\n    id: string,\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryEvents({\n        system_ids: id,\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(map((_) => _.filter((_) => _.id !== ignore).length === 0));\n}\n\n/**\n * Check whether a list of spaces are available\n * @param id_list List of space IDs to check\n * @param start Start of the availability period to check\n * @param duration Duration of the availability block in minutes\n * @param ignore ID of a booking to ignore when checking availability\n */\nexport function querySpaceAvailability(\n    id_list: string[],\n    start: number,\n    duration: number,\n    ignore?: string\n) {\n    return queryCalendarAvailability({\n        system_ids: id_list.join(),\n        period_start: getUnixTime(start),\n        period_end: getUnixTime(addMinutes(start, duration)),\n    }).pipe(\n        map((spaces) =>\n            id_list.map(\n                (id) =>\n                    !!spaces.find(\n                        (s) => s.id === id || (s as any).resource?.id === id\n                    )\n            )\n        )\n    );\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { AttendeeListComponent } from './attendee-list.component';\nimport { EventCardComponent } from './event-card.component';\nimport { EventDetailsModalComponent } from './event-details-modal.component';\nimport { EventLinkModalComponent } from './event-link-modal.component';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SetupBreakdownModalComponent } from './setup-breakdown-modal.component';\n\nconst COMPONENTS = [\n    EventDetailsModalComponent,\n    AttendeeListComponent,\n    EventCardComponent,\n    EventLinkModalComponent,\n    SetupBreakdownModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedEventsModule {}\n","export * from './event-form.service';\nexport * from './event.class';\nexport * from './event.interfaces';\nexport * from './events.fn';\nexport * from './helpers';\nexport * from './utilities';\nexport * from './validators';\n","import { HashMap } from '@placeos/common';\nimport {\n    addDays,\n    addMinutes,\n    addMonths,\n    addSeconds,\n    addWeeks,\n    addYears,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isAfter,\n    isBefore,\n    isSameMinute,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport {\n    BookingRuleDetails,\n    BookingRules,\n    BookingRuleset,\n    BookingRulesmap,\n    RecurrenceDetails,\n    TimeBlock,\n    TimePeriod,\n} from './event.interfaces';\n\nconst DAYS_OF_WEEK = [\n    'sunday',\n    'monday',\n    'tuesday',\n    'wednesday',\n    'thursday',\n    'friday',\n    'saturday',\n];\n\nexport function eventStatus(\n    details: HashMap\n): 'approved' | 'tentative' | 'declined' {\n    if (details.resources?.length) {\n        if (\n            details.resources.every(\n                (i) => i.response_status === 'accepted' || details.approved\n            )\n        ) {\n            return 'approved';\n        } else if (\n            details.resources.some(\n                (i) =>\n                    i.response_status === 'tentative' ||\n                    i.response_status === 'needsAction'\n            )\n        ) {\n            return 'tentative';\n        }\n        return 'declined';\n    }\n    return 'approved';\n}\n\nexport function parseRecurrence(data: RecurrenceDetails) {\n    let start = data.start || (data as any).range_start * 1000;\n    let end = data.end || (data as any).range_end;\n    if (data.occurrences > 1) {\n        switch (data.pattern) {\n            case 'daily':\n                end = addDays(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'weekly':\n                end = addWeeks(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                end = addMonths(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                end = addDays(end, 7).valueOf();\n                break;\n            case 'yearly':\n                end = addYears(\n                    start || Date.now(),\n                    (data.occurrences - 1) * data.interval\n                ).valueOf();\n                break;\n        }\n    }\n    return {\n        range_start: getUnixTime(startOfDay(start)),\n        range_end: getUnixTime(endOfDay(end)),\n        interval: data.interval,\n        pattern: data.pattern,\n        days_of_week:\n            data.days_of_week?.map((_) =>\n                typeof _ === 'number' ? DAYS_OF_WEEK[_] : _\n            ) || [],\n    };\n}\n\nexport function formatRecurrence({\n    interval,\n    pattern,\n    start,\n    end,\n    occurrences,\n}: RecurrenceDetails) {\n    let details = '';\n\n    if (interval) {\n        switch (pattern) {\n            case 'daily':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} days` : 'Daily'\n                );\n                if (occurrences > 1)\n                    end = addDays(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'weekly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} weeks` : 'Weekly'\n                );\n                if (occurrences > 1)\n                    end = addWeeks(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'month_day':\n            case 'monthly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} months` : 'Monthly'\n                );\n                if (occurrences > 1)\n                    end = addMonths(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n            case 'yearly':\n                details = details.concat(\n                    interval > 1 ? `Every ${interval} yeats` : 'Yearly'\n                );\n                if (occurrences > 1)\n                    end = addYears(\n                        start || Date.now(),\n                        (occurrences - 1) * interval\n                    ).valueOf();\n                break;\n        }\n        if (occurrences >= 1) {\n            details = details.concat(`, until ${format(end, 'MMM do, yyyy')}`);\n        }\n    }\n    return details;\n}\n\n/**\n * Generate a list of free time slots between the given bookings\n * @param list List of bookings to find slots between\n * @param min_size Minimum length of a free slot in minutes\n */\nexport function getFreeTimeSlots(\n    list: TimePeriod[],\n    min_size: number = 30\n): TimeBlock[] {\n    let start = new Date(0);\n    const slots: TimeBlock[] = [];\n    list.sort((a, b) => a.date - b.date);\n    for (const booking of list) {\n        const bkn_start = new Date(\n            addMinutes(booking.date, -booking.extension_data?.setup || 0)\n        );\n        const bkn_end = addMinutes(\n            booking.date,\n            booking.duration + (booking.extension_data?.breakdown || 0)\n        );\n        if (isAfter(booking.date, start)) {\n            const diff = Math.abs(differenceInMinutes(bkn_start, start));\n            if (diff >= min_size) {\n                slots.push({\n                    start: start.valueOf(),\n                    end: booking.date,\n                });\n            }\n            start = bkn_end;\n        } else if (isSameMinute(start, booking.date)) {\n            start = bkn_end;\n        }\n    }\n    const s = start.valueOf();\n    slots.push({\n        start: s,\n        end: (s ? s : Date.now()) * 10,\n    });\n    return slots;\n}\n\nexport function periodInFreeTimeSlot(\n    start: number,\n    end: number,\n    list: TimePeriod[],\n    min_size: number = 30\n) {\n    const blocks = getFreeTimeSlots(list, min_size);\n    for (const blk of blocks) {\n        if (\n            start >= blk.start &&\n            start < blk.end &&\n            end > blk.start &&\n            end <= blk.end\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Get the next free time slot from the given bookings\n * @param list List of bookings to find the next slot\n * @param date Date to find next slot after in ms since UTC epoch\n * @param min_size Minimum length of the free slot in minutes\n */\nexport function getNextFreeTimeSlot(\n    list: TimePeriod[],\n    date: number = new Date().valueOf(),\n    min_size: number = 30\n): TimeBlock {\n    const slots = getFreeTimeSlots(list, min_size);\n    const time = addSeconds(startOfMinute(date), 1);\n    for (const block of slots) {\n        if (isAfter(block.start, time)) {\n            return block;\n        } else if (isBefore(time, block.end)) {\n            const duration = differenceInMinutes(block.end, time);\n            if (duration >= min_size) return block;\n        }\n    }\n    return slots[slots.length - 1];\n}\n\nconst MINUTE = 1;\nconst HOUR = 60;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\nconst MONTH = 30 * DAY;\n\nconst DURATION_MAP: { [duration: string]: number } = {\n    month: MONTH,\n    months: MONTH,\n    week: WEEK,\n    weeks: WEEK,\n    day: DAY,\n    days: DAY,\n    hour: HOUR,\n    hours: HOUR,\n    minute: MINUTE,\n    minutes: MINUTE,\n};\n\nconst DEFAULT_RULES: BookingRules = {\n    auto_approve: true,\n    hidden: false,\n};\n\n/**\n * Conver time string into minutes\n * @param str timestring e.g. `'1 day'`, `'15 minutes'`, `'2 weeks'`\n */\nexport function stringToMinutes(str: string): number {\n    const parts = (str || '').split(' ');\n    return parts.length > 1 ? +parts[0] * DURATION_MAP[parts[1]] : 0;\n}\n\nexport function addToDate(add: string, date: Date | number = new Date()) {\n    return addMinutes(date, stringToMinutes(add));\n}\n\nexport function filterSpacesFromRules(\n    spaces: Space[],\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n) {\n    return spaces.filter(\n        (_) => !rulesForSpace({ ...details, space: _ }, rulemap)?.hidden\n    );\n}\n\nexport function rulesForSpace(\n    details: BookingRuleDetails,\n    rulemap: BookingRulesmap\n): BookingRules {\n    const { space } = details;\n    for (const zone of space.zones) {\n        if (rulemap[zone]?.length) {\n            for (const ruleset of rulemap[zone]) {\n                if (ruleset && checkRulesMatch(details, ruleset))\n                    return { ...DEFAULT_RULES, ...ruleset.rules };\n            }\n        }\n    }\n    return DEFAULT_RULES;\n}\n\nexport function checkRulesMatch(\n    { date, duration, host }: BookingRuleDetails,\n    ruleset: BookingRuleset\n): boolean {\n    const date_obj = new Date(date);\n    let matches = 0;\n    const { conditions } = ruleset;\n    if (!conditions) return true;\n    if (\n        conditions.groups instanceof Array &&\n        conditions.groups.every((_) => host?.groups?.includes(_))\n    )\n        matches += 1;\n    if (\n        conditions.is_before &&\n        isBefore(addMinutes(date, duration), addToDate(conditions.is_before))\n    )\n        matches += 1;\n    if (conditions.is_after && isAfter(date, addToDate(conditions.is_after)))\n        matches += 1;\n    if (\n        conditions.min_length &&\n        stringToMinutes(conditions.min_length) <= duration\n    )\n        matches += 1;\n    if (\n        conditions.is_between &&\n        date_obj.getHours() >= conditions.is_between[0] &&\n        date_obj.getHours() < conditions.is_between[1]\n    )\n        matches += 1;\n    if (\n        conditions.max_length &&\n        stringToMinutes(conditions.max_length) >= duration\n    )\n        matches += 1;\n    return matches >= Object.keys(conditions).length;\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CalendarEvent } from './event.class';\nimport { saveEvent } from './events.fn';\nimport { currentUser, notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'setup-breakdown-modal',\n    template: `\n        <header class=\"space-x-4 min-h-16\">\n            <h2>Set Event's Setup and Breakdown</h2>\n            <button btn icon mat-dialog-close matRipple *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 min-w-[20rem] w-full\"\n            [formGroup]=\"form\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"setup\">Setup Duration</label>\n                <a-duration-field\n                    name=\"setup\"\n                    formControlName=\"setup\"\n                    [min]=\"0\"\n                ></a-duration-field>\n            </div>\n            <div class=\"flex flex-col space-y-2\">\n                <label for=\"breakdown\">Breakdown Duration</label>\n                <a-duration-field\n                    name=\"breakdown\"\n                    [min]=\"0\"\n                    formControlName=\"breakdown\"\n                ></a-duration-field>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-end px-4 py-2 border-t border-gray-200\"\n        >\n            <button btn matRipple (click)=\"save()\">Save Changes</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center h-64 w-64\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"text-center p-4\">\n                    Saving setup and breakdown durations...\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SetupBreakdownModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        setup: new FormControl(this._event.ext('setup') || 0),\n        breakdown: new FormControl(this._event.ext('breakdown') || 0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: CalendarEvent,\n        private _dialog_ref: MatDialogRef<SetupBreakdownModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const { host, creator } = this._event;\n        const query: any = {\n            system_id: this._event?.resources[0]?.id || this._event?.system?.id,\n        };\n        const event = await saveEvent(\n            new CalendarEvent({\n                ...this._event,\n                extension_data: {\n                    ...this._event.extension_data,\n                    ...this.form.value,\n                },\n            }).toJSON(),\n            query\n        )\n            .toPromise()\n            .catch((_) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError(`Error updating setup and breakdown. ${_.error}`);\n                throw _;\n            });\n        notifySuccess('Succesfully updated setup and breakdown period.');\n        this._dialog_ref.disableClose = false;\n        this.loading = false;\n        this._dialog_ref.close(event);\n    }\n}\n","import {\n    FormGroup,\n    FormControl,\n    Validators,\n    AbstractControl,\n} from '@angular/forms';\nimport {\n    add,\n    formatDuration,\n    differenceInMinutes,\n    getTime,\n    isSameDay,\n    format,\n    startOfMinute,\n    setHours,\n    setMinutes,\n    addMinutes,\n    roundToNearestMinutes,\n} from 'date-fns';\nimport { currentUser, timePeriodsIntersect, unique } from '@placeos/common';\n\nimport { CalendarEvent } from './event.class';\nimport { endInFuture } from './validators';\nimport { getNextFreeTimeSlot } from './helpers';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { assetsToGroups } from 'libs/assets/src/lib/asset.utilities';\n\nlet BOOKING_DATE = add(setMinutes(setHours(new Date(), 6), 0), { days: -1 });\n\nconst validateCateringField =\n    (catering_control: AbstractControl) => (control: AbstractControl) => {\n        if (catering_control.value?.length && !control.value) {\n            return { catering_field: 'Catering sub-fields are required' };\n        }\n        return null;\n    };\n\nexport function generateEventForm(event: CalendarEvent = new CalendarEvent()) {\n    if (!event) event = new CalendarEvent();\n    const form = new FormGroup({\n        id: new FormControl(event.id),\n        host: new FormControl(\n            event.host || event.organiser?.email || currentUser()?.email || '',\n            [Validators.required]\n        ),\n        organiser: new FormControl(\n            event.organiser || new User({ email: event.host || '' })\n        ),\n        creator: new FormControl(event.creator || currentUser()?.email),\n        calendar: new FormControl(event.calendar),\n        attendees: new FormControl(event.attendees || []),\n        resources: new FormControl(event.resources || []),\n        title: new FormControl(event.title),\n        body: new FormControl(event.body),\n        private: new FormControl(event.private),\n        date: new FormControl(event.date, [Validators.required]),\n        duration: new FormControl(event.duration, [endInFuture]),\n        all_day: new FormControl(event.all_day),\n        recurring: new FormControl(event.recurring),\n        recurrence: new FormControl(event.recurrence),\n        recurring_event_id: new FormControl(event.recurring_event_id),\n        master: new FormControl(event.master),\n        attachments: new FormControl(event.attachments),\n        catering: new FormControl(\n            (event.extension_data?.catering[0]?.items || []) as any\n        ),\n        catering_notes: new FormControl(\n            event.extension_data?.catering[0]?.notes || ''\n        ),\n        catering_charge_code: new FormControl(\n            event.extension_data?.catering[0]?.charge_code || ''\n        ),\n        setup: new FormControl(event.extension_data?.setup || 0),\n        breakdown: new FormControl(event.extension_data?.breakdown || 0),\n        assets: new FormControl(\n            assetsToGroups(event.extension_data?.assets || [])\n        ),\n        // has_catering: new FormControl(event.has_catering || false),\n        visitor_type: new FormControl(event.extension_data?.visitor_type),\n        location: new FormControl(event.location),\n        needs_space: new FormControl(true),\n        needs_parking: new FormControl(\n            event.extension_data?.needs_parking || false\n        ),\n        event_type: new FormControl(event.extension_data?.event_type || ''),\n        category: new FormControl(event.extension_data?.category || ''),\n        tags: new FormControl(event.extension_data?.tags || []),\n        update_master: new FormControl(false),\n        system: new FormControl<any>(event.system),\n    });\n    form.get('organiser').valueChanges.subscribe((o) =>\n        form.controls.host.setValue(o?.email)\n    );\n    form.get('resources').valueChanges.subscribe((l) => {\n        form.controls.system.setValue(l?.length ? (l[0] as any) : null);\n        form.controls.assets[l?.length ? 'enable' : 'disable']();\n    });\n    let previous_time = form.value.date;\n    let previous_duration = form.value.duration;\n    let previous_all_day = form.value.all_day;\n    form.valueChanges.subscribe((v) => {\n        if (form.value.date < Date.now() && form.value.id) {\n            form.get('date')?.disable({ emitEvent: false });\n        } else {\n            form.get('date')?.enable({ emitEvent: false });\n        }\n        if (!('all_day' in v)) {\n            previous_time = v.date || previous_time;\n            previous_duration = v.duration || previous_duration;\n        }\n        previous_all_day = v.all_day ?? previous_all_day;\n    });\n    form.controls.date.valueChanges.subscribe((date) => {\n        if (date < Date.now() && !form.value.id) {\n            form.patchValue(\n                {\n                    date: roundToNearestMinutes(Date.now(), {\n                        nearestTo: 5,\n                        roundingMethod: 'ceil',\n                    }).valueOf(),\n                },\n                { emitEvent: false }\n            );\n        }\n        if (\n            form.value.recurrence?._pattern !== 'custom_display' &&\n            form.value.recurrence?._pattern !== 'none'\n        ) {\n            form.patchValue({\n                recurrence: {\n                    ...form.value.recurrence,\n                    days_of_week: [new Date(date).getDay()],\n                },\n            });\n        }\n    });\n    form.controls.all_day.valueChanges.subscribe((all_day) => {\n        if (all_day) {\n            previous_time = form.value.date;\n            previous_duration = form.value.duration;\n            form.patchValue({\n                date: setHours(setMinutes(previous_time, 0), 6).valueOf(),\n                duration: 13 * 60,\n            });\n            form.controls.duration.disable();\n        } else if (previous_all_day && !all_day) {\n            form.controls.duration.enable();\n            form.patchValue({\n                date: Math.max(Date.now() - 1, previous_time),\n                duration: previous_duration,\n            });\n        }\n    });\n    form.get('catering_charge_code').setValidators([\n        validateCateringField(form.get('catering')),\n    ]);\n    if (event.id) {\n        form.get('host').disable();\n        form.get('organiser').disable();\n    }\n    if (event.state === 'started') form.get('date').disable();\n    return form;\n}\n\n/**\n * Set the initial time used for generating mock bookings\n * @param time New initial time as ms from UTC epoch\n */\nexport function setMockBookingStartDatetime(time: number) {\n    BOOKING_DATE = startOfMinute(new Date(time));\n}\n\n/**\n * Get current status within bookings\n * @param bookings List of bookings\n * @param host Host of the new event\n * @param date Datetime of the new event\n */\nexport function statusFromBookings(\n    bookings: CalendarEvent[],\n    bookable: boolean,\n    requestable: boolean,\n    date: number = getTime(new Date())\n) {\n    const now = new Date(date);\n    const next_free_slot = getNextFreeTimeSlot(bookings, date, 5);\n    const start = new Date(next_free_slot.start);\n    const end = new Date(next_free_slot.end);\n    const currently_free = timePeriodsIntersect(\n        date,\n        date,\n        next_free_slot.start,\n        next_free_slot.end\n    );\n    const time_until_next_block = formatDuration({\n        minutes: currently_free\n            ? differenceInMinutes(end, now)\n            : differenceInMinutes(start, now),\n    });\n    const free_tomorrow = !currently_free && !isSameDay(start, now);\n    const free_today = currently_free && !isSameDay(end, now);\n    return {\n        status: !bookable\n            ? 'Not Bookable'\n            : currently_free\n            ? requestable\n                ? 'Available by Request'\n                : 'Available'\n            : 'Meeting in Progress',\n        available_until: free_today\n            ? 'No meetings today'\n            : currently_free\n            ? `Free until ${format(end, 'h:mm B')}(${time_until_next_block})`\n            : free_tomorrow\n            ? 'Unavailable today'\n            : `Free at ${format(start, 'h:mm B')}(${time_until_next_block})`,\n    };\n}\n\nexport function replaceBookings(\n    list: CalendarEvent[],\n    new_bookings: CalendarEvent[],\n    filter_options: { space: string; from: number; to: number }\n) {\n    const from = filter_options.from;\n    const to = filter_options.to;\n    const filtered_list = list.filter((booking) => {\n        const start = new Date(booking.date);\n        const end = addMinutes(start, booking.duration);\n        return (\n            !booking.resources.find(\n                (space) => space.email === filter_options.space\n            ) || !timePeriodsIntersect(from, to, start.valueOf(), end.valueOf())\n        );\n    });\n    const updated_list = filtered_list.concat(new_bookings);\n    updated_list.sort((a, b) => a.date - b.date);\n    return unique(updated_list, 'id');\n}\n\nexport function newCalendarEventFromBooking(booking: Booking) {\n    let attendees = [\n        {\n            id: booking.user_id,\n            name: booking.user_name,\n            email: booking.user_email,\n            organizer: true,\n        },\n    ];\n    if (booking.booking_type === 'visitor') {\n        attendees.push(\n            new User({\n                name: booking.asset_name || booking.description,\n                email: booking.asset_id,\n            })\n        );\n    }\n    attendees = attendees.concat(booking.attendees);\n    return new CalendarEvent({\n        ...booking,\n        ...booking.extension_data,\n        attendees,\n        id: booking.id || booking.extension_data.id,\n        host: booking.user_email,\n        from_bookings: true,\n    } as any);\n}\n","import { AbstractControl } from '@angular/forms';\nimport { addMinutes, isAfter, isBefore } from 'date-fns';\n\nexport const endInFuture = (control: AbstractControl) => {\n    const date = control.parent?.get('date');\n    if (date && isAfter(Date.now(), addMinutes(date.value, control.value))) {\n        return { duration: true };\n    }\n    return null;\n};\n\n/** Check that date in unix ms is in the future */\nexport function isFuture(\n    control: AbstractControl\n): { [key: string]: boolean } | null {\n    return control.value && isBefore(control.value, new Date())\n        ? { is_future: true }\n        : null;\n}\n","export * from './lib/explore.module';\nexport * from './lib/explore';\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { currentUser, notifySuccess, SettingsService } from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm();\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { addDays, endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest, Observable, of, timer } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { BookingFormService } from 'libs/bookings/src/lib/booking-form.service';\nimport {\n    AsyncHandler,\n    currentUser,\n    notifyError,\n    notifySuccess,\n    ResourceRestriction,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser } from 'libs/users/src/lib/user.class';\n\nimport { SetDatetimeModalComponent } from 'libs/explore/src/lib/set-datetime-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number;\n    all_day?: boolean;\n    zones?: string[];\n    host?: StaffUser;\n    custom?: boolean;\n    use_api?: boolean;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends AsyncHandler implements OnDestroy {\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _presence = new BehaviorSubject<string[]>([]);\n    private _signs_of_life = new BehaviorSubject<string[]>([]);\n    private _statuses: Record<string, string> = {};\n    private _users: Record<string, string> = {};\n    private _departments: Record<string, string> = {};\n\n    private _checked_in = new BehaviorSubject<string[]>([]);\n\n    public readonly restrictions: Observable<ResourceRestriction[]> =\n        this._org.active_building.pipe(\n            debounceTime(50),\n            switchMap(() => {\n                return showMetadata(\n                    this._org.building.id,\n                    `desk_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly desk_list = this._state.level.pipe(\n        debounceTime(50),\n        switchMap((lvl) =>\n            showMetadata(lvl.id, 'desks').pipe(\n                catchError(() => of({ details: [] })),\n                map((i) =>\n                    (i?.details instanceof Array ? i.details : []).map(\n                        (j: Record<string, any>) =>\n                            new Desk({ ...j, zone: lvl as any })\n                    )\n                )\n            )\n        ),\n        catchError((e) => []),\n        shareReplay(1)\n    );\n\n    private _bind = this._state.level.pipe(\n        debounceTime(300),\n        filter((_) => !!_),\n        tap((lvl) => {\n            this._statuses = {};\n            const system_id = this._org.binding('area_management');\n            if (!system_id) return;\n            let binding = getModule(system_id, 'AreaManagement')?.binding(\n                lvl.id\n            );\n            if (!binding) return;\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((d) =>\n                        this.processBindingChange(d || {}, system_id)\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    private _booking_list = combineLatest([\n        this._options,\n        this._state.level,\n    ]).pipe(\n        filter(\n            ([_, lvl]) =>\n                (_.use_api || _.date > endOfDay(Date.now()).valueOf()) && !!lvl\n        ),\n        switchMap(([_, level]) => {\n            return queryBookings({\n                type: 'desk',\n                period_start: getUnixTime(startOfDay(_.date || Date.now())),\n                period_end: getUnixTime(endOfDay(_.date || Date.now())),\n                zones: level.id,\n            });\n        }),\n        debounceTime(200),\n        tap((bookings) => {\n            this._in_use.next(bookings.map((_) => _.asset_id));\n            this._checked_in.next(\n                bookings.filter((_) => _.checked_in).map((_) => _.asset_id)\n            );\n        }),\n        shareReplay(1)\n    );\n\n    private _state_change = combineLatest([\n        this.desk_list,\n        this._in_use,\n        this._presence,\n        this._checked_in,\n        this._signs_of_life,\n        this.restrictions,\n        this._options,\n    ]).pipe(\n        debounceTime(50),\n        map(([desks, in_use, presence, checked_in, signs, restrictions]) => {\n            this._statuses = {};\n            for (const { id, bookable } of desks) {\n                const is_used = in_use.some((i) => id === i);\n                const has_presence = presence.some((i) => id === i);\n                const has_signs = signs.some((i) => id === i);\n                const is_checked_in =\n                    checked_in.some((i) => id === i) ||\n                    (is_used && this._settings.get(`app.desk.auto_checkin`));\n                const restriction_list = restrictions.filter(\n                    (_) => _.items?.includes(id) || _.assets?.includes(id)\n                );\n                const is_restricted = restriction_list.find(\n                    ({ start, end }) => Date.now() >= start && Date.now() < end\n                );\n                this._statuses[id] =\n                    bookable && !is_restricted\n                        ? !is_used && !has_presence && !is_checked_in\n                            ? has_signs\n                                ? 'signs-of-life'\n                                : 'free'\n                            : !has_presence && !is_checked_in\n                            ? 'pending'\n                            : 'busy'\n                        : 'not-bookable';\n            }\n            this.processDesks(desks);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _bookings: BookingFormService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking:\n                this._settings.get('app.desks.enable_maps') !== false,\n        });\n        this.subscription('bookings', this._booking_list.subscribe());\n        this.subscription('bind', this._bind.subscribe());\n        this.subscription('restrictions', this.restrictions.subscribe());\n        this.subscription('changes', this._state_change.subscribe());\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public processBindingChange(\n        { value }: { value: any[] },\n        system_id: string\n    ) {\n        const devices = (value || []).filter(\n            (v) => !['desk', 'booking'].includes(v.location)\n        );\n        const desks = (value || []).filter(\n            (v) =>\n                v.location === 'desk' ||\n                (v.location === 'booking' && v.type === 'desk')\n        );\n        const date = this._options.getValue().date || Date.now();\n        if (\n            date <= endOfDay(Date.now()).valueOf() &&\n            !this._options.getValue().use_api\n        ) {\n            this._in_use.next(\n                desks\n                    .filter((v) => v.location === 'booking')\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._checked_in.next(\n                desks\n                    .filter((v) => v.location === 'booking' && v.checked_in)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._presence.next(\n                desks\n                    .filter((v) => v.at_location)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n            this._signs_of_life.next(\n                desks\n                    .filter((v) => v.signs_of_life)\n                    .map((v) => v.map_id || v.asset_id)\n            );\n        }\n        const departments = this._settings.get('app.department_map') || {};\n        for (const desk of desks) {\n            this._users[desk.map_id || desk.asset_id] = desk.staff_name;\n            this._departments[desk.map_id || desk.asset_id] =\n                departments[desk.department] || '';\n        }\n        this.processDevices(devices, system_id);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses[desk_id]) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: Record<string, any>[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                track_id: `device:hover:${x},${y}`,\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                z_index: 20,\n                data: { ...device, system: system_id },\n            });\n        }\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: Desk[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                track_id: `desk:hover:${desk.map_id || desk.id}`,\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                full_size: true,\n                no_scale: true,\n                data: {\n                    id: desk.map_id || desk.id,\n                    map_id: desk.name,\n                    name: desk.name || desk.map_id,\n                    user: this._users[desk.map_id] || desk.staff_name,\n                    status: this._statuses[desk.map_id],\n                    department: this._departments[desk.map_id] || '',\n                },\n                z_index: 20,\n            });\n            if (!desk.bookable) continue;\n            const book_fn = async () => {\n                if (this._statuses[desk.id] !== 'free') {\n                    return notifyError(\n                        `${desk.name || 'Desk'} is unavailable at this time.`\n                    );\n                }\n                if (\n                    desk.groups?.length &&\n                    !desk.groups.find((_) => currentUser().groups.includes(_))\n                ) {\n                    return notifyError(\n                        `You are not allowed to book ${desk.name}.`\n                    );\n                }\n                this._bookings.newForm();\n                this._bookings.setOptions({ type: 'desk' });\n                if (options.date) {\n                    this._bookings.form.patchValue({\n                        date: options.date,\n                    });\n                    this._bookings.form.patchValue({\n                        all_day: !!options.all_day,\n                    });\n                }\n                let { date, duration, user } = await this._setBookingTime(\n                    this._bookings.form.value.date,\n                    this._bookings.form.value.duration,\n                    this._options.getValue()?.custom ?? false,\n                    desk as any\n                );\n                user = user || options.host || currentUser();\n                const user_email = user?.email;\n                this._bookings.form.patchValue({\n                    resources: [desk],\n                    asset_id: desk.id,\n                    asset_name: desk.name,\n                    date,\n                    duration: options.all_day ? 12 * 60 : duration,\n                    map_id: desk?.map_id || desk?.id,\n                    description: desk.name,\n                    user,\n                    user_email,\n                    booking_type: 'desk',\n                    zones: desk.zone\n                        ? [desk.zone?.parent_id, desk.zone?.id]\n                        : [],\n                });\n                await this._bookings.confirmPost().catch((e) => {\n                    console.log(e);\n                    notifyError(\n                        `Failed to book desk ${desk.name || desk.id}. ${\n                            e.message || e.error || e\n                        }`\n                    );\n                    throw e;\n                });\n                this._users[desk.map_id] = (\n                    options.host || currentUser()\n                )?.name;\n                notifySuccess(\n                    `Successfully booked desk ${desk.name || desk.id}`\n                );\n            };\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                priority: 10,\n                callback: book_fn,\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                priority: 10,\n                callback: book_fn,\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private async _setBookingTime(\n        date: number,\n        duration: number,\n        host: boolean = false,\n        resource: Desk = null\n    ) {\n        let user = null;\n        if (!!this._settings.get('app.desks.allow_time_changes')) {\n            const until = endOfDay(\n                addDays(\n                    Date.now(),\n                    this._settings.get('app.desks.available_period') || 90\n                )\n            );\n            const ref = this._dialog.open(SetDatetimeModalComponent, {\n                data: { date, duration, until, host, resource },\n            });\n            const details = await ref.afterClosed().toPromise();\n            if (!details) throw 'User cancelled';\n            date = details.date;\n            duration = details.duration;\n            user = details.user;\n        }\n        return { date, duration, user };\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n    zoom$?: Observable<number>;\n}\n\nconst EMPTY = [];\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-8 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            shadow\n            class=\"absolute center bg-black/40 h-8 w-8 rounded-full\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-3 w-3 absolute center rounded-full shadow border-2 border-white\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            customTooltip\n            [content]=\"device_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"x_pos\"\n            [yPosition]=\"y_pos\"\n            [hover]=\"true\"\n            (mouseenter)=\"loadUser()\"\n            class=\"absolute inset-0 pointer-events-auto\"\n        ></div>\n\n        <ng-template #device_tooltip>\n            <div\n                name=\"device-info\"\n                class=\"w-64 rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none mx-2\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p\n                        class=\"break-words\"\n                        *ngIf=\"mac && !hide_fields.includes('mac')\"\n                    >\n                        <label i18n>MAC:</label> {{ mac }}\n                    </p>\n                    <p><label i18n>Accuracy:</label> {{ variance }}m</p>\n                    <p><label i18n>Last Seen:</label> {{ last_seen }}</p>\n                    <p\n                        type\n                        *ngIf=\"\n                            manufacturer &&\n                            !hide_fields.includes('manufacturer')\n                        \"\n                    >\n                        <label i18n>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p os *ngIf=\"os && !hide_fields.includes('os')\">\n                        <label i18n>OS:</label> {{ os }}\n                    </p>\n                    <p ssid *ngIf=\"ssid && !hide_fields.includes('ssid')\">\n                        <label i18n>SSID:</label> {{ ssid }}\n                    </p>\n                    <p\n                        username\n                        *ngIf=\"username && !hide_fields.includes('username')\"\n                    >\n                        <label i18n>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p user *ngIf=\"user && !hide_fields.includes('user')\">\n                        <label i18n>Type:</label> {{ user.type }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent extends AsyncHandler implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance?.toFixed(2);\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public zoom = 1;\n\n    public get hide_fields() {\n        return this._settings.get('app.explore.hide_device_fields') || EMPTY;\n    }\n\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow((this._details.last_seen || 0) * 1000, {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    /** Diameter of the radius circle */\n    public get diameter() {\n        return this._details.variance * 100 * this.zoom;\n    }\n\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(\n                (this._details.last_seen || 0) * 1000,\n                new Date()\n            )\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {\n        super();\n    }\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n            this.subscription(\n                'zoom',\n                this._details.zoom$.subscribe((_) => (this.zoom = _))\n            );\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (!mod) return;\n        this.username = 'Loading...';\n        const details = await mod\n            .execute('check_ownership_of', [this.mac])\n            .catch((_) => null);\n        this.username =\n            details && details.assigned_to ? details.assigned_to : '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Injectable } from '@angular/core';\nimport { LockersService } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreStateService } from './explore-state.service';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { filter, map } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { getModule } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreLockersService extends AsyncHandler {\n    private _status = new BehaviorSubject([]);\n    public readonly lockers$ = this._lockers.filtered_lockers$;\n    public readonly status = combineLatest([\n        this._org.active_building,\n        this._explore.level,\n    ]).pipe(\n        map(([_, lvl]) => {\n            if (!lvl) return [];\n            const sys_id = this._org.binding('area_management');\n            if (!sys_id) return of({});\n            let binding = getModule(sys_id, 'AreaManagement').binding(lvl.id);\n            this.subscription(\n                `lvl-in_use`,\n                binding\n                    .listen()\n                    .subscribe((data) =>\n                        this._status.next(\n                            data?.value?.filter(\n                                (_) => _.location === 'locker'\n                            ) || []\n                        )\n                    )\n            );\n            this.subscription('lvl-in_use_bind', binding.bind());\n        })\n    );\n\n    public readonly locker_status = combineLatest([\n        this._explore.level,\n        this._lockers.lockers_banks$,\n        this.lockers$,\n        this._status,\n    ]).pipe(\n        map(([lvl, locker_banks, lockers, status]) => {\n            if (!lvl) return [];\n            const features = [];\n            const map_status = {};\n            const colours = this._settings.get('app.explore.colors') || {};\n            const banks = unique(\n                locker_banks\n                    .filter((_) => _.level_id === lvl.id)\n                    .map((_) => _.id)\n            );\n            for (const bank of banks) {\n                const bank_lockers = lockers.filter((_) => _.bank_id === bank);\n                let in_use_count = 0;\n                for (const locker of bank_lockers) {\n                    const in_use = status.find(\n                        (_) => _.locker_id === locker.id && _.allocated\n                    );\n                    in_use_count += in_use ? 1 : 0;\n                }\n                const bank_info = locker_banks.find((_) => _.id === bank);\n                features.push({\n                    location: bank_info.map_id,\n                    content: ExploreLockerBankInfoComponent,\n                    full_size: true,\n                    no_scale: true,\n                    z_index: 20,\n                    data: {\n                        bank: bank_info,\n                        lockers,\n                        in_use_count,\n                        locker_count: bank_lockers.length,\n                        system: this._org.binding('area_management'),\n                    },\n                });\n                const in_use_percent = in_use_count / bank_lockers.length;\n                const value =\n                    in_use_percent > 0.8\n                        ? 'busy'\n                        : in_use_percent > 0.3\n                        ? 'pending'\n                        : 'free';\n                map_status[`#${bank_info.map_id}`] = {\n                    fill:\n                        colours[`lockers-${value}`] ||\n                        colours[`${value}`] ||\n                        DEFAULT_COLOURS[`${value}`],\n                };\n            }\n            this._explore.setStyles('lockers', map_status);\n            this._explore.setFeatures('lockers', features);\n        })\n    );\n\n    constructor(\n        private _lockers: LockersService,\n        private _explore: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'level',\n            this._explore.level\n                .pipe(filter((_) => !!_))\n                .subscribe((level) => this._lockers.setLevel(level.id))\n        );\n        this.subscription('status', this.status.subscribe());\n        this.subscription('locker_status', this.locker_status.subscribe());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2 w-full\">\n            <mat-form-field\n                overlay\n                buildings\n                class=\"flex-1 min-w-[10.5rem]\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    i18n-placeholder\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                levels\n                class=\"flex-1 min-w-[10.25rem]\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    i18n-placeholder\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5rem;\n            }\n\n            mat-form-field[has-bld='true'] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent extends AsyncHandler implements OnInit {\n    /** List of available buildings */\n    public readonly buildings = this._org.active_buildings;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => {\n        this._state.setFeatures('_located', []);\n        this.timeout(\n            'set_level',\n            () =>\n                this._router.navigate([], {\n                    relativeTo: this._route,\n                    queryParams: { zone: lvl.id },\n                }),\n            201\n        );\n    };\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('zone')\n                    ? this._state.setLevel(params.get('zone'))\n                    : ''\n            )\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { Point } from '@placeos/svg-viewer';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { MapLocation, showStaff, User } from '@placeos/users';\n\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { MapRadiusComponent } from 'libs/components/src/lib/map-radius.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { ExploreParkingService } from './explore-parking.service';\nimport { ExploreLockersService } from './explore-lockers.service';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async)?.zoom\"\n            [center]=\"(positions | async)?.center\"\n            (zoomChange)=\"updateZoom($event)\"\n            (centerChange)=\"updateCenter($event)\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-2 right-2\"\n        ></explore-zoom-controls>\n        <div\n            controls\n            class=\"absolute top-2 left-2 max-w-[calc(100vw-1rem)] bg-white dark:bg-neutral-800 border border-gray-200 dark:border-neutral-500 rounded p-2 space-y-2 overflow-hidden\"\n        >\n            <explore-map-controls></explore-map-controls>\n            <div class=\"flex items-center space-x-2\" *ngIf=\"hide_zones\">\n                <mat-slide-toggle\n                    name=\"zones\"\n                    class=\"ml-2\"\n                    [ngModel]=\"!(options | async)?.disable?.includes('zones')\"\n                    (ngModelChange)=\"toggleZones($event)\"\n                ></mat-slide-toggle>\n                <label for=\"zones\" class=\"mb-0\" i18n>Zones</label>\n            </div>\n        </div>\n        <div\n            legend\n            *ngIf=\"show_legend && legend.length\"\n            class=\"absolute bottom-2 left-2 p-2 rounded bg-white dark:bg-neutral-800 border border-gray-300\"\n        >\n            <h3 class=\"mb-2 font-medium\" i18n>Legend</h3>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngFor=\"let pair of legend\"\n            >\n                <div\n                    class=\"w-3 h-3 rounded-full border border-gray-400\"\n                    [style.background-color]=\"pair[1]\"\n                ></div>\n                <div class=\"text-sm\">{{ pair[0] }}</div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [zones] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [\n        ExploreDesksService,\n        ExploreSpacesService,\n        ExploreZonesService,\n        ExploreParkingService,\n        ExploreLockersService,\n        SpacePipe,\n    ],\n})\nexport class ExploreMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n    /** Observable for user messages */\n    public readonly message = this._state.message;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public async toggleZones(enabled: boolean) {\n        const options = await this.options.pipe(take(1)).toPromise();\n        const disable = !enabled\n            ? unique([...(options.disable || []), 'zones', 'devices'])\n            : options.disable?.filter(\n                  (_) => _ !== 'zones' && _ !== 'devices'\n              ) || [];\n        this.setOptions({ disable });\n    }\n\n    public get show_legend() {\n        return !!this._settings.get('app.explore.show_legend');\n    }\n\n    public get hide_zones() {\n        return !!this._settings.get('app.explore.hide_zones');\n    }\n\n    public get legend(): [string, string][] {\n        return this._settings.get('app.explore.legend') || EMPTY;\n    }\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _parking: ExploreParkingService,\n        private _lockers: ExploreLockersService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._state.reset();\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.toggleZones(false);\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level') || params.has('zone')) {\n                    this._state.setLevel(\n                        params.get('level') || params.get('zone')\n                    );\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    this.locateSpace(params.get('space'));\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(\n                        user instanceof Array ? user[0] : user\n                    ).catch((_) => {\n                        notifyError(`Unable to locate ${params.get('user')}`);\n                        this._router.navigate([], {\n                            relativeTo: this._route,\n                            queryParams: {},\n                        });\n                    });\n                } else if (params.has('locate')) {\n                    this._locateFeature(\n                        params.get('locate'),\n                        params.get('name')\n                    );\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    public updateZoom(zoom: number) {\n        this._state.setPositions(zoom, this._state.positions.center);\n    }\n\n    public updateCenter(center: Point) {\n        this._state.setPositions(this._state.positions.zoom, center);\n    }\n\n    private _locateFeature(id: string, name = '') {\n        const has_coordinates = id.includes(',');\n        const parts = id.split(',');\n        const feature: any = {\n            track_id: `locate-${id}`,\n            location: has_coordinates\n                ? { x: parseFloat(parts[0]), y: parseFloat(parts[1]) }\n                : id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: { message: name },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateSpace(id: string) {\n        const space = await this._space_pipe.transform(id);\n        if (!space) return notifyError('Unable to load space details.');\n        this._state.setLevel(this._org.levelWithID(space.zones)?.id);\n        const feature: any = {\n            track_id: `locate-${space.id}`,\n            location: space.map_id,\n            content: MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () =>\n            this._state.setFeatures('_located', [feature])\n        );\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.binding('location_services');\n        if (!locate_details)\n            throw 'Location services is not setup for this application.';\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n                priority: [],\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [\n                user.email,\n                user.username || user.id,\n            ])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            throw 'No locations for the given user';\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level])?.id);\n        const pos: any = locations[0].position;\n        const { coordinates_from } = locations[0];\n        const feature: any = {\n            track_id: `locate-${user.id}`,\n            location:\n                locations[0].type === 'wireless'\n                    ? {\n                          x: coordinates_from?.includes('right')\n                              ? 1 - pos.x\n                              : pos.x,\n                          y: coordinates_from?.includes('bottom')\n                              ? 1 - pos.y\n                              : pos.y,\n                      }\n                    : pos,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            z_index: 99,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n                last_seen: locations[0].last_seen,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    SettingsService,\n} from '@placeos/common';\nimport { showMetadata } from '@placeos/ts-client';\nimport {\n    addDays,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, forkJoin } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { queryBookings } from 'libs/bookings/src/lib/bookings.fn';\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\n\nexport interface ExploreParkingOptions {\n    date: number;\n    user?: string;\n}\n\n@Injectable()\nexport class ExploreParkingService extends AsyncHandler {\n    private _options = new BehaviorSubject<ExploreParkingOptions>({\n        date: startOfDay(Date.now()).valueOf(),\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    public readonly options = this._options.asObservable();\n\n    /** List of available parking levels for the active building */\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => l.filter((_) => _.tags.includes('parking')))\n    );\n\n    /** List of current bookings for the current building */\n    public readonly events = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n    /** Any event that the selected user has for the current date */\n    public readonly existing_event = combineLatest([this._options]).pipe(\n        switchMap(([_]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(endOfDay(_.date)),\n                type: 'parking',\n                email: _?.user || currentUser()?.email,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of current bookings for the current building */\n    public readonly week_events = combineLatest([\n        this._org.active_building,\n        this._options,\n    ]).pipe(\n        switchMap(([bld, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(_.date)),\n                period_end: getUnixTime(addDays(endOfDay(_.date), 6)),\n                type: 'parking',\n                zones: bld?.id,\n            })\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the active building */\n    public readonly spaces = this.levels.pipe(\n        switchMap((_) =>\n            forkJoin(\n                _.map((l) =>\n                    showMetadata(l.id, 'parking-spaces').pipe(\n                        map((d) =>\n                            d.details.map((s) => ({ ...s, zone_id: l.id }))\n                        )\n                    )\n                )\n            )\n        ),\n        map((_) => flatten(_)),\n        shareReplay(1)\n    );\n\n    /** Available parking spaces for the current level and date */\n    public readonly available_spaces = combineLatest([\n        this.events,\n        this.spaces,\n        this._state.level,\n    ]).pipe(\n        map(([events, spaces, level]) =>\n            spaces.filter(\n                (_) =>\n                    _.zone_id === level?.id &&\n                    !events.find((e) => e.asset_id === _.id)\n            )\n        )\n    );\n\n    public readonly week_availablility = combineLatest([\n        this.week_events,\n        this.spaces,\n        this._options,\n    ]).pipe(\n        map(([events, spaces, { date }]) => {\n            const availability = {};\n            for (let i = 0; i < 7; i++) {\n                const day = addDays(date, i);\n                const day_events = events.filter((_) => isSameDay(day, _.date));\n                availability[day.valueOf()] = spaces.filter(\n                    (_) => !day_events.find((e) => e.asset_id === _.id)\n                ).length;\n            }\n            return availability;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            combineLatest([this.spaces, this.available_spaces]).subscribe(\n                ([spaces, available]) =>\n                    this._updateParkingSpaces(spaces, available)\n            )\n        );\n        this.interval('poll', () => this._poll.next(Date.now()), 10 * 1000);\n    }\n\n    public setOptions(options: Partial<ExploreParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    private _updateParkingSpaces(spaces, available) {\n        const styles = {};\n        const labels = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const can_book = !!available.find((_) => _.id === space.id);\n            const status = can_book ? 'free' : 'busy';\n            styles[`#${space.map_id}`] = {\n                fill:\n                    colours[`parking-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n            if (can_book) {\n                labels.push({\n                    zoom_level: 2,\n                    location: `${space.map_id}`,\n                    content: `${space.name}\\nFree`,\n                });\n            }\n        }\n        this._state.setStyles('parking', styles);\n        this._state.setLabels('parking', labels);\n    }\n}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { ExploreSearchService, SearchResult } from './explore-search.service';\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-white m-2 flex items-center z-10 relative overflow-hidden outline-none\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl outline-none\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                keyboard\n                class=\"flex-1 text-base border-none outline-none\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                i18n-placeholder\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner\n                *ngIf=\"loading | async\"\n                class=\"mr-2\"\n                [diameter]=\"32\"\n            ></mat-spinner>\n            <div\n                class=\"absolute bottom-0 left-8 right-8 min-w-[20rem]\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <ng-container\n                *ngIf=\"(loading | async) !== true && (show || search_str)\"\n            >\n                <mat-option\n                    *ngIf=\"!(results | async)?.length\"\n                    class=\"pointer-events-none\"\n                    i18n\n                >\n                    No matches found\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of results | async | slice: 0:5\"\n                    [value]=\"option\"\n                >\n                    <div\n                        class=\"flex items-center leading-tight w-[26rem] max-w-[calc(100vw-2rem)]\"\n                    >\n                        <div class=\"flex-1 w-1/2 overflow-hidden\">\n                            <div class=\"truncate w-full\">{{ option.name }}</div>\n                            <div class=\"text-xs\">{{ option.description }}</div>\n                        </div>\n                        <div\n                            class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\"\n                        >\n                            {{ option.type }}\n                        </div>\n                    </div>\n                </mat-option>\n            </ng-container>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                margin: 0.55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends AsyncHandler {\n    public show = false;\n    public search_str = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) =>\n        i instanceof Object ? this.select(i) : this.setFilter(i);\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    @HostListener('document:click', ['$event'])\n    public checkClick(event) {\n        if (!this._el?.nativeElement?.contains(event.target)) {\n            this.show = false;\n            this._input_el?.nativeElement?.blur();\n        }\n    }\n\n    @HostListener('document:touchstart', ['$event']) public onTouch = (e) =>\n        this.checkClick(e);\n\n    constructor(\n        private _el: ElementRef<HTMLElement>,\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout(\n                'focus',\n                () => this._input_el.nativeElement.focus(),\n                300\n            );\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        this.setFilter('');\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        const type =\n            item.type === 'space'\n                ? 'space'\n                : item.type === 'feature'\n                ? 'feature'\n                : 'user';\n        query[type] = item.id;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: query,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    PlaceZoneMetadata,\n    authority,\n    listChildMetadata,\n    querySystems,\n    queryUsers,\n} from '@placeos/ts-client';\nimport { SettingsService, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { moduleFromMetadata } from '@placeos/organisation';\n\nexport interface SearchResult {\n    /** Unique ID of the result item */\n    id: string;\n    /** Type of the item being displayed */\n    type: 'space' | 'user' | 'contact' | 'feature';\n    /** Main display string for the item */\n    name: string;\n    /** Secondary display string for the item. e.g. email, location, coordinates */\n    description: string;\n    /** Whether custom user */\n    is_role?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for staff users */\n    private _emergency_contacts = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly emergency_contacts =\n        this._emergency_contacts.asObservable();\n\n    private _user_search: Observable<StaffUser[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? (this.search_fn(q) as any as Observable<StaffUser[]>).pipe(\n                      catchError(() => of([] as StaffUser[]))\n                  )\n                : of([] as StaffUser[])\n        ),\n        shareReplay(1)\n    );\n\n    private _space_search: Observable<Space[]> = this._filter.pipe(\n        debounceTime(400),\n        tap(() => this._loading.next(true)),\n        switchMap((q) =>\n            q?.length > 2\n                ? querySystems({ q, zone_id: this._org.organisation.id }).pipe(\n                      map(({ data }) =>\n                          data\n                              .filter((_) => _.map_id)\n                              .map(\n                                  (_) =>\n                                      new Space({\n                                          ..._,\n                                          level: this._org.levelWithID(\n                                              _.zones as any\n                                          ),\n                                      } as any)\n                              )\n                      )\n                  )\n                : of([])\n        ),\n        catchError(() => [])\n    );\n\n    private _points_of_interest: Observable<SearchResult[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap(() =>\n                listChildMetadata(this._org.building.id, {\n                    name: 'points_of_interest',\n                }).pipe(catchError(() => of({ details: [] })))\n            ),\n            map((data: PlaceZoneMetadata[]) => {\n                const list = [];\n                for (const item of data) {\n                    const metadata = item.metadata.points_of_interest;\n                    if (!metadata) continue;\n                    for (const poi of metadata.details as any[]) {\n                        list.push({\n                            id: poi.id,\n                            type: 'feature',\n                            name: poi.name,\n                            description: '',\n                            zone: item.zone,\n                        });\n                    }\n                }\n                return list;\n            })\n        );\n\n    public readonly search_results: Observable<SearchResult[]> = combineLatest([\n        this._filter,\n        this._space_search,\n        this._user_search,\n        this._emergency_contacts,\n        this._points_of_interest,\n    ]).pipe(\n        map(([filter, spaces, users, contacts, features]) => {\n            const search = filter.toLowerCase();\n            const results = unique(\n                [\n                    ...spaces\n                        .filter(\n                            (_) =>\n                                _.email.toLowerCase().includes(search) ||\n                                _.name.toLowerCase().includes(search) ||\n                                _.display_name.toLowerCase().includes(search)\n                        )\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'space',\n                            name: s.display_name || s.name,\n                            description: `Capacity: ${s.capacity} `,\n                        })),\n                    ...contacts\n                        .map(\n                            (u) =>\n                                ({\n                                    id: u.email,\n                                    type: (u as any).type || 'contact',\n                                    is_role: true,\n                                    name: u.name,\n                                    description: u.email,\n                                } as any)\n                        )\n                        .filter(\n                            (_) =>\n                                _.name.toLowerCase().includes(search) ||\n                                _.description.toLowerCase().includes(search) ||\n                                _.type.toLowerCase().includes(search)\n                        ),\n                    ...users.map((u) => ({\n                        id: u.email,\n                        type: 'user',\n                        name: u.name,\n                        description: u.email,\n                    })),\n                    ...features\n                        .filter((_) => _.name.toLowerCase().includes(search))\n                        .map((s) => ({\n                            id: s.id,\n                            type: 'feature',\n                            name: s.name,\n                            description: '',\n                            zone: (s as any).zone?.id,\n                        })),\n                ],\n                'id'\n            );\n            results.sort((a, b) => a.name.localeCompare(b.name));\n            return results;\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n    /** Function used to query for users */\n    public search_fn = (q: string) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data)\n              )\n            : searchStaff(q);\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.search_results.subscribe();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const mod = moduleFromMetadata(\n            this._org.binding('location_services'),\n            'LocationServices'\n        );\n        if (mod) {\n            const binding = mod.binding('emergency_contacts');\n            binding.listen().subscribe((contacts_map) => {\n                const list = [];\n                for (const type in contacts_map) {\n                    for (const user of contacts_map[type]) {\n                        list.push({ ...user, type });\n                    }\n                }\n                this._emergency_contacts.next(list);\n            });\n            binding.bind();\n        }\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\nexport interface SensorInfoData {\n    temp: number;\n    humidity: number;\n}\n\n@Component({\n    selector: 'explore-sensor-info',\n    template: `\n        <div\n            class=\"absolute center bg-white rounded-lg border border-gray-300 p-2 text-xl\"\n        >\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"temp\"\n            >\n                <app-icon>thermostat</app-icon>\n                <div class=\"\">{{ temp }}˚F</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 whitespace-nowrap pr-2\"\n                *ngIf=\"humidity\"\n            >\n                <app-icon>opacity</app-icon>\n                <div class=\"\">{{ humidity }}%</div>\n            </div>\n            <div\n                *ngIf=\"temp > 82\"\n                class=\"absolute top-0 right-0 rounded-full translate-x-1/2 -translate-y-1/2 bg-white border border-gray-300\"\n            >\n                <app-icon class=\"text-error text-xl\">error</app-icon>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ExploreSensorInfoComponent {\n    public readonly temp = this._details.temp || 0;\n    public readonly humidity = this._details.humidity || 0;\n\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: SensorInfoData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    ResourceRestriction,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { rulesForSpace } from 'libs/events/src/lib/helpers';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _restrictions: Observable<ResourceRestriction[]> =\n        this._org.active_building.pipe(\n            debounceTime(50),\n            switchMap(() => {\n                return showMetadata(\n                    this._org.building.id,\n                    `desk_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space, force: boolean = false) {\n        const { hidden } =\n            rulesForSpace(\n                { date: Date.now(), duration: 60, space, host: currentUser() },\n                this._org.building.booking_rules\n            ) || {};\n        if (hidden)\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        console.log('Status:', this._statuses[space.id]);\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        console.log('Update Styles');\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        const restrictions =\n            (await this._restrictions.pipe(take(1)).toPromise()) || [];\n        console.log('Got restrictions');\n        for (const space of spaces) {\n            const restriction_list = restrictions.filter((_) =>\n                _.items?.includes(space.id)\n            );\n            const is_restricted = restriction_list.find(\n                ({ start, end }) => Date.now() >= start && Date.now() < end\n            );\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        console.log('Styles:', style_map);\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point, ViewerFeature } from '@placeos/svg-viewer';\nimport { first, map } from 'rxjs/operators';\n\nimport { AsyncHandler, HashMap, SettingsService } from '@placeos/common';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { MapPolygonComponent } from 'libs/components/src/lib/map-polygon.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\nexport interface ZoneData {\n    /** ID of the zone */\n    area_id: string;\n    /** Number of devices in the zone */\n    count: number;\n\n    temperature: number;\n    people_count: number;\n    people_count_sum: number;\n    humidity: number;\n    queue_size: number;\n    counter: number;\n}\n\n@Injectable()\nexport class ExploreZonesService extends AsyncHandler {\n    private _statuses: HashMap<string> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n    private _draw: HashMap<boolean> = {};\n    private _points: HashMap<[number, number][]> = {};\n    private _features: ViewerFeature[] = [];\n\n    private _bind = this._state.level.pipe(\n        map((lvl) => {\n            if (!lvl) return;\n            this._statuses = {};\n            let system_id: any = this._org.binding('area_management');\n            if (!system_id) return;\n            const binding = getModule(system_id, 'AreaManagement').binding(\n                `${lvl.id}:areas`\n            );\n            this.subscription(\n                `zones`,\n                binding.listen().subscribe((d) => this.parseData(d))\n            );\n            this.subscription('binding', binding.bind());\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        const zone_metadata = await Promise.all(\n            this._org.levels.map((bld) =>\n                showMetadata(bld.id, 'map_regions').toPromise()\n            )\n        );\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (!areas) continue;\n            for (const area of areas) {\n                const { capacity, hide_label, label_location, draw_polygon } =\n                    area.properties || {};\n                const { coordinates } = area.geometry || {};\n                this._capacity[area.id] = capacity || 100;\n                this._location[area.id] =\n                    hide_label === false\n                        ? label_location ||\n                          (coordinates?.length\n                              ? getCenterPoint(coordinates)\n                              : null)\n                        : null;\n                this._draw[area.id] =\n                    !!draw_polygon ||\n                    this._settings.get('app.explore.use_zone_polygons');\n                this._points[area.id] = coordinates || [];\n            }\n        }\n        this.updateStatus();\n        this.subscription('bind', this._bind.subscribe());\n    }\n\n    public parseData(data?: { value: ZoneData[] }) {\n        const value = data?.value || [];\n        const labels = [];\n        const features = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < 0.4 ? 'free' : filled < 0.75 ? 'pending' : 'busy';\n            if (!this._location[zone.area_id]) continue;\n            let content = '';\n            if (zone.count) {\n                content += `${zone.count || 0} User Device${\n                    zone.count === 1 ? '' : 's'\n                }\\n`;\n            }\n            if (zone.temperature)\n                content += `Temperature: ${zone.temperature} ˚C\\n`;\n            if (zone.people_count > 0)\n                content += `${zone.people_count_sum} ${\n                    zone.people_count_sum === 1 ? 'Person' : 'People'\n                }\\n`;\n            if (zone.humidity) content += `Humidity: ${zone.humidity}%\\n`;\n            if (zone.queue_size) content += `Queue Size: ${zone.queue_size}%\\n`;\n            if (zone.counter) content += `Count: ${zone.counter}\\n`;\n            labels.push({\n                location: this._location[zone.area_id],\n                content,\n                z_index: 100,\n            });\n            if (\n                this._settings.get('app.explore.show_simple_sensor_info') &&\n                (zone.temperature || zone.humidity)\n            ) {\n                features.push({\n                    location: this._location[zone.area_id],\n                    content: ExploreSensorInfoComponent,\n                    data: { temp: zone.temperature, humidity: zone.humidity },\n                    z_index: 98,\n                });\n            }\n        }\n        this._features = features;\n        if (!this._settings.get('app.explore.show_simple_sensor_info')) {\n            this._state.setLabels('zones', labels);\n        }\n        this.updateStatus();\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const features = [];\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            const colour =\n                colours[`zone-${this._statuses[zone_id]}`] ||\n                colours[`${this._statuses[zone_id]}`] ||\n                DEFAULT_COLOURS[`${this._statuses[zone_id]}`];\n            if (this._draw[zone_id]) {\n                features.push({\n                    track_id: `zone:${zone_id}`,\n                    location: getCenterPoint(this._points[zone_id]),\n                    content: MapPolygonComponent,\n                    data: {\n                        color: colour,\n                        points: this._points[zone_id],\n                    },\n                    z_index: 10,\n                });\n            } else {\n                style_map[`#${zone_id}`] = {\n                    fill: colour,\n                    opacity: 0.6,\n                };\n            }\n        }\n        this._state.setFeatures('zones', [...features, this._features]);\n        this._state.setStyles('zones', style_map);\n    }\n}\n\nfunction getCenterPoint(points: [number, number][]) {\n    const diff: HashMap<number> = (points || []).reduce(\n        (m, [x, y]) => ({\n            x_min: x < m.x_min ? x : m.x_min,\n            x_max: x > m.x_max ? x : m.x_max,\n            y_min: y < m.y_min ? y : m.y_min,\n            y_max: y > m.y_max ? y : m.y_max,\n        }),\n        {\n            x_min: 100,\n            x_max: -100,\n            y_min: 100,\n            y_max: -100,\n        }\n    );\n    return {\n        x: diff.x_min + (diff.x_max - diff.x_min) / 2,\n        y: diff.y_min + (diff.y_max - diff.y_min) / 2,\n    };\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button\n            z-in\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomIn()\"\n            matTooltip=\"Zoom In\"\n            i18n-matTooltip\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <button\n            z-out\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"zoomOut()\"\n            matTooltip=\"Zoom Out\"\n            i18n-matTooltip\n        >\n            <app-icon>remove</app-icon>\n        </button>\n        <button\n            reset\n            icon\n            matRipple\n            class=\"bg-white dark:bg-neutral-800\"\n            (click)=\"reset()\"\n            matTooltip=\"Reset Zoom & Center\"\n            i18n-matTooltip\n        >\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border: 1px solid #9998;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () =>\n        this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@placeos/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedBookingsModule } from 'libs/bookings/src/lib/bookings.module';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { SetDatetimeModalComponent } from './set-datetime-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { ExploreSensorInfoComponent } from './explore-sensor-info.component';\nimport { ExploreLockerBankInfoComponent } from './explore-locker-bank-info.component';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n    SetDatetimeModalComponent,\n    ExploreBookQrComponent,\n    ExploreSensorInfoComponent,\n    ExploreLockerBankInfoComponent,\n    ExploreLockerBankModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule,\n        SharedBookingsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","\nexport * from './explore-desks.service';\nexport * from './explore-map-control.component';\nexport * from './explore-map-view.component';\nexport * from './explore-search.component';\nexport * from './explore-search.service';\nexport * from './explore-space-info.component';\nexport * from './explore-spaces.service';\nexport * from './explore-state.service';\nexport * from './explore-zones.service';\nexport * from './explore-zoom-control.component';\nexport * from './explore-parking.service';\nexport * from './explore.module';\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { BookingAsset } from 'libs/bookings/src/lib/booking-form.service';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: 'set-datetime-modal',\n    template: `\n        <header classs=\"flex items-center justify-between\">\n            <h2>Set date and time</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n            class=\"w-[24rem] max-w-[85vw] pt-4\"\n        >\n            <div\n                *ngIf=\"resource\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4 mb-2\">\n                    <label>Resource:</label>\n                    <div\n                        class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            resource.name ||\n                                resource.map_id ||\n                                'Unknown Resource'\n                        }}\n                    </div>\n                </div>\n            </div>\n            <div\n                *ngIf=\"host\"\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Host</label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"12 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [use_24hr]=\"use_24hr_time\"\n                    >\n                    </a-duration-field>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"w-full p-2 border-t border-gray-200 flex items-center justify-center\"\n        >\n            <button btn matRipple [mat-dialog-close]=\"form.value\" class=\"w-32\">\n                Continue\n            </button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class SetDatetimeModalComponent {\n    public host = this._data.host;\n    public form = new FormGroup({\n        user: new FormControl(this._data.user),\n        date: new FormControl(this._data.date),\n        duration: new FormControl(this._data.duration),\n    });\n\n    public readonly book_until = this._data.until;\n    public readonly resource = this._data.resource;\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            date: number;\n            duration: number;\n            until: number;\n            host: boolean;\n            user?: User;\n            resource: BookingAsset;\n        },\n        private _settings: SettingsService\n    ) {}\n}\n","export * from './lib/form-fields.module';\n\nexport * from './lib/action-field.component';\nexport * from './lib/counter.component';\nexport * from './lib/date-field.component';\nexport * from './lib/duration-field.component';\nexport * from './lib/time-field.component';\nexport * from './lib/user-list-field.component';\nexport * from './lib/user-search-field.component';\nexport * from './lib/image-list-field.component';","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'an-action-field',\n    template: `\n        <button\n            class=\"flex items-center rounded p-2 border border-gray-300 hover:border-black w-full\"\n            type=\"button\"\n            role=\"button\"\n            [attr.disabled]=\"disabled\"\n            [attr.name]=\"name\"\n            form-field\n            tabindex=\"0\"\n            (keydown.enter)=\"performAction()\"\n        >\n            <div\n                placeholder\n                class=\"flex-1 w-0 truncate\"\n                (click)=\"performAction()\"\n            >\n                <ng-content></ng-content>\n            </div>\n            <app-icon class=\"text-xl\" (click)=\"performAction()\">\n                arrow_drop_{{ show_tooltip ? 'up' : 'down' }}\n            </app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host > div:hover {\n                box-shadow: inset 0 0 0 1px #000;\n            }\n        `,\n    ],\n})\nexport class ActionFieldComponent {\n    /** Name of the field */\n    @Input() public name: string;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Emitter for user interaction events */\n    @Output('onAction') public on_action = new EventEmitter();\n    /** Whether to show tooltip */\n    public show_tooltip = false;\n\n    /**\n     * Emit that the user has performed an action on the field\n     */\n    public performAction() {\n        this.show_tooltip = !this.show_tooltip;\n        this.on_action.emit();\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'a-counter',\n    template: `\n        <div\n            counter\n            class=\"flex items-center text-base\"\n            (window:keydown.shift)=\"shift_key = true\"\n            (window:keydown.control)=\"ctrl_key = true\"\n            (window:keydown.meta)=\"ctrl_key = true\"\n            (window:keyup.shift)=\"shift_key = false\"\n            (window:keyup.control)=\"ctrl_key = false\"\n            (window:keyup.meta)=\"ctrl_key = false\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"remove\"\n                type=\"button\"\n                [disabled]=\"!value || value === min\"\n                (click)=\"remove()\"\n            >\n                <app-icon>remove</app-icon>\n            </button>\n            <div value class=\"p-1 text-center\">\n                {{ (render_fn ? render_fn(value) : value) || '0' }}\n            </div>\n            <button\n                icon\n                matRipple\n                name=\"add\"\n                type=\"button\"\n                [disabled]=\"value === max\"\n                (click)=\"add()\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CounterComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CounterComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public step = 1;\n    /** Maximum amount for the counter */\n    @Input() public max = 10;\n    /** Minimum amount for the counter */\n    @Input() public min = 0;\n    /** Custom function for rendering the counter value */\n    @Input() public render_fn: (v: number) => string;\n    /** Current value of the counter */\n    public value: number;\n    /** Whether shift key is being held by the user */\n    public shift_key: boolean;\n    /** Whether control key is being held by the user */\n    public ctrl_key: boolean;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public add() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value += step;\n        if (this.value > this.max) {\n            this.value = this.max || 10;\n        }\n        this.setValue(this.value);\n    }\n\n    /** Remove the `step` from the current value */\n    public remove() {\n        if (!this.value) {\n            this.value = this.min || 0;\n        }\n        const step = this.ctrl_key\n            ? 100 * this.step\n            : this.shift_key\n            ? 10 * this.step\n            : this.step || 1;\n        this.value -= step;\n        if (this.value < this.min) {\n            this.value = this.min || 0;\n        }\n        this.setValue(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    addDays,\n    addMonths,\n    isBefore,\n    isSameMonth,\n    set,\n    setDay,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\n\ninterface DateItem {\n    id: number;\n    is_past: boolean;\n    is_month: boolean;\n}\n\n@Component({\n    selector: 'date-calendar',\n    template: `\n        <div class=\"p-2\">\n            <div class=\"flex items-center justify-between\">\n                <div class=\"pl-1.5 pr-2 font-medium\">\n                    {{ date_list[6]?.id || date | date: 'LLLL YYYY' }}\n                </div>\n                <div class=\"flex items-center\">\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-next-month\"\n                        [disabled]=\"date_list[0].id < from\"\n                        (click)=\"changeMonth(-1)\"\n                    >\n                        <app-icon>chevron_left</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"schedule-previous-month\"\n                        [disabled]=\"date_list[34].id > to\"\n                        (click)=\"changeMonth(1)\"\n                    >\n                        <app-icon>chevron_right</app-icon>\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center text-sm mb-2 pb-2 border-b border-gray-200\"\n            >\n                <div\n                    class=\"flex-1 opacity-60 text-center\"\n                    *ngFor=\"let day of date_list | slice: 0:7\"\n                >\n                    {{ day.id | date: 'EE' }}\n                </div>\n            </div>\n            <div class=\"flex items-center justify-between flex-wrap\">\n                <button\n                    icon\n                    name=\"schedule-set-date\"\n                    class=\"min-w-[2.25rem] w-9 h-9 relative overflow-visible my-0.5\"\n                    *ngFor=\"let day of date_list\"\n                    [class.hover:bg-blue-600]=\"day.id !== active_date\"\n                    [class.hover:bg-opacity-20]=\"day.id !== active_date\"\n                    [class.text-opacity-30]=\"!day.is_month\"\n                    [class.text-white]=\"day.id === active_date\"\n                    [class.text-black]=\"day.id !== active_date\"\n                    [class.dark:text-white]=\"day.id !== active_date\"\n                    [class.dark:text-opacity-30]=\"!day.is_month\"\n                    [class.bg-primary]=\"day.id === active_date\"\n                    [class.font-normal]=\"day.id !== active_date\"\n                    (click)=\"setValue(day.id)\"\n                    [disabled]=\"day.id < from || day.id > to\"\n                >\n                    {{ day.id | date: 'd' }}\n                    <div\n                        class=\"absolute -inset-[2px] border border-primary rounded-full overflow-hidden\"\n                        matRipple\n                        *ngIf=\"today === day.id\"\n                    ></div>\n                    <div\n                        class=\"absolute inset-0 overflow-hidden rounded-full\"\n                        matRipple\n                    ></div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateCalendarComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateCalendarComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    @Input() public from = 0;\n    @Input() public to = Date.now() * 10;\n    @Input() public offset_weekday: number = 0;\n    public readonly today = startOfDay(Date.now()).valueOf();\n    public date: number = Date.now();\n    public active_date: number = startOfDay(Date.now()).valueOf();\n    public offset: number = 0;\n    public date_list: DateItem[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.offset_weekday) {\n            this.generateDates();\n        }\n    }\n\n    public setValue(new_value: number) {\n        const date = new Date(new_value);\n        this.date = set(this.date, {\n            date: date.getDate(),\n            month: date.getMonth(),\n            year: date.getFullYear(),\n        }).valueOf();\n        this.active_date = startOfDay(this.date).valueOf();\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    public writeValue(value: number) {\n        this.date = value;\n        this.active_date = startOfDay(value).valueOf();\n        this.offset = 0;\n        this.generateDates();\n    }\n\n    public changeMonth(change: number) {\n        this.offset += change;\n        this.generateDates();\n    }\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    public generateDates() {\n        const offset =\n            this._settings.get('app.week_start') || this.offset_weekday;\n        const date = addMonths(this.date, this.offset);\n        let start = startOfWeek(startOfMonth(date), {\n            weekStartsOn: offset as any,\n        });\n        const now = startOfDay(Date.now());\n        const list = [];\n        while (list.length < 42) {\n            list.push({\n                id: start.valueOf(),\n                is_past: isBefore(start, now),\n                is_month: isSameMonth(start, date),\n            });\n            start = addDays(start, 1);\n        }\n        this.date_list = list;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Injector,\n    Input,\n    OnInit,\n    Optional,\n    ViewChild,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR,\n    NgControl,\n} from '@angular/forms';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { addYears, endOfDay, format, set, startOfDay } from 'date-fns';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <button\n            class=\"flex items-center justify-between border border-black/30 hover:border-black rounded h-12 w-full\"\n            customTooltip\n            [content]=\"calendar_picker\"\n            yPosition=\"top\"\n            [disabled]=\"disabled\"\n            [class.opacity-30]=\"disabled\"\n            matRipple\n        >\n            <p class=\"px-4 py-2 flex-1 truncate w-1/2 text-left font-normal\">\n                {{ date | date: 'MMMM d, yyyy' }}\n            </p>\n            <div class=\"h-10 w-10 flex items-center justify-center text-2xl\">\n                <app-icon>today</app-icon>\n            </div>\n        </button>\n        <div class=\"error h-5 p-1 text-xs text-error\">\n            <span *ngIf=\"false\"><ng-content></ng-content></span>\n        </div>\n        <ng-template #calendar_picker>\n            <div class=\"relative w-[18rem] rounded bg-white px-2 py-4\">\n                <date-calendar\n                    [ngModel]=\"date\"\n                    [from]=\"from\"\n                    [to]=\"to\"\n                    [offset_weekday]=\"week_start\"\n                    (ngModelChange)=\"setValue($event)\"\n                ></date-calendar>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = startOfDay(Date.now()).valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Index of the day to start the week on when displaying the calendar */\n    @Input() public week_start: number = 0;\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Currently selected date */\n    public date: number = Date.now();\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n    private _control?: NgControl;\n\n    public get has_error(): boolean {\n        return this._control?.invalid && this._control?.touched;\n    }\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(private _injector: Injector) {\n        super();\n    }\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this._from) || startOfDay(new Date());\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this._to) || addYears(endOfDay(new Date()), 1);\n    }\n\n    public ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this.date = Date.now();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = new Date(this.date);\n        let new_date = set(new_value, {\n            hours: old_date.getHours(),\n            minutes: old_date.getMinutes(),\n        }).valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new_date;\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || Date.now();\n        this._tooltip?.close();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { addMinutes, formatDuration } from 'date-fns';\n\nexport interface DurationOption {\n    id: number;\n    name: string;\n    date?: number;\n}\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"duration + ' minutes'\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let option of duration_options\"\n                        [value]=\"option.id\"\n                    >\n                        <ng-container *ngIf=\"!force\">\n                            {{\n                                option.date\n                                    ? (option.date\n                                          | date\n                                              : (option.id >= 24 * 60\n                                                    ? 'mediumDate'\n                                                    : use_24hr\n                                                    ? 'HH : mm'\n                                                    : 'h : mm a')) + ' ('\n                                    : ''\n                            }}{{ option.name }}{{ option.date ? ')' : '' }}\n                        </ng-container>\n                        {{ force }}\n                    </mat-option>\n                </mat-select>\n                <mat-error><ng-content></ng-content></mat-error>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Maximum duration option available */\n    @Input() public max = 240;\n    /** Minimum duration option available */\n    @Input() public min = 30;\n    /** Step value between options */\n    @Input() public step = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public custom_options: number[] = [];\n\n    @Input() public force: string;\n\n    @Input() public use_24hr = false;\n\n    public duration = 60;\n    /** List of available duration options */\n    public duration_options: DurationOption[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(\n            this.max,\n            this.min,\n            this.step\n        );\n        this._updateOption();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (\n            changes.max ||\n            changes.min ||\n            changes.step ||\n            changes.time ||\n            changes.custom_options\n        ) {\n            this.duration_options = this.generateDurationOptions(\n                this.max,\n                this.min,\n                this.step\n            );\n            this._updateOption();\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n        this._updateOption();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number) {\n        const blocks: DurationOption[] = [];\n        let time = min;\n        const date = this.time ? this.time : null;\n\n        // Add special cases\n        for (const option of this.custom_options) {\n            blocks.push({\n                id: option,\n                date: date ? addMinutes(date, option).valueOf() : undefined,\n                name:\n                    option >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(option / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(option / 60),\n                              minutes: option % 60,\n                          })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                date: date ? addMinutes(date, time).valueOf() : undefined,\n                name:\n                    time === 0\n                        ? formatDuration({ minutes: 0 }, { zero: true })\n                        : time >= 24 * 60\n                        ? `${formatDuration({\n                              days: Math.floor(time / (24 * 60)),\n                          })}`\n                        : `${formatDuration({\n                              hours: Math.floor(time / 60),\n                              minutes: time % 60,\n                          })}`,\n            });\n            time += step;\n        }\n        blocks.sort((a, b) => a.id - b.id);\n        return blocks;\n    }\n\n    private _updateOption() {\n        if (!this.duration_options?.length) return;\n        const idx = this.duration_options.findIndex(\n            (_) => _.id === this.duration\n        );\n        if (idx < 0) this.setValue(this.min);\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\nimport { UploadListFieldComponent } from './upload-list-field.component';\nimport { UploadFileFieldComponent } from './upload-file-field.component';\nimport { SpaceListFieldComponent } from './space-list-field.component';\nimport { RichTextInputComponent } from './rich-text-input.component';\nimport { HostSelectFieldComponent } from './host-select-field.component';\nimport { ImageListFieldComponent } from './image-list-field.component';\nimport { RecurrenceFieldComponent } from './recurrence-field.component';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { SupportTicketModalComponent } from './support-ticket-modal.component';\nimport { DateCalendarComponent } from './date-calendar.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent,\n    UploadListFieldComponent,\n    UploadFileFieldComponent,\n    SpaceListFieldComponent,\n    RichTextInputComponent,\n    HostSelectFieldComponent,\n    ImageListFieldComponent,\n    SupportTicketModalComponent,\n\n    RecurrenceFieldComponent,\n    RecurrenceModalComponent,\n    DateCalendarComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatRippleModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatChipsModule,\n        ClipboardModule,\n        ComponentsModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { currentUser, unique } from '@placeos/common';\nimport { showStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Calendar } from 'libs/calendar/src/lib/calendar.class';\nimport { queryCalendars } from 'libs/calendar/src/lib/calendar.fn';\nimport { of, zip } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'host-select-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"this.item?.email\"\n                (ngModelChange)=\"setValue($event)\"\n                [disabled]=\"disabled\"\n                [placeholder]=\"\n                    item?.email ? item.name || item.email : 'Select host'\n                \"\n                i18n-placeholder\n            >\n                <mat-option\n                    *ngFor=\"let user of users | async\"\n                    [value]=\"user?.email\"\n                    class=\"leading-tight\"\n                >\n                    <div class=\"flex flex-col\">\n                        <div>{{ user.name }}</div>\n                        <span class=\"hidden\">&nbsp;|&nbsp;</span>\n                        <div class=\"text-xs opacity-60\">{{ user?.email }}</div>\n                    </div>\n                </mat-option>\n            </mat-select>\n            <mat-error i18n>Host is required</mat-error>\n        </mat-form-field>\n        <ng-container *ngIf=\"users | async\"></ng-container>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => HostSelectFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class HostSelectFieldComponent implements ControlValueAccessor {\n    public item?: User;\n    public readonly users = of(1).pipe(\n        switchMap(() =>\n            queryCalendars().pipe(catchError((_) => of([] as Calendar[])))\n        ),\n        switchMap((list) =>\n            zip(\n                ...list.map((_) =>\n                    showStaff(_.id).pipe(catchError((_) => of(null)))\n                )\n            )\n        ),\n        map((_) => unique([currentUser(), ..._], 'email')),\n        shareReplay(1)\n    );\n    public disabled = false;\n\n    private _onChange: (_: User) => void;\n    private _onTouch: (_: User) => void;\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public async setValue(email: string) {\n        const users = await this.users.pipe(take(1)).toPromise();\n        this.item = users?.find((_) => _.email === email);\n        if (!this.item) this.item = new User({ email });\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.item = value;\n        if (!value?.email) this.item = currentUser();\n    }\n\n    public readonly registerOnChange = (fn: (_: User) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: User) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport {\n    AsyncHandler,\n    SettingsService,\n    UploadDetails,\n    notifyInfo,\n    unique,\n    uploadFile,\n} from '@placeos/common';\n\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UploadPermissionsModalComponent } from 'libs/components/src/lib/upload-permissions-modal.component';\n\n@Component({\n    selector: 'image-list-field',\n    template: `\n        <div\n            images\n            #image_list\n            class=\"space-x-2 py-2 overflow-hidden mb-2 w-full flex items-center relative\"\n            (window:resize)=\"ngAfterViewInit()\"\n        >\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    class=\"relative rounded border-2 border-gray-200 dark:border-neutral-500 border-dashed flex-shrink-0 flex flex-col items-center justify-center h-32 w-36 hover:bg-black/10 dark:hover:bg-white/10 cursor-pointer\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                >\n                    <app-icon class=\"text-4xl opacity-60\">add</app-icon>\n                    <p class=\"opacity-60\" i18n>Upload Image(s)</p>\n                    <input\n                        type=\"file\"\n                        class=\"absolute inset-0 opacity-0 h-32 w-32 cursor-pointer\"\n                        (change)=\"uploadImages($event)\"\n                    />\n                </div>\n            </ng-container>\n            <div\n                image\n                *ngFor=\"let url of list; let i = index\"\n                class=\"bg-center bg-cover h-32 w-36 relative rounded overflow-hidden flex-shrink-0\"\n                [style.transform]=\"'translate(-' + offset + '00%)'\"\n            >\n                <img\n                    auth\n                    [source]=\"url\"\n                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 min-h-full min-w-full\"\n                />\n                <div\n                    overlay\n                    class=\"absolute inset-0 hover:bg-black/50 text-white\"\n                >\n                    <div\n                        actions\n                        class=\"absolute top-0 left-0 right-0 flex items-center justify-center space-x-2 opacity-0\"\n                    >\n                        <button icon (click)=\"copyLink(url)\">\n                            <app-icon>link</app-icon>\n                        </button>\n                        <button icon (click)=\"viewImage(url)\">\n                            <app-icon>visibility</app-icon>\n                        </button>\n                        <button icon (click)=\"removeImage(url)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <ng-container *ngIf=\"uploads_allowed\">\n                <div\n                    image\n                    *ngFor=\"let item of uploads | async; let i = index\"\n                    class=\"bg-center bg-cover h-32 w-36 rounded border bg-black/10 dark:bg-white/5 border-gray-200 dark:border-neutral-500 flex items-center justify-center flex-shrink-0\"\n                    [style.transform]=\"'translate(-' + offset + '00%)'\"\n                    [matTooltip]=\"item.error\"\n                    (click)=\"retryUpload(item)\"\n                >\n                    <mat-progress-spinner\n                        *ngIf=\"!item.error\"\n                        [value]=\"item.progress\"\n                        [diameter]=\"64\"\n                        mode=\"determinate\"\n                    ></mat-progress-spinner>\n                    <app-icon *ngIf=\"item.error\" class=\"text-error text-6xl\"\n                        >warning</app-icon\n                    >\n                    <div\n                        overlay\n                        *ngIf=\"item.error\"\n                        class=\"absolute inset-0 hover:bg-black hover:bg-opacity-50 text-white flex items-center justify-center\"\n                    >\n                        <app-icon class=\"text-3xl opacity-0\">retry</app-icon>\n                    </div>\n                </div>\n            </ng-container>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset === 0\"\n                class=\"absolute top-1/2 left-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset - 1\"\n            >\n                <app-icon>chevron_left</app-icon>\n            </button>\n            <button\n                icon\n                matRipple\n                *ngIf=\"length > view_space\"\n                [disabled]=\"offset >= length - view_space\"\n                class=\"absolute top-1/2 right-0 transform -translate-y-1/2 bg-white\"\n                (click)=\"offset = offset + 1\"\n            >\n                <app-icon>chevron_right</app-icon>\n            </button>\n        </div>\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Image List\">\n                <mat-chip-row\n                    *ngFor=\"let item of list\"\n                    (removed)=\"removeImage(item)\"\n                >\n                    <div class=\"truncate max-w-md\">{{ item }}</div>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                placeholder=\"Add image via URL\"\n                i18n-placeholder\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"addImage($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            [overlay] {\n                transition: background 200ms;\n            }\n\n            [overlay]:hover [actions],\n            [overlay]:hover > app-icon {\n                opacity: 1 !important;\n            }\n\n            [actions],\n            [overlay] > app-icon {\n                transition: opacity 200ms;\n            }\n\n            [image] {\n                transition: transform 200ms;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ImageListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ImageListFieldComponent extends AsyncHandler {\n    /** List of images */\n    public list: string[] = [];\n    /** List of images */\n    public upload_ids = new BehaviorSubject<number[]>([]);\n    private _upload_list = new BehaviorSubject<UploadDetails[]>([]);\n    public readonly upload_list = this._upload_list.asObservable();\n    public offset: number = 0;\n\n    public view_space: number = 0;\n\n    public readonly separators = [COMMA, ENTER];\n\n    public readonly uploads = combineLatest([\n        this.upload_list,\n        this.upload_ids,\n    ]).pipe(map(([list, ids]) => list.filter((i) => ids.includes(i.id))));\n\n    public get length() {\n        return this.list.length + this._upload_list.getValue().length + 1;\n    }\n\n    public get uploads_allowed() {\n        return this._settings.get('app.has_uploads');\n    }\n\n    @ViewChild('image_list') private _list_el: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private _clipboard: Clipboard,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: string[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: string[]) => void;\n\n    public ngAfterViewInit() {\n        const box = this._list_el.nativeElement.getBoundingClientRect();\n        this.view_space = Math.floor(box.width / 152);\n        this.subscription(\n            'upload_changes',\n            this.upload_list.subscribe((list) => {\n                const id_list = this.upload_ids.getValue();\n                for (const id of id_list) {\n                    const item = list.find((_) => _.id === id);\n                    if (item && item.progress >= 100) {\n                        this.addImageUrl(item.link);\n                        this.upload_ids.next(\n                            this.upload_ids.getValue().filter((_) => _ !== id)\n                        );\n                    }\n                }\n            })\n        );\n    }\n\n    public copyLink(url: string) {\n        this._clipboard.copy(url);\n        notifyInfo('Copied image URL to clipboard');\n    }\n\n    public viewImage(url: string) {}\n\n    public removeImage(url: string) {\n        this.setValue(this.list.filter((_) => _ !== url));\n    }\n\n    public addImage(event: MatChipInputEvent) {\n        if (!event.value) return;\n        this.setValue(unique([...this.list, event.value]));\n        event.chipInput.inputElement.value = '';\n    }\n\n    public addImageUrl(url: string) {\n        this.setValue(unique([...this.list, url]));\n    }\n\n    public async uploadImages(event) {\n        if (!this.uploads_allowed) return;\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (element?.files) {\n            const files: FileList = element.files;\n            /* istanbul ignore else */\n            if (files.length) {\n                for (let i = 0; i < files.length; i++) {\n                    const id = await this.uploadFile(files[i]);\n                    this.upload_ids.next([...this.upload_ids.getValue(), id]);\n                }\n            }\n        }\n    }\n\n    public setValue(value: string[]) {\n        this.list = value;\n        if (this._onChange) this._onChange(value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string[]) {\n        this.list = value;\n    }\n\n    public readonly registerOnChange = (fn: (_: string[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string[]) => void) =>\n        (this._onTouch = fn);\n\n    public uploadFile(file: File) {\n        return new Promise<number>((resolve) => {\n            let resolved = false;\n            const update_fn = (details) => {\n                if (!resolved) {\n                    resolve(details.id);\n                    resolved = true;\n                }\n                this._upload_list.next([\n                    ...this._upload_list\n                        .getValue()\n                        .filter((_) => _.id !== details.id),\n                    details,\n                ]);\n            };\n            const force_state = this._settings.get('app.force_upload_state');\n            if (force_state) {\n                uploadFile(\n                    file,\n                    !this._settings.get('app.private_uploads'),\n                    this._settings.get('app.uploads_permissions_level') ||\n                        'none'\n                ).subscribe(update_fn, update_fn, () => {\n                    this._updateUploadHistory();\n                });\n            } else {\n                const ref = this._dialog.open(UploadPermissionsModalComponent, {\n                    data: { file },\n                });\n                ref.afterClosed().subscribe((details) => {\n                    if (!details) return;\n                    uploadFile(\n                        details.file,\n                        details.is_public,\n                        details.permissions\n                    ).subscribe(update_fn, update_fn, () => {\n                        this._updateUploadHistory();\n                    });\n                });\n            }\n        });\n    }\n\n    private _updateUploadHistory() {\n        const done_list = this._upload_list\n            .getValue()\n            .filter((file) => file.progress >= 100);\n        done_list.forEach((i) => delete i.upload);\n        if (localStorage) {\n            localStorage.setItem(\n                'CONCIERGE.uploads',\n                JSON.stringify(done_list)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\n\n/**\n * Add a tag to the list of tags for the item\n * @param event Input event\n */\nexport function addChipItem<T = string>(\n    control: FormControl<T[]>,\n    event: MatChipInputEvent\n): void {\n    if (!control) return;\n    const input = event.input;\n    const value = event.value as any;\n    const item_list = control.value;\n    if ((value || '').trim()) {\n        item_list.push(value);\n        control.setValue(item_list);\n    }\n\n    // Reset the input value\n    if (input) {\n        input.value = '';\n    }\n}\n\n/**\n * Remove tag from the list\n * @param existing_tag Tag to remove\n */\nexport function removeChipItem<T = string>(\n    control: FormControl<T[]>,\n    item: T\n): void {\n    if (!control) {\n        return;\n    }\n    const item_list = control.value;\n    const index = item_list.indexOf(item);\n\n    if (index >= 0) {\n        item_list.splice(index, 1);\n        control.setValue(item_list);\n    }\n}\n\n@Component({\n    selector: 'item-list-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-chip-grid #chipList aria-label=\"Zone Tags\">\n                <mat-chip-row\n                    *ngFor=\"let item of value\"\n                    (removed)=\"remove(item)\"\n                >\n                    <span class=\"truncate max-w-md\">{{ item }}</span>\n                    <button matChipRemove [attr.aria-label]=\"'Remove ' + item\">\n                        <app-icon>cancel</app-icon>\n                    </button>\n                </mat-chip-row>\n            </mat-chip-grid>\n            <input\n                [placeholder]=\"placeholder || 'User groups...'\"\n                i18n-placeholder=\"@@userGroupsPlaceholder\"\n                [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separators\"\n                [matChipInputAddOnBlur]=\"true\"\n                (matChipInputTokenEnd)=\"add($event)\"\n            />\n        </mat-form-field>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => ItemListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ItemListFieldComponent<T = any> implements ControlValueAccessor {\n    @Input() public separators: number[] = [ENTER, COMMA, SPACE];\n\n    @Input() public placeholder = '';\n    /** List of items stored */\n    public value: T[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: T[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: T[]) => void;\n\n    /**\n     * Add the `step` to the current value\n     */\n    public readonly add = (e: MatChipInputEvent) =>\n        addChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            e\n        );\n\n    /** Remove the `step` from the current value */\n    public readonly remove = (item: T) =>\n        removeChipItem(\n            { value: this.value, setValue: (i) => this.setValue(i) } as any,\n            item\n        );\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: T[]): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: T[]) {\n        this.value = value;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: T[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: T[]) => void): void {\n        this._onTouch = fn;\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\nimport { formatRecurrence } from 'libs/events/src/lib/helpers';\nimport { RecurrenceModalComponent } from './recurrence-modal.component';\nimport { addDays, addYears, endOfDay } from 'date-fns';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\n\n@Component({\n    selector: 'recurrence-field',\n    template: `\n        <mat-form-field appearance=\"outline\" class=\"w-full\">\n            <mat-select\n                [ngModel]=\"value._pattern\"\n                (ngModelChange)=\"setSimple($event)\"\n                placeholder=\"Doesn't repeat\"\n            >\n                <mat-option value=\"none\">Doesn't repeat</mat-option>\n                <mat-option value=\"daily\">Daily</mat-option>\n                <mat-option value=\"weekly\">\n                    Weekly on {{ date | date: 'EEEE' }}\n                </mat-option>\n                <mat-option value=\"monthly\">\n                    {{ instance_of_month }} {{ date | date: 'EEEE' }} of Month\n                </mat-option>\n                <!-- <mat-option value=\"yearly\">\n                    Anually on {{ date | date: 'LLLL dd' }}\n                </mat-option> -->\n                <mat-option\n                    *ngIf=\"value._pattern === 'custom_display'\"\n                    value=\"custom_display\"\n                >\n                    {{ formatted_value }}\n                </mat-option>\n                <mat-option\n                    value=\"custom\"\n                    (click)=\"openCustomRecurrenceModal()\"\n                >\n                    Custom...\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            [value] {\n                min-width: 3em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RecurrenceFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RecurrenceFieldComponent implements ControlValueAccessor {\n    /** Size of a single step */\n    @Input() public date = Date.now();\n    public instance_of_month: string;\n    public old_value: string;\n    public value: RecurrenceDetails = { pattern: 'none' } as any;\n\n    /** Form control on change handler */\n    private _onChange: (_: RecurrenceDetails) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: RecurrenceDetails) => void;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.date && this.date) {\n            const date = new Date(this.date).getDate();\n            const instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            this.instance_of_month = `${instance}${\n                instance === 2 ? 'nd' : instance === 3 ? 'rd' : 'th'\n            }`;\n            if ((instance === 4 && date >= 25) || instance === 5)\n                this.instance_of_month = 'Last';\n            if (instance === 1) this.instance_of_month = 'First';\n            this.value = {\n                ...this.value,\n                start: this.date,\n                days_of_week: !this.value.pattern\n                    ? [new Date(this.date).getDay()]\n                    : this.value.days_of_week,\n            };\n            this.setValue(this.value);\n        }\n    }\n\n    public get formatted_value() {\n        return formatRecurrence(this.value);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: RecurrenceDetails): void {\n        this.value = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: RecurrenceDetails) {\n        this.value = value || ({} as any);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: RecurrenceDetails) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: RecurrenceDetails) => void): void {\n        this._onTouch = fn;\n    }\n\n    public openCustomRecurrenceModal() {\n        if (!this.value.pattern) {\n            this.value.days_of_week = [new Date(this.date).getDay()];\n        }\n        const ref = this._dialog.open(RecurrenceModalComponent, {\n            data: { value: this.value },\n        });\n        this.setValue({ ...this.value, _pattern: 'none' });\n        ref.afterClosed().subscribe((data?: RecurrenceDetails) => {\n            this.setValue({\n                ...(data || this.value),\n                _pattern: data ? 'custom_display' : (this.old_value as any),\n            });\n        });\n    }\n\n    public setSimple(pattern: string) {\n        const day_of_week = new Date(this.date).getDay();\n        const default_recurrence =\n            this._settings.get('app.default_recurrence_period') || 180;\n        this.old_value = this.value._pattern;\n        if (pattern === 'none') {\n            this.setValue({\n                pattern: null,\n                _pattern: 'none',\n                days_of_week: [day_of_week],\n            } as any);\n        } else if (pattern === 'daily') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'weekly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'monthly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: endOfDay(addDays(this.date, default_recurrence)).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        } else if (pattern === 'yearly') {\n            this.setValue({\n                pattern,\n                _pattern: pattern,\n                start: this.date,\n                end: addYears(this.date, 7).valueOf(),\n                days_of_week: [day_of_week],\n                interval: 1,\n            });\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { addDays } from 'date-fns';\n\nimport { RecurrenceDetails } from 'libs/events/src/lib/event.interfaces';\n\n@Component({\n    selector: 'recurrence-modal',\n    template: `\n        <header>\n            <h2>Custom Recurrence</h2>\n            <button btn icon mat-dialog-close matRipple>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <div class=\"flex items-center space-x-2 mb-4\">\n                <div>Repeat every</div>\n                <mat-form-field appearance=\"outline\" class=\"w-16\">\n                    <input matInput type=\"number\" [(ngModel)]=\"data.interval\" />\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                    <mat-select [(ngModel)]=\"data.pattern\">\n                        <mat-option value=\"daily\">\n                            day{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"weekly\">\n                            week{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <mat-option value=\"month_day\">\n                            month{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option>\n                        <!-- <mat-option value=\"yearly\">\n                            year{{ data.interval === 1 ? '' : 's' }}\n                        </mat-option> -->\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 for=\"repeat-on\" class=\"mb-2\" *ngIf=\"data.pattern === 'weekly'\">\n                Repeat on\n            </h2>\n            <div\n                class=\"flex items-center space-x-2 mb-4\"\n                name=\"repeat-on\"\n                *ngIf=\"data.pattern === 'weekly'\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(0)\"\n                    (click)=\"toggleDayOfWeek(0)\"\n                >\n                    S\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(1)\"\n                    (click)=\"toggleDayOfWeek(1)\"\n                >\n                    M\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(2)\"\n                    (click)=\"toggleDayOfWeek(2)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(3)\"\n                    (click)=\"toggleDayOfWeek(3)\"\n                >\n                    W\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(4)\"\n                    (click)=\"toggleDayOfWeek(4)\"\n                >\n                    T\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(5)\"\n                    (click)=\"toggleDayOfWeek(5)\"\n                >\n                    F\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-12\"\n                    [class.inverse]=\"!data.days_of_week?.includes(6)\"\n                    (click)=\"toggleDayOfWeek(6)\"\n                >\n                    S\n                </button>\n            </div>\n            <h2 for=\"ends-at\">Ends</h2>\n            <mat-radio-group name=\"ends-at\" [(ngModel)]=\"ends_key\">\n                <div class=\"flex items-center\">\n                    <mat-radio-button\n                        value=\"never\"\n                        (click)=\"data.occurrences = 0\"\n                    >\n                        Never\n                    </mat-radio-button>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"on\">On</mat-radio-button>\n                    <a-date-field\n                        [(ngModel)]=\"data.end\"\n                        [disabled]=\"ends_key !== 'on'\"\n                    ></a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-radio-button value=\"after\">After</mat-radio-button>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            type=\"number\"\n                            [(ngModel)]=\"data.occurrences\"\n                            [disabled]=\"ends_key !== 'after'\"\n                        />\n                        <span matSuffix>occurences</span>\n                    </mat-form-field>\n                </div>\n            </mat-radio-group>\n        </main>\n        <footer\n            class=\"px-4 py-2 flex items-center justify-end border-t border-gray-200\"\n        >\n            <button\n                btn\n                class=\"w-32\"\n                matRipple\n                (click)=\"\n                    data.occurrences =\n                        ends_key === 'never' ? 0 : data.occurrences\n                \"\n                [mat-dialog-close]=\"data\"\n            >\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            mat-form-field,\n            a-date-field {\n                height: 3.25rem;\n            }\n\n            mat-radio-button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class RecurrenceModalComponent {\n    public data: RecurrenceDetails = {\n        ...this._data.value,\n        end: this._data.value.end || addDays(new Date(), 7).valueOf(),\n        interval: this._data.value.interval || 1,\n        pattern: this._data.value.pattern ? this._data.value.pattern : 'weekly',\n        occurrences: this._data.value.occurrences || 1,\n    };\n    public ends_key = 'never';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { value: RecurrenceDetails }\n    ) {}\n\n    public toggleDayOfWeek(day: number) {\n        if (!this.data.days_of_week) this.data.days_of_week = [];\n        if (this.data.days_of_week.includes(day)) {\n            this.data.days_of_week = this.data.days_of_week.filter(\n                (d) => d !== day\n            );\n        } else this.data.days_of_week.push(day);\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport * as Quill from 'quill';\n\n@Component({\n    selector: 'rich-text-input',\n    template: `\n        <div #container>\n            <div #editor></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => RichTextInputComponent),\n            multi: true,\n        },\n    ],\n})\nexport class RichTextInputComponent\n    extends AsyncHandler\n    implements ControlValueAccessor, OnChanges, AfterViewInit\n{\n    @Input() public placeholder = '';\n    @Input() public readonly = false;\n\n    @ViewChild('container') private _container_el: ElementRef<HTMLDivElement>;\n    @ViewChild('editor') private _editor_el: ElementRef<HTMLDivElement>;\n\n    private _editor: any;\n    private _updateFn = () => this.setValue(this._editor.root.innerHTML);\n\n    private _onChange: (\n        _: string\n    ) => void; /** Form control on change handler */\n    private _onTouch: (\n        _: string\n    ) => void; /** Form control on touched handler */\n\n    public readonly registerOnChange = (fn: (_: string) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: string) => void) =>\n        (this._onTouch = fn);\n\n    public ngOnChanges(changes: SimpleChanges) {}\n\n    public ngAfterViewInit() {\n        this._initialiseEditor();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: string) {\n        if (this._editor) {\n            const delta = this._editor.clipboard.convert(value);\n            this._editor.setContents(delta, 'silent');\n        } else {\n            this.timeout('write', () => this.writeValue(value));\n        }\n    }\n\n    private _initialiseEditor() {\n        this._editor = new Quill(this._editor_el.nativeElement, {\n            bounds: this._container_el.nativeElement,\n            placeholder: this.placeholder,\n            modules: {\n                toolbar: [\n                    [{ size: ['small', false, 'large', 'huge'] }],\n                    ['bold', 'italic', 'underline'],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                ],\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n        });\n        this._editor.on('text-change', this._updateFn);\n        this.subscription('changes', () =>\n            this._editor.off('text-change', this._updateFn)\n        );\n    }\n}\n","import { ChangeDetectorRef, Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { NewSpaceSelectModalComponent } from 'libs/spaces/src/lib/space-select-modal/new-space-select-modal.component';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `space-list-field`,\n    template: `\n        <div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n                <div class=\"flex-1 min-w-[256px] space-y-2\">\n                    <label i18n>Select Room Size<span>*</span></label>\n                    <div class=\"flex items-center\">\n                        <mat-radio-group\n                            aria-label=\"Select Room Size\"\n                            class=\"space-x-4\"\n                            [(ngModel)]=\"room_size\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-radio-button [value]=\"1\" i18n>\n                                Min. 2 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"4\" i18n>\n                                Min. 4 People\n                            </mat-radio-button>\n                            <mat-radio-button [value]=\"10\" i18n>\n                                Min. 10 People\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let space of space_list | async\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        [source]=\"space.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/room-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"sm:space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{\n                            space.display_name || space.name || 'Meeting Space'\n                        }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    level(space.zones)?.display_name ||\n                                    level(space.zones)?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity }} {\n                            space.capacity, plural, =1 { Person } other { People\n                            } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-space\"\n                            class=\"clear\"\n                            (click)=\"changeSpaces(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-space\"\n                            class=\"clear\"\n                            (click)=\"removeSpace(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(space?.id)\"\n                    (click)=\"toggleFavourite(space)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(space?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-space\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeSpaces()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Space</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SpaceListFieldComponent implements ControlValueAccessor {\n    public room_size = 4;\n    public spaces = new BehaviorSubject<Space[]>([]);\n    public space_list = this.spaces.pipe(debounceTime(300));\n    public disabled = false;\n    public _dialog_ref?: MatDialogRef<NewSpaceSelectModalComponent>;\n\n    private _onChange: (_: Space[]) => void;\n    private _onTouch: (_: Space[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnDestroy() {\n        if (this._dialog_ref) this._dialog_ref.close();\n    }\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    /** Add or edit selected spaces */\n    public changeSpaces() {\n        this._dialog_ref = this._dialog.open(NewSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces.getValue(),\n                options: { capacity: this.room_size },\n            },\n        });\n        this._dialog_ref.afterClosed().subscribe(() => {\n            this.setValue(this._dialog_ref?.componentInstance?.selected);\n            this._dialog_ref = undefined;\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeSpace(space: Space) {\n        this.setValue(this.spaces.getValue().filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Space[]) {\n        this.spaces.next(new_value || []);\n        if (this._onChange) this._onChange(new_value || []);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: Space[]) {\n        this.spaces.next(value || []);\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: Space[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: Space[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: Space) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'support-ticket-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2 i18n>Raise a support ticket</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[32rem] max-w-[85vw]\" *ngIf=\"!loading; else load_state\">\n            <form class=\"p-2\" [formGroup]=\"form\">\n                <div class=\"flex items-center sm:space-x-2 flex-wrap\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Name<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Name\"\n                                formControlName=\"name\"\n                            />\n                            <mat-error i18n>Name is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label i18n>Email<span>*</span></label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                placeholder=\"Email\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error i18n>Email is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            placeholder=\"Location\"\n                            formControlName=\"location\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld.display_name || bld.name\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <label class=\"mb-4\" i18n\n                        >Issue Description<span>*</span></label\n                    >\n                    <rich-text-input\n                        placeholder=\"Issue Description\"\n                        formControlName=\"description\"\n                    ></rich-text-input>\n                    <mat-error class=\"text-xs my-2\" *ngIf=\"desc_error\" i18n>\n                        Description is required\n                    </mat-error>\n                </div>\n                <div *ngIf=\"allow_images\">\n                    <label class=\"mb-4\" i18n>Images</label>\n                    <image-list-field\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n            <div class=\"italic text-center text-xs mb-2\" i18n>\n                Completing this form will raise an incident in your support\n                management platform\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-gray-200 flex items-center justify-center\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"submit()\" i18n>\n                Submit\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"w-[32rem] min-h-[24rem] max-w-[100vw] flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Sending support ticket...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class SupportTicketModalComponent {\n    public loading = false;\n    public readonly form = new FormGroup({\n        name: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required]),\n        location: new FormControl(''),\n        description: new FormControl('', [Validators.required]),\n        images: new FormControl([]),\n    });\n\n    public get desc_error() {\n        return (\n            !this.form.controls.description.valid &&\n            this.form.controls.description.touched\n        );\n    }\n\n    public get support_email() {\n        return this._settings.get('app.support_email') || 'support@place.tech';\n    }\n\n    public get allow_images() {\n        return this._settings.get('app.allow_support_ticket_images');\n    }\n\n    public readonly buildings = this._org.building_list;\n\n    constructor(\n        private _dialog_ref: MatDialogRef<SupportTicketModalComponent>,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        const user = currentUser();\n        if (user) {\n            this.form.patchValue({\n                name: user.name,\n                email: user.email,\n            });\n        }\n        if (this._org.building) {\n            this.form.patchValue({\n                location:\n                    this._org.building.display_name || this._org.building.name,\n            });\n        }\n    }\n\n    public async submit() {\n        this.loading = true;\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.valid) {\n            const stmp_system = this._org.binding('smtp');\n            if (!stmp_system) {\n                return notifyError(\n                    'Mailing system not configured for application.'\n                );\n            }\n            const mod = getModule(stmp_system, 'Mailer');\n            const { name, email, location, description, images } =\n                this.form.value;\n            await mod.execute('send_mail', [\n                this.support_email,\n                `Support Ticket from Workplace Application`,\n                `${name}\\n${email}\\n\\n${location}\\n\\n${description.replace(\n                    /<[^>]+>/g,\n                    ''\n                )}\\n\\n${images.join('\\n')}`,\n                `<p>${name}</p><p>${email}</p><p>${location}</p><p>${description}</p>${images.join(\n                    '<br>'\n                )}`,\n                [],\n                [],\n                [],\n                [],\n                null,\n                `${email}`,\n            ]);\n            this._dialog_ref.close();\n            this.loading = false;\n            notifySuccess('Successfully submitted support ticket');\n        }\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { AsyncHandler, Identity } from '@placeos/common';\nimport {\n    addMinutes,\n    endOfDay,\n    format,\n    isAfter,\n    isSameDay,\n    roundToNearestMinutes,\n    set,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\n\n@Component({\n    selector: 'a-time-field',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                #select\n                [ngModel]=\"force_time || time\"\n                [disabled]=\"disabled\"\n                (ngModelChange)=\"setValue($event)\"\n            >\n                <mat-option *ngIf=\"force_time\" [value]=\"force_time\">\n                    {{ force_time | date: (use_24hr ? 'HH : mm' : 'h : mm a') }}\n                </mat-option>\n                <mat-option\n                    *ngFor=\"let option of time_options\"\n                    [value]=\"option.id\"\n                >\n                    {{\n                        option.date | date: (use_24hr ? 'HH : mm' : 'h : mm a')\n                    }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TimeFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class TimeFieldComponent\n    extends AsyncHandler\n    implements OnInit, OnChanges, ControlValueAccessor\n{\n    /** Time step between each allowed time option */\n    @Input() public step = 15;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Whether past times are allowed */\n    @Input() public no_past_times = true;\n    @Input() public use_24hr = false;\n    @Input() public force_time: number;\n    /** String representing the currently set time */\n    public date: number = new Date().valueOf();\n    /** String representing the currently set time */\n    public time: string = format(new Date(), 'HH:mm');\n    /** Available time blocks for the selected date */\n    public _time_options: any[];\n    /** Whether select field should be shown */\n    public show_select: boolean;\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** Select field for selecting the time */\n    @ViewChild('select') private select_field: MatSelect;\n\n    public ngOnInit(): void {\n        this.show_select = true;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n        this.timeout('hide', () => (this.show_select = false));\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.no_past_times || changes.step) {\n            this._time_options = this.generateAvailableTimes(\n                this.date,\n                !this.no_past_times,\n                this.step\n            );\n        }\n    }\n\n    /** Available time blocks for the selected date */\n    public get time_options() {\n        const time = (this.time || '00:00').split(':');\n        const date = set(this.date, { hours: +time[0], minutes: +time[1] });\n        if (\n            date.getMinutes() % 15 !== 0 &&\n            !this._time_options.find(\n                (time) => time.id === format(date, 'HH:mm')\n            )\n        ) {\n            this._time_options.push({\n                date,\n                id: format(date, 'HH:mm'),\n            });\n            this._time_options.sort((a, b) =>\n                `${a.id}`.localeCompare(`${b.id}`)\n            );\n        }\n        return this._time_options;\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: string): void {\n        this.time = new_value;\n        if (this._onChange) {\n            const time = (this.time || '00:00').split(':');\n            const date = startOfMinute(\n                set(this.date, { hours: +time[0], minutes: +time[1] })\n            );\n            this._onChange(date.valueOf());\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = value || this.date;\n        let date = startOfMinute(this.date);\n        date = roundToNearestMinutes(date, { nearestTo: 5 });\n        this.time = format(date, 'HH:mm');\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times,\n            this.step\n        );\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n        this._time_options = this.generateAvailableTimes(\n            this.date,\n            !this.no_past_times || disabled,\n            this.step\n        );\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    /**\n     * Show select field for time options\n     */\n    public showSelect() {\n        this.show_select = true;\n        this.timeout('on_shown', () => {\n            if (this.select_field) {\n                this.select_field.focus();\n                this.select_field.open();\n                this.subscription(\n                    'listen_close',\n                    this.select_field.openedChange.subscribe((state) => {\n                        if (!state) {\n                            this.show_select = false;\n                        }\n                    })\n                );\n            }\n        });\n    }\n\n    /**\n     * Generate a list of time options for the given date\n     * @param datestamp Date to generate options for\n     * @param show_past Whether past times should be options\n     */\n    private generateAvailableTimes(\n        datestamp: number,\n        show_past: boolean,\n        step: number = 15\n    ): Identity[] {\n        const now = new Date();\n        let date = new Date(datestamp);\n        const blocks = [];\n        if (show_past || (!isSameDay(date, now) && isAfter(date, now))) {\n            date = startOfDay(date);\n        } else if (isAfter(date, now)) {\n            date = now;\n        }\n        date = roundToNearestMinutes(date, { nearestTo: step });\n        const end = endOfDay(date);\n        // Add options for the rest of the day\n        while (isAfter(end, date)) {\n            blocks.push({\n                date: date.valueOf(),\n                id: format(date, 'HH:mm'),\n            });\n            date = addMinutes(date, step);\n        }\n        return blocks;\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-file',\n    template: `\n        <div\n            class=\"bg-gray-50 hover:bg-gray-100 cursor-pointer p-2 rounded border border-gray-200 w-full relative\"\n        >\n            <input\n                type=\"file\"\n                class=\"absolute inset-0 opacity-0 max-w-full z-10\"\n                (change)=\"onFileEvent($event)\"\n            />\n            <div\n                item\n                *ngIf=\"item; else empty_state\"\n                class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100 relative z-50\"\n                [class.!bg-red-600]=\"item.progress < 1\"\n                [class.!bg-opacity-20]=\"item.progress < 1\"\n            >\n                <div class=\"flex-1 w-px font-mono truncate px-2 text-sm\">\n                    {{ item.name }}\n                </div>\n                <ng-container *ngIf=\"item.progress >= 0 && item.progress < 100\">\n                    <div class=\"relative mx-1\">\n                        <mat-progress-spinner\n                            [diameter]=\"32\"\n                            mode=\"determinate\"\n                            [value]=\"item.progress\"\n                        ></mat-progress-spinner>\n\n                        <div\n                            class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                        >\n                            {{ item.progress }}\n                        </div>\n                    </div>\n                </ng-container>\n                <a\n                    [href]=\"item.url\"\n                    icon\n                    matRipple\n                    *ngIf=\"item.progress >= 100\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    <app-icon>link</app-icon>\n                </a>\n                <button icon (click)=\"writeValue(null)\">\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center z-0\"\n            >\n                <p class=\"opacity-30\" i18n>Drop file or click to upload file</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadFileFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadFileFieldComponent implements ControlValueAccessor {\n    public item: Attachment;\n    /** Form control on change handler */\n    private _onChange: (_: Attachment) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment): void {\n        this.item = new_value;\n        if (this._onChange) this._onChange(this.item);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment) {\n        this.item = value;\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.item = item;\n            this.setValue(this.item);\n        };\n        this._uploadFile(files[0], on_change);\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { randomInt } from '@placeos/common';\nimport { Attachment } from '@placeos/users';\nimport { takeWhile } from 'rxjs/operators';\n\nimport * as blobUtil from 'blob-util';\nimport { uploadFiles } from '@placeos/cloud-uploads';\n\n@Component({\n    selector: 'upload-list',\n    template: `\n        <div class=\"flex items-center space-x-2\">\n            <div\n                class=\"w-52 h-48 relative border-2 border-dashed border-gray-300 flex flex-col items-center justify-center rounded hover:bg-black/5 cursor-pointer\"\n            >\n                <app-icon class=\"text-3xl mb-2\">upload_file</app-icon>\n                <p class=\"text-center\" i18n>Drop files</p>\n                <p class=\"text-center text-xs my-1\" i18n>or</p>\n                <button btn matRipple class=\"w-28\" i18n>Browse</button>\n                <input\n                    multiple=\"true\"\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0 max-w-full\"\n                    (change)=\"onFileEvent($event)\"\n                />\n            </div>\n            <div class=\"w-1/2 h-48 flex-1 flex flex-col items-center\">\n                <div\n                    list\n                    class=\"space-y-2 w-full h-full overflow-auto\"\n                    *ngIf=\"list?.length; else empty_state\"\n                >\n                    <div\n                        item\n                        *ngFor=\"let item of list\"\n                        class=\"w-full flex items-center border border-gray-200 rounded bg-white hover:bg-gray-100\"\n                        [class.!bg-red-600]=\"item.progress < 1\"\n                        [class.!bg-opacity-20]=\"item.progress < 1\"\n                    >\n                        <div\n                            class=\"flex-1 w-px font-mono truncate px-2 text-sm\"\n                        >\n                            {{ item.name }}\n                        </div>\n                        <ng-container\n                            *ngIf=\"item.progress >= 0 && item.progress < 100\"\n                        >\n                            <div class=\"relative mx-1\">\n                                <mat-progress-spinner\n                                    [diameter]=\"32\"\n                                    mode=\"determinate\"\n                                    [value]=\"item.progress\"\n                                ></mat-progress-spinner>\n\n                                <div\n                                    class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-sm font-bold\"\n                                >\n                                    {{ item.progress }}\n                                </div>\n                            </div>\n                        </ng-container>\n                        <a\n                            [href]=\"item.url\"\n                            icon\n                            matRipple\n                            *ngIf=\"item.progress >= 100\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <app-icon>link</app-icon>\n                        </a>\n                        <button icon (click)=\"removeFile(item)\">\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col justify-center items-center\"\n            >\n                <p class=\"opacity-30\" i18n>No uploaded files</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UploadListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UploadListFieldComponent implements ControlValueAccessor {\n    public list: Attachment[] = [];\n    /** Form control on change handler */\n    private _onChange: (_: Attachment[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: Attachment[]) => void;\n\n    public readonly registerOnChange = (fn) => (this._onChange = fn);\n    public readonly registerOnTouched = (fn) => (this._onTouch = fn);\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: Attachment[]): void {\n        this.list = new_value.filter((_) => _.url && _.progress >= 100);\n        if (this._onChange) this._onChange(this.list);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: Attachment[]) {\n        this.list = value.map((_) => ({\n            id: `file-${randomInt(999_999_999)}`,\n            ..._,\n        }));\n    }\n\n    public removeFile(item: Attachment) {\n        this.list = this.list.filter((_) => _.id !== item.id);\n    }\n\n    public onFileEvent(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const on_change = (item) => {\n            this.list = [\n                ...(this.list || []).filter((_) => _.id !== item.id),\n            ].sort((a, b) => a.created_at - b.created_at);\n            this.setValue(this.list);\n        };\n        for (let i = 0; i < files.length; i++) {\n            this._uploadFile(files[i], on_change);\n        }\n    }\n\n    private _uploadFile(file: File, on_change: (item: Attachment) => void) {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const arrayBuffer = e.target.result;\n            const blob = blobUtil.arrayBufferToBlob(arrayBuffer, file.type);\n            const upload_list = uploadFiles([blob], { file_name: file.name });\n            const upload = upload_list[0];\n            const upload_details: Attachment = {\n                id: `${randomInt(9999_9999_9999)}`,\n                name: file.name,\n                progress: 0,\n                size: file.size,\n                created_at: Date.now(),\n                url: '',\n            };\n            upload.status\n                .pipe(takeWhile((_) => _.status !== 'complete', true))\n                .subscribe((state) => {\n                    if (upload.access_url)\n                        upload_details.url = upload.access_url;\n                    upload_details.progress = state.progress;\n                    if (state.status === 'error') upload_details.progress = -1;\n                    on_change(upload_details);\n                });\n            on_change(upload_details);\n        });\n        fileReader.readAsArrayBuffer(file);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    Output,\n    EventEmitter,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n    AsyncHandler,\n    csvToJson,\n    currentUser,\n    downloadFile,\n    notifyError,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    catchError,\n    debounceTime,\n    first,\n    map,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\n\nimport { NewUserModalComponent } from 'libs/users/src/lib/new-user-modal.component';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { USER_DOMAIN } from 'libs/users/src/lib/user.utilities';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\nfunction validateEmail(email) {\n    const re =\n        /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n@Component({\n    selector: 'a-user-list-field',\n    template: `\n        <div class=\"mb-4\" form-field [attr.disabled]=\"disabled\">\n            <div search>\n                <mat-form-field\n                    class=\"w-full\"\n                    appearance=\"outline\"\n                    matAutocompleteOrigin\n                    #origin=\"matAutocompleteOrigin\"\n                >\n                    <mat-chip-grid #chipList aria-label=\"User Seleciom\">\n                        <mat-chip-row\n                            user\n                            *ngFor=\"let item of active_list\"\n                            [class.bg-yellow-300]=\"item.is_external\"\n                            (removed)=\"removeUser(item)\"\n                        >\n                            {{ item.name || item.email }}\n                            <button\n                                matChipRemove\n                                remove\n                                [attr.aria-label]=\"\n                                    'Remove ' + (item.name || item.email)\n                                \"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        #search_field\n                        placeholder=\"Type a name or email\"\n                        i18n-placeholder\n                        name=\"user_email\"\n                        [ngModel]=\"search$ | async\"\n                        (ngModelChange)=\"updateSearch($event)\"\n                        [matAutocomplete]=\"auto\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                        (matChipInputTokenEnd)=\"addUserFromEmail($event.value)\"\n                    />\n                    <mat-spinner\n                        *ngIf=\"loading\"\n                        diameter=\"24\"\n                        matSuffix\n                    ></mat-spinner>\n                </mat-form-field>\n                <mat-autocomplete #auto=\"matAutocomplete\">\n                    <mat-option\n                        *ngIf=\"search_valid_email\"\n                        (click)=\"addUserFromEmail()\"\n                        i18n\n                    >\n                        Add external user with email \"{{ search$.getValue() }}\"\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let user of user_list$ | async\"\n                        (click)=\"addUser(user)\"\n                        class=\"leading-tight\"\n                    >\n                        {{ user.name }}<br />\n                        <span class=\"text-xs\">{{ user.email }}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 -mt-4\"\n                actions\n                *ngIf=\"!hide_actions\"\n            >\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"new-contact\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"openNewUserModal()\"\n                    i18n=\"Add new external attendee\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Add&nbsp;<span class=\"hidden sm:inline\">External</span>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"upload-csv\"\n                    class=\"relative inverse flex-1 sm:flex-none\"\n                    i18n=\"Upload attendee list from CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        Upload&nbsp;<span class=\"hidden sm:inline\">CSV</span>\n                    </div>\n                    <input\n                        class=\"opacity-0 absolute inset-0\"\n                        type=\"file\"\n                        (change)=\"addUsersFromFile($event)\"\n                    />\n                </button>\n                <button\n                    btn\n                    matRipple\n                    type=\"button\"\n                    name=\"download-template\"\n                    class=\"inverse flex-1 sm:flex-none\"\n                    (click)=\"downloadCSVTemplate(); download.emit()\"\n                    i18n=\"Download template CSV file\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <span class=\"hidden sm:inline\">CSV</span>&nbsp;Template\n                    </div>\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [search] {\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserListFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Number of characters needed before a search will start */\n    @Input() public limit = 3;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests = false;\n    /** Whether guests should also show when searching for users */\n    @Input() public guests_only = false;\n    /** Whether optional actions should be shown */\n    @Input('hideActions') public hide_actions = false;\n    /** Whether as custom template will be provided outside the component */\n    @Input() public custom_template = false;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any) => boolean;\n    /** Emitter for action to make a new user */\n    @Output() public new_user = new EventEmitter<void>();\n    /** Whether user should download the CSV template */\n    @Output() public download = new EventEmitter<void>();\n\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    /** Whether user list is loading */\n    public loading = false;\n    public readonly search$ = new BehaviorSubject('');\n\n    @ViewChild('search_field') private _search_el: ElementRef<HTMLInputElement>;\n\n    private searchStaff(q: string) {\n        return this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((u) => new User(u)))\n              )\n            : searchStaff(q);\n    }\n\n    /** User list to display */\n    public user_list$ = this.search$.pipe(\n        debounceTime(300),\n        switchMap((_) => {\n            this.loading = true;\n            return (\n                _\n                    ? this.guests\n                        ? combineLatest([\n                              this.searchStaff(_),\n                              searchGuests(_),\n                          ]).pipe(\n                              map(([staff, guests]) => {\n                                  if (this.guests_only) staff = [];\n                                  const visitors_list = [];\n                                  const visitors =\n                                      this._settings.get('visitor-invitees') ||\n                                      [];\n                                  for (const item of visitors) {\n                                      const [email, name, company] =\n                                          item.split('|');\n                                      visitors_list.push({\n                                          email,\n                                          name,\n                                          company,\n                                      });\n                                  }\n                                  return unique(\n                                      (staff as any)\n                                          .concat(guests)\n                                          .concat(visitors_list),\n                                      'email'\n                                  );\n                              })\n                          )\n                        : this.searchStaff(_)\n                    : of([])\n            ).pipe(catchError((_) => of([])));\n        }),\n        tap((_) => (this.loading = false))\n    );\n    /** List of active selected users on the list */\n    public active_list: User[] = [];\n\n    /** Form control on change handler */\n    private _onChange: (_: User[]) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User[]) => void;\n\n    public readonly validFn = (s) => validateEmail(s);\n    public readonly emptyClick = () => this.openNewUserModal(new User());\n\n    public get search_valid_email() {\n        return validateEmail(this.search$.getValue());\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public updateSearch(new_value: string = '') {\n        this.timeout('search', () => this.search$.next(new_value));\n    }\n\n    public addUserFromEmail(email: string = '') {\n        if (!email) email = this.search$.getValue();\n        if (!validateEmail(email)) return;\n        const user = new User({ id: email, email, name: email.split('@')[0] });\n        this.addUser(user);\n        const { name, organisation } = user;\n        const visitor_details = `${email}|${name}|${organisation}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(email)),\n            visitor_details,\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Add user to the user list\n     * @param user\n     */\n    public addUser(user: User) {\n        const list = this.active_list?.filter((_) => _.id !== user.id) || [];\n        this.setValue([\n            ...list,\n            new User({\n                ...user,\n                id: user.id || user.email,\n                visit_expected:\n                    (!user.id && user.is_external !== true\n                        ? user.visit_expected\n                        : null) ?? true,\n            }),\n        ]);\n        this.timeout(\n            'clear_search',\n            () => {\n                this.search$.next('');\n                this._search_el.nativeElement.value = '';\n            },\n            100\n        );\n    }\n\n    /**\n     * Remove user from the user list\n     * @param user\n     */\n    public removeUser(user: User) {\n        const list = this.active_list.filter((a_user) => a_user.id !== user.id);\n        this.setValue(list);\n    }\n\n    /**\n     * Load CSV file and populate the user list with the contents\n     * @param event File input field event\n     */\n    public addUsersFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    this.processCsvData((evt.srcElement as any).result);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    /**\n     * Process raw CSV data and save user data to attendee list\n     * @param data CSV data\n     */\n    private processCsvData(data: string) {\n        const list = csvToJson(data) || [];\n        const id = currentUser()?.staff_id || 'unknown';\n        for (const el of list) {\n            el.name = el.name || `${el.first_name} ${el.last_name}`;\n            const display = (\n                el.name || `${Math.floor(Math.random() * 9999_9999)}`\n            )\n                .split(' ')\n                .join('_')\n                .toLowerCase();\n            /* istanbul ignore else */\n            if (!el.email) {\n                el.email = `${display}+${id}@guest.${USER_DOMAIN}`;\n            }\n            const internal_emails = this._settings.get(\n                'app.booking.internal_emails'\n            ) || ['place.tech'];\n            el.visit_expected =\n                el.visit_expected ??\n                !internal_emails.find((_) => el.email.endsWith(_));\n\n            /** Convert phone to string. PWCME-544 */\n            el.phone = '' + el.phone;\n\n            this.addUser(new User(el));\n        }\n    }\n\n    /* istanbul ignore next */\n    /** Download template CSV file */\n    public downloadCSVTemplate() {\n        if (this.custom_template) return;\n        const template = `Organisation,First Name,Last Name,Email,Phone,Assistance Required,Visit Expected\\nFake Org,John,Smith,john.smith@example.com,01234567898,false,true`;\n        downloadFile('template.csv', template);\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User[]): void {\n        this.active_list = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User[]) {\n        this.active_list = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User[]) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User[]) => void): void {\n        this._onTouch = fn;\n    }\n\n    public displayFn(item): string {\n        return item?.name || '';\n    }\n\n    /**\n     * Open modal to add or update user details\n     */\n    public openNewUserModal(user: User = new User()) {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: { user },\n            }\n        );\n        ref.componentInstance?.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                this.addUser(event.metadata);\n                ref.close();\n            });\n    }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    ViewChild,\n    ElementRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subject, Observable, of, forkJoin } from 'rxjs';\nimport {\n    switchMap,\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    catchError,\n} from 'rxjs/operators';\n\nimport { AsyncHandler, flatten, SettingsService } from '@placeos/common';\nimport { searchGuests } from 'libs/users/src/lib/guests.fn';\nimport { searchStaff } from 'libs/users/src/lib/staff.fn';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { authority, queryUsers } from '@placeos/ts-client';\n\n@Component({\n    selector: 'a-user-search-field',\n    template: `\n        <div class=\"user-search-field\" form-field>\n            <mat-form-field appearance=\"outline\">\n                <input\n                    #input\n                    matInput\n                    keyboard\n                    name=\"user-search\"\n                    [(ngModel)]=\"search_str\"\n                    (ngModelChange)=\"search$.next($event || '')\"\n                    [disabled]=\"disabled\"\n                    [placeholder]=\"placeholder || 'Search for user...'\"\n                    [matAutocomplete]=\"auto\"\n                    (keyup.enter)=\"\n                        validate && validate(search_str)\n                            ? setValue(search_str)\n                            : ''\n                    \"\n                    (blur)=\"resetSearchString()\"\n                    (focus)=\"cancelReset()\"\n                />\n                <app-icon matPrefix class=\"text-2xl relative\">search</app-icon>\n                <mat-spinner\n                    *ngIf=\"loading\"\n                    matSuffix\n                    diameter=\"16\"\n                ></mat-spinner>\n            </mat-form-field>\n            <mat-autocomplete\n                #auto=\"matAutocomplete\"\n                (optionSelected)=\"setValue($event.option.value)\"\n            >\n                <mat-option\n                    *ngFor=\"let option of user_list\"\n                    (click)=\"setValue(option); blurInput()\"\n                >\n                    <div class=\"leading-tight\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.email }}\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"search_str && validate && validate(search_str)\"\n                    class=\"relative pointer-events-none\"\n                >\n                    <div\n                        class=\"absolute inset-0 px-4 pointer-events-auto\"\n                        (mousedown)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (touchstart)=\"\n                            $event.stopPropagation(); $event.preventDefault()\n                        \"\n                        (click)=\"\n                            setValue(search_str);\n                            $event.stopPropagation();\n                            $event.preventDefault()\n                        \"\n                    >\n                        <div class=\"pointer-events-none\" i18n>\n                            Add external attendee \"{{ search_str }}\"\n                        </div>\n                    </div>\n                </mat-option>\n                <mat-option\n                    *ngIf=\"!user_list?.length && (search_str || error)\"\n                    [disabled]=\"!empty_fn\"\n                    (click)=\"empty_fn()\"\n                >\n                    {{ search_str ? 'No users found.' : '' }} {{ error }}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n\n            app-icon {\n                top: 0.15em;\n                left: -0.15em;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => UserSearchFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class UserSearchFieldComponent\n    extends AsyncHandler\n    implements OnInit, ControlValueAccessor\n{\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Placeholder text to display */\n    @Input() public placeholder: string;\n    /** Limit available options to these */\n    @Input() public options: User[];\n    /** Whether guests should also show when searching for users */\n    @Input() public guests: boolean;\n    /** Message to display when no user matches have been found */\n    @Input() public error = '';\n    /** Function to validate the search string */\n    @Input() public validate: (s: string) => boolean;\n    /** Function to call when empty list option is clicked */\n    @Input() public empty_fn: () => void;\n    /** Function for filtering the results of the user list */\n    @Input() public filter: (_: any, s?: string) => boolean;\n\n    @Input() public query_fn: (_: string) => Observable<User[]> = (q) =>\n        this._settings.get('app.basic_user_search')\n            ? queryUsers({ q, authority_id: authority()?.id }).pipe(\n                  map((_) => _.data.map((_) => new User(_)))\n              )\n            : searchStaff(q);\n    /** Currently selected user */\n    public active_user: User;\n    /** User list to display */\n    public user_list: User[];\n    /** Whether user list is loading */\n    public loading: boolean;\n    /** Current display value of the search input field  */\n    public search_str: string;\n    /** Subject holding the value of the search */\n    public search$ = new Subject<string>();\n    /** List of users from an API search */\n    public search_results$: Observable<User[]> = this.search$.pipe(\n        debounceTime(400),\n        distinctUntilChanged(),\n        switchMap((query) => {\n            this.loading = true;\n            return this.options && this.options.length > 0\n                ? of(this.options)\n                : query.length >= 3\n                ? !this.guests\n                    ? this.query_fn(query)\n                    : forkJoin([searchStaff(query), searchGuests(query)])\n                : of([]);\n        }),\n        catchError((_) => of([])),\n        map((list: User[]) => {\n            this.loading = false;\n            list = flatten(list);\n            const search = (this.search_str || '').toLowerCase();\n            return list.filter(\n                (item) => !this.filter || this.filter(item, search)\n            );\n        })\n    );\n\n    constructor(private _settings: SettingsService) {\n        super();\n    }\n\n    /** Form control on change handler */\n    private _onChange: (_: User) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: User) => void;\n\n    @ViewChild('input', { read: ElementRef })\n    private _input_el: ElementRef<HTMLInputElement>;\n\n    public cancelReset = () => this.clearTimeout('reset');\n\n    public blurInput = () => {\n        this.timeout('blur', () => this._input_el?.nativeElement?.blur());\n    };\n\n    public ngOnInit(): void {\n        // Process API results\n        this.subscription(\n            'search_results',\n            this.search_results$.subscribe((list) => (this.user_list = list))\n        );\n        this.resetSearchString();\n    }\n\n    /**\n     * Reset the search string back to the name of the active user\n     */\n    public resetSearchString() {\n        this.timeout(\n            'reset',\n            () => (this.search_str = this.active_user?.name || ''),\n            100\n        );\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: User | string, email?: string): void {\n        if (\n            typeof new_value === 'string' &&\n            (new_value as any) === this.search_str\n        ) {\n            new_value = new User({\n                name: (this.search_str || email || '').split('@')[0],\n                email: this.search_str || email || '',\n            });\n        }\n        if (!(new_value instanceof User)) return;\n        this.active_user = new_value;\n        if (this._onChange) {\n            this._onChange(new_value);\n        }\n        this.resetSearchString();\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: User) {\n        this.active_user = value;\n        this.resetSearchString();\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: User) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: User) => void): void {\n        this._onTouch = fn;\n    }\n}\n","\nexport * as MOCKS from './mocks';\n","import { getUnixTime } from 'date-fns';\nimport { Asset } from 'libs/assets/src/lib/asset.class';\n\nexport const MOCK_CATEGORIES = [\n    { id: '1', name: 'Technology' },\n    { id: '2', name: 'Furniture' },\n    { id: '3', name: 'Stationary' },\n    { id: '4', name: 'Other' },\n];\n\nexport const MOCK_PRODUCTS = [\n    { id: '1', name: 'iPad', category_id: '1', brand: 'Apple', barcode: '123' },\n    {\n        id: '2',\n        name: 'iPhone',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '456',\n        images: [],\n    },\n    {\n        id: '3',\n        name: 'iWatch',\n        category_id: '1',\n        brand: 'Apple',\n        barcode: '789',\n    },\n    {\n        id: '4',\n        name: 'Chair',\n        category_id: '2',\n        brand: 'Herman Miller',\n        barcode: '101',\n    },\n    {\n        id: '5',\n        name: 'Lounge',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '102',\n    },\n    { id: '6', name: 'Table', category_id: '2', brand: 'Ikea', barcode: '103' },\n    { id: '7', name: 'Couch', category_id: '2', brand: 'Ikea', barcode: '104' },\n    {\n        id: '8',\n        name: 'Test Item',\n        category_id: '4',\n        brand: 'Test Brand',\n        barcode: '105',\n    },\n    {\n        id: '9',\n        name: 'Notepad',\n        category_id: '3',\n        brand: 'J.Burrows',\n        barcode: '106',\n    },\n    {\n        id: '10',\n        name: 'Whiteboard Markers',\n        category_id: '3',\n        brand: 'Artline',\n        barcode: '107',\n    },\n    {\n        id: '11',\n        name: 'Whiteboard',\n        category_id: '2',\n        brand: 'Ikea',\n        barcode: '108',\n    },\n];\n\nexport const MOCK_ASSETS: Partial<Asset>[] = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `asset-${i}`,\n        name: `Asset ${i}`,\n        type_id: MOCK_PRODUCTS[i % MOCK_PRODUCTS.length].id,\n        description: `This is asset ${i}`,\n        model_number: `Model ${i}`,\n        serial_number: `Serial ${i}`,\n        identifier: `Identifier ${i}`,\n        other_data: {},\n        purchase_order_id: `purchase-order-${i}`,\n    }));\n\nexport const MOCK_PURCHASE_ORDERS = Array(100)\n    .fill(null)\n    .map((_, i) => ({\n        id: `purchase-order-${i}`,\n        order_number: `Order ${i}`,\n        invoice_number: `Invoice ${i}`,\n        purchase_date: getUnixTime(Date.now()),\n        expected_service_start_date: getUnixTime(Date.now()),\n        expected_service_end_date: getUnixTime(Date.now() + 1000000000),\n    }));\n","import { predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport {\n    MOCK_ASSETS,\n    MOCK_CATEGORIES,\n    MOCK_PRODUCTS,\n    MOCK_PURCHASE_ORDERS,\n} from './assets.data';\n\nconst BASE_PATH = '/api/engine/v2';\n\nexport const ASSET_MOCKS = registerMocks();\n\nconst update = (dataset) => (id, data) => {\n    const index = dataset.findIndex((e) => e.id === id);\n    if (index < 0)\n        throw {\n            status: 404,\n            message: `Unable to find booking with ID ${id}`,\n        };\n    const new_event = { ...data };\n    dataset.splice(index, 1, new_event);\n    return new_event;\n};\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_CATEGORIES;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_CATEGORIES.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-category-${predictableRandomInt(999)}`,\n            };\n            MOCK_CATEGORIES.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_CATEGORIES)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_categories/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_CATEGORIES.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_CATEGORIES.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PRODUCTS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PRODUCTS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-product-${predictableRandomInt(999)}`,\n            };\n            MOCK_PRODUCTS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PRODUCTS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_types/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PRODUCTS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_PRODUCTS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_PURCHASE_ORDERS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_PURCHASE_ORDERS.find(\n                (e) => e.id === _.route_params.id\n            );\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-purchase-order-${predictableRandomInt(999)}`,\n            };\n            MOCK_PURCHASE_ORDERS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_PURCHASE_ORDERS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/asset_purchase_orders/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_PURCHASE_ORDERS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find purchase order with ID ${req.route_params.id}`,\n                };\n            MOCK_PURCHASE_ORDERS.splice(index, 1);\n            return;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_ASSETS;\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_ASSETS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets`,\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-asset-${predictableRandomInt(999)}`,\n            };\n            MOCK_ASSETS.push(new_event);\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'PUT',\n        callback: (req) =>\n            update(MOCK_ASSETS)(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: `${BASE_PATH}/assets/:id`,\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_ASSETS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_ASSETS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import {\n    capitalizeFirstLetter,\n    padString,\n    predictableRandomInt,\n    randomString,\n} from '@placeos/common';\nimport { addMinutes, getUnixTime, set, subDays } from 'date-fns';\nimport { MOCK_ASSETS } from './assets.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_BUILDINGS, MOCK_LEVELS } from './zone.data';\nimport { PARKING_SPACES } from './zones.mock';\n\nlet EVENT_TIME = set(subDays(Date.now(), 3), {\n    hours: 7,\n    minutes: 0,\n    seconds: 0,\n    milliseconds: 0,\n});\n\nconst nextEventTime = (save = false): number => {\n    const next = addMinutes(EVENT_TIME, (predictableRandomInt(8) + 1) * 15);\n    if (save) EVENT_TIME = addMinutes(next, 60);\n    return getUnixTime(next);\n};\n\nconst TYPES = ['desk', 'parking', 'asset-request', 'visitor', 'locker'];\nconst TRACKING = ['in_storage', 'in_transit', 'at_location'];\n\nexport const MOCK_BOOKINGS = new Array(200).fill(0).map((_, index) => {\n    const throw_away = predictableRandomInt(999999) % 3 === 0;\n    const user =\n        MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)] || ({} as any);\n    const type = TYPES[predictableRandomInt(TYPES.length)];\n    const bld = MOCK_BUILDINGS[predictableRandomInt(MOCK_BUILDINGS.length)];\n    const lvls = MOCK_LEVELS.filter((_) => _.parent_id === bld?.id);\n    const lvl = lvls[predictableRandomInt(lvls.length)];\n    const lvl_spaces =\n        MOCK_SPACES.filter((_) => _.zones.includes(lvl?.id)) || [];\n    const approved = predictableRandomInt(999999) % 4;\n    const approver = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n    const guest = MOCK_GUESTS[predictableRandomInt(MOCK_GUESTS.length)];\n    const asset_count = predictableRandomInt(3, 1);\n    const position = padString(\n        (index % 18) + 1 + Math.floor(index / 18) * 100,\n        3\n    );\n    return {\n        id: `booking-${index}`,\n        booking_start: nextEventTime(true),\n        booking_end: nextEventTime(),\n        user_id: user.id,\n        user_name: user.name,\n        user_email: user.email,\n        booked_by_name: user.name,\n        booked_by_email: user.email,\n        asset_id:\n            type === 'visitor'\n                ? guest.email\n                : type === 'parking'\n                ? `park-${position}`\n                : `desk-${lvl?.id}-${index}`,\n        asset_name:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `${lvl?.id}-${index}`,\n        description:\n            type === 'visitor'\n                ? guest.name\n                : type === 'parking'\n                ? position\n                : `Desk ${index}`,\n        title: `${capitalizeFirstLetter(type)} Booking ${index}`,\n        type,\n        booking_type: type,\n        checked_in: predictableRandomInt(999999) % 3 === 0,\n        access: predictableRandomInt(999999) % 3 === 0,\n        approved: approved === 0,\n        rejected: approved === 1,\n        approver_id: approved === 0 ? approver.id : '',\n        approver_name: approved === 0 ? approver.name : '',\n        approver_email: approved === 0 ? approver.email : '',\n        zones: [bld?.id, type === 'parking' ? 'level-p1' : lvl?.id],\n        extension_data: {\n            map_id: `table-10.00${index}`,\n            plate_number: randomString(\n                8,\n                'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n            ),\n            assets: new Array(asset_count).fill(0).map((_) => ({\n                ...MOCK_ASSETS[predictableRandomInt(asset_count)],\n                amount: predictableRandomInt(5, 1),\n            })),\n            tracking:\n                approved === 0\n                    ? TRACKING[predictableRandomInt(TRACKING.length)]\n                    : 'in_storage',\n            space_id: lvl_spaces[predictableRandomInt(lvl_spaces.length)]?.id,\n        },\n    };\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_BOOKINGS } from './bookings.data';\n\nexport const BOOKING_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const events = MOCK_BOOKINGS.filter(\n                (event) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        event.booking_start,\n                        event.booking_end\n                    ) &&\n                    (event.type === _.query_params.type ||\n                        event.booking_type === _.query_params.type)\n            );\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            const event = MOCK_BOOKINGS.find((e) => e.id === _.route_params.id);\n            if (!event)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${_.route_params.id}`,\n                };\n            return event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-booking-${predictableRandomInt(999)}`,\n            };\n            MOCK_BOOKINGS.push(new_event);\n            return new_event;\n        },\n    });\n\n    const updateBooking = (id, data) => {\n        const index = MOCK_BOOKINGS.findIndex((e) => e.id === id);\n        if (index < 0)\n            throw {\n                status: 404,\n                message: `Unable to find booking with ID ${id}`,\n            };\n        const new_event = { ...data };\n        MOCK_BOOKINGS.splice(index, 1, new_event);\n        return new_event;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (req) => updateBooking(req.route_params.id, { ...req.body }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/approve',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: true,\n                rejected: false,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/reject',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                approved: false,\n                rejected: true,\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id/check_in',\n        metadata: {},\n        method: 'POST',\n        callback: (req) =>\n            updateBooking(req.route_params.id, {\n                ...req.body,\n                checked_in: req.query_params.state === 'true',\n            }),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/bookings/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (req) => {\n            const index = MOCK_BOOKINGS.findIndex(\n                (e) => e.id === req.route_params.id\n            );\n            if (index < 0)\n                throw {\n                    status: 404,\n                    message: `Unable to find booking with ID ${req.route_params.id}`,\n                };\n            MOCK_BOOKINGS.splice(index, 1);\n            return;\n        },\n    });\n}\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { MOCK_EVENTS } from './events.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const CALENDAR_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const user = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user2 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            const user3 = MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)];\n            return [\n                {\n                    id: ACTIVE_USER.email,\n                    summary: ACTIVE_USER.name,\n                    primary: true,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user.email,\n                    summary: user.name,\n                    primary: false,\n                    can_edit: true,\n                    hidden: false,\n                },\n                {\n                    id: user2.email,\n                    summary: user2.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: false,\n                },\n                {\n                    id: user3.email,\n                    summary: user3.name,\n                    primary: false,\n                    can_edit: false,\n                    hidden: true,\n                },\n            ];\n        },\n    });\n\n    const handleSpaceAvailability = (request) => {\n        const start = +request.query_params.period_start;\n        const end = +request.query_params.period_end;\n        const zones = (request.query_params.zone_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n        const systems = (request.query_params.system_ids || '')\n            .split(',')\n            .filter((i) => !!i);\n\n        const spaces = MOCK_SPACES.filter((space) =>\n            zones.length\n                ? zones.reduce(\n                      (has, zone) => has && space.zones.includes(zone),\n                      true\n                  )\n                : systems.length\n                ? systems.includes(space.id)\n                : true\n        ).filter((space) => {\n            const bookings = MOCK_EVENTS.filter((event) =>\n                event.attendees.find((user) => user.id === space.id)\n            );\n            for (const event of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        start,\n                        end,\n                        event.event_start,\n                        event.event_end\n                    )\n                )\n                    return false;\n            }\n            return true;\n        });\n        return spaces;\n    };\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/availability',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/calendars/free_busy',\n        metadata: {},\n        method: 'GET',\n        callback: (request) =>\n            handleSpaceAvailability(request).map((_) => ({\n                resource: _,\n            })),\n    });\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { addMinutes, differenceInMinutes } from 'date-fns';\n\nexport const MOCK_MENU = [\n    {\n        id: 'item-1',\n        name: 'Coffee',\n        unit_price: 200,\n        category: 'Drinks',\n        tags: ['drink', 'Contains Nuts', 'Contains Dairy'],\n        options: [\n            { id: 'opt-1', name: 'Cappacino', group: 'type' },\n            { id: 'opt-2', name: 'Latte', group: 'type' },\n            { id: 'opt-3', name: '1 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-4', name: '2 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-5', name: '3 Sugar', group: 'sugars', unit_price: 20 },\n            { id: 'opt-6', name: '4 Sugar', group: 'sugars', unit_price: 20 },\n        ],\n    },\n    {\n        id: 'item-2',\n        name: 'Soda',\n        unit_price: 160,\n        category: 'Drinks',\n        tags: ['drink'],\n        options: [\n            { id: 'opt-1', name: 'Pepsi', group: 'type' },\n            { id: 'opt-2', name: 'Sunkist', group: 'type' },\n            { id: 'opt-3', name: 'Solo', group: 'type' },\n            { id: 'opt-4', name: 'Dr Pepper', group: 'type' },\n        ],\n    },\n    { id: 'item-3', name: 'Water', unit_price: 100, category: 'Drinks' },\n    {\n        id: 'item-4',\n        name: 'Muffin',\n        unit_price: 160,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Banana', group: 'type' },\n            { id: 'opt-3', name: 'Blueberry', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-5',\n        name: 'Cookies',\n        unit_price: 400,\n        category: 'Snacks',\n        options: [\n            { id: 'opt-1', name: 'Choc Chip', group: 'type' },\n            { id: 'opt-2', name: 'Macadamia', group: 'type' },\n            { id: 'opt-3', name: 'Dark Choc', group: 'type' },\n        ],\n    },\n    {\n        id: 'item-6',\n        name: 'Fish & Chips',\n        unit_price: 250,\n        category: 'Simple Meals',\n        options: [\n            {\n                id: 'opt-1',\n                name: 'Tomato Sauce',\n                group: 'sauce',\n                unit_price: 30,\n            },\n            { id: 'opt-2', name: 'BBQ Sauce', group: 'sauce', unit_price: 35 },\n            {\n                id: 'opt-3',\n                name: 'Tartare Sause',\n                group: 'sauce',\n                unit_price: 40,\n            },\n            {\n                id: 'opt-4',\n                name: 'Garlic Aoili Sauce',\n                group: 'sauce',\n                unit_price: 50,\n            },\n        ],\n    },\n    {\n        id: 'item-7',\n        name: 'Sandwich',\n        unit_price: 300,\n        category: 'Simple Meals',\n        options: [\n            { id: 'opt-1', name: 'Ham & Cheese', group: 'type' },\n            { id: 'opt-2', name: 'Chicken', group: 'type' },\n            { id: 'opt-3', name: 'Fairy Bread', group: 'type' },\n        ],\n    },\n];\n\nexport function generateCateringOrder(event: HashMap) {\n    const duration = differenceInMinutes(event.event_start, event.event_end);\n    const mx = predictableRandomInt(MOCK_MENU.length);\n    return {\n        id: `order-${predictableRandomInt(999_999)}`,\n        event_id: event.id,\n        invoice_number: `I${predictableRandomInt(999_999)}`,\n        charge_code: `C${predictableRandomInt(9_999)}`,\n        deliver_at: addMinutes(\n            event.event_start * 1000,\n            predictableRandomInt(Math.floor(duration / 5)) * 5\n        ),\n        notes: predictableRandomInt(9999_9999) % 2 === 0 ? 'Test notes' : '',\n        items: new Array(3).fill(0).map((_, idx) => ({\n            ...MOCK_MENU[(mx * idx) % MOCK_MENU.length],\n            options: [],\n            quantity: predictableRandomInt(10, 1),\n        })),\n    };\n}\n","/** Domain of the organisation */\nexport const DOMAIN = 'place.tech';\n/** Endpoint where the staff API is located */\nexport const API = '/api/staff/v1';\n","import { predictableRandomInt, unique } from '@placeos/common';\nimport * as dayjs from 'dayjs';\nimport { generateCateringOrder } from './catering.data';\nimport { MOCK_SPACES } from './spaces.data';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\n\nlet EVENT_TIME = dayjs().startOf('d').hour(7);\n\nconst nextEventTime = (save = false): number => {\n    const next = EVENT_TIME.add((predictableRandomInt(8) + 1) * 15, 'm');\n    if (save) {\n        EVENT_TIME = next;\n    }\n    return next.unix();\n};\n\nconst event_status = ['tentative', 'confirmed', 'cancelled'];\nconst randomStatus = (): string => {\n    const rnd = predictableRandomInt(10);\n    return rnd < 2\n        ? event_status[2]\n        : rnd < 5\n        ? event_status[0]\n        : event_status[1];\n};\n\nexport const MOCK_EVENTS = new Array(200).fill(0).map((_, index) => {\n    const PEOPLE = MOCK_STAFF.concat(MOCK_GUESTS);\n    let attendees: any[] = new Array(predictableRandomInt(8, 1))\n        .fill(0)\n        .map(() => PEOPLE[predictableRandomInt(PEOPLE.length)]);\n    attendees.sort(\n        (a, b) => (a.visit_expected ? 0 : -1) - (b.visit_expected ? 0 : -1)\n    );\n    const space = MOCK_SPACES[predictableRandomInt(MOCK_SPACES.length)];\n    attendees = attendees.concat({ ...space, resource: true });\n    if (predictableRandomInt(9999) % 2 === 0) attendees.unshift(ACTIVE_USER);\n    else attendees.unshift(MOCK_STAFF[predictableRandomInt(MOCK_STAFF.length)]);\n    attendees = unique(attendees, 'email') || [{}];\n    const event_start = nextEventTime(true);\n    const event_end = nextEventTime();\n    const meeting_url =\n        predictableRandomInt(9999) % 3 === 0 ? 'https://meet.place.tech' : '';\n    return {\n        id: `cal-event-${index}`,\n        status: randomStatus(),\n        host: attendees[0].email,\n        calendar: 'calendar_id',\n        creator: 'optional@fake.com',\n        attendees: (unique(attendees, 'email') || []).map((_, idx) => ({\n            ..._,\n            organizer: idx === 0,\n            checked_in: predictableRandomInt(99999) % 2 === 0,\n            response_status:\n                predictableRandomInt(99999) % 2 === 0\n                    ? 'accepted'\n                    : predictableRandomInt(99999) % 6 === 0\n                    ? 'declined'\n                    : 'tentative',\n        })),\n        title: `Some Meeting ${index}`,\n        body: `A Description`,\n        private: false,\n        event_start,\n        event_end,\n        timezone: 'Australia/Sydney',\n        all_day: false,\n        location: `${space?.name}`,\n        recurring: false,\n        recurrence: {},\n        attachments: {},\n        system: space,\n        meeting_url,\n        meeting_id: meeting_url ? `m${predictableRandomInt(9999)}` : '',\n        meeting_provider: meeting_url ? 'PlaceOS' : '',\n        extension_data: {\n            catering:\n                predictableRandomInt(99999) % 4 === 0\n                    ? [\n                          generateCateringOrder({\n                              id: `cal-event-${index}`,\n                              event_start,\n                              event_end,\n                          }),\n                      ]\n                    : [],\n            setup: predictableRandomInt(4) * 5,\n            breakdown: predictableRandomInt(4) * 5,\n        },\n    };\n});\n\nconst event_spaces = {};\nMOCK_EVENTS.forEach((event) => {\n    if (!event_spaces[event.system?.id]) {\n        event_spaces[event.system?.id] = [];\n    }\n    event_spaces[event.system?.id].push(event);\n});\n","import { predictableRandomInt, timePeriodsIntersect } from '@placeos/common';\nimport { mockSystem, registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_EVENTS } from './events.data';\nimport { ACTIVE_USER, MOCK_STAFF } from './users.data';\n\nexport const EVENT_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'GET',\n        callback: (_) => {\n            let events = MOCK_EVENTS;\n            if (!_.query_params.zone_ids) {\n                events = events.filter(\n                    (event) =>\n                        !!event.attendees.find(\n                            (user) => user.email === ACTIVE_USER.email\n                        )\n                );\n            }\n            if (_.query_params.period_start) {\n                events = events.filter((e) =>\n                    timePeriodsIntersect(\n                        _.query_params.period_start,\n                        _.query_params.period_end,\n                        e.event_start,\n                        e.event_end\n                    )\n                );\n            }\n            return events;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const new_event = {\n                ...request.body,\n                id: `-cal-event-${predictableRandomInt(999)}`,\n            };\n            new_event.attendees = [\n                MOCK_STAFF.find((_) => _.email === new_event.host),\n                ...(new_event.attendees || []),\n            ];\n            new_event.attendees.forEach((user) => {\n                if (user.zones) user.resource = true;\n            });\n\n            if (new_event.system) {\n                new_event.attendees = [\n                    ...(new_event.attendees || []),\n                    { ...new_event.system, resource: true },\n                ];\n            }\n            MOCK_EVENTS.push(new_event);\n\n            const system = mockSystem(new_event.system?.id);\n            system?.Bookings[0]?.$poll_bookings();\n            return new_event;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const item = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (item) {\n                return item;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'DELETE',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index > 0) {\n                if (MOCK_EVENTS[index].host === ACTIVE_USER.email) {\n                    MOCK_EVENTS.splice(index, 1);\n                } else {\n                    const user = MOCK_EVENTS[index].attendees.find(\n                        (_) => _.email === ACTIVE_USER.email\n                    );\n                    user.response_status = 'declined';\n                }\n                return;\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            const index = MOCK_EVENTS.findIndex(\n                (event) => event.id === request.route_params.id\n            );\n            if (index >= 0) {\n                return MOCK_EVENTS.splice(index, 1, request.body);\n            }\n            throw { status: 404, message: 'Event not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/events/:id/guests/:email/checkin',\n        metadata: {},\n        method: 'POST',\n        callback: (request) => {\n            const event = MOCK_EVENTS.find(\n                (event) => event.id === request.route_params.id\n            );\n            if (event) {\n                const checked_in =\n                    (event.extension_data as any).checked_in || [];\n                (event.extension_data as any).checked_in = checked_in.concat([\n                    request.route_params.email,\n                ]);\n                return event;\n            }\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { generateMockSpace } from '@placeos/spaces';\n\nconst randomSpaceFeatures = () => {\n    const f = ['Whiteboard', 'VidConf', 'Projector', 'Views'];\n    const numFeatures = predictableRandomInt(f.length + 1);\n    const res = [];\n    for (let i = 0; i < numFeatures; i++) {\n        res.push(f[predictableRandomInt(f.length)]);\n    }\n    return res.filter((el, i, r) => r.indexOf(el) === i);\n};\n\nexport const MOCK_SPACES = [\n    {\n        name: '1.01 Operations Room',\n        map_id: 'area-1.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.03 Sydney Boardroom',\n        map_id: 'area-1.03-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: '1.04 The Studio',\n        map_id: 'area-1.04-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Jam Board',\n        map_id: 'area-1.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.01 Cisco Room',\n        map_id: 'area-G.01-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'G.02 The Lab',\n        map_id: 'area-G.02-status',\n        zones: ['bld-01', 'bld-01_lvl-1'],\n    },\n    {\n        name: 'Conference Room 2.01',\n        map_id: 'area-2.01-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 2.02',\n        map_id: 'area-2.02-status',\n        zones: ['bld-02', 'bld-02_lvl-2'],\n    },\n    {\n        name: 'Conference Room 3.01',\n        map_id: 'area-3.01-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.02',\n        map_id: 'area-3.02-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n    {\n        name: 'Conference Room 3.03',\n        map_id: 'area-3.03-status',\n        zones: ['bld-02', 'bld-02_lvl-3'],\n    },\n].map((d) => generateMockSpace({ ...d, features: randomSpaceFeatures(), images: ['https://webcdn.executivecentre.com/wp-content/uploads/sites/39/2020/10/img-meetingroomrental_hire.jpg'] }));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { createSystem } from '../systems-bindings.mock';\nimport { MOCK_SPACES } from './spaces.data';\n\nexport const SYSTEM_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    MOCK_SPACES.forEach((space: any, index) => createSystem(space));\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            return request.query_params?.zone_id\n                ? MOCK_SPACES.filter((_) =>\n                      _.zones.includes(request.query_params.zone_id)\n                  )\n                : MOCK_SPACES;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/systems/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const space = MOCK_SPACES.find(_ => _.id === request.route_params.id);\n            if (!space) throw { status: 404 };\n            return space;\n        },\n    });\n}\n","import { predictableRandomInt } from '@placeos/common';\nimport { DOMAIN } from './common.mock';\n\nconst PREDEF_USERS = [\n    'Jonathan McFarlane',\n    'Alex Sorafumo',\n    'Jim Doe',\n    'Cristina Boston',\n    'Jeremy West',\n    'Viv Briffa',\n    'Candy Russo',\n    'Jeff Wiz',\n    'Sravani Kotha',\n    'Kim Burgess',\n    'Caspian Baska',\n    'Stephen Von Takach',\n    'Cameron Reeves',\n    'Shane Boseley',\n];\n\nexport const ACTIVE_USER = {\n    id: 'current',\n    name: 'PlaceOS - Mock User',\n    email: 'dev@place.tech',\n    groups: ['deals', 'user'],\n};\n\nexport const MOCK_STAFF = PREDEF_USERS.map((name, i) => ({\n    id: `user-${i + 1}`,\n    name: `${name} (PlaceOS)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@${DOMAIN}`,\n})).concat([ACTIVE_USER]);\n\nexport const MOCK_GUESTS = PREDEF_USERS.map((name, i) => ({\n    id: `guest-${i + 1}`,\n    name: `${name} (External)`,\n    email: `${name.split(' ').join('.').toLowerCase()}@guest.${DOMAIN}`,\n    visit_expected: predictableRandomInt(99999) % 2 === 0,\n    extension_data: predictableRandomInt(99999) % 3 === 0 ? {\n        vaccination_proof: { url: 'https://fonts.gstatic.com/s/i/materialicons/verified/v11/24px.svg' },\n        id_data: { url: 'https://fonts.gstatic.com/s/i/materialicons/fingerprint/v12/24px.svg' } \n    } : {}\n}));\n","import { registerMockEndpoint } from '@placeos/ts-client';\n\nimport { HashMap, predictableRandomInt } from '@placeos/common';\nimport { ACTIVE_USER, MOCK_GUESTS, MOCK_STAFF } from './users.data';\nimport { MOCK_LEVELS } from './zone.data';\nimport { MOCK_SPACES } from './spaces.data';\n\nimport * as dayjs from 'dayjs';\nimport { MOCK_EVENTS } from './events.data';\n\nexport const USER_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/users/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.id === 'current') {\n                return ACTIVE_USER;\n            }\n            const person = MOCK_STAFF.find(\n                (user) => user.email === request.route_params.id\n            );\n            if (person) {\n                return person;\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_STAFF.filter(({ name, email }) => {\n                    return (\n                        name.toLowerCase().includes(search) ||\n                        email.toLowerCase().includes(search)\n                    );\n                });\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/people/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const id = decodeURIComponent(request.route_params.id);\n            const person = MOCK_STAFF.find((user) => user.email === id);\n            if (person) {\n                return {\n                    ...person,\n                    location: generateLocation(),\n                };\n            }\n            throw { status: 404, message: 'User not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.q) {\n                const search = request.query_params.q.toLowerCase();\n                return MOCK_GUESTS.filter(\n                    (user) =>\n                        user.name.toLowerCase().includes(search) ||\n                        user.email.toLowerCase().includes(search)\n                );\n            }\n            return MOCK_STAFF;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const email = decodeURIComponent(request.route_params.email);\n            const person = MOCK_GUESTS.find((user) => user.email === email);\n            if (person) return person;\n            throw { status: 404, message: 'Guest not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/staff/v1/guests/:email/meetings',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.route_params.email) {\n                const email = request.route_params.email.toLowerCase();\n                const events = MOCK_EVENTS.filter((event) =>\n                    event.attendees.find(\n                        (user) => user.email.toLowerCase() === email\n                    )\n                );\n                return events;\n            }\n            throw {\n                status: 404,\n                message: `Unable to find meetings with guest with email ${request.route_params.email}`,\n            };\n        },\n    });\n\n    const LOCATION_TYPES = [\n        'meeting',\n        'desk_id',\n        'laptop',\n        'mobile',\n        'geo',\n        'none',\n    ];\n\n    function generateLocation() {\n        const type =\n            LOCATION_TYPES[predictableRandomInt(LOCATION_TYPES.length)];\n        const level = MOCK_LEVELS[predictableRandomInt(MOCK_LEVELS.length)];\n        const level_spaces = MOCK_SPACES.filter((s) =>\n            s.zones.includes(level.id)\n        );\n        const space =\n            level_spaces[predictableRandomInt(level_spaces.length)] || {};\n        const location: HashMap = {};\n        switch (type) {\n            case 'meeting':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    system: space.id,\n                    map_id: space.map_id,\n                    event_id: '',\n                };\n                break;\n            case 'desk_id':\n                location.meeting = {\n                    building: level.parent_id,\n                    level: level.id,\n                    map_id: space.map_id,\n                    checked_in: dayjs().unix(),\n                };\n                break;\n            case 'laptop':\n            case 'mobile':\n                location[type] = {\n                    building: level.parent_id,\n                    level: level.id,\n                    x: +predictableRandomInt(10000),\n                    y: +predictableRandomInt(5000),\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n            case 'geo':\n                location.geo = {\n                    lat: predictableRandomInt(180) - 90,\n                    lon: predictableRandomInt(360) - 180,\n                    last_seen: dayjs()\n                        .subtract(predictableRandomInt(60), 'm')\n                        .unix(),\n                };\n                break;\n        }\n        return location;\n    }\n}\n","export const MOCK_ORGS = [\n    {\n        created_at: 1587057070,\n        updated_at: 1587692680,\n        name: 'PlaceOS',\n        description: '',\n        tags: 'org',\n        count: 0,\n        capacity: 0,\n        parent_id: '',\n        triggers: [],\n        id: 'zone-EmWFTjuYExK',\n    },\n];\n\nexport const MOCK_BUILDINGS = [\n    {\n        name: 'Sydney',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-01',\n        levels: ['lvl-G', 'lvl-1'],\n    },\n    {\n        name: 'Brisbane',\n        description: '',\n        tags: 'building',\n        count: 0,\n        capacity: 0,\n        parent_id: 'zone-EmWFTjuYExK',\n        triggers: [],\n        id: 'bld-02',\n        levels: ['lvl-2', 'lvl-3'],\n    },\n];\n\nconst mockLevel = (\n    id: string,\n    idx: number,\n    building: any,\n    num: string = '10'\n): any => {\n    let map_id = id.substr(4);\n    map_id = `assets/maps/level_${num}.svg`;\n    return {\n        id: `${building.id}_${id}`,\n        name: `Level ${id.endsWith('00') ? 'G' : id.split('-')[1]}`,\n        parent_id: building.id,\n        description: '',\n        tags: 'level',\n        map_id,\n        code: 'level code 12',\n        type: 'staff floor',\n        count: 5,\n        capacity: 30,\n        location: 'optional lat,long',\n        display_name: '',\n    };\n};\n\nexport const MOCK_LEVELS = MOCK_BUILDINGS.map((bld) =>\n    bld.levels.map((level, idx) =>\n        mockLevel(level, idx, bld, level.split('-')[1])\n    )\n).reduce((p, c) => p.concat(c), [\n    // {\n    //     id: 'test',\n    //     parent_id: 'bld-01',\n    //     name: 'Test',\n    //     map_id: 'assets/maps/test.svg',\n    // },\n    {\n        id: 'level-p1',\n        parent_id: 'bld-01',\n        name: 'Level P1',\n        tags: ['level', 'parking'],\n        map_id: 'assets/maps/level_P1.svg',\n    },\n]);\n","import { padString, predictableRandomInt } from '@placeos/common';\nimport { registerMockEndpoint } from '@placeos/ts-client';\nimport { MOCK_MENU } from './catering.data';\nimport { MOCK_STAFF } from './users.data';\nimport { MOCK_ORGS, MOCK_LEVELS, MOCK_BUILDINGS } from './zone.data';\n\nconst MOCK_METADATA = {\n    current: {\n        contacts: {\n            name: 'contacts',\n            description: '',\n            details: [\n                {\n                    id: 'user-1',\n                    name: 'Jonathan McFarlane (PlaceOS)',\n                    email: 'jon@place.tech',\n                    first_name: 'Jonathan',\n                    last_name: 'McFarlane',\n                },\n                {\n                    id: 'user-1',\n                    name: 'Alex Sorafumo (PlaceOS)',\n                    email: 'alex@place.tech',\n                    first_name: 'Alex',\n                    last_name: 'Sorafumo',\n                },\n            ],\n        },\n    },\n};\n\nexport const PARKING_SPACES = {};\nexport const LOCKERS = {};\n\nexport const ZONE_MOCKS = registerMocks();\n\nfunction registerMocks() {\n    registerMockEndpoint({\n        path: '/api/engine/v2/zones',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.tags === 'org') {\n                return MOCK_ORGS;\n            } else if (request.query_params.tags === 'region') {\n                return [];\n            } else if (request.query_params.tags === 'building') {\n                return MOCK_BUILDINGS;\n            } else if (request.query_params.tags === 'level') {\n                return MOCK_LEVELS;\n            }\n            throw { status: 404, message: 'Zones not found' };\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            if (request.query_params.name === 'bindings') {\n                return {\n                    bindings: {\n                        details: {\n                            area_management: 'space-0',\n                            location_services: 'space-0',\n                            contact_tracing: 'space-0',\n                            lockers: 'space-0',\n                            // payments: 'space-0',\n                        },\n                    },\n                };\n            }\n            if (request.query_params.name === 'catering') {\n                return {\n                    catering: {\n                        details: MOCK_MENU,\n                    },\n                };\n            }\n            if (request.query_params.name === 'parking-spaces') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateParkingSpaces(id);\n            }\n            if (request.query_params.name === 'lockers') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateLockers(id);\n            }\n            if (request.query_params.name === 'desks') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return generateMockDeskMetadata(id);\n            }\n            if (request.query_params.name === 'charge_codes') {\n                const parts = request.route_params.id.split('-');\n                const id = parts[parts.length - 1];\n                return {\n                    charge_codes: {\n                        details: new Array(30)\n                            .fill(0)\n                            .map((_, idx) => `C-${idx}`),\n                    },\n                };\n            }\n            if (request.query_params.name === 'map_regions') {\n                return {\n                    map_regions: {\n                        details: {\n                            areas: [\n                                {\n                                    id: 'zone-10.A',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.36, y: 0.33 },\n                                        // draw_polygon: true\n                                    },\n                                    geometry: {\n                                        coordinates: [\n                                            [0.0, 0.0],\n                                            [0.0, 0.5],\n                                            [0.5, 0.5],\n                                            [0.5, 0.0],\n                                        ],\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.B',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.76, y: 0.33 },\n                                    },\n                                },\n                                {\n                                    id: 'zone-10.C',\n                                    properties: {\n                                        capacity: 100,\n                                        label_location: { x: 0.63, y: 0.77 },\n                                    },\n                                },\n                            ],\n                        },\n                    },\n                };\n            }\n            if (\n                MOCK_METADATA[request.route_params.id] &&\n                MOCK_METADATA[request.route_params.id][\n                    request.query_params.name\n                ]\n            ) {\n                return MOCK_METADATA[request.route_params.id];\n            } else if (\n                MOCK_METADATA[request.route_params.id] &&\n                !request.query_params.name\n            ) {\n                return MOCK_METADATA[request.route_params.id] || {};\n            }\n            return {};\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PATCH',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id',\n        metadata: {},\n        method: 'PUT',\n        callback: (request) => {\n            if (!MOCK_METADATA[request.route_params.id])\n                MOCK_METADATA[request.route_params.id] = {};\n            MOCK_METADATA[request.route_params.id][request.body.name] =\n                request.body;\n            return request.body;\n        },\n    });\n\n    const DESK_FEATURES = ['sit_to_stand', 'single_monitor', 'dual_monitor'];\n\n    function generateMockDeskMetadata(id: string) {\n        return {\n            desks: {\n                details: new Array(30).fill(0).map((_, idx) => ({\n                    id: `table-${padString(id, 2)}.${padString(idx + 1, 3)}`,\n                    name: `Desk ${id}.${padString(idx + 1, 3)}`,\n                    bookable: predictableRandomInt(9999) % 4 !== 0,\n                    groups:\n                        predictableRandomInt(9999) % 4 === 0 ? ['test-1'] : [],\n                    features: DESK_FEATURES.filter(\n                        (_) => predictableRandomInt(99999) % 3 === 0\n                    ),\n                })),\n            },\n        };\n    }\n\n    function generateParkingSpaces(id: string) {\n        if (!PARKING_SPACES[id]) {\n            PARKING_SPACES[id] = {\n                'parking-spaces': {\n                    details: new Array(18 * 6).fill(0).map((_, idx) => {\n                        const position = padString(\n                            (idx % 18) + Math.floor(idx / 18) * 100,\n                            3\n                        );\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `park-${position}`,\n                            map_id: `park-${position}`,\n                            name: `${position}`,\n                            bookable: predictableRandomInt(9999) % 4 !== 0,\n                            assigned_to: assignee.email || '',\n                            assigned_name: assignee.name || '',\n                        };\n                    }),\n                },\n            };\n        }\n        return PARKING_SPACES[id];\n    }\n\n    function generateLockers(id: string) {\n        if (!LOCKERS[id]) {\n            LOCKERS[id] = {\n                lockers: {\n                    details: new Array(6).fill(0).map((_, idx) => {\n                        const position = padString(idx + 1, 2);\n                        const assignee =\n                            predictableRandomInt(9999) % 4 === 0\n                                ? MOCK_STAFF[\n                                      predictableRandomInt(MOCK_STAFF.length)\n                                  ]\n                                : ({} as any);\n                        return {\n                            id: `locker-bank-${id}.${position}`,\n                            map_id: `bank-${id}.${position}`,\n                            level_id: `lvl-02`,\n                            name: `Bank ${position}`,\n                            height: 3,\n                            lockers: new Array(18).fill(0).map((_, idx2) => ({\n                                id: `locker-${position}.${padString(\n                                    idx2 + 1,\n                                    3\n                                )}`,\n                                name: `Locker ${idx2 + 1}`,\n                                accessible:\n                                    predictableRandomInt(9999) % 2 !== 0,\n                                bookable: predictableRandomInt(9999) % 4 !== 0,\n                                position: [idx2 % 6, Math.floor(idx2 / 6)],\n                                size: [1, 1],\n                            })),\n                        };\n                    }),\n                },\n            };\n        }\n        return LOCKERS[id];\n    }\n\n    registerMockEndpoint({\n        path: '/api/engine/v2/metadata/:id/children',\n        metadata: {},\n        method: 'GET',\n        callback: (request) => {\n            const zone = MOCK_BUILDINGS.find(\n                (_) => _.id === request.route_params.id\n            );\n            if (!zone)\n                throw {\n                    status: 404,\n                    message: `Unable to find zone with id \"${request.route_params.id}\"`,\n                };\n            return MOCK_LEVELS.filter((_) => _.parent_id === zone.id).map(\n                (lvl) => {\n                    const parts = lvl.id.split('-');\n                    const id = parts[parts.length - 1];\n                    return {\n                        zone: lvl,\n                        metadata:\n                            request.query_params.name === 'parking-spaces'\n                                ? generateParkingSpaces(id)\n                                : request.query_params.name === 'lockers'\n                                ? generateLockers(id)\n                                : generateMockDeskMetadata(id),\n                    };\n                }\n            );\n        },\n    });\n}\n","import { HashMap } from '@placeos/common';\n\nexport enum CameraTilt {\n    Down,\n    Up,\n    Stop,\n}\n\nexport enum CameraPan {\n    Left,\n    Right,\n    Stop,\n}\n\nclass CameraModule {\n    pan: number;\n    tilt: number;\n    zoom: number;\n\n    pan_speed: number;\n    tilt_speed: number;\n    zoom_speed: number;\n\n    presets: string[];\n\n    constructor(_) {\n        this.presets = ['Preset One', 'Preset 2', 'Preset Three'];\n    }\n\n    $pan(dir: CameraPan) {}\n\n    $tilt(tilt: CameraTilt) {}\n\n    $recall(name: string) {}\n\n    $save_preset(name: string) {}\n}\n\nexport const createCameraModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CameraModule({ ...space, ...overrides });\n","import { HashMap, randomInt } from \"@placeos/common\";\n\nlet interval;\n\nexport class CaptureModule {\n\n    status: 'playing' | 'stopped' | 'paused' = 'stopped';\n    title: string;\n    live: boolean = false;\n    remaining: number;\n    current: number;\n    next: number;\n\n    constructor(_) {\n        this.remaining = randomInt(24 * 60 * 60);\n    }\n\n    $start() {\n        this.status = 'playing';\n        interval = setInterval(() => {\n            if (this.remaining < 1) clearInterval(interval);\n            this.remaining = this.remaining - 1;\n            this.current = this.current + 1;\n        }, 3000);\n    }\n\n    $pause() {\n        this.status = 'paused';\n        clearInterval(interval);\n    }\n\n    $resume() {\n        this.$start();\n    }\n\n    $stop() {\n        this.status = 'stopped';\n        this.current = 0;\n        clearInterval(interval);\n    }\n\n}\n\nexport const createCaptureModule = (space: HashMap, overrides: HashMap = {}) =>\n    new CaptureModule({ ...space, ...overrides });\n","import {\n    HashMap,\n    randomInt,\n    randomString,\n    timePeriodsIntersect,\n} from '@placeos/common';\nimport { addDays, getUnixTime, isBefore, setHours } from 'date-fns';\nimport { MOCK_STAFF } from '../api/users.data';\n\nconst CONTACT_EVENTS = {};\n\nconst filterFn = (start, end) => (itm) => {\n    return timePeriodsIntersect(start, end, itm.contact_time, itm.contact_time);\n};\n\nclass ContactTracingModule {\n    constructor(_) {}\n\n    $close_contacts(email: string, user: string, start: number, end: number) {\n        if (!CONTACT_EVENTS[email]) CONTACT_EVENTS[email] = [];\n        if (CONTACT_EVENTS[email].length)\n            return CONTACT_EVENTS[email].filter(filterFn(start, end));\n        const events = [];\n        const beginning = addDays(start * 1000, -10);\n        const ending = addDays(end * 1000, 10);\n        let date = new Date(beginning);\n        while (isBefore(date, ending)) {\n            new Array(randomInt(4))\n                .fill(0)\n                .map((_) => ({\n                    mac_address: randomString(10),\n                    contact_time: getUnixTime(\n                        setHours(date, randomInt(11) + 7)\n                    ),\n                    duration: randomInt(60) * 60,\n                    username: MOCK_STAFF[randomInt(MOCK_STAFF.length)].email,\n                }))\n                .forEach((e) => events.push(e));\n            date = addDays(date, 1);\n        }\n        CONTACT_EVENTS[email] = events;\n        return CONTACT_EVENTS[email].filter(filterFn(start, end));\n    }\n}\n\nexport const createContactTracingModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new ContactTracingModule({ ...space, ...overrides });\n","import { HashMap, unique } from '@placeos/common';\n\nexport interface EnvironmentSource {\n    id?: string;\n    name: string;\n    type?: 'lights' | 'blinds' | 'screen';\n    state: string | number;\n    states: string[];\n}\n\nexport interface RoomInput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    routes: string[];\n    outputs: string[];\n}\n\nexport interface RoomOutput {\n    id?: string;\n    ref: string;\n    name: string;\n    type: string;\n    mod: string;\n    mute: boolean;\n    locked: boolean;\n    source: string;\n    inputs: string[];\n    following: string;\n}\n\nclass RoomModule {\n    public readonly name: string;\n    public readonly connected: boolean;\n    public active: boolean;\n\n    public readonly input_list: HashMap<RoomInput>;\n    public readonly output_list: HashMap<RoomOutput>;\n    public readonly env_sources: EnvironmentSource[];\n\n    public readonly inputs;\n    public readonly outputs;\n    public readonly available_outputs;\n    public readonly environment;\n\n    public readonly help = {\n        help: {\n            title: 'Help',\n            content: `\n# Using the asset browser\n\n## Activating the menu\nThe 5 finger touch can be actvated by placing 4 fingers and your thumb on the screen, or quickly double-tapping the screen. Activation through double tap will leave the menu on-screen. To close tap the ‘X’.\n\n## Selecting a menu item\nLeaving at least one finger on the screen, drag your finger to the icon to select.\n\n## Home Menu\nThe home menu allows you to access files and navigate to content and presentations via the Launcher.\n\n## Connect and stream your laptop or access the CMS to add files\nPlug your laptop into the HDMI to stream it to the screen, or access the CMS to add your own content and create custom presentations.\n\n<video></video>\n\n1. Test1\n2. Test2\n3. Test3\n            `,\n        },\n        'laptop-help': {\n            icon: 'web_asset',\n            title: 'Asset Browser',\n            content: `# Test 2`,\n        },\n    };\n\n    public tabs = [\n        {\n            icon: 'laptop',\n            name: 'Laptop',\n            type: 'Laptop',\n        },\n        {\n            icon: 'call',\n            name: 'VC',\n            inputs: ['VidConf_1'],\n            help: 'vidconf-help',\n            controls: 'vidconf-controls',\n        },\n    ];\n\n    public volume = 0;\n\n    constructor(_data: Partial<RoomModule>) {\n        this.name = _data.name || 'Test Module';\n        this.connected = _data.connected ?? true;\n        this.active = _data.active || false;\n        this.input_list = _data.input_list;\n        this.output_list = _data.output_list;\n        this.env_sources = _data.env_sources || [];\n        this.inputs = Object.keys(this.input_list || {}) || [];\n        this.outputs = Object.keys(this.output_list || {}) || [];\n        this.available_outputs = this.outputs;\n        const types = unique(this.env_sources.map((_) => _.type)) || [];\n        types.forEach(\n            (t) =>\n                (this[`${t}`] = this.env_sources\n                    .filter((_) => _.type === t)\n                    .map((_) => _.id))\n        );\n        this.env_sources.forEach(\n            (source) => (this[`${source.type}/${source.id}`] = source)\n        );\n        this.inputs.forEach(\n            (key) => (this[`input/${key}`] = this.input_list[key])\n        );\n        this.outputs.forEach(\n            (key) => (this[`output/${key}`] = this.output_list[key])\n        );\n    }\n\n    $power(state = true) {\n        this.active = state;\n    }\n    /** Shares a signal source with the room and any connected remote participants. */\n    $share() {}\n    /**\n     * Connect a signal source to a signal output, or set of outputs. Any intermediate\n     * device interactions are handled internally. For example, on a system using a small\n     * presentation switcher and a display, routing a laptop input will select the\n     * appropriate input on the switcher, and select the appropriate input on the display.\n     *\n     * This includes all routable signal types - in addition to the above example, this may\n     * be interacting with an audio DSP to add a microphone feed to an output zone, or\n     * connecting a USB HID input device with a specific output.\n     **/\n    $route(input: string, output: string) {\n        if (this.inputs.includes(input) && this.outputs.includes(output)) {\n            this.$updateState(input, {\n                routes: unique([\n                    ...(this.input_list[input].routes || []),\n                    output,\n                ]),\n            });\n            this.$updateState(output, {\n                source: input,\n                following: input,\n            });\n        }\n    }\n    /**\n     * Remove a signal source from a signal output.\n     * Predominantly intended for outputs that support more than one simultaneous input source\n     * (mixed audio zone, or display capable of compositing multiple video sources).\n     **/\n    $unroute() {}\n    /**\n     * Establish a call (either phone or video) with a remote participant.\n     * This may be a peer-to-peer connection or a wider group via an external bridging service.\n     **/\n    $connect() {}\n    /** End a call with a remote participant. */\n    $disconnect() {}\n    /**\n     * Bind the current system to another PlaceOS controlled space, relinquishing local control.\n     * This may be used for an education pod that pairs with a wider classroom or a room being\n     * used as an overflow from a primary event space.\n     **/\n    $link() {}\n    /**\n     * Join the current system with another PlaceOS controlled space, sharing control and signal IO.\n     * Examples of usage would be a set of rooms with moveable walls. N-way merges supported.\n     **/\n    $merge() {}\n    /** Separate from a linked or merged system. */\n    $split() {}\n    /**\n     * Display an alert visible to participants in the space. This may occur as a screen overlay,\n     * on a control interface, a bot post in a chat space associated with the current meeting or\n     * other modalities depending on hardware capability.\n     **/\n    $notify() {}\n    /**\n     * Place the room into a predefined operation mode. This may include executing an arbitrary\n     * set of device interactions, changing metadata associated with the system itself (changing\n     * available input or output nodes), or other configurable actions designed to transition\n     * the space to a specific state.\n     **/\n    $preset() {}\n    /**\n     * Set the volume for a signal node in the space. This can include outputs as well as inputs\n     * where supported (e.g. microphone). If unspecified, default is to interact with a ‘primary’\n     * output node.\n     **/\n    $volume(value: number, source: string = 'all') {\n        if (source === 'all') {\n            this.volume = value;\n        }\n    }\n    /** Interact with audio muting on supporting signal nodes within the space. */\n    $mute(state: boolean = true, source: string = 'all') {\n        this.$updateState(source, { mute: state });\n    }\n    /**\n     * Activates or deactivates a signal mute for the associated IO. If this is not possible,\n     * (e.g. unsupported by the device) an error is returned.\n     **/\n    $unmute(source: string = 'all') {\n        this.$mute(false, source);\n    }\n    /**\n     * Wrapper for an arbitrary set of control points defined in system configuration.\n     * Each of these may map to control options available on a sibling module and take one of two forms:\n     *  - Continuous value within a range (temperature set point 16.0...28.0 degrees, lighting level 0...100)\n     *  - Set of possible states (lighting high/med/low, blind up/down, electrochromic glass clear/opaque)\n     *\n     * System state provides the ability to introspect configured points for both control limits and current value.\n     **/\n    $environment(id: string, state: string | number) {\n        const source = this.env_sources.find((_) => _.id === id);\n        if (source) {\n            this[`${source.type}/${source.id}`] = { ...source, state };\n        }\n    }\n    /** Locks an IO node. Prevents any route changes that include this until unlocked. */\n    $lock(source: string) {\n        this.$updateState(source, { locked: true });\n    }\n    /** Unlocks an IO node. */\n    $unlock(source: string) {\n        this.$updateState(source, { locked: false });\n    }\n\n    $updateState(source: string, data: HashMap) {\n        if (this[`input/${source}`]) {\n            this[`input/${source}`] = { ...this[`input/${source}`], ...data };\n            this.input_list[source] = { ...this[`input/${source}`], ...data };\n        } else if (this[`output/${source}`]) {\n            this[`output/${source}`] = { ...this[`output/${source}`], ...data };\n            this.output_list[source] = { ...this[`output/${source}`], ...data };\n        }\n    }\n}\n\nconst input_list: HashMap = {\n    Mic1: {\n        name: 'Lectern Mic',\n        type: 'Microphone',\n        mod: 'Microphone_1',\n    },\n    Mic2: {\n        name: 'Lapel Mic',\n        type: 'Microphone',\n        mod: 'Microphone_2',\n    },\n    Mic3: {\n        name: 'Handheld Mic',\n        type: 'Microphone',\n        mod: 'Microphone_3',\n    },\n    PC1: {\n        name: 'PC-1',\n        type: 'PC',\n    },\n    PC2: {\n        name: 'PC-2',\n        type: 'PC',\n    },\n    PC3: {\n        name: 'PC-3',\n        type: 'PC',\n    },\n    PC4: {\n        name: 'PC-4',\n        type: 'PC',\n    },\n    HDMI: {\n        name: 'Laptop HDMI',\n        type: 'Laptop',\n    },\n    VGA: {\n        name: 'Laptop VGA',\n        type: 'Laptop',\n    },\n    Camera1: {\n        name: 'Camera Rear',\n        type: 'Camera',\n        mod: 'Camera_1',\n    },\n    Camera2: {\n        name: 'Camera Front',\n        type: 'Camera',\n        mod: 'Camera_2',\n    },\n    Camera3: {\n        name: 'Camera Rear 2',\n        type: 'Camera',\n        mod: 'Camera_3',\n    },\n    Camera4: {\n        name: 'Camera Front 2',\n        type: 'Camera',\n        mod: 'Camera_4',\n    },\n    TV1: {\n        name: 'IPTV 1',\n        type: 'TV',\n        mod: 'IPTV_1',\n    },\n    VC1: {\n        name: 'Video Conference 1',\n        type: 'VC',\n        mod: 'VidConf_1',\n    },\n};\n\nconst output_list: HashMap = {\n    Display1: {\n        name: 'Screen 1',\n        type: 'Display',\n        source: 'PC1',\n        mod: 'Display_1',\n    },\n    Display2: {\n        name: 'Screen 2',\n        type: 'Display',\n        mod: 'Display_2',\n    },\n    Display5: {\n        name: 'TV 1',\n        type: 'Display',\n        mod: 'Display_5',\n        source: 'TV1',\n    },\n};\n\nconst env_sources: any[] = [\n    {\n        id: 'light1',\n        name: 'Lighting',\n        type: 'lights',\n        states: ['Off', 'Presentation', 'Meeting', 'Full'],\n        state: 'Off',\n    },\n    {\n        id: 'blind1',\n        name: 'Blinds',\n        type: 'blinds',\n        states: ['Off', 'Presentation', 'Meeting'],\n        state: 'Off',\n    },\n    {\n        id: 'screen1',\n        name: 'Screen',\n        type: 'screen',\n        states: ['Up', 'Down'],\n        state: 'Down',\n    },\n];\n\nexport const createSystemModule = (space: HashMap, overrides: HashMap = {}) =>\n    new RoomModule({\n        ...space,\n        input_list,\n        output_list,\n        env_sources,\n        ...overrides,\n    });\n","import { Md5 } from 'ts-md5';\nimport { HashMap, predictableRandomInt, randomInt } from '@placeos/common';\nimport { MOCK_LEVELS } from '../api/zone.data';\nimport { MOCK_STAFF } from '../api/users.data';\n\nexport interface ZoneOverview {\n    /** Desk count based on `desks` metadata in the zone\n     falls back to the zone.count field otherwise */\n    desk_count: number;\n\n    desk_usage: number;\n    /** Capacity of the space, set in zone.capacity field */\n    device_capacity: number;\n    /** Raw device count */\n    device_count: number;\n    /** This is the adjusted count based on the duplication factor */\n    estimated_people: number;\n\n    percentage_use: number;\n    /** The higher the recommendation number the better for recommending */\n    recommendation: number;\n}\n\nexport class MockAreaManagementModule implements HashMap {\n    /** Overview of the zones */\n    overview: HashMap<ZoneOverview> = {};\n\n    emergency_contacts = {\n        'First Aid': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n        'Fire Warden': MOCK_STAFF.filter(\n            (_) => predictableRandomInt(9999) % 5 === 0\n        ),\n    };\n\n    $locate_user(email: string, username: string) {}\n\n    $update() {\n        updateLocations(this, MOCK_LEVELS);\n    }\n}\n\nconst MAC_LOOKUP = {};\n\nexport class MockLocationServicesModule implements HashMap {\n    $check_ownership_of(mac_address: string) {\n        if (!MAC_LOOKUP[mac_address]) {\n            const staff =\n                randomInt(999_999) % 3 === 0\n                    ? MOCK_STAFF[randomInt(MOCK_STAFF.length)]\n                    : { name: '' };\n            MAC_LOOKUP[mac_address] = { assigned_to: staff.name };\n        }\n        return MAC_LOOKUP[mac_address];\n    }\n\n    $locate_user(email: string, username: string) {\n        return [{\n            type: 'wireless',\n            position: { x: 0.5, y: 0.5 },\n            level: MOCK_LEVELS[randomInt(MOCK_LEVELS.length)].id,\n            priority: 0\n        }]\n    }\n}\n\nfunction padZero(no: number, len: number = 3) {\n    let str = `${no}`;\n    while (str.length < len) {\n        str = '0' + str;\n    }\n    return str;\n}\n\nexport function createAreaManagementModule(\n    space: HashMap,\n    overrides: HashMap = {}\n) {\n    const mod = new MockAreaManagementModule();\n    for (const lvl of MOCK_LEVELS) {\n        mod.overview[lvl.id] = {\n            desk_count: 100,\n            desk_usage: 0,\n            device_capacity: 100,\n            device_count: 0,\n            estimated_people: 0,\n            percentage_use: 0,\n            recommendation: 10000,\n        };\n        mod[`${lvl.id}:desk_ids`] = new Array(mod.overview[lvl.id].desk_count)\n            .fill(0)\n            .map((_, idx) => `table-${lvl.number}.${padZero(idx)}`);\n        mod[`${lvl.id}`] = { value: [] };\n        mod[`${lvl.id}:areas`] = {\n            value: [\n                {\n                    area_id: 'zone-10.B',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.A',\n                    count: randomInt(100),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-10.C',\n                    count: randomInt(50),\n                    name: '.L1 IFS IT',\n                },\n                {\n                    area_id: 'zone-02.D',\n                    count: randomInt(100),\n                    name: 'Quite Work',\n                },\n                {\n                    area_id: 'zone-02.B',\n                    count: randomInt(100),\n                    name: 'Meeting Area A',\n                },\n                {\n                    area_id: 'zone-02.A',\n                    count: randomInt(100),\n                    name: 'Meeting Area B',\n                },\n                {\n                    area_id: 'zone-02.C',\n                    count: randomInt(50),\n                    name: 'Casual Work',\n                },\n            ],\n        };\n    }\n    return mod;\n}\n\nexport function updateLocations(\n    mod: MockAreaManagementModule,\n    levels: HashMap[]\n) {\n    for (const lvl of levels) {\n        mod[lvl.id] = {\n            value: new Array(predictableRandomInt(20))\n                .fill(0)\n                .map(() => generateLocation(lvl, mod[`${lvl.id}:desk_ids`])),\n        };\n        for (const area of mod[`${lvl.id}:areas`].value) {\n            area.count = randomInt(100);\n        }\n        mod[`${lvl.id}:areas`] = { ...mod[`${lvl.id}:areas`] };\n    }\n}\n\nexport function generateLocation(\n    lvl: HashMap,\n    desks: string[],\n    users = MOCK_STAFF\n) {\n    const fixed = predictableRandomInt(9999) % 3 === 0;\n    const usr = (users || [])[predictableRandomInt((users || [])?.length)]?.email;\n    return fixed\n        ? {\n              location: 'desk',\n              at_location: predictableRandomInt(9999) % 2 !== 0,\n              map_id: desks[predictableRandomInt(desks.length)],\n              mac: Md5?.hashStr(usr || ''),\n              level: lvl.id,\n              building: lvl.parent_id,\n          }\n        : {\n              location: 'wireless',\n              coordinates_from: 'bottom-left',\n              x: predictableRandomInt(1000) / 10,\n              y: predictableRandomInt(1000) / 10,\n              lon: 55.27476066828535,\n              lat: 25.20106100633537,\n              s2_cell_id: '3e5f4281459c',\n              mac: Md5?.hashStr(usr || ''),\n              variance: 9.62534032222287,\n              last_seen: Math.floor(new Date().valueOf() / 1000),\n              map_width: 100,\n              map_height: 100,\n          };\n}\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass DisplayModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createDisplayModule = (space: HashMap, overrides: HashMap = {}) =>\n    new DisplayModule({ ...space, ...overrides });\n","import { addSeconds, format, isBefore, subSeconds } from 'date-fns';\n\nimport { HashMap, timePeriodsIntersect } from '@placeos/common';\nimport { MOCK_EVENTS } from '../api/events.data';\n\nexport class MockBookingModule {\n    /** Timezone the associated space resided */\n    time_zone = 'Australia/Sydney';\n    /** Whether booking is disabled */\n    disable_book_now = false;\n    /** Whether ending current meeting is disabled */\n    disable_end_meeting = false;\n    /** List of current and upcoming bookings for space */\n    bookings: HashMap[] = [];\n    pending_period = 0;\n    pending_before = 0;\n    /** Control UI associated with the space */\n    control_ui = '';\n    /** Catering UI associated with the space */\n    catering_ui = '';\n    /** Time of the last booking started by a user */\n    last_booking_started = 0;\n    current_booking = null;\n    next_booking = null;\n    /** Current status of the space */\n    room_image = 'assets/boardroom.jpg'\n    status = 'free';\n    _space = null;\n\n    constructor(space, _data: Partial<MockBookingModule>) { this._space = space }\n\n    /** Start the meeting at the given time */\n    $start_meeting(t: number) {\n        this.last_booking_started = t;\n    }\n    /** End the meeting at the given time */\n    $end_meeting(t: number) {}\n    /** Book meeting for the current time */\n    $book_now(len: number, t?: string, o?: string) {}\n\n    $poll_bookings() {\n        updateBookings(this._space, this);\n    }\n}\n\nexport const createBookingsModule = (\n    space: HashMap,\n    overrides: Partial<MockBookingModule> = {}\n) => new MockBookingModule(space, overrides);\n\nfunction updateBookings(space: HashMap, mod: HashMap) {\n    const bookings =\n        MOCK_EVENTS.filter((event) =>\n            event.attendees?.find(\n                (u) =>\n                    u.email === space.email ||\n                    u.id === space.id ||\n                    event.system?.id === space.id\n            )\n        ) || [];\n    bookings.sort((a, b) => a.event_start - b.event_start);\n    mod.bookings = bookings;\n    mod.current_booking = bookings.find((_) =>\n        timePeriodsIntersect(\n            Date.now(),\n            Date.now(),\n            _.event_start * 1000,\n            _.event_end * 1000\n        )\n    );\n    mod.next_booking = bookings.find((_) => _.event_start * 1000 > Date.now());\n    const date = new Date();\n    const { current_booking, next_booking } = mod;\n    const start = new Date((current_booking || next_booking)?.event_start);\n    const pending = timePeriodsIntersect(\n        date,\n        date,\n        subSeconds(start, mod.pending_before),\n        addSeconds(start, mod.pending_period)\n    );\n    mod.status = space?.bookable\n        ? current_booking\n            ? 'busy'\n            : pending\n            ? 'pending'\n            : 'free'\n        : 'not-bookable';\n}\n","import { HashMap } from '@placeos/common';\n\nclass LockerLocationsModule {\n    constructor(data: any) {}\n\n    $lockers_allocated_to_me(...args: any[]) {\n        return [\n            {\n                location: 'locker',\n                bank_id: '977cb758-4e42-4292-848a-4821f2fb4d74',\n                locker_id: 'adda7802-dfd7-467c-b369-d73394ad7084',\n                locker_name: '0.105',\n                allocated: true,\n                group_id: '6c246e35-4a73-475a-8725-0676d78167f4',\n            },\n        ];\n    }\n}\n\nexport const createLockerLocationsModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new LockerLocationsModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap } from '@placeos/common';\n\nclass MeetingPushModule {\n    public supported_meeting_url = 'https://meet.';\n\n    constructor(data: any) {}\n\n    $econtrol(...args: any[]) {}\n}\n\nexport const createMeetingPushModule = (\n    details?: HashMap,\n    overrides: HashMap = {}\n) =>\n    new MeetingPushModule({\n        ...details,\n        ...overrides,\n    });\n","import { HashMap, randomInt } from '@placeos/common';\n\nclass MicrophoneModule {\n    mute: boolean;\n    volume: number;\n\n    $mute(state: boolean = true) {\n        this.mute = state;\n    }\n\n    $volume(value: number) {\n        this.volume = value;\n    }\n\n    constructor(_) {\n        this.volume = randomInt(100);\n    }\n}\n\nexport const createMicrophoneModule = (\n    space: HashMap,\n    overrides: HashMap = {}\n) => new MicrophoneModule({ ...space, ...overrides });\n","import { HashMap, randomInt, randomString } from '@placeos/common';\n\nclass PaymentsModule {\n    \n    $list_payment_methods(type: string) {\n        \n    }\n\n    $add_payment_method(type: string, details: any) {\n\n    }\n\n    $get_product_prices(id: string, period) {\n        return [12000, 60];\n    }\n\n    $create_payment_intent(amount: number, source: string) {\n        return randomString(12);\n    }\n\n    $confirm_payment_intent(id: string) {\n\n    }\n\n    $cancel_payment_intent(id: string) {\n    }\n\n    $create_customer(...args: any) {\n        return `stripe-${randomInt(9_999_999, 1_000_000)}`;\n    }\n\n    constructor(_) {}\n}\n\nexport const createPaymentsModule = (space: HashMap, overrides: HashMap = {}) =>\n    new PaymentsModule({ ...space, ...overrides });\n","import { HashMap } from '@placeos/common';\n\nexport type VideoLayout = 'Auto' | 'Equal' | 'Overlay' | 'Prominent' | 'Single';\nexport type CallStatus =\n    | 'Idle'\n    | 'Dialling'\n    | 'Ringing'\n    | 'Connecting'\n    | 'Connected'\n    | 'Disconnecting'\n    | 'OnHold'\n    | 'EarlyMedia'\n    | 'Preserved'\n    | 'RemotePreserved';\n\nexport interface VideoCallDetails {\n    AnswerState: string;\n    CallType: string;\n    CallbackNumber: string;\n    DeviceType: string;\n    Direction: string;\n    DisplayName: number;\n    Duration: number;\n    'Encryption/Type': string;\n    FacilityServiceId: number;\n    HoldReason: string;\n    PlacedOnHold: boolean;\n    Protocol: string;\n    ReceiveCallRate: number;\n    RemoteNumber: string;\n    Status: CallStatus;\n    TransmitCallRate: number;\n    Ice: string;\n}\n\nclass VideoConferenceModule {\n    mic_mute: boolean = false;\n    selfview: boolean = false;\n    video_layout: VideoLayout = 'Auto';\n    presentation_mode: 'None' | 'Local' | 'Remote' = 'None';\n    presentation: false | 'Sending';\n    calls: Record<string, VideoCallDetails> = {\n        test: {\n            Status: 'Connected',\n        },\n    } as any;\n\n    $show_camera_pip(visible: boolean) {\n        this.selfview = visible;\n    }\n\n    $mic_mute(visible: boolean) {\n        this.mic_mute = visible;\n    }\n    $presentation_mode(state: 'None' | 'Local' | 'Remote') {\n        this.presentation_mode = state;\n    }\n    $hangup() {}\n    $call_place_on_hold() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'OnHold';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $call_resume() {\n        for (const key in this.calls) {\n            if (this.calls[key].Status) {\n                this.calls[key].Status = 'Idle';\n                this.calls = { ...this.calls };\n                return;\n            }\n        }\n    }\n    $video_layout(layout: VideoLayout) {\n        this.video_layout = layout;\n    }\n    $dtmf_send(digit: string) {}\n    $dial(dial_number: string) {\n        return new Promise<void>((r) => setTimeout(() => r(), 1000));\n    }\n\n    constructor(_) {}\n}\n\nexport const createVideoConferenceModule = (\n    space: HashMap = {},\n    overrides: HashMap = {}\n) => new VideoConferenceModule({ ...space, ...overrides });\n","import { mockSystem, registerSystem } from '@placeos/ts-client';\nimport { HashMap } from '@placeos/common';\n\nimport { createSystemModule } from './realtime/control';\nimport { createBookingsModule } from './realtime/events';\nimport {\n    createAreaManagementModule,\n    MockLocationServicesModule,\n} from './realtime/desks';\nimport { createCameraModule } from './realtime/camera';\nimport { createDisplayModule } from './realtime/display';\nimport { createMicrophoneModule } from './realtime/microphone';\nimport { createCaptureModule } from './realtime/capture';\nimport { createMeetingPushModule } from './realtime/meeting';\nimport { createVideoConferenceModule } from './realtime/video-conference';\nimport { createContactTracingModule } from './realtime/contact-tracing';\nimport { createPaymentsModule } from './realtime/payments';\nimport { createLockerLocationsModule } from './realtime/locker-locations';\n\nexport function createSystem(space: HashMap) {\n    registerSystem(space.id, {\n        System: [createSystemModule(space)],\n        Bookings: [createBookingsModule(space)],\n        ContactTracing: [createContactTracingModule(space)],\n        AreaManagement: [createAreaManagementModule(space)],\n        LocationServices: [new MockLocationServicesModule()],\n        Camera: new Array(10).fill(0).map((_) => createCameraModule(space)),\n        Display: new Array(10).fill(0).map((_) => createDisplayModule(space)),\n        Microphone: new Array(10)\n            .fill(0)\n            .map((_) => createMicrophoneModule(space)),\n        Capture: [createCaptureModule(space)],\n        MeetingPush: [createMeetingPushModule()],\n        VidConf: [createVideoConferenceModule()],\n        Payment: [createPaymentsModule(space)],\n        LockerLocations: [createLockerLocationsModule()],\n    });\n\n    const system = mockSystem(space.id);\n\n    system.Bookings[0].$poll_bookings();\n    setInterval(() => system.Bookings[0].$poll_bookings(), 30 * 1000);\n\n    system.AreaManagement[0].$update();\n    setInterval(() => system.AreaManagement[0].$update(), 30 * 1000);\n}\n","\nimport { log } from '@placeos/common';\n\nimport { ZONE_MOCKS } from './lib/api/zones.mock';\nimport { USER_MOCKS } from './lib/api/users.mock';\nimport { SYSTEM_MOCKS } from './lib/api/systems.mock';\nimport { EVENT_MOCKS } from './lib/api/events.mock';\nimport { CALENDAR_MOCKS } from './lib/api/calendars.mock';\nimport { BOOKING_MOCKS } from './lib/api/bookings.mock';\nimport { ASSET_MOCKS } from './lib/api/assets.mock';\n\nexport default {\n    ZONE_MOCKS,\n    USER_MOCKS,\n    SYSTEM_MOCKS,\n    EVENT_MOCKS,\n    CALENDAR_MOCKS,\n    BOOKING_MOCKS,\n    ASSET_MOCKS\n};\n\nlog('MOCKS', 'Mocks included with application.');\n","export * from './lib/building.class';\nexport * from './lib/building.utilities';\nexport * from './lib/level.class';\nexport * from './lib/organisation.class';\nexport * from './lib/organisation.service';\nexport * from './lib/organisation.utilities';\nexport * from './lib/desk.class';\nexport * from './lib/region.class';\n","import { BookingRulesmap } from 'libs/events/src/lib/event.interfaces';\n\nimport { BuildingLevel } from './level.class';\n\ninterface Identity {\n    id: string;\n    name: string;\n}\ninterface RoomConfiguration {\n    id: string;\n    name?: string;\n    description?: string;\n    capacity?: number;\n}\n\nexport interface IBuildingRoleUser {\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport interface LockerMap {\n    [zone: string]: {\n        [area: string]: {\n            [type: string]: (string | boolean)[][];\n        };\n    };\n}\n\nexport interface ICoordinates {\n    longitude: number;\n    latitude: number;\n}\n\nexport interface LevelFeature {\n    id: string;\n    level_id: string;\n    name: string;\n}\n\nexport interface BookingRuleDetails {\n    /** List of booking rules details for the building */\n    readonly rules: readonly string[];\n    /** Custom booking rules for the map */\n    readonly map_rules?: readonly string[];\n    /** Contact email address for the building */\n    readonly contact?: string;\n    /** Information string to display before the rule listings */\n    readonly info?: string;\n}\n\nexport interface BuildingComplete extends Building {\n    settings: Record<string, any>;\n    locker_structure: Record<string, any>;\n    roles: Record<string, any>;\n    zone: string;\n    location: string;\n    neighbourhoods: Record<string, any>;\n}\n\nexport class Building {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** PlaceOS zone id of the building */\n    public readonly parent_id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Engine Zone ID for the building */\n    public readonly zone_id: string;\n    /** Organisation Code for the building */\n    public readonly code: string;\n    /** Geographical address of the building */\n    public readonly address: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** ID of space that temporarily holds new meetings */\n    public readonly holding_bay: string;\n    /** ID of the space for assigning new visitor bookings to */\n    public readonly visitor_space: string;\n    /** Details about the booking rules for the building */\n    public readonly booking_details: BookingRuleDetails;\n    /** Details about the booking rules for the building */\n    public readonly booking_rules: BookingRulesmap;\n    /** Number of hour before a booking catering is restricted */\n    public readonly catering_restricted_from: number;\n    /** Currency code for the country assoicated with the building */\n    public readonly currency: string;\n    /** List of available extras for the building */\n    public readonly extras: readonly Identity[];\n    /** List of available extra equipment for loan at the building */\n    public readonly loan_items: readonly Identity[];\n    /** List of available levels for the building */\n    public readonly levels: readonly BuildingLevel[];\n    /** List of zones associated with the building */\n    public readonly zones: readonly string[];\n    /** Searchable map features */\n    public readonly searchables: readonly LevelFeature[];\n    /** List of available room configurations for the building */\n    public readonly room_configurations: readonly RoomConfiguration[];\n    /** Start and end hours catering can be delivered */\n    public readonly catering_hours: { start: number; end: number };\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n\n    public readonly orientations: Record<string, number>;\n    public readonly attributes: readonly Identity[];\n    /** Globe coordiates for the build */\n    public location: string;\n    /** Map of roles and list of the associated users */\n    private _roles: Record<string, IBuildingRoleUser[]>;\n    /** Map of the locker ID arrays */\n    private _lockers: LockerMap;\n    /** Map of important system ids for the building */\n    private _systems: Record<string, string>;\n    /** Map of important phone numbers for the building */\n    private _phone_numbers: Record<string, string>;\n\n    constructor(raw_data: Partial<BuildingComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.parent_id = raw_data.parent_id || '';\n        this.name = raw_data.name || '';\n        const settings = raw_data.settings || {};\n        this.display_name = raw_data.display_name;\n        this.images = this.images || [];\n        const disc_info = settings.discovery_info || settings;\n        this.zone_id = raw_data.zone_id || raw_data.zone;\n        this.extras = (raw_data.extras || disc_info.extras || []).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.loan_items = (\n            raw_data.loan_items ||\n            disc_info.loan_items ||\n            []\n        ).map((i) => ({\n            id: i.extra_id || i.id,\n            name: i.extra_name || i.name,\n        }));\n        this.levels = (raw_data.levels || disc_info.levels || []).map(\n            (i) => new BuildingLevel({ ...i, building_id: this.id })\n        );\n        this._roles = raw_data.roles || disc_info.roles || {};\n        this._lockers =\n            raw_data.lockers ||\n            raw_data.locker_structure ||\n            disc_info.locker_structure ||\n            {};\n        this._systems = raw_data.systems || disc_info.systems || {};\n        this._phone_numbers =\n            raw_data.phone_numbers || disc_info.phone_numbers || {};\n        this.location = raw_data.location || disc_info.location || '0,0';\n        this.room_configurations =\n            raw_data.room_configurations || disc_info.room_configurations || [];\n        this.attributes = raw_data.attributes || disc_info.attributes || [];\n        const searchables = [];\n        if (raw_data.neighbourhoods) {\n            for (const lvl in raw_data.neighbourhoods) {\n                if (lvl in raw_data.neighbourhoods) {\n                    const lvl_features = raw_data.neighbourhoods[lvl] || {};\n                    for (const feature in lvl_features) {\n                        if (feature in lvl_features) {\n                            searchables.push({\n                                id: lvl_features[feature],\n                                name: feature,\n                                level_id: lvl,\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        this.bindings = raw_data.bindings || {};\n        this.searchables = searchables;\n        this.timezone =\n            raw_data.timezone || disc_info.timezone || settings.timezone || '';\n        this.catering_hours = raw_data.catering_hours ||\n            disc_info.catering_hours ||\n            settings.catering_hours || { start: 7, end: 20 };\n        this.visitor_space =\n            raw_data.visitor_space ||\n            disc_info.visitor_space ||\n            settings.visitor_space ||\n            '';\n        this.holding_bay =\n            raw_data.holding_bay ||\n            disc_info.holding_bay ||\n            settings.holding_bay ||\n            '';\n        this.code = raw_data.code || disc_info.code || settings.code || '';\n        this.address =\n            raw_data.address || disc_info.address || settings.address || '';\n        this.orientations =\n            raw_data.orientations ||\n            disc_info.orientations ||\n            settings.orientations ||\n            {};\n        this.booking_details =\n            raw_data.booking_details ||\n            disc_info.booking_details ||\n            settings.booking_details ||\n            null;\n        this.booking_rules =\n            raw_data.booking_rules ||\n            disc_info.booking_rules ||\n            settings.booking_rules ||\n            {};\n        this.catering_restricted_from =\n            raw_data.catering_restricted_from ||\n            disc_info.catering_restricted_from ||\n            settings.catering_restricted_from ||\n            -1440;\n        this.currency =\n            raw_data.currency ||\n            disc_info.currency ||\n            settings.currency ||\n            'USD';\n    }\n\n    /**\n     * Get list of users with the associated role\n     * @param name Role to find users for\n     */\n    public role(name: string): IBuildingRoleUser[] {\n        return [...(this._roles[name] || [])];\n    }\n    /**\n     * Get list of the names of available user role lists\n     */\n    public get role_names(): string[] {\n        return Object.keys(this._roles).filter((i) => i in this._roles);\n    }\n    /** Map of the locker ID arrays */\n    public get lockers(): LockerMap {\n        return { ...(this._lockers || {}) };\n    }\n    /** Map of important system ids for the building */\n    public get systems(): Record<string, string> {\n        return { ...(this._systems || {}) };\n    }\n    /** Map of important phone numbers for the building */\n    public get phone_numbers(): Record<string, string> {\n        return { ...(this._phone_numbers || {}) };\n    }\n\n    /**\n     * Get search map feature for the given level ID\n     * @param level_id ID of level to grab features for\n     */\n    public featuresForLevel(level_id: string): LevelFeature[] {\n        return (this.searchables || []).filter((i) => i.level_id === level_id);\n    }\n}\n","\nlet BLD_COUNT = 0;\nlet LVL_COUNT = 0;\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for creating a building\n * @param id Forced ID for the mock\n */\nexport function generateMockBuilding(id?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_bld-${BLD_COUNT++}`;\n    }\n    const levels = Array(10)\n        .fill(0)\n        .map((i) => generateMockLevel());\n    const features: any = {};\n    for (const lvl of levels) {\n        const count = Math.floor(Math.random() * 3 + 2);\n        features[lvl.level_id] = {};\n        for (let i = 0; i < count; i++) {\n            features[lvl.level_id][`A Feature ${i + 1}`] = `feature-${i + 1}`;\n        }\n    }\n    return {\n        id,\n        zone_id: id,\n        extras: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        loan_items: Array(10)\n            .fill(0)\n            .map((_, idx) => {\n                const name = `Property ${idx + 1}`;\n                return {\n                    extra_id: name.split(' ').join('-').toLowerCase(),\n                    extra_name: name,\n                };\n            }),\n        levels,\n        roles: {\n            'first-aiders': Array(10)\n                .fill(0)\n                .map((i) => ({ name: 'Test' })),\n        },\n        neighbourhoods: features,\n        settings: {\n            test: {\n                nested: {\n                    level2: true,\n                    org: false,\n                },\n            },\n        },\n        room_configurations: [\n            {\n                id: 'boardroom',\n                name: 'Boardroom',\n                description: 'A boardroom setting',\n            },\n            {\n                id: 'cocktail',\n                name: 'Cocktail',\n                description: 'A cocktail setting',\n            },\n        ],\n    };\n}\n\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a building level\n * @param id Forced ID for the mock\n * @param map_url Map URL for the level\n */\nexport function generateMockLevel(id?: string, map_url?: string): Record<string, any> {\n    if (!id) {\n        id = `zone_lvl-${LVL_COUNT++}`;\n    }\n    return {\n        level_id: id,\n        level_name: `Level ${LVL_COUNT}`,\n        map_url,\n    };\n}\n","import { PlaceZone, cleanObject } from '@placeos/ts-client';\n\nconst IGNORE_KEYS = ['zone', 'qr_code', 'toJSON'];\n\nexport class Desk implements Record<string, any> {\n    /** ID of the desk also map_id */\n    public readonly id: string;\n    /** ID of the desk on the associated map */\n    public readonly map_id: string;\n    /** Name of the desk */\n    public readonly name: string;\n    /** Whether desk is available / bookable */\n    public readonly bookable: boolean;\n    /** Zone/Level of the desk */\n    public readonly zone: PlaceZone;\n    /** Group/Department allocated to the desk */\n    public readonly groups: string[];\n    /** QR code image data */\n    public readonly qr_code: string;\n    /** List of features associated with the desk */\n    public readonly features: string[];\n    /** List of URLs to images */\n    public readonly images: string[];\n\n    public staff_name?: string;\n\n    constructor(data: Partial<Desk> = {}) {\n        this.id = data.id || '';\n        this.map_id = data.map_id || data.id || '';\n        this.name = data.name || '';\n        this.bookable = data.bookable ?? false;\n        this.zone = data.zone || new PlaceZone();\n        this.groups = data.groups || [];\n        this.qr_code = data.qr_code || '';\n        this.features = data.features || [];\n        this.images = data.images || [];\n        for (const key in data) {\n            if (!(key in this)) this[key] = data[key];\n        }\n    }\n\n    public format() {\n        const data = { ...this };\n        for (const key of IGNORE_KEYS) {\n            delete data[key];\n        }\n        cleanObject(data, [undefined, null, []]);\n        return data;\n    }\n\n    public readonly toJSON = () => this.format();\n}\n","\n/** Building Level data */\nexport class BuildingLevel {\n    /** ID of the building level zone */\n    public readonly id: string;\n    /** ID of the building zone associated with the level */\n    public readonly parent_id: string;\n    /** Name of the level */\n    public readonly name: string;\n    /** Display name */\n    public readonly display_name: string;\n    /** Capacity for the level */\n    public readonly capacity: number;\n    /** Number or letter representing the level */\n    public readonly number: string;\n    /** URL of the map associated with the level */\n    public readonly map_id: string;\n    /** URL of the map associated with the level */\n    public readonly tags: string[];\n    /** Settings overrides associated with the level */\n    public readonly settings: Record<string, any> = {};\n    /** List of image URLs for the level */\n    public readonly images: string[];\n    /** List of points of interest for the level */\n    public readonly locations: readonly { id: string, name: string }[];\n\n    constructor(_data: Partial<BuildingLevel> = {}) {\n        this.id = _data.id || '';\n        this.parent_id = _data.parent_id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.map_id = _data.map_id || '';\n        this.capacity = _data.capacity || 0;\n        this.locations = _data.locations || [];\n        this.tags = _data.tags || [];\n        this.images = _data.images || [];\n        const parts = this.display_name.split(' ');\n        this.number =\n            (parts.length >= 2\n                ? parts[parts.length - 1]\n                : this.display_name[0]\n            )?.toUpperCase() || '';\n    }\n}\n","import { getItemWithKeys } from 'libs/common/src/lib/general';\n\nexport interface OrganisationComplete extends Organisation {\n    settings?: Record<string, any>;\n}\n\nexport class Organisation {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Description for the Organisation */\n    public readonly description: string;\n    /** Tags for the Organisation */\n    public readonly tags: string[];\n    /** Count for the Organisation */\n    public readonly count: number;\n    /** Capacity for the Organisation */\n    public readonly capacity: number;\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n    /** Map of custom settings for the building */\n    private _settings: Record<string, any>;\n\n    constructor(raw_data: Partial<OrganisationComplete> = {}) {\n        this.id = raw_data.id || '';\n        this.name = raw_data.name || '';\n        this.description = raw_data.description || '';\n        this.tags = raw_data.tags || [];\n        this.count = raw_data.count || 0;\n        this.capacity = raw_data.capacity || 0;\n        this.bindings = raw_data.bindings || {};\n        this._settings = raw_data.settings || {};\n    }\n\n    /**\n     * Get a custom organisation setting\n     * @param key Name of the setting. i.e. nested items can be grabbed using `.` to seperate key names\n     */\n    public setting(key: string): any {\n        const keys = key.split('.');\n        const value = getItemWithKeys(keys, this._settings);\n        return value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    PlaceZone,\n    authority,\n    isMock,\n    onlineState,\n    queryZones,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { catchError, first, map, shareReplay } from 'rxjs/operators';\n\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { RoomConfiguration } from 'libs/common/src/lib/room-configuration.interface';\n\nimport { Building } from './building.class';\nimport { BuildingLevel } from './level.class';\nimport { Organisation } from './organisation.class';\nimport { Region } from './region.class';\nimport { flatten, log, unique } from '@placeos/common';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrganisationService {\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    private readonly _regions = new BehaviorSubject<Region[]>([]);\n    private readonly _active_region = new BehaviorSubject<Region>(null);\n    private readonly _buildings = new BehaviorSubject<Building[]>([]);\n    private readonly _active_building = new BehaviorSubject<Building>(null);\n    private readonly _levels = new BehaviorSubject<BuildingLevel[]>([]);\n    private readonly _loaded_data: string[] = [];\n\n    public readonly app_key = `${(\n        this._service.app_name || 'workplace'\n    ).toLowerCase()}_app`;\n    /** Observable for the list of regions */\n    public readonly region_list = this._regions.asObservable();\n    /** Observable for the list of buildings */\n    public readonly building_list = this._buildings.asObservable();\n    /** Observable for the list of levels */\n    public readonly level_list = this._levels.asObservable();\n    /** Observable for the currently active region */\n    public readonly active_region = this._active_region.asObservable();\n    /** Observable for the currently active building */\n    public readonly active_building = this._active_building.asObservable();\n    /** Observable for the buildings associated with the currently active region */\n    public readonly active_buildings = combineLatest([\n        this._buildings,\n        this._active_region,\n    ]).pipe(\n        map(([_, region]) =>\n            region ? this.buildingsForRegion(region) : this.buildings\n        )\n    );\n    /** Observable for the levels associated with the currently active building */\n    public readonly active_levels = combineLatest([\n        this._levels,\n        this._active_building,\n    ]).pipe(\n        map(([_, bld]) => (bld ? this.levelsForBuilding(bld) : [])),\n        shareReplay()\n    );\n    /** Organisation data for the application */\n    private _organisation: Organisation;\n    /** Mapping of organisation settings overrides */\n    private _settings: Record<string, any>[] = [];\n    /** Mapping of regions to settings overrides */\n    private _region_settings: Record<string, Record<string, any>> = {};\n    /** Mapping of buildings to settings overrides */\n    private _building_settings: Record<string, Record<string, any>> = {};\n\n    /** Mapping of organisation settings overrides */\n    public get settings() {\n        return this._settings;\n    }\n\n    /** Mapping of regions to settings overrides */\n    public get region_settings() {\n        return this._region_settings;\n    }\n\n    /** Mapping of buildings to settings overrides */\n    public get building_settings() {\n        return this._building_settings;\n    }\n\n    /** Mapping region settings overrides */\n    public regionSettings(id: string = ''): Record<string, any> {\n        const region = this._active_region.getValue();\n        if (!id && region) id = region?.id;\n        return this._region_settings ? this._region_settings[id] || {} : {};\n    }\n\n    /** Mapping building settings overrides */\n    public buildingSettings(bld_id: string = ''): Record<string, any> {\n        if (!bld_id && this.building) {\n            bld_id = this.building?.id;\n        }\n        return this._building_settings\n            ? this._building_settings[bld_id] || {}\n            : {};\n    }\n\n    /** Organisation data for the application */\n    public get organisation(): Organisation {\n        return this._organisation;\n    }\n\n    /** List of available regions */\n    public get regions(): Region[] {\n        return this._regions.getValue();\n    }\n\n    /** Currently active region */\n    public get region(): Region {\n        return this._active_region.getValue();\n    }\n    public set region(item: Region) {\n        this.setRegion(item);\n    }\n\n    public async setRegion(item: Region) {\n        if (!item) return;\n        this._active_region.next(item);\n        await this.loadRegionData(item);\n        this._setBuildingFromTimezone();\n        if (\n            this.building?.parent_id !== item.id &&\n            this.buildingsForRegion(item).length\n        ) {\n            this.building = this.buildingsForRegion(item)[0];\n        } else this._updateSettingOverrides();\n    }\n\n    /** List of available buildings */\n    public get buildings(): Building[] {\n        return this._buildings.getValue() || [];\n    }\n\n    /** Currently active building */\n    public get building(): Building {\n        return this._active_building.getValue();\n    }\n    public set building(bld: Building) {\n        if (!bld) return;\n        this._active_building.next(bld);\n        this.loadBuildingData(bld).then(() => this._updateSettingOverrides());\n        if (this.regions.length && this.region?.id !== bld.parent_id) {\n            this.region = this.regions.find(\n                (_) => _.id === this.building.parent_id\n            );\n        }\n    }\n\n    public get timezone() {\n        return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n\n    public get currency_code(): string {\n        return (\n            this._service.get('app.currency') ||\n            this.building?.currency ||\n            'USD'\n        );\n    }\n\n    /** Get binding value from the building/organisation */\n    public binding(name: string) {\n        return (\n            this.building?.bindings[name] || this._organisation?.bindings[name]\n        );\n    }\n\n    /** Get building by id */\n    public find(id: string) {\n        return this.buildings.find((i) => i.id === id);\n    }\n\n    /** List of available levels */\n    public get levels(): BuildingLevel[] {\n        return this._levels.getValue();\n    }\n\n    constructor(private _service: SettingsService, private _router: Router) {\n        onlineState()\n            .pipe(first((_) => _))\n            .subscribe(() => setTimeout(() => this.init(), 1000));\n        this.active_building.subscribe((bld) => {\n            if (bld) {\n                this._service.overrides = [\n                    ...this._settings,\n                    this.buildingSettings(bld.id),\n                ];\n            }\n        });\n    }\n\n    /**\n     * Get level with a matching ID\n     * @param id_list List of IDs to find a match\n     */\n    public levelWithID(id_list: string[]): BuildingLevel {\n        return this.levels.find((lvl) => id_list?.includes(lvl.id));\n    }\n\n    /**\n     * Get list of levels for the given building\n     * @param bld Building to list levels for\n     */\n    public levelsForBuilding(bld: Building = this.building): BuildingLevel[] {\n        return this.levels.filter(\n            (lvl) => lvl.parent_id && lvl.parent_id === bld?.id\n        );\n    }\n\n    /**\n     * Get list of buildings for the given region\n     * @param region Region to list buildings for\n     */\n    public buildingsForRegion(region: Region = this.region): Building[] {\n        return this.buildings.filter((bld) => bld.parent_id === region?.id);\n    }\n\n    public addZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const region = new Region(zone);\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== region.id);\n            regions.push(region);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const bld = new Building(zone);\n            const buildings = this._buildings\n                .getValue()\n                .filter((_) => _.id !== bld.id);\n            buildings.push(bld);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const lvl = new BuildingLevel(zone);\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== lvl.id);\n            levels.push(lvl);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to add zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    public removeZone(zone: PlaceZone) {\n        if (zone.tags.includes('region')) {\n            const regions = this._regions\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._regions.next(regions);\n        } else if (zone.tags.includes('building')) {\n            const buildings = this._buildings\n\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._buildings.next(buildings);\n        } else if (zone.tags.includes('level')) {\n            const levels = this._levels\n                .getValue()\n                .filter((_) => _.id !== zone.id);\n            this._levels.next(levels);\n        } else {\n            console.warn(\n                'Unable to remove zone as it is missing the required tag.',\n                zone.id\n            );\n        }\n    }\n\n    private async init(tries: number = 0) {\n        this._initialised.next(false);\n        await this.load().catch((err) => {\n            notifyError('Error loading organisation data. Retrying...');\n            setTimeout(() => this.init(tries), Math.min(10_000, 300 * ++tries));\n            throw err;\n        });\n        this._initialised.next(true);\n        if (window.debug) {\n            if (!window.application) window.application = {};\n            window.application.orgs = this;\n        }\n    }\n\n    /**\n     * Initialise service data\n     */\n    private async load(): Promise<void> {\n        await this.loadOrganisation();\n        await this.loadRegions();\n        if (!this._regions.getValue().length) {\n            this._buildings.next(await this.loadBuildings());\n        } else {\n            for (const region of this._regions.getValue()) {\n                const blds = await this.loadBuildings(region.id);\n                if (blds.length) {\n                    this._buildings.next(blds);\n                    break;\n                }\n            }\n        }\n        await this.loadSettings();\n        if (!this._buildings.getValue()?.length) {\n            log('ORG', 'Unable to find any building zones');\n            this._router.navigate(['/misconfigured']);\n        }\n        await this.loadLevels();\n    }\n\n    /**\n     * Load organisation data for application\n     */\n    public async loadOrganisation(): Promise<void> {\n        const org_list = await queryZones({ tags: 'org' })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        if (org_list.length) {\n            const auth = authority();\n            const org =\n                org_list.find(\n                    (list) => isMock() || list.id === auth?.config?.org_zone\n                ) || org_list[0];\n            const bindings: Record<string, any> = (\n                await showMetadata(org.id, 'bindings').toPromise()\n            )?.details;\n            this._organisation = new Organisation({ ...org, bindings });\n        } else {\n            log('ORG', 'Unable to find organisation');\n            this._router.navigate(['/misconfigured']);\n        }\n    }\n\n    /**\n     * Load region data for the organisation\n     */\n    public async loadRegions(): Promise<void> {\n        const list = await queryZones({\n            tags: 'region',\n            parent_id: this._organisation?.id || '',\n            limit: 500,\n        } as any)\n            .pipe(\n                map((i) => i.data.map((_) => new Region(_))),\n                catchError(() => of([]))\n            )\n            .toPromise();\n        this._regions.next(list);\n    }\n\n    public async loadRegionData(region: Region): Promise<void> {\n        if (this._loaded_data[region.id]) return;\n        const [settings, bindings, buildings]: any = await Promise.all([\n            showMetadata(region.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(region.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            this.loadBuildings(region.id),\n        ]);\n        this._buildings.next(\n            unique([...this._buildings.getValue(), ...buildings], 'id')\n        );\n        this._loaded_data[region.id] = true;\n        (region as any).bindings = bindings;\n        this._region_settings[region.id] = settings;\n    }\n\n    /**\n     * Load buildings data for the organisation\n     */\n    public async loadBuildings(\n        parent_id: string = this._organisation?.id\n    ): Promise<Building[]> {\n        const building_list = await queryZones({\n            tags: 'building',\n            parent_id,\n            limit: 500,\n        } as any)\n            .pipe(map((i) => i.data.map((_) => new Building(_))))\n            .toPromise();\n        return building_list;\n    }\n\n    public async loadBuildingData(bld: Building) {\n        if (!bld || this._loaded_data[bld.id]) return;\n        const [settings, bindings, booking_rules]: any = await Promise.all([\n            showMetadata(bld.id, this.app_key)\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'bindings')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n            showMetadata(bld.id, 'booking_rules')\n                .pipe(map((_) => _?.details))\n                .toPromise(),\n        ]);\n        this._building_settings[bld.id] = settings || {};\n        (bld as any).bindings = bindings;\n        (bld as any).booking_rules = booking_rules;\n        this._loaded_data[bld.id] = true;\n    }\n\n    /**\n     * Load levels data for the buildings\n     */\n    public async loadLevels(): Promise<void> {\n        const level_list = await queryZones({\n            tags: 'level',\n            limit: 2500,\n        } as any)\n            .pipe(map((i) => i.data))\n            .toPromise();\n\n        if (!level_list?.length) {\n            this._router.navigate(['/misconfigured']);\n        }\n        const levels = level_list.map((lvl) => new BuildingLevel(lvl));\n        levels.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n        this._levels.next(levels);\n    }\n\n    public get available_room_configs(): RoomConfiguration[] {\n        return this.buildings\n            .map((m) => [...m.room_configurations])\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    public async loadSettings() {\n        if (!this._organisation) return;\n        const app_settings = (\n            await showMetadata(this._organisation?.id, this.app_key).toPromise()\n        )?.details;\n        const global_settings = (\n            await showMetadata(this._organisation?.id, 'settings').toPromise()\n        )?.details;\n        this._settings = [global_settings, app_settings];\n        this._service.overrides = [...this._settings];\n        await this._initialiseActiveBuilding();\n        this._updateSettingOverrides();\n    }\n\n    /** Save building selection */\n    public saveBuilding(id: string) {\n        const region_id = this._buildings\n            .getValue()\n            .find((bld) => bld.id === id)?.parent_id;\n        if (region_id && region_id !== this._organisation.id) {\n            sessionStorage.setItem(`PLACEOS.region`, region_id);\n        }\n        sessionStorage.setItem(`PLACEOS.building`, id);\n    }\n\n    private _initialiseActiveBuilding() {\n        return new Promise<void>((resolve) => {\n            const id = sessionStorage.getItem(`PLACEOS.building`);\n            if (id && this.buildings.find((bld) => bld.id === id)) {\n                this._active_building.next(\n                    this.buildings.find((bld) => bld.id === id)\n                );\n                return resolve();\n            }\n            const use_location = !!this._service.get('app.use_geolocation');\n            if (use_location && 'geolocation' in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        let closest_bld = null;\n                        for (const bld of this.buildings) {\n                            if (!bld.location || bld.location === '0,0')\n                                continue;\n                            if (!closest_bld) closest_bld = bld;\n                            else {\n                                const [c_lat, c_long] = (\n                                    closest_bld.location || '0,0'\n                                ).split(',');\n                                const [b_lat, b_long] = (\n                                    bld.location || '0,0'\n                                ).split(',');\n                                const b_dist = Math.sqrt(\n                                    Math.pow(latitude - +b_lat, 2) +\n                                        Math.pow(longitude - +b_long, 2)\n                                );\n                                const c_dist = Math.sqrt(\n                                    Math.pow(latitude - +c_lat, 2) +\n                                        Math.pow(longitude - +c_long, 2)\n                                );\n                                if (b_dist < c_dist) closest_bld = bld;\n                            }\n                        }\n                        if (closest_bld) this.building = closest_bld;\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    },\n                    () => {\n                        if (!this.building?.id) this._setDefaultBuilding();\n                        resolve();\n                    }\n                );\n            } else if (!this.building?.id) {\n                this._setDefaultBuilding();\n                resolve();\n            }\n        });\n    }\n\n    private async _setDefaultBuilding() {\n        if (!this.buildings.length) return;\n        const region_id = sessionStorage.getItem(`PLACEOS.region`);\n        await (region_id\n            ? this.setRegion(\n                  this._regions.getValue().find((_) => _.id === region_id)\n              )\n            : this._setRegionFromTimezone());\n        this._setBuildingFromTimezone();\n        console.log('Building:', this.building);\n        if (this.building) return;\n        const bld_id = this._service.get('app.default_building');\n        if (bld_id) {\n            this.building = this.buildings.find(({ id }) => id === bld_id);\n        }\n        if (!this.building) this.building = this.buildings[0];\n        console.log('Building:', this.building);\n    }\n\n    private async _setRegionFromTimezone() {\n        const region_list = this.regions;\n        const timezone = this.timezone;\n        for (const region of region_list) {\n            if (region.timezone === timezone) {\n                return await this.setRegion(region);\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const region of region_list) {\n            if (region.timezone.startsWith(tz_start)) {\n                return await this.setRegion(region);\n            }\n        }\n    }\n\n    private _setBuildingFromTimezone() {\n        const bld_list = this.buildings.filter(\n            (bld) => !this.region || bld.parent_id === this.region?.id\n        );\n        const timezone = this.timezone;\n        for (const bld of bld_list) {\n            if (bld.timezone === timezone) {\n                this.building = bld;\n                return;\n            }\n        }\n        const tz_start = timezone.split('/')[0];\n        for (const bld of bld_list) {\n            if (bld.timezone.startsWith(tz_start)) {\n                this.building = bld;\n                return;\n            }\n        }\n    }\n\n    private _updateSettingOverrides() {\n        this._service.overrides = [\n            this.buildingSettings(this.building?.id),\n            this.regionSettings(this.region?.id),\n            ...this._settings,\n        ];\n    }\n}\n","import { getModule } from '@placeos/ts-client';\nimport { generateMockBuilding } from './building.utilities';\n\nlet ORG_COUNT = 0;\n\nexport function generateMockOrganisation(): Record<string, any> {\n    return {\n        id: `zone_org-${ORG_COUNT++}`,\n        name: `Organisation ${ORG_COUNT}`,\n        buildings: Array(3)\n            .fill(0)\n            .map((i) => generateMockBuilding()),\n        settings: {\n            test: {\n                nested: {\n                    org: true,\n                },\n            },\n        },\n    };\n}\n\nexport type ModuleBindingMetadata =\n    | string\n    | { system_id: string; module?: string };\n\nexport function moduleFromMetadata(\n    value?: ModuleBindingMetadata,\n    default_module?: string\n) {\n    if (!value) return null;\n    return value instanceof Object\n        ? getModule(value.system_id, value.module || default_module)\n        : getModule(value, default_module);\n}\n","export class Region {\n    /** PlaceOS zone id of the building */\n    public readonly id: string;\n    /** Name of the building zone */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** IANA timezone string for building */\n    public readonly timezone: string;\n    /** List of image URLs for the building */\n    public readonly images: string[];\n    /** PlaceOS bindings for applications */\n    public readonly bindings: Record<string, string>;\n\n    constructor(_data: Partial<Region>) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.display_name = _data.display_name || '';\n        this.timezone = _data.timezone || '';\n        this.images = _data.images || [];\n        this.bindings = _data.bindings || {};\n    }\n}\n","export * from './lib/payments.module';\nexport * from './lib/payments.service';\nexport * from './lib/card-input-field.component';","import { DatePipe } from '@angular/common';\nimport { Component, ElementRef, forwardRef, ViewChild } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroup,\n    NG_VALUE_ACCESSOR,\n    Validators,\n} from '@angular/forms';\nimport { AsyncHandler } from '@placeos/common';\nimport { addYears, setMonth } from 'date-fns';\n\nexport interface PaymentCardDetails {\n    card_number: string;\n    cardholder: string;\n    cvv: string;\n    exp_month: string;\n    exp_year: string;\n}\n\nconst BLANK_CARD = { card_number: '                ', cardholder: '', cvv: '' };\nconst DATE_PIPE = new DatePipe('en-us', '');\n\n@Component({\n    selector: 'card-input-field',\n    template: `\n        <form [formGroup]=\"details\" (window:keyup)=\"onInput($event)\">\n            <div class=\"flex flex-col\">\n                <label for=\"card-number\" i18n>Card Number</label>\n                <div\n                    tabindex=\"0\"\n                    class=\"border border-gray-200 p-2 h-12 mb-4 focus-within:shadow focus-within:border-black flex items-center font-mono w-full rounded relative\"\n                    (focus)=\"focusInput()\"\n                >\n                    <pre class=\"flex-1\">{{ card_display }}</pre>\n                    <input\n                        #input\n                        class=\"hidden absolute\"\n                        type=\"tel\"\n                        [value]=\"details.value.card_number?.trim()\"\n                        (keydown)=\"(false)\"\n                        maxlength=\"17\"\n                    />\n                    <img\n                        *ngIf=\"card_type\"\n                        [src]=\"'assets/icons/' + card_type + '.svg'\"\n                        class=\"h-8\"\n                    />\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"cardholder\" i18n>Name on Card</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        name=\"cardholder\"\n                        matInput\n                        placeholder=\"Mr John Smith\"\n                        formControlName=\"cardholder\"\n                    />\n                    <mat-error i18n>Cardholder name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\" i18n>Expiry Month</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"MM\"\n                            formControlName=\"exp_month\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of months\"\n                                [value]=\"item[0]\"\n                            >\n                                {{ item[1] }} ({{ item[0] }})\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Expiry month is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-1/4\">\n                    <label for=\"cardholder\">Expiry Year</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"YYYY\"\n                            formControlName=\"exp_year\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of years\"\n                                [value]=\"item\"\n                                >{{ item }}</mat-option\n                            >\n                        </mat-select>\n                        <mat-error i18n>Expiry year is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"cvv\">CVV</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-20\">\n                        <input\n                            name=\"cvv\"\n                            matInput\n                            formControlName=\"cvv\"\n                            maxlength=\"4\"\n                        />\n                        <mat-error i18n>Invalid security code</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CardInputFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CardInputFieldComponent\n    extends AsyncHandler\n    implements ControlValueAccessor\n{\n    public details = new FormGroup({\n        card_number: new FormControl(Array(16).fill('X').join()),\n        cardholder: new FormControl(''),\n        exp_month: new FormControl(''),\n        exp_year: new FormControl(''),\n        cvv: new FormControl('', [\n            Validators.minLength(3),\n            Validators.maxLength(4),\n        ]),\n    });\n    public disabled = false;\n\n    public readonly months = Array(12)\n        .fill(0)\n        .map((_, idx) => [\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MM'),\n            DATE_PIPE.transform(setMonth(Date.now(), idx), 'MMM'),\n        ]);\n    public readonly years = Array(12)\n        .fill(0)\n        .map((_, idx) =>\n            DATE_PIPE.transform(addYears(Date.now(), idx), 'yyyy')\n        );\n    public readonly digits = Array(16).fill(0);\n    private _index = 0;\n\n    @ViewChild('input', { static: true })\n    private _input_el!: ElementRef<HTMLInputElement>;\n\n    private _onChange?: (_: PaymentCardDetails) => void;\n    private _onTouch?: (_: PaymentCardDetails) => void;\n\n    public get is_amex() {\n        const no = this.details.value?.card_number || '';\n        return no.startsWith('3');\n    }\n\n    public get card_type() {\n        const no = this.details.value?.card_number || '';\n        if (no.startsWith('3')) return 'amex';\n        if (no.startsWith('4')) return 'visa';\n        if (no.startsWith('5')) return 'mastercard';\n        return '';\n    }\n\n    public get card_display() {\n        let no = this.details.value?.card_number || '';\n        if (this.card_focused)\n            no =\n                no.substring(0, this._index) +\n                '⯐' +\n                no.substring(this._index + 1);\n        return this.is_amex\n            ? `${no.substring(0, 4)}-${no.substring(4, 10)}-${no.substring(10)}`\n            : `${no.substring(0, 4)}-${no.substring(4, 8)}-${no.substring(\n                  8,\n                  12\n              )}-${no.substring(12)}`;\n    }\n\n    public get card_focused() {\n        return (\n            document.activeElement === this._input_el.nativeElement ||\n            document.activeElement ===\n                this._input_el.nativeElement.parentElement\n        );\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'changes',\n            this.details.valueChanges.subscribe((v) =>\n                this.timeout('update', () =>\n                    this.setValue(this.details.getRawValue())\n                )\n            )\n        );\n    }\n\n    public focusInput() {\n        this._input_el.nativeElement.focus();\n        this._index = this._input_el.nativeElement.selectionStart || 0;\n    }\n\n    public onInput(event: KeyboardEvent) {\n        if (!event || !this.card_focused) return;\n        const idx = this._index;\n        if (idx < 0 || idx > 16) return;\n        let card_number = this.details.value.card_number!;\n        if (\n            (event.code.startsWith('Digit') ||\n                event.code.startsWith('Numpad')) &&\n            idx < (this.is_amex ? 15 : 16)\n        ) {\n            card_number =\n                card_number.substring(0, idx) +\n                event.key +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, 1);\n        } else if (event.code === 'Backspace' && idx > 0) {\n            let card_number = this.details.value.card_number!;\n            card_number =\n                card_number.substring(0, idx) +\n                ' ' +\n                card_number.substring(idx + 1);\n            this.details.patchValue({ card_number });\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowLeft') {\n            this._focusChange(idx, -1);\n        } else if (event.code === 'ArrowRight' && card_number[idx] !== ' ') {\n            this._focusChange(idx, 1);\n        }\n    }\n\n    private _focusChange(idx: number, dir: 1 | -1) {\n        this._index = Math.min(16, Math.max(0, idx + dir));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: PaymentCardDetails) {\n        if (this._onChange) this._onChange(new_value);\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value?: PaymentCardDetails) {\n        this.details.patchValue(value || BLANK_CARD);\n    }\n\n    public readonly registerOnChange = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: PaymentCardDetails) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Observable } from 'rxjs';\nimport { PaymentCardDetails } from './card-input-field.component';\n\nexport interface PaymentData {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n    has_payment_method: boolean;\n    rate: string;\n    amount: number; // Number in cents\n    loading: Observable<string>;\n    makePayment: (_?: PaymentCardDetails) => Promise<void>;\n}\n\n@Component({\n    selector: 'payment-modal',\n    template: `\n        <div\n            class=\"relative max-h-[100vh] overflow-auto\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <ng-container *ngIf=\"!success; else success_state\">\n                <main\n                    class=\"px-4 pt-8 w-[24rem] space-y-2 flex flex-col items-center relative\"\n                >\n                    <h2 class=\"text-2xl font-medium\" i18n>Booking Payment</h2>\n                    <img src=\"assets/icons/cost.svg\" class=\"w-1/2\" />\n                    <p class=\"text-sm text-center pb-2\" i18n>\n                        You are requesting a {{ details.type }} booking in\n                        {{ details.resource_name }} for\n                        {{ details.date | date: 'mediumDate' }}\n                        <ng-container *ngIf=\"!details.all_day\">\n                            between {{ details.date | date: 'shortTime' }} and\n                            {{\n                                details.date + details.duration * 60 * 1000\n                                    | date: 'shortTime'\n                            }}\n                        </ng-container>\n                    </p>\n                    <p class=\"text-sm\" i18n>You booking will cost:</p>\n                    <p class=\"text-lg font-medium text-center\">\n                        <strong>{{\n                            details.amount / 100 | currency: code\n                        }}</strong>\n                    </p>\n                    <card-input-field\n                        class=\"w-full\"\n                        [(ngModel)]=\"card_details\"\n                    ></card-input-field>\n                </main>\n                <footer class=\"p-4\">\n                    <button\n                        matRipple\n                        class=\"w-full\"\n                        (click)=\"processPayment()\"\n                        i18n\n                    >\n                        Make Payment\n                    </button>\n                </footer>\n                <button\n                    icon\n                    matRipple\n                    mat-dialog-close\n                    class=\"absolute top-1 left-1\"\n                >\n                    <i class=\"material-icons text-2xl\">close</i>\n                </button>\n            </ng-container>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"w-full h-full flex flex-col items-center justify-center p-8\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n        <ng-template #success_state>\n            <main class=\"px-8 pt-8 w-[24rem] flex flex-col relative\">\n                <h2 class=\"text-2xl font-medium\" i18n>Payment Successful</h2>\n                <h3 class=\"text-xl font-medium mb-2\">\n                    Ref #{{ transaction_id }}\n                </h3>\n                <p i18n>{{ details.amount / 100 | currency: code }} paid.</p>\n                <p i18n>{{ details.resource_name }} booked.</p>\n                <p>{{ details.date | date: 'mediumDate' }}</p>\n                <p i18n>\n                    {{ details.date | date: 'shortTime' }} and\n                    {{\n                        details.date + details.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </p>\n            </main>\n            <img src=\"assets/icons/payment-confirmed.svg\" class=\"w-full\" />\n            <footer class=\"p-4 border-t border-gray-200\">\n                <button btn matRipple mat-dialog-close class=\"w-full\" i18n>\n                    Great, thanks.\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class PaymentModalComponent {\n    @Output() public readonly event = new EventEmitter();\n    public readonly details = this._data;\n    public readonly loading = this._data.loading;\n    public card_details?: PaymentCardDetails;\n    public success = false;\n    public transaction_id = '12345678';\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: PaymentData,\n        private _org: OrganisationService\n    ) {}\n\n    public async processPayment() {\n        if (!this.card_details || !this._validCardDetails()) return;\n        this.event.emit(this.card_details);\n        await this._data.makePayment(this.card_details);\n        this.success = true;\n    }\n\n    private _validCardDetails() {\n        return (\n            (this.card_details?.cardholder.length || 0) > 0 &&\n            (this.card_details?.cvv.length || 0) >= 3\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { PaymentModalComponent } from './payment-modal.component';\nimport { CardInputFieldComponent } from './card-input-field.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS = [PaymentModalComponent, CardInputFieldComponent];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatDialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class PaymentsModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { PaymentCardDetails } from './card-input-field.component';\nimport { PaymentModalComponent } from './payment-modal.component';\n\nexport interface PaymentDetails {\n    type: string; // Resource Type\n    resource_name: string;\n    date: number;\n    duration: number;\n    all_day: boolean;\n}\n\nexport interface PaymentResult {\n    success: boolean;\n    state: 'processing' | 'pending' | 'approved';\n    invoice_id: string;\n    amount: number;\n    created_at: number;\n    updated_at: number;\n}\n\nexport const STRIPE_ID_TOKEN = 'STRIPE+customer_id';\nconst STRIPE_MODULE = 'Payment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaymentsService {\n    private _loading = new BehaviorSubject('');\n    private _active_card = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly payment_sources = of(1).pipe(\n        switchMap(() => {\n            const mod = getModule(this.payment_module, STRIPE_MODULE);\n            if (!mod) return of([]);\n            return mod.execute('list_payment_methods', ['card']);\n        }),\n        tap((_) => (_[0] ? this._active_card.next(_[0].id) : '')),\n        shareReplay(1)\n    );\n\n    public get payment_module() {\n        return this._org.binding('payments');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async makePayment(\n        details: PaymentDetails\n    ): Promise<PaymentResult | undefined> {\n        if (!this.payment_module) throw 'Payments not enabled';\n        const [cost, period] = await this._getCostOfProduct(\n            details?.type\n        ).catch((_) => [0, 60]);\n        console.log('Cost:', cost, period);\n        if (cost <= 0) return;\n        let customer_id = this._settings.get('STRIPE_Customer_ID');\n        if (!customer_id) customer_id = await this._newCustomerID();\n        this._settings.saveUserSetting('STRIPE_Customer_ID', customer_id);\n        const amount = cost * (details.duration / period);\n        let result = undefined;\n        const makePayment = async (c: any) => {\n            result = await this._processPayment(amount, customer_id, c).catch(\n                (e) => {\n                    this._loading.next('');\n                    throw e;\n                }\n            );\n        };\n        const data = {\n            ...details,\n            rate: `$${(cost / 100).toFixed(2)} per hour`,\n            amount,\n            makePayment,\n            loading: this.loading,\n        };\n        const ref = this._dialog.open(PaymentModalComponent, { data });\n        await ref.afterClosed().toPromise();\n        return result;\n    }\n\n    private async _addPaymentMethod(card: PaymentCardDetails): Promise<string> {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const payment_method = await mod.execute('add_payment_method', [\n            'card',\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            card,\n        ]);\n        return payment_method.id || payment_method;\n    }\n\n    private async _getCostOfProduct(type: string) {\n        let price: [number, number] = [0, 60];\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) return price;\n        const product_list = await mod.execute('get_product_prices', [\n            null,\n            null,\n            type,\n        ]);\n        if (!product_list.length) return price;\n        return product_list;\n    }\n\n    private async _processPayment(\n        amount: number,\n        customer_id: string,\n        card_details?: PaymentCardDetails\n    ) {\n        this._loading.next('Checking payment method...');\n        console.log('Getting payment method...');\n        const source = card_details\n            ? await this._addPaymentMethod(card_details)\n            : this._active_card.getValue();\n        if (!source) throw 'No payment source selected';\n        this._loading.next('Processing payment...');\n        console.log('Processing payment...');\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const id = await mod.execute<string>('create_payment_intent', [\n            amount,\n            this._org.building.currency || 'USD',\n            null,\n            null,\n            customer_id,\n            null,\n            null,\n            null,\n            currentUser()?.email,\n        ]);\n        if (!id) throw 'Failed to create payment';\n        console.log('Confirming payment...');\n        await mod.execute('confirm_payment_intent', [id, source]);\n        this._loading.next('');\n        return {\n            success: true,\n            state: 'approved',\n            invoice_id: id,\n            amount: amount,\n            created_at: Date.now(),\n            updated_at: Date.now(),\n        };\n    }\n\n    private async _newCustomerID() {\n        const mod = getModule(this.payment_module, STRIPE_MODULE);\n        if (!mod) throw 'Unable to load module';\n        const user = currentUser();\n        const id = await mod.execute<string>('create_customer', [\n            0,\n            null,\n            null,\n            null,\n            `${user.id}|${user.name}|FromPlaceOS`,\n            user.email,\n        ]);\n        return id;\n    }\n}\n","export * from './lib/spaces.module';\nexport * from './lib/spaces';\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Space } from './space.class';\n\n@Component({\n    selector: 'a-space-select-item',\n    template: `\n        <div\n            space\n            class=\"w-full flex items-center p-2 space-x-2 border-b border-gray-100\"\n            *ngIf=\"space\"\n        >\n            <div class=\"flex-1 w-1/2\">\n                <div class=\"text-base truncate\">{{ space.name }}</div>\n                <div class=\"text-xs\">\n                    {{ space.level?.display_name || space.level?.name }}\n                </div>\n            </div>\n            <div class=\"flex items-center\" *ngIf=\"space.capacity !== -1\">\n                <app-icon>account_circle</app-icon>\n                <div>{{ space.capacity }}</div>\n            </div>\n            <button\n                icon\n                matRipple\n                *ngIf=\"multiple; else single_button\"\n                (click)=\"action.emit()\"\n            >\n                <app-icon>{{\n                    type === 'available' ? 'add' : 'close'\n                }}</app-icon>\n            </button>\n        </div>\n        <ng-template #single_button>\n            <button\n                btn\n                matRipple\n                class=\"w-32\"\n                [class.request]=\"space.by_request\"\n            >\n                {{ space.by_request ? 'Request' : 'Book' }}\n            </button>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SpaceSelectItemComponent {\n    /** Space to display the details */\n    @Input() public space: Space;\n    /** Selected state for the space */\n    @Input() public type: 'available' | 'selected';\n    /** Whether user is allowed to select multiple spaces */\n    @Input() public multiple: boolean;\n    /** Emitter for selection actions */\n    @Output() public action = new EventEmitter();\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { addMinutes, getUnixTime } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    DialogEvent,\n    HashMap,\n    Identity,\n    SettingsService,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport { filterSpacesFromRules } from 'libs/events/src/lib/helpers';\nimport { querySpaceCalendarAvailability } from 'libs/calendar/src/lib/calendar.fn';\nimport { Space } from './space.class';\n\nexport interface SpaceSelectModalData {\n    /** List of currently selected spaces */\n    readonly spaces: Space[];\n    /** Selected date to check space availability */\n    readonly date: number;\n    /** Duration of the availability that is desired */\n    readonly duration: number;\n    all_day?: boolean;\n    visitor_type?: string;\n}\n\n@Component({\n    selector: 'a-space-select-modal',\n    template: `\n        <header>\n            <app-icon class=\"text-3xl\">place</app-icon>\n            <div class=\"text-xl font-semibold flex-1\">\n                Select space{{ multiple ? 's' : '' }}\n            </div>\n            <button icon mat-dialog-close>\n                <app-icon class=\"text-3xl\">close</app-icon>\n            </button>\n        </header>\n        <main>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"buildings && buildings.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [ngModel]=\"building.getValue()\"\n                    (ngModelChange)=\"building.next($event)\"\n                    placeholder=\"Select building\"\n                >\n                    <mat-option *ngFor=\"let bld of buildings\" [value]=\"bld\">\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                appearance=\"outline\"\n                *ngIf=\"space_types && space_types.length > 1\"\n            >\n                <mat-select\n                    name=\"booking-type\"\n                    [(ngModel)]=\"type\"\n                    placeholder=\"Any space type\"\n                >\n                    <mat-option\n                        *ngFor=\"let type of space_types\"\n                        [value]=\"type.id\"\n                    >\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"body\" style=\"width: 32rem\">\n                <ng-container *ngIf=\"!loading; else load_state\">\n                    <ng-container\n                        *ngIf=\"\n                            (filtered_spaces | async)?.length;\n                            else empty_state\n                        \"\n                    >\n                        <ng-container\n                            *ngFor=\"let space of filtered_spaces | async\"\n                        >\n                            <a-space-select-item\n                                *ngIf=\"!space_map[space.id]\"\n                                [space]=\"space\"\n                                [multiple]=\"multiple\"\n                                type=\"available\"\n                                (click)=\"spaceSelected(space)\"\n                            ></a-space-select-item>\n                        </ng-container>\n                    </ng-container>\n                </ng-container>\n                <div\n                    class=\"space-list\"\n                    *ngIf=\"multiple\"\n                    [class.show]=\"show_selected\"\n                >\n                    <ng-container\n                        *ngIf=\"spaces && spaces.length; else empty_state\"\n                    >\n                        <a-space-select-item\n                            *ngFor=\"let space of spaces\"\n                            [space]=\"space\"\n                            [multiple]=\"multiple\"\n                            type=\"selected\"\n                        ></a-space-select-item>\n                    </ng-container>\n                </div>\n            </div>\n            <footer *ngIf=\"multiple\">\n                <button btn matRipple (click)=\"save()\">\n                    Save selected spaces({{ spaces.length || '0' }})\n                </button>\n            </footer>\n            <ng-template #empty_state>\n                <div empty class=\"p-16 flex flex-col items-center space-y-2\">\n                    <app-icon class=\"text-3xl\">close</app-icon>\n                    <p>No spaces</p>\n                </div>\n            </ng-template>\n            <ng-template #load_state>\n                <div load class=\"p-16 flex flex-col items-center space-y-2\">\n                    <mat-spinner diameter=\"48\"></mat-spinner>\n                    <p>Finding available spaces...</p>\n                </div>\n            </ng-template>\n        </main>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.5em;\n                width: 100%;\n                padding: 0 0.25em;\n            }\n\n            .body {\n                min-width: 20rem;\n                max-width: calc(100vw - 2rem);\n                max-height: 65vh;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectModalComponent extends AsyncHandler {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of selected spaces */\n    public spaces: Space[] = [...(this._data.spaces || [])];\n    /** Building to filter available spaces */\n    public building = new BehaviorSubject<Building>(null);\n    /** Whether to show selected spaces */\n    public show_selected: boolean;\n    /** List of available space types */\n    public space_types: Identity[] = [];\n    /** ID of the space type to filter available spaces on */\n    public type: string;\n    /** Whether the available spaces are being loaded */\n    public loading: boolean;\n\n    public readonly available_spaces = combineLatest([this.building]).pipe(\n        switchMap(([bld]) => {\n            this.loading = true;\n            return querySpaceCalendarAvailability({\n                zone_ids: bld?.id,\n                period_start: getUnixTime(this._data.date),\n                period_end: getUnixTime(\n                    addMinutes(this._data.date, this._data.duration)\n                ),\n            });\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_spaces = this.available_spaces.pipe(\n        map((list) =>\n            filterSpacesFromRules(\n                list,\n                { ...this._data, host: currentUser() } as any,\n                this._org.building.booking_rules\n            )\n        ),\n        tap(() => (this.loading = false))\n    );\n\n    public get buildings(): Building[] {\n        return this._org.buildings;\n    }\n\n    /** Whether multiple spaces can be selected */\n    public get multiple(): boolean {\n        return !!this._settings.get('app.events.multiple_spaces');\n    }\n\n    /** Mapping of spaces to whether they are selected */\n    public get space_map(): HashMap<boolean> {\n        const spaces = {};\n        this.spaces.forEach((space) => (spaces[space.id] = true));\n        return spaces;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        @Inject(MAT_DIALOG_DATA) private _data: SpaceSelectModalData\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.building.next(this._org.building || this.buildings[0]);\n        this.subscription(\n            'spaces',\n            this.filtered_spaces.subscribe((_) => _)\n        );\n    }\n\n    public spaceSelected(space: Space) {\n        if (this.multiple) {\n            if (!this.space_map[space.id]) {\n                this.spaces.push(space);\n            }\n        } else {\n            this.spaces = [space];\n            this.save();\n        }\n    }\n\n    public save() {\n        this.event.emit({ reason: 'done', metadata: this.spaces });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    EventFlowOptions,\n    EventFormService,\n} from 'libs/events/src/lib/event-form.service';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: 'new-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Space</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        map\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        list\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></space-filters-display>\n                    <space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></space-list>\n                </div>\n                <space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 sm:block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [hide_map]=\"view === 'map'\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-spaces\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"spaces-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} room(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class NewSpaceSelectModalComponent {\n    public displayed?: Space;\n    public selected: Space[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<NewSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        @Inject(MAT_DIALOG_DATA)\n        _data: { spaces: Space[]; options: Partial<EventFlowOptions> }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: Space, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._settings.get('app.events.allow_multiple_spaces') && state) {\n            this.selected = [item];\n            this._dialog_ref.close([item]);\n        }\n    }\n\n    public toggleFavourite(item: Space) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_spaces', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_spaces',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"space.images?.length\"\n                [class.h-40]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-space-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    facilities\n                    class=\"space-y-2\"\n                    *ngIf=\"space.features?.length\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngFor=\"let feature of space.features\"\n                    >\n                        <!-- <app-icon>people</app-icon> -->\n                        <p i18n>{{ feature }}</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-space-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a room to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class SpaceDetailsComponent {\n    @Input() public space?: Space;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones) || this.space?.level;\n    }\n\n    public get building() {\n        return this._org.buildings.find((_) =>\n            this.space?.zones.includes(_.id)\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { take } from 'rxjs/operators';\nimport { SpaceFiltersComponent } from './space-filters.component';\n\n@Component({\n    selector: `space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                btn\n                matRipple\n                name=\"edit-space-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-space-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 sm:max-w-[50vw]\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"clear-space-filters\"\n                class=\"min-h-[2rem] mb-2 mr-2\"\n                *ngIf=\"(options | async)?.features?.length > 1\"\n                (click)=\"removeAllFeatures()\"\n            >\n                Clear Filters\n            </button>\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capacity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p class=\"truncate\">{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-space-filter\"\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                min-height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n                max-width: 100%;\n                text-align: center;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(SpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    public async removeAllFeatures() {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: [],\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Building } from 'libs/organisation/src/lib/building.class';\nimport { SpacesService } from '../spaces.service';\n\n@Component({\n    selector: `space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-space-filters\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        i18n\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [force_time]=\"\n                                form.value.all_day ? all_day_time : ''\n                            \"\n                            [disabled]=\"form.value.all_day\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [force]=\"form.value.all_day ? 'All Day' : ''\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'ROOMS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <ng-container *ngFor=\"let feat of features | async\">\n                    <div\n                        class=\"flex items-center\"\n                        *ngIf=\"!hide_features.includes(feat)\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">\n                            {{ feature_display[feat] || feat }}\n                        </div>\n                        <mat-checkbox\n                            name=\"feat\"\n                            [ngModel]=\"\n                                (options | async)?.features?.includes(feat)\n                            \"\n                            (ngModelChange)=\"toggleFeature(feat, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></mat-checkbox>\n                    </div>\n                </ng-container>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                name=\"apply-space-filters\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class SpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._event_form.options;\n    public readonly all_day_time = set(Date.now(), {\n        hours: 6,\n        minutes: 0,\n    }).valueOf();\n\n    public readonly building = this._org.active_building;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly features = combineLatest([\n        this._spaces.features,\n        this._event_form.available_spaces,\n    ]).pipe(\n        map(([features, spaces]) =>\n            unique(features.concat(flatten(spaces.map((_) => _.features))))\n        )\n    );\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get feature_display() {\n        return this._settings.get('app.events.feature_decriptions') || {};\n    }\n\n    public get hide_features() {\n        return this._settings.get('app.events.hide_features') || [];\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<SpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _spaces: SpacesService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-list`,\n    template: `\n        <h3 class=\"font-bold\">Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (available_spaces | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(available_spaces | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of available_spaces | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        name=\"select-space\"\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative min-w-[5rem] w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    space.images?.length;\n                                    else space_placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #space_placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/room-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{\n                                    space.display_name ||\n                                        space.name ||\n                                        'Meeting Space'\n                                }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"truncate\">\n                                    {{\n                                        space.location ||\n                                            level(space.zones)?.display_name ||\n                                            level(space.zones)?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-space-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class SpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<Space>();\n    @Output() public toggleFav = new EventEmitter<Space>();\n    public readonly loading = this._event_form.loading;\n\n    public readonly available_spaces = this._event_form.available_spaces;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {}\n\n    public level(zones: string[]) {\n        return this._org.levelWithID(zones);\n    }\n\n    public ngOnInit() {\n        this._event_form.setView('find');\n    }\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: Space) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"44\"\n                height=\"60\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        [attr.fill]=\"color\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class SpaceLocationPinComponent {\n    public readonly selected = this._data.selected === true;\n    public readonly active = this._data.active === true;\n\n    public get color() {\n        return this.active ? '#F4511E' : this.selected ? '#D32F2F' : '#309251';\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { SpaceLocationPinComponent } from './space-location-pin.component';\nimport { Space } from '../space.class';\n\n@Component({\n    selector: `space-map`,\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-in\"\n                (click)=\"setZoom(zoom * 1.1)\"\n            >\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button\n                icon\n                matRipple\n                name=\"space-map-zoom-out\"\n                (click)=\"setZoom(zoom * (1 / 1.1))\"\n            >\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button icon matRipple name=\"space-map-reset\" (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class SpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public active: string;\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<Space>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => {\n        this.onSelect.emit(s);\n        this._change.next(Date.now());\n    };\n    public level: BuildingLevel = null;\n    private _change = new BehaviorSubject(0);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) =>\n            unique(\n                _.map(({ zones }) => this._org.levelWithID(zones)),\n                'id'\n            )\n        ),\n        tap((_) => (this.level = this.level ? this.level : _[0]))\n    );\n\n    public readonly setOptions = (o) => this._event_form.setOptions(o);\n\n    public readonly features = combineLatest([\n        this._event_form.available_spaces,\n        this._change,\n    ]).pipe(\n        debounceTime(300),\n        map(([l]) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: SpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    active: this.active === space.id,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (\n                    levels.length &&\n                    !levels.find((_) => _.id === this.level?.id)\n                ) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_ids: [this.level.id] });\n                }\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { RoomConfiguration } from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\nimport { CalendarAvailability } from 'libs/calendar/src/lib/calendar.interfaces';\n\nexport type ResourceResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted';\n\nexport class Space {\n    /** ID of the space resource */\n    public readonly id: string;\n    /** Display name of the space resource */\n    public readonly name: string;\n    /** Name to display */\n    public readonly display_name: string;\n    /** Email address of the resource associated with space */\n    public readonly email: string;\n    /** Capacity of the space resource */\n    public readonly capacity: number;\n    /** List of features available at the space resource  */\n    public readonly feature_list: string[];\n    /** URL to a supporting site for space */\n    public readonly support_url: string;\n    /** ID of the space on the associated map */\n    public readonly map_id: string;\n    /** Whether resource is bookable */\n    public readonly bookable: boolean;\n    /** List of zones the spaces is associated with */\n    public readonly zones: string[];\n    /** List of available room configurations for this room */\n    public readonly configurations: readonly RoomConfiguration[];\n    /** Image url */\n    public readonly images: string[];\n    /** Status of the resource */\n    public readonly response_status: ResourceResponseStatus;\n    /** Level Assoicated with the space */\n    public readonly level: BuildingLevel;\n    /** List of features associated with the space */\n    public readonly features: string[];\n\n    public readonly availability: CalendarAvailability[];\n\n    constructor(data: Partial<Space> = {}) {\n        this.id = data.id || '';\n        this.name = data.name || '';\n        this.display_name = data.display_name || '';\n        this.email = (data.email || '').toLowerCase();\n        this.capacity = data.capacity || -1;\n        this.feature_list = data.feature_list || (data.features as any) || [];\n        this.bookable = !!data.bookable;\n        this.zones = data.zones || [];\n        this.support_url = data.support_url || '';\n        this.map_id = data.map_id || '';\n        this.images = data.images || [];\n        this.configurations = data.configurations || [];\n        this.features = data.features || [];\n        this.response_status = data.response_status;\n        this.level = data.level || new BuildingLevel();\n        this.availability = data.availability || [];\n    }\n}\n","import { Optional, Pipe } from '@angular/core';\nimport { showSystem, querySystemsWithEmails } from '@placeos/ts-client';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from './space.class';\nimport { first } from 'rxjs/operators';\n\nconst SPACE_LIST: Space[] = [];\n\nconst EMPTY_SPACE = new Space({ email: 'empty.space@place.os' });\n\nexport function updateSpaceList(space_list: Space[]) {\n    for (const space of space_list) {\n        if (!SPACE_LIST.find(({ id }) => id === space.id)) {\n            SPACE_LIST.push(space);\n        }\n    }\n}\n\n@Pipe({\n    name: 'space',\n})\nexport class SpacePipe {\n    constructor(@Optional() private _org?: OrganisationService) {}\n    /**\n     * Get details of the space with the given ID\n     * @param space_id ID or Email of the space\n     */\n    public async transform(space_id: string): Promise<Space> {\n        if (this._org) {\n            await this._org.initialised.pipe(first((_) => _)).toPromise();\n        }\n        const is_email = space_id?.includes('@');\n        if (!space_id) return EMPTY_SPACE;\n        let space = SPACE_LIST.find(\n            ({ id, email }) => id === space_id || email === space_id\n        );\n        if (space) return space;\n        if (!is_email) {\n            const system = await showSystem(space_id)\n                .toPromise()\n                .catch((_) => null);\n            if (system) {\n                space = new Space({\n                    ...(system as any),\n                    level: this._org?.levelWithID([...system.zones]),\n                });\n                SPACE_LIST.push(space);\n                return space;\n            }\n        }\n        const systems = (\n            await querySystemsWithEmails({ in: space_id }).toPromise()\n        ).data;\n        if (systems.length === 1) {\n            space = new Space({\n                ...(systems[0] as any),\n                level: this._org?.levelWithID([...systems[0].zones]),\n            });\n            SPACE_LIST.push(space);\n            return space;\n        }\n        return EMPTY_SPACE;\n    }\n\n    public updateSpaceList(space_list: Space[]) {\n        updateSpaceList(space_list);\n    }\n}\n","import { HashMap, predictableRandomInt } from '@placeos/common';\nimport { PlaceSystem, PlaceZone, querySystems } from '@placeos/ts-client';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay, tap } from 'rxjs/operators';\nimport { USER_DOMAIN } from '../../../users/src/lib/user.utilities';\nimport { Space } from './space.class';\nimport { updateSpaceList } from './space.pipe';\nimport {\n    AbstractControl,\n    FormControl,\n    FormGroup,\n    Validators,\n} from '@angular/forms';\n\nconst SPACE_LIST_REQUESTS: Record<string, Observable<Space[]>> = {};\n\nexport const isValidUrl = (url) => {\n    if (!url) return true;\n    try {\n        new URL(url);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\nexport const validateURL = (ctrl: AbstractControl) =>\n    isValidUrl(ctrl?.value) ? null : { url: 'invalid' };\n\nexport function generateSystemsFormFields(system?: PlaceSystem) {\n    const fields = {\n        id: new FormControl(system?.id || ''),\n        name: new FormControl(system.name || '', [Validators.required]),\n        display_name: new FormControl(system.display_name || ''),\n        email: new FormControl(system.email || '', [Validators.email]),\n        code: new FormControl(system.code || ''),\n        support_url: new FormControl(system.support_url || '', [validateURL]),\n        installed_ui_devices: new FormControl(\n            system.installed_ui_devices || 0,\n            [Validators.pattern('[0-9]*')]\n        ),\n        features: new FormControl(\n            (typeof system.features === 'string'\n                ? (system.features as any).split(' ')\n                : system.features) || []\n        ),\n        capacity: new FormControl(system.capacity || 0, [\n            Validators.pattern('[0-9]*'),\n        ]),\n        bookable: new FormControl(system.bookable || false),\n        public: new FormControl(system.public || false),\n        description: new FormControl(system.description || ''),\n        images: new FormControl(system.images || []),\n        map_id: new FormControl(system.map_id || ''),\n        timezone: new FormControl(system.timezone || ''),\n        zone: new FormControl<PlaceZone | null>(null, [Validators.required]),\n        zones: new FormControl(system.zones, [Validators.required]),\n        version: new FormControl(system.version),\n    };\n    if (!system.id) {\n        fields.zone.valueChanges.subscribe((value: PlaceZone) =>\n            fields.zones.setValue([value.id])\n        );\n    } else delete fields.zone;\n    return new FormGroup(fields);\n}\n\nexport function requestSpacesForZone(id: string) {\n    if (SPACE_LIST_REQUESTS[id]) return SPACE_LIST_REQUESTS[id];\n    SPACE_LIST_REQUESTS[id] = querySystems({ zone_id: id, limit: 500 }).pipe(\n        map((_) => (_.data || []).map((_) => new Space(_ as any))),\n        tap((_) => updateSpaceList(_)),\n        shareReplay(1)\n    );\n    return SPACE_LIST_REQUESTS[id];\n}\n\nlet SPACE_COUNT: number = 0;\n/* istanbul ignore next */\nexport function generateMockSpace(overrides: HashMap = {}): HashMap {\n    const id = `space-${SPACE_COUNT++}`;\n    const name = `Test Space ${SPACE_COUNT}`;\n    const linked = predictableRandomInt(99999) % 2 === 0 && SPACE_COUNT > 1;\n    const space = {\n        id,\n        name,\n        long_name: `${name} with an long name`,\n        map_id: `${SPACE_COUNT}`,\n        capacity: predictableRandomInt(21, 1) * 2,\n        email: `${name.toLowerCase().split(' ').join('.')}@${USER_DOMAIN}`,\n        type: '',\n        searchable: predictableRandomInt(99999) % 2 === 0,\n        controlable: predictableRandomInt(99999) % 2 === 0,\n        bookable: predictableRandomInt(99999) % 2 === 0,\n        cost_hour: predictableRandomInt(300) * 100,\n        setup: predictableRandomInt(6) * 5,\n        breakdown: predictableRandomInt(6) * 5,\n        zones: ['zone_lvl-0'],\n        support_url: `/control/#/panel/${id}`,\n        bookings: [], //Array(10).fill(0).map(i => generateMockBooking()),\n        linked_rooms: linked\n            ? [`space-${predictableRandomInt(SPACE_COUNT - 1)}`]\n            : [],\n        image: '',\n        ...overrides,\n    };\n    if (space['configurations'] && space['configurations'].length > 0) {\n        space['configurations'].forEach(\n            (config) =>\n                (config.capacity = predictableRandomInt(space.capacity) + 1)\n        );\n        space['configurations'][0].capacity = space.capacity;\n    }\n    return space;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { NewSpaceSelectModalComponent } from './space-select-modal/new-space-select-modal.component';\n\nimport { SpaceSelectItemComponent } from './space-select-item.component';\nimport { SpaceSelectModalComponent } from './space-select-modal.component';\nimport { SpaceDetailsComponent } from './space-select-modal/space-details.component';\nimport { SpaceListComponent } from './space-select-modal/space-list.component';\nimport { SpaceFiltersComponent } from './space-select-modal/space-filters.component';\nimport { SpaceFiltersDisplayComponent } from './space-select-modal/space-filters-display.component';\nimport { SpaceSelectMapComponent } from './space-select-modal/space-map.component';\n\nimport { SpaceLocationPinComponent } from './space-select-modal/space-location-pin.component';\nimport { SpacePipe } from './space.pipe';\n\nconst COMPONENTS: Type<any>[] = [\n    SpaceSelectModalComponent,\n    SpaceSelectItemComponent,\n    NewSpaceSelectModalComponent,\n\n    SpaceDetailsComponent,\n    SpaceListComponent,\n    SpaceFiltersComponent,\n    SpaceFiltersDisplayComponent,\n    SpaceSelectMapComponent,\n    SpaceLocationPinComponent,\n\n    SpacePipe,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatDialogModule,\n        ComponentsModule,\n        FormFieldsModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedSpacesModule {}\n","import { Injectable } from '@angular/core';\nimport { querySystems, showSystem } from '@placeos/ts-client';\nimport { first, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { Space } from './space.class';\nimport { flatten, SettingsService, unique } from '@placeos/common';\nimport { SpacePipe } from './space.pipe';\n\nlet SPACE_PIPE: SpacePipe;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SpacesService {\n    /** Subject to store list of spaces */\n    private _list = new BehaviorSubject<Space[]>([]);\n    /** Subject which stores the initialised state of the object */\n    protected readonly _initialised = new BehaviorSubject<boolean>(false);\n    /** Observable of the initialised state of the object */\n    public readonly initialised = this._initialised.asObservable();\n    /** Observable for list of spaces */\n    public readonly list = this._list.asObservable();\n    /** List of available features */\n    public readonly features = this.list.pipe(\n        map((_) => unique(flatten(_.map((i) => i.features))))\n    );\n    /** Default predicate for filter method */\n    protected _compare = (space: Space) =>\n        space.zones.includes(this._org.building.id);\n\n    /** List of available spaces */\n    public get space_list(): Space[] {\n        return this._list.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        SPACE_PIPE = new SpacePipe(_org);\n        this._init();\n    }\n\n    private async _init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        if (!this._settings.get('app.prevent_space_init')) this.loadSpaces();\n        else this._initialised.next(true);\n    }\n\n    /**\n     * Get a filtered list of the available spaces\n     * @param predicate Predicate for filtering spaces\n     */\n    public filter(predicate: (_: Space) => boolean = this._compare) {\n        return this._list.getValue().filter((_) => predicate(_));\n    }\n\n    public async loadSpace(space_id: string) {\n        const system = await showSystem(space_id).toPromise();\n        const space = new Space({\n            ...(system as any),\n            level: this._org.levelWithID([...system.zones]),\n        });\n        SPACE_PIPE.updateSpaceList([space]);\n    }\n\n    /**\n     * Find space with given id/email\n     * @param space_id ID/Email address associated with the space\n     */\n    public find(space_id: string) {\n        return this._list.getValue().find(({ id }) => space_id === id);\n    }\n\n    private async loadSpaces(): Promise<void> {\n        const systems = await querySystems({\n            zone_id: this._org.organisation.id,\n            limit: 5000,\n        })\n            .pipe(map((i) => i.data))\n            .toPromise();\n        const space_list = systems.map(\n            (sys) =>\n                new Space({\n                    ...(sys as any),\n                    level: this._org.levelWithID([...sys.zones]),\n                })\n        );\n        // Remove spaces without a map ID\n        const valid_spaces = space_list.filter((space) => space.map_id);\n        this._list.next(valid_spaces);\n        SPACE_PIPE.updateSpaceList(valid_spaces);\n        this._initialised.next(true);\n    }\n}\n","export * from './space-select-item.component';\nexport * from './space-select-modal.component';\nexport * from './space.class';\nexport * from './space.utilities';\nexport * from './spaces.module';\nexport * from './spaces.service';\nexport * from './space-select-modal/new-space-select-modal.component';\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-gray-300 dark:border-neutral-500 relative overflow-hidden divide-x divide-y divide-gray-300 dark:divide-neutral-500 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-gray-300\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-gray-300 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-gray-300 dark:border-neutral-500 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-gray-300\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-blue-500 bg-blue-500/30 z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-blue-500 hover:h-4 hover:w-4 active:bg-primary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-white dark:bg-neutral-600 border border-gray-300 dark:border-neutral-500 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-primary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: #eee !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                color: rgba(0, 0, 0, 0.3);\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-gray-300 dark:border-neutral-500 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-red-600 text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { del, get, patch } from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '../../../events/src/lib/event.class';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { GuestUser } from './user.class';\nimport { Observable } from 'rxjs';\n\nconst GUEST_ENDPOINT = '/api/staff/v1/guests';\n\nexport interface GuestsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zone_ids?: string;\n    /** Comma seperated list of system(space) ids to check availability */\n    system_ids?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n}\n\n/**\n * Search guests\n * @param q Search string for filtering guests\n */\nexport function searchGuests(q: string): Observable<GuestUser[]> {\n    const query = toQueryString({ q });\n    return get(`${GUEST_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * List guests\n * @param q Parameters to pass to the API request\n */\nexport function queryGuests(q: GuestsQueryParams): Observable<GuestUser[]> {\n    const query = toQueryString({ ...q });\n    return get(`${GUEST_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new GuestUser(item)))\n    );\n}\n\n/**\n * Get guest details\n * @param id ID of the guest\n */\nexport function showGuest(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Update guest metadata\n * @param id ID of the guest\n * @param data New metadata state\n */\nexport function updateGuest(id: string, data: Partial<GuestUser>) {\n    return patch(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, data).pipe(\n        map((item) => new GuestUser(item))\n    );\n}\n\n/**\n * Remove a guest\n * @param id ID of the guest to remove\n */\nexport function removeGuest(id: string) {\n    return del(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * List upcoming meetings for a guest\n * @param id ID of the guest\n */\nexport function listGuestMeetings(id: string) {\n    return get(`${GUEST_ENDPOINT}/${encodeURIComponent(id)}/meetings`).pipe(\n        map((list) => list.map((item) => new CalendarEvent(item)))\n    );\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler, DialogEvent } from '@placeos/common';\n\nimport { User } from './user.class';\nimport { generateUserForm } from './user.utilities';\n\n@Component({\n    selector: 'new-user-modal',\n    template: `\n        <header>\n            <div class=\"heading\" mat-dialog-title>\n                {{ user?.id ? 'Edit' : 'Add' }} External Attendee\n            </div>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col items-center w-full p-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <user-form [form]=\"form\"></user-form>\n        </main>\n        <footer\n            class=\"flex items-center justify-center w-full p-2 border-t border-gray-300 space-x-2\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"inverse\" mat-dialog-close>\n                Cancel\n            </button>\n            <button btn matRipple (click)=\"saveChanges()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center w-full p-2 space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving attendee...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 20em !important;\n                width: 100%;\n            }\n\n            footer button {\n                min-width: 8em;\n            }\n        `,\n    ],\n})\nexport class NewUserModalComponent extends AsyncHandler implements OnInit {\n    /** Emitter for user action on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for the new user */\n    public form = generateUserForm(this.user || new User());\n    /** New user data store */\n    public user?: User;\n    /** Whether user details are being saved */\n    public loading = false;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: any) {\n        super();\n        this.user = this._data.user || {};\n        this.form = generateUserForm(this.user);\n    }\n\n    public ngOnInit(): void {}\n\n    public saveChanges() {\n        if (!this.form) return;\n        this.form.markAllAsTouched();\n        if (this.form.valid) {\n            const new_user = new User({\n                ...this.form.value,\n                is_external: true,\n            });\n            this.event.emit({ reason: 'done', metadata: new_user });\n        }\n    }\n}\n","import { get } from '@placeos/ts-client';\nimport { toQueryString } from 'libs/common/src/lib/api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { StaffUser } from './user.class';\n\nconst STAFF_ENDPOINT = '/api/staff/v1/people';\n\n/**\n * Search staff members\n * @param q Search string for filtering staff\n */\nexport function searchStaff(q: string): Observable<StaffUser[]> {\n    const query = toQueryString({ q });\n    return get(`${STAFF_ENDPOINT}${q ? '?' + query : ''}`).pipe(\n        map((list) =>\n            list.map((item: Record<string, any>) => new StaffUser(item))\n        )\n    );\n}\n\n/**\n * Get user details\n * @param id User ID or email\n */\nexport function showStaff(id: string) {\n    return get(`${STAFF_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n\n/**\n * Get user with their location details\n * @param email User email\n */\nexport function locateStaff(email: string) {\n    return get(`${STAFF_ENDPOINT}/${email}`).pipe(\n        map((item) => new StaffUser(item))\n    );\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'user-form',\n    template: `\n        <form user-form *ngIf=\"form\" [formGroup]=\"form\" class=\"w-full\">\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.name\">\n                <label for=\"name\" [class.error]=\"hasError('name')\">\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.email\">\n                <label for=\"email\" [class.error]=\"hasError('email')\">\n                    Email<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        formControlName=\"email\"\n                    />\n                    <mat-error>A valid email is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.organisation\"\n            >\n                <label for=\"org\" [class.error]=\"hasError('organisation')\">\n                    {{ 'COMMON.ORGANISATION' | translate }}<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"org\"\n                        placeholder=\"e.g. Conteso\"\n                        formControlName=\"organisation\"\n                    />\n                    <mat-error>\n                        {{ 'COMMON.ORGANISATION' | translate }} is required\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col w-full\" *ngIf=\"form.controls.phone\">\n                <label for=\"phone\" [class.error]=\"hasError('phone')\">\n                    Phone:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"Phone\"\n                        formControlName=\"phone\"\n                    />\n                    <mat-error>Phone format is invalid</mat-error>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.assistance_required\"\n            >\n                <mat-checkbox\n                    name=\"assistance-required\"\n                    color=\"primary\"\n                    formControlName=\"assistance_required\"\n                >\n                    Assistance required\n                </mat-checkbox>\n            </div>\n            <div\n                class=\"flex flex-col w-full\"\n                *ngIf=\"form.controls.visit_expected\"\n            >\n                <mat-checkbox\n                    name=\"visit-expected\"\n                    color=\"primary\"\n                    formControlName=\"visit_expected\"\n                >\n                    Visit expected\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [\n        `\n            :host,\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class UserFormComponent {\n    /** Group of form fields used for creating the system */\n    @Input() public form?: FormGroup;\n\n    public hasError(name: string) {\n        const { invalid, touched } = this.form?.controls[name] || {};\n        return invalid && touched;\n    }\n}\n","import { randomString } from 'libs/common/src/lib/general';\nimport { MapLocation } from './location.class';\nimport { USER_DOMAIN } from './user.utilities';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\n\nexport interface Attachment {\n    id?: string;\n    name: string;\n    url: string;\n    size?: number;\n    created_at?: number;\n    progress?: number;\n}\n\nexport interface UserComplete extends User {\n    sys_admin?: boolean;\n    support?: boolean;\n}\n\nexport type EventResponseStatus =\n    | 'needsAction'\n    | 'declined'\n    | 'tentative'\n    | 'accepted'\n    | '';\n\nexport class User {\n    /** ID of the user */\n    public readonly id: string;\n    /** Display name of the user */\n    public readonly name: string;\n    /** Email address of the user */\n    public readonly email: string;\n    /** First name of the user */\n    public readonly first_name: string;\n    /** Last name of the user */\n    public readonly last_name: string;\n    /** Username of the user */\n    public readonly username: string;\n    /** Phone number of the user */\n    public readonly phone: string;\n    /** Organisation associated with the user */\n    public readonly organisation: string;\n    /** Details about the user */\n    public readonly notes: string;\n    /** Organisation department of the user */\n    public readonly department: string;\n    /** URL to the user's photo */\n    public readonly photo: string;\n    /** Whether user attendance is required */\n    public readonly required: boolean;\n    /** Whether user is the event organiser */\n    public readonly organizer: boolean;\n    /** Whether the users is expected for an event */\n    public readonly response_status: EventResponseStatus;\n    /** Whether the users is expected for an event */\n    public visit_expected: boolean;\n    /** Whether user has been checked in */\n    public readonly checked_in: boolean;\n    /** Organisational groups that the user belongs */\n    public readonly groups: string[];\n    /** Extra metadata associated with the user */\n    public readonly extension_data: Record<string, any>;\n    /** Whether user is external from the organisation */\n    public readonly is_external: boolean;\n    /** Whether user needs assistance when attending an event */\n    public readonly assistance_required: boolean;\n    /** Whether user is a resource */\n    public readonly resource: boolean;\n\n    constructor(data: Partial<UserComplete> = {}) {\n        this.id = data.id || data.email || `USER::${randomString(8)}`;\n        this.name = data.name || '';\n        this.email = data.email || '';\n        this.first_name = data.first_name || data.name || '';\n        this.last_name = data.last_name || '';\n        this.phone = data.phone || '';\n        this.organisation = data.organisation || '';\n        this.notes = data.notes || '';\n        this.photo = data.photo || '';\n        this.username = data.username || '';\n        this.organizer = !!data.organizer;\n        this.checked_in = !!data.checked_in;\n        this.required = data.required ?? true;\n        this.resource = data.resource ?? false;\n        this.response_status = data.response_status || '';\n        const groups = data.groups || [];\n        this.department = data.department ?? '';\n        if (data.sys_admin) groups.push('placeos_admin');\n        if (data.support) groups.push('placeos_support');\n        if (data.department) groups.push(data.department);\n        this.groups = groups;\n        this.extension_data = data.extension_data || {};\n        this.extension_data.assistance_required =\n            data.assistance_required || this.extension_data.assistance_required;\n        this.is_external = !this.email?.endsWith(`${USER_DOMAIN}`);\n        this.visit_expected = data.visit_expected ?? true;\n        this.assistance_required = !!this.extension_data?.assistance_required;\n        for (const key in data) {\n            if (!(key in this)) this.extension_data[key] = data[key] as any;\n        }\n    }\n}\n\nexport class GuestUser extends User {\n    /** Preferred beverage of the guest */\n    public readonly preferred_beverage: string;\n    /** Whether guest has accepted the terms and conditions */\n    public readonly accepted_terms_conditions: boolean;\n    /** List of links to associated attachments */\n    public readonly attachments: Attachment[];\n    /** Status of the guest attendance */\n    public readonly status: 'pending' | 'approved' | 'declined';\n    /** Booking Associated with the guest */\n    public readonly booking?: Booking;\n\n    constructor(data: Partial<GuestUser> = {}) {\n        super(data);\n        this.preferred_beverage = data.preferred_beverage || '';\n        this.accepted_terms_conditions =\n            data.accepted_terms_conditions || false;\n        this.attachments =\n            data.extension_data?.attachments || data.attachments || [];\n        this.status = data.booking?.approved\n            ? 'approved'\n            : data.booking?.rejected\n            ? 'declined'\n            : data.extension_data?.status || data.status || 'pending';\n        this.booking = data.booking;\n    }\n}\n\nexport class StaffUser extends User {\n    /** Number associated with the user's access card */\n    public readonly card_number: string;\n    /** ID of the user */\n    public readonly staff_id: string;\n    /** Whether user is logged in */\n    public readonly is_logged_in: boolean;\n    /** Location of the user */\n    public readonly location: Record<string, MapLocation>;\n\n    constructor(data: Partial<StaffUser> = {}) {\n        super(data);\n        this.card_number = data.card_number || '';\n        this.staff_id = data.staff_id || '';\n        this.location = data.location || {};\n        this.is_logged_in = !!data.is_logged_in;\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { predictableRandomInt, unique } from '../../../common/src/lib/general';\n\nimport { GuestUser, User } from './user.class';\n\nlet USER_COUNT = 0;\n\ntype HashMap<T = any> = Record<string, T>;\n\nexport let USER_DOMAIN = '@place.tech';\n\nexport function setInternalUserDomain(domain: string) {\n    USER_DOMAIN = domain;\n}\n\nconst USER_EMAILS: string[] = [];\n/* istanbul ignore next */\n/**\n * Generate raw mock data for a user\n * @param id Forced ID for the mock\n * @param name Forced name for the user\n * @param external Whether user is external of the organisation\n */\nexport function generateMockUser(\n    id?: string,\n    name?: string,\n    external?: boolean\n): HashMap {\n    if (!id) {\n        id = `user-${USER_COUNT++}`;\n    }\n    if (!name) {\n        name = `User ${USER_COUNT}`;\n    }\n    if (external === undefined) {\n        external = !(predictableRandomInt(99999) % 2);\n    }\n    const organisation = external ? `Fake Co.` : USER_DOMAIN.split('.')[0];\n    let delegates: string[] = [];\n    const delegate_count = Math.min(\n        predictableRandomInt(4) + 1,\n        USER_EMAILS.length\n    );\n    for (let i = 0; i < delegate_count; i++) {\n        delegates.push(USER_EMAILS[predictableRandomInt(USER_EMAILS.length)]);\n    }\n    delegates = unique(delegates);\n    const email = `${name.split(' ').join('.').toLowerCase()}@${\n        external ? 'not-' : ''\n    }${USER_DOMAIN}`;\n    USER_EMAILS.push(email);\n    return {\n        id,\n        name,\n        first_name: name.split(' ')[0],\n        last_name: name.split(' ')[1],\n        email,\n        phone: `(02) 4567 8901`,\n        visitor: external,\n        organisation: {\n            id: organisation.split(' ').join('.').toLowerCase(),\n            name: organisation,\n        },\n        department: `Department ${predictableRandomInt(10)}`,\n        staff_code: predictableRandomInt(999_999),\n        delegates,\n        image: `${id}.png`,\n    };\n}\n\n/**\n * Generate form fields for the given user\n * @param user User to generate form for\n */\nexport function generateUserForm(user?: User) {\n    if (!user) {\n        throw Error('No user passed');\n    }\n\n    const fields = {\n        name: new FormControl(user.name || '', [Validators.required]),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(\n            user.phone || '',\n            Validators.pattern(/[+\\-()0-9]{1,24}/g)\n        ),\n        assistance_required: new FormControl(user.assistance_required || false),\n        visit_expected: new FormControl(user.visit_expected ?? true),\n    };\n\n    // Generate form group for the user\n    const form = new FormGroup(fields);\n    return form;\n}\n\nexport function generateGuestForm(\n    user: GuestUser = new GuestUser(),\n    host: string = ''\n) {\n    const fields = {\n        name: new FormControl(user.name || ''),\n        email: new FormControl(user.email || '', [\n            Validators.email,\n            Validators.required,\n        ]),\n        organisation: new FormControl(\n            user.organisation || '',\n            Validators.required\n        ),\n        phone: new FormControl(user.phone || ''),\n        host: new FormControl(host || '', [Validators.required]),\n    };\n    // Generate form group for the guest\n    const form = new FormGroup(fields);\n    return form;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { currentUser, SettingsService } from '@placeos/common';\nimport { endOfDay, getUnixTime, setDay, startOfDay } from 'date-fns';\nimport { Booking } from 'libs/bookings/src/lib/booking.class';\nimport { queryBookings, saveBooking } from 'libs/bookings/src/lib/bookings.fn';\n\nconst WFH_SETTING_KEY = 'wfh-days';\n\n@Component({\n    selector: `wfh-settings-modal`,\n    template: `\n        <div\n            class=\"relative flex flex-col rounded overflow-hidden w-[18rem]\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <div\n                class=\"w-full px-4 py-8 flex flex-col items-center border-b border-gray-200\"\n            >\n                <a-user-avatar [user]=\"user\"></a-user-avatar>\n                <div>{{ user.name }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.email }}</div>\n                <div class=\"text-xs opacity-30\">{{ user.phone }}</div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col  border-b border-gray-200\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Today's Working Location\n                </h3>\n                <button\n                    btn\n                    matRipple\n                    today-location\n                    class=\"inverse rounded-3xl w-auto\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex items-center justify-between w-full\">\n                        <div class=\"uppercase flex-1 w-1/2\">{{ option }}</div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n                <div class=\"flex items-center pt-4 space-x-2\">\n                    <div\n                        class=\"h-8 w-8 rounded-full bg-gray-300 dark:bg-neutral-800 flex items-center justify-center\"\n                    >\n                        <app-icon>home</app-icon>\n                    </div>\n                    <div class=\"flex-1 w-1/2 text-sm\">\n                        Today is a working from home day. Available for online\n                        meetings.\n                    </div>\n                </div>\n            </div>\n            <div class=\"w-full p-4 flex flex-col\">\n                <h3 class=\"-mt-2 mb-2 text-sm font-medium\">\n                    Default Office Days\n                </h3>\n                <div\n                    class=\"border border-gray-200 rounded flex items-center justify-between px-2 pt-2\"\n                >\n                    <div\n                        class=\"flex flex-col items-center flex-1 w-px\"\n                        *ngFor=\"let day of weekdays; let i = index\"\n                    >\n                        <div class=\"text-sm font-light\">\n                            {{ day | date: 'EEE' }}\n                        </div>\n                        <div class=\"h-8 w-8 flex items-center justify-center\">\n                            <mat-checkbox\n                                [(ngModel)]=\"settings[available_weekdays[i]]\"\n                                (ngModelChange)=\"changed = true\"\n                            ></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex items-center justify-end px-4 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    save\n                    [disabled]=\"!changed\"\n                    (click)=\"saveChanges()\"\n                >\n                    Update\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let type of options\"\n                [attr.id]=\"type.id\"\n                (click)=\"option = type.id; changed = true\"\n            >\n                {{ type.name }}\n            </button>\n        </mat-menu>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative bg-white flex flex-col justify-center items-center rounded overflow-hidden w-[18rem] h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving changes to work location settings...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class WFHSettingsModalComponent implements OnInit {\n    public readonly options = [\n        { id: 'wfo', name: 'Work from office (WFO)' },\n        { id: 'wfh', name: 'Work from home (WFH)' },\n        { id: 'aol', name: 'Away on Leave (AOL)' },\n    ];\n    public option = this.options[0].id;\n    public settings = [true, true, true, true, true, true, true];\n    public weekdays = [];\n    public changed = false;\n    public loading = false;\n    public readonly available_weekdays = [1, 2, 3, 4, 5];\n\n    private _booking: Booking = new Booking({\n        type: 'wfh-settings',\n        asset_id: this.options[0].id,\n    });\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<WFHSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.settings = this._settings.get(WFH_SETTING_KEY) || [\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n            true,\n        ];\n        this._initWeekdays();\n        this._loadOptionForToday();\n    }\n\n    public get user() {\n        return currentUser();\n    }\n\n    public async saveChanges() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        if (\n            this.option !== this.options[0].id &&\n            this.option !== this._booking.asset_id\n        ) {\n            await saveBooking(\n                new Booking({ ...this._booking, asset_id: this.option })\n            )\n                .toPromise()\n                .catch((e) => {\n                    this._dialog_ref.disableClose = false;\n                    this.loading = false;\n                    throw e;\n                });\n        }\n        this._settings.saveUserSetting(WFH_SETTING_KEY, this.settings);\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n\n    private _initWeekdays() {\n        let day = new Date();\n        this.weekdays = this.available_weekdays.map((_) =>\n            setDay(day, _).valueOf()\n        );\n    }\n\n    private async _loadOptionForToday() {\n        const list = await queryBookings({\n            type: 'wfh-setting',\n            period_start: getUnixTime(startOfDay(Date.now())),\n            period_end: getUnixTime(endOfDay(Date.now())),\n        }).toPromise();\n        if (list.length) {\n            this.option = list[0].asset_id;\n            this._booking = list[0];\n        }\n    }\n}\n"],"x_google_ignoreList":[]}